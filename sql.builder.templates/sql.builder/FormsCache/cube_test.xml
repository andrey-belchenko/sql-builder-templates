<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="cube_test" timestamp="26.04.2022 14:27:50" with-behavior="0" title="qube в form" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms.xml" elid="90" ord="90" leaf="0" lvl="2" pelid="">
    <grid table="a" show-toolbar="1" id="24447436">
      <columns id="17009646">
        <field table="a" name="kod_opl" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="9354836" />
      </columns>
    </grid>
  </form>
  <params>
    <param type="number" name="p_kod_graf">
      <const>21</const>
    </param>
  </params>
  <dataset>
    <params>
      <param type="number" name="p_kod_graf">
        <const>21</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multiselect-column="" multiselect-target="" update-target="sr_opl" key="kod_opl" is-ms-upd="1" is-top="1" key-dimension="kod_opl_sf">
      <select-text>
--
select a.kod_opl as kod_opl, /*number*//*key*/
kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select dims.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select a.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on a.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_graf
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_graf as kod_graf, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_graf
a
--\ur_dp_graf
)
kod_dp_graf_a_d on kod_dp_graf_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_graf
left outer join
(
--ur_graf
select a.kod_graf as kod_graf/*number*//*key*/

from ur_graf
a
--\ur_graf
)
kod_graf on kod_dp_graf_a_d.kod_graf = kod_graf.kod_graf--\ur_graf
where
(kod_graf.kod_graf is not null )  group by
a.kod_opl/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a on a.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on a.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
--\
</select-text>
      <columns>
        <column name="kod_opl" table="a" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_opl" temp-col-name="n1" />
        <column name="kod_opl_x_n" table="a.kod_opl" type="string" title="Номер платежного документа" text-source-for="kod_opl" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
a.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select a.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a on a.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on a.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_opl as kod_opl 
 
from dual ) 
 
loop 
insert into sr_opl 
(kod_opl 
) 
 values  
(r.kod_opl 
) 
 returning  
kod_opl into :kod_opl; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_opl where kod_opl=:kod_opl</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_opl; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_opl as kod_opl 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('a' 
,:form_id 
,:kod_opl 
,:row_state_id 
,r.kod_opl 
); 
end loop; 
else 
for r in  
 ( select  
:kod_opl as kod_opl 
,a.kod_vidopl 
,a.vid_real 
,a.kod_dog 
,a.kod_sf 
,a.num_opl 
,a.opl 
,a.ym 
,a.remark 
,a.d_m 
,a.num_sf 
,a.kod_parent 
,a.u_m 
,a.kod_sf_uo 
,a.opls 
,a.kod_dest 
,a.kod_type_opl 
,a.kod_link 
,a.dat_opl 
,a.tep_el 
,a.kod_dog_r 
,a.vid_sf 
,a.prim 
,a.nom_sf 
,a.u_c 
,a.d_c 
,a.pr_not_in_graf 
 
from sr_opl a  where kod_opl=:kod_opl) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,n5 
,s1 
,n6 
,n7 
,s2 
,d1 
,n8 
,n9 
,s3 
,n10 
,n11 
,n12 
,n13 
,n14 
,d2 
,n15 
,n16 
,n17 
,s4 
,s5 
,s6 
,d3 
,n18 
) 
 values  
('a' 
,:form_id 
,:kod_opl 
,:row_state_id 
,r.kod_opl 
,r.kod_vidopl 
,r.vid_real 
,r.kod_dog 
,r.kod_sf 
,r.num_opl 
,r.opl 
,r.ym 
,r.remark 
,r.d_m 
,r.num_sf 
,r.kod_parent 
,r.u_m 
,r.kod_sf_uo 
,r.opls 
,r.kod_dest 
,r.kod_type_opl 
,r.kod_link 
,r.dat_opl 
,r.tep_el 
,r.kod_dog_r 
,r.vid_sf 
,r.prim 
,r.nom_sf 
,r.u_c 
,r.d_c 
,r.pr_not_in_graf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_opl set  
(kod_opl 
) 
= 
 ( select  
:kod_opl as kod_opl 
 
from dual ) 
 
where 
kod_opl=:kod_opl 
;
end;
</update-text>
      <scheme>
        <table name="sr_opl_sf" as="a">
          <columns>
            <column name="kod_opl" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_opl_x_n" type="string" title="Номер платежного документа" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_opl_x_n" type="string" title="Номер платежного документа" />
            <column name="kod_opl" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_opl_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_opl_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select a.kod_opl as kod_opl, /*number*//*key*/
kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select a.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_opl as kod_opl,0 as is_new,1 as is_not_new,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,0 as is_new,1 as is_not_new,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n1 as kod_opl,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n13 as kod_type_opl  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
a on a.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on a.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>