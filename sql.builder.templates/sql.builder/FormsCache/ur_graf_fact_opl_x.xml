<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_graf_fact_opl_x" timestamp="28.12.2023 14:55:53" form-size="1033;627" with-behavior="0" title="Оплаты по графику" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_dogplat_select.xml" elid="270" ord="270" leaf="0" lvl="2" pelid="">
    <grid table="opl" show-toolbar="1" show-footer="1" multi-select="0" id="51999908">
      <toolbar id="66025669">
        <uicommand button-type="grid-delete" column-visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="367" ord="367" leaf="1" lvl="2" pelid="" title="" id="66654555" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="43030531" />
      </toolbar>
      <columns id="30103844">
        <field table="opl" name="pr_not_in_graf" title="Не учитывать в ГПЗ" controlType="UICheck" rows-limit="100" id="67026657" />
        <field table="opl" name="kod_opl" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="28784265" />
        <field table="opl" name="num_opl" title="Номер платежного документа" controlType="UIText" rows-limit="100" id="55928437" />
        <field table="opl" name="opl" title="Оплачено с налогом, руб." controlType="UIText" edit-mask="N2" rows-limit="100" id="1129129" />
        <field table="opl" name="dat_opl" title="Дата платежного документа" controlType="UIDate" rows-limit="100" id="17607587" />
        <field table="opl" name="vid_real_name" title="Вид реализации" controlType="UIText" rows-limit="100" id="481266" />
        <field table="opl" name="vid_opl_name" title="Вид оплаты" controlType="UIText" rows-limit="100" id="9700275" />
        <field table="opl" name="type_opl_name" title="Тип оплаты" controlType="UIText" rows-limit="100" id="1874964" />
        <field table="opl" name="prim_bank" title="Примечания к банк. оплате" controlType="UIText" rows-limit="100" id="32284372" />
        <field table="opl" name="prim_raznos" title="Примечания к разносу оплаты" controlType="UIText" rows-limit="100" id="22726079" />
      </columns>
    </grid>
    <toolbar id="4531702" />
  </form>
  <params>
    <param name="p_kod_graf" type="number">
      <const>1000000908</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod_graf" type="number">
        <const>1000000908</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="opl_has_changes" parname="opl_has_changes" />
    </fields>
    <table name="opl" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="sr_opl" key="kod_opl" is-ms-upd="1" is-top="1" key-dimension="kod_opl_sf">
      <select-text>
--
select opl.pr_not_in_graf as pr_not_in_graf, /*Не учитывать в ГПЗ*//*number*/
opl.kod_opl as kod_opl, /*number*//*key*/
opl.num_opl as num_opl, /*Номер платежного документа*//*string*/
qube.sr_opl_opl_sf1 as opl, /*Оплачено с налогом, руб.*//*number*/
opl.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
vid_real.sname as vid_real_name, /*Вид реализации*//*string*/
kod_vidopl.full_name as vid_opl_name, /*Вид оплаты*//*string*/
kod_type_opl.name as type_opl_name, /*Тип оплаты*//*string*/
kod_link.remark as prim_bank, /*Примечания к банк. оплате*//*string*/
qube.sr_opl_text_prim1 as prim_raznos, /*Примечания к разносу оплаты*//*string*/
kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
opl.is_new as is_new, /*number*/
opl.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(qube.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплачено с налогом, руб.*//*number*/
max(qube.sr_opl_text_prim1)  as sr_opl_text_prim1, /*Примечания к разносу оплаты*//*string*/
sum( case  when (kod_opl.dat_opl &gt;= kod_graf.dat_opl_beg_nvl)  then qube.sr_opl_opl_sf2 end )  as fin_ul_opl_graf_old1/*Оплата по графику оплат*//*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*/
qube.kod_graf as kod_graf, /*number*//*key*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select qube.kod_graf as kod_graf, /*number*//*key*/
null as kod_opl, 
qube.kod_opl_sf as kod_opl_sf, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select un.kod_graf as kod_graf, /*number*//*key*/
un.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
max(un.sr_opl_text_prim1)  as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select dims.kod_graf as kod_graf, /*number*//*key*/
dims.kod_opl_sf as kod_opl_sf, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as sr_opl_text_prim1/*string*/

from (
--
select opl.kod_opl as kod_opl_sf, /*number*//*key*/
opl.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dp_graf_a_d.kod_graf as kod_graf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on opl.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_graf
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_graf as kod_graf, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_graf
a
--\ur_dp_graf
)
kod_dp_graf_a_d on kod_dp_graf_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_graf
left outer join
(
--ur_graf
select a.kod_graf as kod_graf/*number*//*key*/

from ur_graf
a
--\ur_graf
)
kod_graf on kod_dp_graf_a_d.kod_graf = kod_graf.kod_graf--\ur_graf
where
(kod_graf.kod_graf = :p_kod_graf )  group by
opl.kod_opl, /*number*//*key*/
kod_dp_graf_a_d.kod_graf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_graf as kod_graf, /*number*//*key*/
dims.kod_opl_sf as kod_opl_sf, /*number*/
null as sr_opl_opl_sf1, /*number*/
sr_opl_text.prim as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select sr_opl_text_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dp_graf_a_d.kod_graf as kod_graf, /*number*//*key*/
sr_opl_text_a_d.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_text
select a.kod_opl as kod_opl/*number*//*key*/

from sr_opl_text
a
--\sr_opl_text
)
sr_opl_text_a_d
--\sr_opl_text
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on sr_opl_text_a_d.kod_opl = opl.kod_opl--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on opl.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_graf
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_graf as kod_graf, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_graf
a
--\ur_dp_graf
)
kod_dp_graf_a_d on kod_dp_graf_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_graf
left outer join
(
--ur_graf
select a.kod_graf as kod_graf/*number*//*key*/

from ur_graf
a
--\ur_graf
)
kod_graf on kod_dp_graf_a_d.kod_graf = kod_graf.kod_graf--\ur_graf
where
(kod_graf.kod_graf = :p_kod_graf )  group by
sr_opl_text_a_d.kod_opl, /*number*//*key*/
kod_dp_graf_a_d.kod_graf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_text
select a.kod_opl as kod_opl, /*number*//*key*/
a.prim as prim/*Примечания к разносу оплаты*//*string*/

from sr_opl_text
a
--\sr_opl_text
)
sr_opl_text on sr_opl_text.kod_opl = dims.kod_opl_prm--\sr_opl_text
)
--\
)
--\
)
un
--\
 group by
un.kod_graf, /*number*//*key*/
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_graf as kod_graf, /*number*//*key*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_opl_sf as kod_opl_sf, /*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_text_prim1/*string*/

from (
--
select un.kod_graf as kod_graf, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_graf as kod_graf, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_opl_sf as kod_opl_sf, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select opl.kod_opl as kod_opl_sf, /*number*//*key*/
opl.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dp_graf_a_d.kod_graf as kod_graf, /*number*//*key*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on opl.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_graf
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_graf as kod_graf, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_graf
a
--\ur_dp_graf
)
kod_dp_graf_a_d on kod_dp_graf_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_graf
left outer join
(
--ur_graf
select a.kod_graf as kod_graf/*number*//*key*/

from ur_graf
a
--\ur_graf
)
kod_graf on kod_dp_graf_a_d.kod_graf = kod_graf.kod_graf--\ur_graf
where
(kod_graf.kod_graf = :p_kod_graf )  group by
opl.kod_opl, /*number*//*key*/
kod_dp_graf_a_d.kod_graf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_graf, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
 nvl( a.dat_opl_beg , ( coalesce( kod_sogl.dat_doc , kod_hist_mat2.dat_post , kod_isp.dat_doc ) )  )  as dat_opl_beg_nvl/*Начало учета фактической оплаты*//*date*/

from ur_graf
a
--\ur_graf
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post/*Дата прин. суд. акта*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat2 on a.kod_hist_mat = kod_hist_mat2.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.dat_doc as dat_doc/*Дата доп. документа*//*date*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on a.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
kod_graf on kod_graf.kod_graf = qube.kod_graf--\ur_graf
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_vidopl as kod_vidopl, /*number*/
a.vid_real as vid_real, /**//*number*/
a.num_opl as num_opl, /*Номер платежного документа*//*string*/
a.kod_type_opl as kod_type_opl, /*number*/
a.kod_link as kod_link, /*number*/
a.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
a.pr_not_in_graf as pr_not_in_graf, /*Не учитывать в ГПЗ*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on opl.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.remark as remark/*Назначение платежа*//*string*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on opl.kod_link = kod_link.kod_link--\sr_opl_bank
left outer join
(
--sk_type_opl
select a.kod_type_opl as kod_type_opl, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_type_opl
a
--\sk_type_opl
)
kod_type_opl on opl.kod_type_opl = kod_type_opl.kod_type_opl--\sk_type_opl
left outer join
(
--ss_vidopl
select a.kod_vidopl as kod_vidopl, /*number*//*key*/
a.abbr || ' ' || a.sname as full_name/*Виды оплат*//*string*/

from ss_vidopl
a
--\ss_vidopl
)
kod_vidopl on opl.kod_vidopl = kod_vidopl.kod_vidopl--\ss_vidopl
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.sname as sname/**//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on opl.vid_real = vid_real.vid_real--\sk_vid_real
where
qube.fin_ul_opl_graf_old1 is not null --\
</select-text>
      <columns>
        <column name="pr_not_in_graf" table="opl" type="number" title="Не учитывать в ГПЗ" ColumnEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="pr_not_in_graf" temp-col-name="n1" />
        <column name="kod_opl" table="opl" type="number" title="" parname="cur_kod_opl" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_opl" temp-col-name="n2" />
        <column name="num_opl" table="opl" type="string" title="Номер платежного документа" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="num_opl" temp-col-name="s1" />
        <column name="opl" table="opl" type="number" title="Оплачено с налогом, руб." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_opl_opl_sf1 as opl, /*Оплачено с налогом, руб.*//*number*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(qube.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплачено с налогом, руб.*//*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf, /*number*//*key*/
opl.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from (select a.kod_opl as kod_opl,a.opl as opl,a.opls as opls,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n7 as opl,t.n12 as opls,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.opl as opl,a.opls as opls,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n7 as opl,t.n12 as opls,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_opl" table="opl" type="date" title="Дата платежного документа" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="dat_opl" temp-col-name="d1" />
        <column name="vid_real_name" table="vid_real" type="string" title="Вид реализации" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real.sname as vid_real_name, /*Вид реализации*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_opl as kod_opl,a.vid_real as vid_real,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n4 as vid_real,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.vid_real as vid_real,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n4 as vid_real,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.sname as sname/**//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on opl.vid_real = vid_real.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_opl_name" table="kod_vidopl" type="string" title="Вид оплаты" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_vidopl.full_name as vid_opl_name, /*Вид оплаты*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_vidopl as kod_vidopl/*number*/

from (select a.kod_opl as kod_opl,a.kod_vidopl as kod_vidopl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n3 as kod_vidopl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_vidopl as kod_vidopl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n3 as kod_vidopl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--ss_vidopl
select a.kod_vidopl as kod_vidopl, /*number*//*key*/
a.abbr || ' ' || a.sname as full_name/*Виды оплат*//*string*/

from ss_vidopl
a
--\ss_vidopl
)
kod_vidopl on opl.kod_vidopl = kod_vidopl.kod_vidopl--\ss_vidopl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="type_opl_name" table="kod_type_opl" type="string" title="Тип оплаты" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_type_opl.name as type_opl_name, /*Тип оплаты*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_type_opl as kod_type_opl/*number*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sk_type_opl
select a.kod_type_opl as kod_type_opl, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_type_opl
a
--\sk_type_opl
)
kod_type_opl on opl.kod_type_opl = kod_type_opl.kod_type_opl--\sk_type_opl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="prim_bank" table="kod_link" type="string" title="Примечания к банк. оплате" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_link.remark as prim_bank, /*Примечания к банк. оплате*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from (select a.kod_opl as kod_opl,a.kod_link as kod_link,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n15 as kod_link,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_link as kod_link,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n15 as kod_link,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.remark as remark/*Назначение платежа*//*string*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on opl.kod_link = kod_link.kod_link--\sr_opl_bank
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="prim_raznos" table="opl" type="string" title="Примечания к разносу оплаты" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_opl_text_prim1 as prim_raznos, /*Примечания к разносу оплаты*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
max(qube.sr_opl_text_prim1)  as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select un.kod_opl_sf as kod_opl_sf, /*number*//*key*/
max(un.sr_opl_text_prim1)  as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf, /*number*//*key*/
null as sr_opl_text_prim1/*string*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
union all
(
--
select sr_opl_text_a_d.kod_opl as kod_opl_sf, /*number*//*key*/
sr_opl_text_a_d.prim as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--sr_opl_text
select a.kod_opl as kod_opl, /*number*//*key*/
a.prim as prim/*Примечания к разносу оплаты*//*string*/

from sr_opl_text
a
--\sr_opl_text
)
sr_opl_text_a_d
--\sr_opl_text
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_opl_x_n" table="opl.kod_opl" type="string" title="Номер платежного документа" text-source-for="kod_opl" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_opl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_opl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
opl.kod_opl as kod_opl/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
--
select un.kod_opl_sf as kod_opl_sf/*number*//*key*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl/*number*//*key*/

from (select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on opl.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="opl" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="opl" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:pr_not_in_graf as pr_not_in_graf 
,:kod_opl as kod_opl 
,:num_opl as num_opl 
,:dat_opl as dat_opl 
 
from dual ) 
 
loop 
insert into sr_opl 
(pr_not_in_graf 
,kod_opl 
,num_opl 
,dat_opl 
) 
 values  
(r.pr_not_in_graf 
,r.kod_opl 
,r.num_opl 
,r.dat_opl 
) 
 returning  
kod_opl into :kod_opl; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_opl where kod_opl=:kod_opl</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='opl' 
and 
names=:form_id 
and 
f2=:kod_opl; 
if :row_state_id=1  then 
for r in  
 ( select  
:pr_not_in_graf as pr_not_in_graf 
,:kod_opl as kod_opl 
,:num_opl as num_opl 
,:dat_opl as dat_opl 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,d1 
) 
 values  
('opl' 
,:form_id 
,:kod_opl 
,:row_state_id 
,r.pr_not_in_graf 
,r.kod_opl 
,r.num_opl 
,r.dat_opl 
); 
end loop; 
else 
for r in  
 ( select  
:pr_not_in_graf as pr_not_in_graf 
,:kod_opl as kod_opl 
,:num_opl as num_opl 
,:dat_opl as dat_opl 
,a.kod_vidopl 
,a.vid_real 
,a.kod_dog 
,a.kod_sf 
,a.opl 
,a.ym 
,a.remark 
,a.d_m 
,a.num_sf 
,a.kod_parent 
,a.u_m 
,a.kod_sf_uo 
,a.opls 
,a.kod_dest 
,a.kod_type_opl 
,a.kod_link 
,a.tep_el 
,a.kod_dog_r 
,a.vid_sf 
,a.prim 
,a.nom_sf 
,a.u_c 
,a.d_c 
 
from sr_opl a  where kod_opl=:kod_opl) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,d1 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,s2 
,d2 
,n9 
,n10 
,s3 
,n11 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,s4 
,s5 
,s6 
,d3 
) 
 values  
('opl' 
,:form_id 
,:kod_opl 
,:row_state_id 
,r.pr_not_in_graf 
,r.kod_opl 
,r.num_opl 
,r.dat_opl 
,r.kod_vidopl 
,r.vid_real 
,r.kod_dog 
,r.kod_sf 
,r.opl 
,r.ym 
,r.remark 
,r.d_m 
,r.num_sf 
,r.kod_parent 
,r.u_m 
,r.kod_sf_uo 
,r.opls 
,r.kod_dest 
,r.kod_type_opl 
,r.kod_link 
,r.tep_el 
,r.kod_dog_r 
,r.vid_sf 
,r.prim 
,r.nom_sf 
,r.u_c 
,r.d_c 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='opl' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_opl set  
(pr_not_in_graf 
,kod_opl 
,num_opl 
,dat_opl 
) 
= 
 ( select  
:pr_not_in_graf as pr_not_in_graf 
,:kod_opl as kod_opl 
,:num_opl as num_opl 
,:dat_opl as dat_opl 
 
from dual ) 
 
where 
kod_opl=:kod_opl 
;
end;
</update-text>
      <scheme>
        <table name="sr_opl_sf" as="opl">
          <columns>
            <column name="pr_not_in_graf" type="number" title="Не учитывать в ГПЗ" />
            <column name="kod_opl" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_opl" type="string" title="Номер платежного документа" />
            <column name="opl" type="number" title="Оплачено с налогом, руб." />
            <column name="dat_opl" type="date" title="Дата платежного документа" />
            <column name="vid_real_name" type="string" title="Вид реализации" />
            <column name="vid_opl_name" type="string" title="Вид оплаты" />
            <column name="type_opl_name" type="string" title="Тип оплаты" />
            <column name="prim_bank" type="string" title="Примечания к банк. оплате" />
            <column name="prim_raznos" type="string" title="Примечания к разносу оплаты" />
            <column name="kod_opl_x_n" type="string" title="Номер платежного документа" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="pr_not_in_graf" type="number" title="Не учитывать в ГПЗ" />
            <column name="kod_opl_x_n" type="string" title="Номер платежного документа" visible="0" />
            <column name="kod_opl" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_opl" type="string" title="Номер платежного документа" />
            <column name="opl" type="number" title="Оплачено с налогом, руб." />
            <column name="dat_opl" type="date" title="Дата платежного документа" />
            <column name="vid_real_name" type="string" title="Вид реализации" />
            <column name="vid_opl_name" type="string" title="Вид оплаты" />
            <column name="type_opl_name" type="string" title="Тип оплаты" />
            <column name="prim_bank" type="string" title="Примечания к банк. оплате" />
            <column name="prim_raznos" type="string" title="Примечания к разносу оплаты" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_opl_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_opl_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select opl.pr_not_in_graf as pr_not_in_graf, /*Не учитывать в ГПЗ*//*number*/
opl.kod_opl as kod_opl, /*number*//*key*/
opl.num_opl as num_opl, /*Номер платежного документа*//*string*/
qube.sr_opl_opl_sf1 as opl, /*Оплачено с налогом, руб.*//*number*/
opl.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
vid_real.sname as vid_real_name, /*Вид реализации*//*string*/
kod_vidopl.full_name as vid_opl_name, /*Вид оплаты*//*string*/
kod_type_opl.name as type_opl_name, /*Тип оплаты*//*string*/
kod_link.remark as prim_bank, /*Примечания к банк. оплате*//*string*/
qube.sr_opl_text_prim1 as prim_raznos, /*Примечания к разносу оплаты*//*string*/
kod_opl_x_n.num_opl as kod_opl_x_n, /*Номер платежного документа*//*string*/
opl.is_new as is_new, /*number*/
opl.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(qube.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплачено с налогом, руб.*//*number*/
max(qube.sr_opl_text_prim1)  as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select qube.kod_opl_sf as kod_opl_sf, /*number*//*key*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_text_prim1 as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--
select un.kod_opl_sf as kod_opl_sf, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
max(un.sr_opl_text_prim1)  as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
(
(
--
select opl.kod_opl as kod_opl_sf, /*number*//*key*/
opl.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as sr_opl_text_prim1/*string*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from (select a.kod_opl as kod_opl,a.opl as opl,a.opls as opls,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n7 as opl,t.n12 as opls,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.opl as opl,a.opls as opls,a.kod_type_opl as kod_type_opl  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n7 as opl,t.n12 as opls,t.n14 as kod_type_opl  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl
--\sr_opl_sf
)
--\
union all
(
--
select sr_opl_text_a_d.kod_opl as kod_opl_sf, /*number*//*key*/
null as sr_opl_opl_sf1, /*number*/
sr_opl_text_a_d.prim as sr_opl_text_prim1/*Примечания к разносу оплаты*//*string*/

from (
--sr_opl_text
select a.kod_opl as kod_opl, /*number*//*key*/
a.prim as prim/*Примечания к разносу оплаты*//*string*/

from sr_opl_text
a
--\sr_opl_text
)
sr_opl_text_a_d
--\sr_opl_text
)
--\
)
--\
)
un
--\
 group by
un.kod_opl_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_opl_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_vidopl as kod_vidopl, /*number*/
a.vid_real as vid_real, /**//*number*/
a.num_opl as num_opl, /*Номер платежного документа*//*string*/
a.kod_type_opl as kod_type_opl, /*number*/
a.kod_link as kod_link, /*number*/
a.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
a.pr_not_in_graf as pr_not_in_graf, /*Не учитывать в ГПЗ*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_opl as kod_opl,a.kod_vidopl as kod_vidopl,a.vid_real as vid_real,a.num_opl as num_opl,a.kod_type_opl as kod_type_opl,a.kod_link as kod_link,a.dat_opl as dat_opl,a.pr_not_in_graf as pr_not_in_graf,0 as is_new,1 as is_not_new  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n3 as kod_vidopl,t.n4 as vid_real,t.s1 as num_opl,t.n14 as kod_type_opl,t.n15 as kod_link,t.d1 as dat_opl,t.n1 as pr_not_in_graf,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
a
--\(select a.kod_opl as kod_opl,a.kod_vidopl as kod_vidopl,a.vid_real as vid_real,a.num_opl as num_opl,a.kod_type_opl as kod_type_opl,a.kod_link as kod_link,a.dat_opl as dat_opl,a.pr_not_in_graf as pr_not_in_graf,0 as is_new,1 as is_not_new  from sr_opl a where not exists (select * from rr_temp t where t.skod ='opl' and t.names=:form_id  and a.kod_opl=t.f2 ) and   a.kod_opl in :kod_opl_prm   union all  select t.n2 as kod_opl,t.n3 as kod_vidopl,t.n4 as vid_real,t.s1 as num_opl,t.n14 as kod_type_opl,t.n15 as kod_link,t.d1 as dat_opl,t.n1 as pr_not_in_graf,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='opl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_opl_prm )
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
opl on opl.kod_opl = qube.kod_opl_sf--\sr_opl_sf
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.num_opl as num_opl/*Номер платежного документа*//*string*/

from sr_opl
a
--\sr_opl
)
kod_opl_x_n on opl.kod_opl = kod_opl_x_n.kod_opl--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.remark as remark/*Назначение платежа*//*string*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on opl.kod_link = kod_link.kod_link--\sr_opl_bank
left outer join
(
--sk_type_opl
select a.kod_type_opl as kod_type_opl, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_type_opl
a
--\sk_type_opl
)
kod_type_opl on opl.kod_type_opl = kod_type_opl.kod_type_opl--\sk_type_opl
left outer join
(
--ss_vidopl
select a.kod_vidopl as kod_vidopl, /*number*//*key*/
a.abbr || ' ' || a.sname as full_name/*Виды оплат*//*string*/

from ss_vidopl
a
--\ss_vidopl
)
kod_vidopl on opl.kod_vidopl = kod_vidopl.kod_vidopl--\ss_vidopl
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.sname as sname/**//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on opl.vid_real = vid_real.vid_real--\sk_vid_real
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>