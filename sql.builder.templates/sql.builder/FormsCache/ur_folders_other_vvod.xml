<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_other_vvod" title="Иная работа" security-id="asuse_ur_isp_other" with-behavior="0" comment="Ручной ввод" timestamp="05.07.2024 16:03:37" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_other_vvod.xml" elid="253" ord="253" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kod_mat_main" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="58067558" />
    <splitcontainer id="54941354">
      <fieldgroup title="Работы" id="40988831">
        <grid table="ur_isp_other" show-toolbar="1" id="5910132">
          <toolbar id="43430713" />
          <columns id="34025880">
            <field table="ur_isp_other" name="kod_isp_other" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="35828807" />
            <field table="ur_isp_other" name="dat_event" title="Дата события" controlType="UIDate" rows-limit="100" id="60431645" />
            <field table="ur_isp_other" name="name" title="Наименование" controlType="UIText" rows-limit="100" id="38219294" />
            <band title="Сумма задолженности заявленная к выплате" id="45882006">
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_zadol_all" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="27383944" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_osnreal" title="Осн. реал." controlType="UIText" edit-mask="N2" rows-limit="100" id="26249101" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="3873059" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="24206290" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_gp_otv" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="13139676" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_astrent" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="63248768" />
              <field table="ur_isp_other" name="ur_hist_mat_ostatok_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="33041150" />
            </band>
            <band title="Задолженность удовлетворена на сумму" id="10408789">
              <field table="ur_isp_other" name="ur_opl_isp_other" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="2114056" />
              <field table="ur_isp_other" name="paid_onsreal" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="9549703" />
              <field table="ur_isp_other" name="paid_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="38511547" />
              <field table="ur_isp_other" name="paid_rvre" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="31705671" />
              <field table="ur_isp_other" name="paid_gp" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="54854005" />
              <field table="ur_isp_other" name="paid_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="15060729" />
              <field table="ur_isp_other" name="paid_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="27725485" />
            </band>
            <band title="Остаток задолженности" id="51817040">
              <field table="ur_isp_other" name="ur_isp_other_ost_all" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="24107197" />
              <field table="ur_isp_other" name="ur_isp_other_ost_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="10872782" />
              <field table="ur_isp_other" name="ur_isp_other_ost_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="25473746" />
              <field table="ur_isp_other" name="ur_isp_other_ost_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="41109756" />
              <field table="ur_isp_other" name="ur_isp_other_ost_gp" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="56402854" />
              <field table="ur_isp_other" name="ur_isp_other_ost_astrent" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="60221205" />
              <field table="ur_isp_other" name="ur_isp_other_ost_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="23760177" />
            </band>
            <field table="ur_isp_other" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="44123856" />
          </columns>
          <events id="55795402">
            <useaction event-name="new-row-save" action-type="execute-add" call="ur_dp_isp_other_insert_all" id="20752704">
              <useparam name="cur_kod_isp_other" id="52883813" />
            </useaction>
            <useaction event-name="save" action-type="refresh-table" object="ur_isp_other" id="45554505" />
          </events>
        </grid>
      </fieldgroup>
      <fieldgroup title="Исполнительные действия" id="40623270">
        <grid table="ur_isp_other_prim" show-toolbar="1" id="58278866">
          <columns id="43978276">
            <field table="ur_isp_other_prim" name="prim" title="Исполнительные действия" width="330" controlType="UITextEx" rows-limit="100" id="2820493" />
            <field table="ur_isp_other_prim" name="date_dept_reduction" title="Дата уменьшения долга по ИП" width="170" controlType="UIDate" rows-limit="100" id="57451179" />
            <field table="ur_isp_other_prim" name="amount" title="Сумма уменьшения долга по ИП" width="220" controlType="UINumber" rows-limit="100" id="35531388" />
            <field table="ur_isp_other_prim" name="reason" title="Основание уменьшения долга по ИП" width="220" controlType="UICombo" rows-limit="100" id="56356860">
              <listquery id="7108979">
                <query name="uv_isp_other_reason_list" id="44367031" />
              </listquery>
            </field>
            <field table="ur_isp_other_prim" name="prim2" title="Комментарий" width="460" controlType="UITextEx" rows-limit="100" id="23032704" />
          </columns>
        </grid>
      </fieldgroup>
    </splitcontainer>
  </form>
  <params>
    <param name="kod_folders" type="number" />
    <param name="kod_isp" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const exclude="1">2000001688</const>
      </param>
      <param name="kod_isp" type="number">
        <const exclude="1">2000000569</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_isp_other_has_changes" parname="ur_isp_other_has_changes" />
      <field type="string" name="ur_isp_other_prim_has_changes" parname="ur_isp_other_prim_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders_isp">
      <select-text>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
where
ur_folders.kod_folders = :kod_folders --\
</select-text>
      <columns>
        <column name="kod_mat_main" table="kod_mat" type="number" title="" parname="kod_mat_main" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_folders 
) 
 values  
(r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_folders as kod_folders 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.vvod 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,n4 
,n1 
,n5 
,n6 
,d1 
,n7 
,s1 
,d3 
,n8 
,n9 
,n10 
,n11 
,d2 
,s2 
,n2 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.vvod 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_folders 
) 
= 
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_isp" as="ur_folders">
          <columns>
            <column name="kod_mat_main" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_isp_other" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_isp_other" key="kod_isp_other" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_isp_other">
      <select-text>
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_isp_other.dat_event as dat_event, /*Дата события*//*date*/
ur_isp_other.name as name, /*Наименование*//*string*/
qube.ur_hist_mat_ostatok_zadol_all1 as ur_hist_mat_ostatok_zadol_all, /*Всего*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv, /*Гос. пошлина*//*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent, /*Астрент*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd, /*Судебные издержки*//*number*/
qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
ur_isp_other.paid_onsreal as paid_onsreal, /*Основная реализация*//*number*/
ur_isp_other.paid_peni as paid_peni, /*Проценты (пени)*//*number*/
ur_isp_other.paid_rvre as paid_rvre, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp_other.paid_gp as paid_gp, /*Гос. пошлина*//*number*/
ur_isp_other.paid_astr as paid_astr, /*Астрент*//*number*/
ur_isp_other.paid_sud_izd as paid_sud_izd, /*Судебные издержки*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_osn1 as ur_isp_other_ost_osn, /*Основная реализация*//*number*/
qube.ur_isp_other_ost_peni1 as ur_isp_other_ost_peni, /*Проценты (пени)*//*number*/
qube.ur_isp_other_ost_ogr1 as ur_isp_other_ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_isp_other_ost_gp1 as ur_isp_other_ost_gp, /*Гос. пошлина*//*number*/
qube.ur_isp_other_ost_astrent1 as ur_isp_other_ost_astrent, /*Астрент*//*number*/
qube.ur_isp_other_ost_sud_izd1 as ur_isp_other_ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.is_not_new as is_not_new, /*number*/
ur_isp_other.is_new as is_new, /*number*/
ur_isp_other.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  as ur_hist_mat_ostatok_zadol_all1, /*Остаток задолженности (Всего)*//*number*/
sum(qube.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Осн. реал.*//*number*/
sum(qube.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Проценты (пени)*//*number*/
sum(qube.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(qube.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Гос. пошлина*//*number*/
sum(qube.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Астрент*//*number*/
sum(qube.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_osnreal1 ,0)  -nvl( qube.ur_isp_other_paid_onsreal1 ,0) )  as ur_isp_other_ost_osn1, /*Остаток задолженности по осн. реал*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_peni1 ,0)  -nvl( qube.ur_isp_other_paid_peni1 ,0) )  as ur_isp_other_ost_peni1, /*Остаток задолженности по пени*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_ogr1 ,0)  -nvl( qube.ur_isp_other_paid_rvre1 ,0) )  as ur_isp_other_ost_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_gp_otv1 ,0)  -nvl( qube.ur_isp_other_paid_gp1 ,0) )  as ur_isp_other_ost_gp1, /*Остаток задолженности по гос.пошлине*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_astrent1 ,0)  -nvl( qube.ur_isp_other_paid_astr1 ,0) )  as ur_isp_other_ost_astrent1, /*Остаток задолженности по астренту*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_sud_izd1 ,0)  -nvl( qube.ur_isp_other_paid_sud_izd1 ,0) )  as ur_isp_other_ost_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp_other
a
--\ur_isp_other
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
(ur_isp_other.kod_folders = :fk_kod_folders )  and (ur_isp_other.kod_isp_other is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp_other
a
--\ur_isp_other
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
(ur_isp_other.kod_folders = :fk_kod_folders )  and (ur_isp_other.kod_isp_other is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_astr1)  as ur_isp_other_paid_astr1, /*number*/
sum(un.ur_isp_other_paid_gp1)  as ur_isp_other_paid_gp1, /*number*/
sum(un.ur_isp_other_paid_onsreal1)  as ur_isp_other_paid_onsreal1, /*number*/
sum(un.ur_isp_other_paid_peni1)  as ur_isp_other_paid_peni1, /*number*/
sum(un.ur_isp_other_paid_rvre1)  as ur_isp_other_paid_rvre1, /*number*/
sum(un.ur_isp_other_paid_sud_izd1)  as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp_other
a
--\ur_isp_other
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
(ur_isp_other.kod_folders = :fk_kod_folders )  and (ur_isp_other.kod_isp_other is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_astr as ur_isp_other_paid_astr1, /*number*/
ur_isp_other.paid_gp as ur_isp_other_paid_gp1, /*number*/
ur_isp_other.paid_onsreal as ur_isp_other_paid_onsreal1, /*number*/
ur_isp_other.paid_peni as ur_isp_other_paid_peni1, /*number*/
ur_isp_other.paid_rvre as ur_isp_other_paid_rvre1, /*number*/
ur_isp_other.paid_sud_izd as ur_isp_other_paid_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.paid_rvre as paid_rvre, /**//*number*/
a.paid_astr as paid_astr, /**//*number*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
a.paid_onsreal as paid_onsreal, /**//*number*/
a.paid_peni as paid_peni, /**//*number*/
a.paid_gp as paid_gp, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from ur_isp_other
a
--\ur_isp_other
)
ur_isp_other
--\ur_isp_other
where
(ur_isp_other.kod_folders = :fk_kod_folders )  and (ur_isp_other.kod_isp_other is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_event as dat_event, /*Дата события*//*date*/
a.name as name, /*Наименование*//*string*/
a.paid_rvre as paid_rvre, /**//*number*/
a.paid_astr as paid_astr, /**//*number*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
a.paid_onsreal as paid_onsreal, /**//*number*/
a.paid_peni as paid_peni, /**//*number*/
a.paid_gp as paid_gp, /**//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_isp_other
a
--\ur_isp_other
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other

order by dat_event DESC--\
</select-text>
      <columns>
        <column name="kod_isp_other" table="ur_isp_other" type="number" title="" parname="cur_kod_isp_other" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_isp_other" temp-col-name="n1" />
        <column name="dat_event" table="ur_isp_other" type="date" title="Дата события" is-user-editable="1" ClientMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_event" temp-col-name="d1" />
        <column name="name" table="ur_isp_other" type="string" title="Наименование" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="name" temp-col-name="s1" />
        <column name="ur_hist_mat_ostatok_zadol_all" table="ur_isp_other" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_zadol_all1 as ur_hist_mat_ostatok_zadol_all, /*Всего*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  as ur_hist_mat_ostatok_zadol_all1/*Остаток задолженности (Всего)*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_osnreal" table="ur_isp_other" type="number" title="Осн. реал." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal, /*Осн. реал.*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1/*Осн. реал.*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1/*Остаток задолженности по осн. реал*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1/*Остаток задолженности по осн. реал*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1/*Остаток задолженности по осн. реал*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1/*Остаток задолженности по осн. реал*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_osnreal1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_peni" table="ur_isp_other" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni, /*Проценты (пени)*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1/*Проценты (пени)*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1/*Остаток задолженности по пени*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1/*Остаток задолженности по пени*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1/*Остаток задолженности по пени*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1/*Остаток задолженности по пени*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_peni1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_ogr" table="ur_isp_other" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_ogr1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_gp_otv" table="ur_isp_other" type="number" title="Гос. пошлина" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv, /*Гос. пошлина*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1/*Гос. пошлина*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1/*Остаток задолженности по гос.пошлине*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1/*Остаток задолженности по гос.пошлине*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1/*Остаток задолженности по гос.пошлине*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1/*Остаток задолженности по гос.пошлине*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_gp_otv1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_astrent" table="ur_isp_other" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent, /*Астрент*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1/*Астрент*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1/*Остаток задолженности по астренту*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1/*Остаток задолженности по астренту*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1/*Остаток задолженности по астренту*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1/*Остаток задолженности по астренту*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_astrent1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ostatok_sud_izd" table="ur_isp_other" type="number" title="Судебные издержки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(qube.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1/*Судебные издержки*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_isp_other" table="ur_isp_other" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1/*Дата выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1/*number*/

from (
(
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="paid_onsreal" table="ur_isp_other" type="number" title="Основная реализация" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_onsreal" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_osn1 as ur_isp_other_ost_osn, /*Основная реализация*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_osnreal1 ,0)  -nvl( qube.ur_isp_other_paid_onsreal1 ,0) )  as ur_isp_other_ost_osn1/*Остаток задолженности по осн. реал*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_onsreal1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_onsreal1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_onsreal1)  as ur_isp_other_paid_onsreal1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_onsreal1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_onsreal as ur_isp_other_paid_onsreal1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_onsreal as paid_onsreal, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_onsreal as paid_onsreal,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n2 as paid_onsreal,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_onsreal as paid_onsreal,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n2 as paid_onsreal,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_osn" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="paid_peni" table="ur_isp_other" type="number" title="Проценты (пени)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_peni" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_peni1 as ur_isp_other_ost_peni, /*Проценты (пени)*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_peni1 ,0)  -nvl( qube.ur_isp_other_paid_peni1 ,0) )  as ur_isp_other_ost_peni1/*Остаток задолженности по пени*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_peni1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_peni1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_peni1)  as ur_isp_other_paid_peni1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_peni1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_peni as ur_isp_other_paid_peni1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_peni as paid_peni, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_peni as paid_peni,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n3 as paid_peni,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_peni as paid_peni,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n3 as paid_peni,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_peni" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="paid_rvre" table="ur_isp_other" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_rvre" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_ogr1 as ur_isp_other_ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_ogr1 ,0)  -nvl( qube.ur_isp_other_paid_rvre1 ,0) )  as ur_isp_other_ost_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_rvre1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_rvre1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_rvre1)  as ur_isp_other_paid_rvre1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_rvre1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_rvre as ur_isp_other_paid_rvre1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_rvre as paid_rvre, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_ogr" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="paid_gp" table="ur_isp_other" type="number" title="Гос. пошлина" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_gp" temp-col-name="n5">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_gp1 as ur_isp_other_ost_gp, /*Гос. пошлина*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_gp_otv1 ,0)  -nvl( qube.ur_isp_other_paid_gp1 ,0) )  as ur_isp_other_ost_gp1/*Остаток задолженности по гос.пошлине*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_gp1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_gp1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_gp1)  as ur_isp_other_paid_gp1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_gp1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_gp as ur_isp_other_paid_gp1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_gp as paid_gp, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_gp as paid_gp,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n5 as paid_gp,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_gp as paid_gp,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n5 as paid_gp,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_gp" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="paid_astr" table="ur_isp_other" type="number" title="Астрент" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_astr" temp-col-name="n6">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_astrent1 as ur_isp_other_ost_astrent, /*Астрент*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_astrent1 ,0)  -nvl( qube.ur_isp_other_paid_astr1 ,0) )  as ur_isp_other_ost_astrent1/*Остаток задолженности по астренту*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_astr1)  as ur_isp_other_paid_astr1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_astr as ur_isp_other_paid_astr1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_astr as paid_astr, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_astr as paid_astr,a.paid_rvre as paid_rvre,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n6 as paid_astr,t.n4 as paid_rvre,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_astr as paid_astr,a.paid_rvre as paid_rvre,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n6 as paid_astr,t.n4 as paid_rvre,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_astrent" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="paid_sud_izd" table="ur_isp_other" type="number" title="Судебные издержки" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="paid_sud_izd" temp-col-name="n7">
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_sud_izd1 as ur_isp_other_ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_sud_izd1 ,0)  -nvl( qube.ur_isp_other_paid_sud_izd1 ,0) )  as ur_isp_other_ost_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_sud_izd1)  as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_sud_izd as ur_isp_other_paid_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_sud_izd as paid_sud_izd,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n7 as paid_sud_izd,t.n4 as paid_rvre,t.n6 as paid_astr,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_sud_izd as paid_sud_izd,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n7 as paid_sud_izd,t.n4 as paid_rvre,t.n6 as paid_astr,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_sud_izd" table="ur_isp_other" />
          </dependants>
        </column>
        <column name="ur_isp_other_ost_all" table="ur_isp_other" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_osn" table="ur_isp_other" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_osn1 as ur_isp_other_ost_osn, /*Основная реализация*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_osnreal1 ,0)  -nvl( qube.ur_isp_other_paid_onsreal1 ,0) )  as ur_isp_other_ost_osn1/*Остаток задолженности по осн. реал*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
sum(un.ur_isp_other_paid_onsreal1)  as ur_isp_other_paid_onsreal1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
null as ur_isp_other_paid_onsreal1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
ur_isp_other.paid_onsreal as ur_isp_other_paid_onsreal1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_onsreal as paid_onsreal/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_onsreal as paid_onsreal  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n2 as paid_onsreal  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_onsreal as paid_onsreal  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n2 as paid_onsreal  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_peni" table="ur_isp_other" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_peni1 as ur_isp_other_ost_peni, /*Проценты (пени)*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_peni1 ,0)  -nvl( qube.ur_isp_other_paid_peni1 ,0) )  as ur_isp_other_ost_peni1/*Остаток задолженности по пени*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
sum(un.ur_isp_other_paid_peni1)  as ur_isp_other_paid_peni1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
null as ur_isp_other_paid_peni1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_peni1, /*number*/
ur_isp_other.paid_peni as ur_isp_other_paid_peni1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_peni as paid_peni/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_peni as paid_peni  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n3 as paid_peni  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_peni as paid_peni  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n3 as paid_peni  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_ogr" table="ur_isp_other" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_ogr1 as ur_isp_other_ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_ogr1 ,0)  -nvl( qube.ur_isp_other_paid_rvre1 ,0) )  as ur_isp_other_ost_ogr1/*Остаток задолженности по расходам на ограничения*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum(un.ur_isp_other_paid_rvre1)  as ur_isp_other_paid_rvre1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
null as ur_isp_other_paid_rvre1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
ur_isp_other.paid_rvre as ur_isp_other_paid_rvre1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_rvre as paid_rvre/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_gp" table="ur_isp_other" type="number" title="Гос. пошлина" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_gp1 as ur_isp_other_ost_gp, /*Гос. пошлина*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_gp_otv1 ,0)  -nvl( qube.ur_isp_other_paid_gp1 ,0) )  as ur_isp_other_ost_gp1/*Остаток задолженности по гос.пошлине*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
sum(un.ur_isp_other_paid_gp1)  as ur_isp_other_paid_gp1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
null as ur_isp_other_paid_gp1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
ur_isp_other.paid_gp as ur_isp_other_paid_gp1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_gp as paid_gp/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_astrent" table="ur_isp_other" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_astrent1 as ur_isp_other_ost_astrent, /*Астрент*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_astrent1 ,0)  -nvl( qube.ur_isp_other_paid_astr1 ,0) )  as ur_isp_other_ost_astrent1/*Остаток задолженности по астренту*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
sum(un.ur_isp_other_paid_astr1)  as ur_isp_other_paid_astr1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
null as ur_isp_other_paid_astr1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
ur_isp_other.paid_astr as ur_isp_other_paid_astr1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_astr as paid_astr/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_astr as paid_astr  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n6 as paid_astr  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_astr as paid_astr  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n6 as paid_astr  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_other_ost_sud_izd" table="ur_isp_other" type="number" title="Судебные издержки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_other_ost_sud_izd1 as ur_isp_other_ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_ostatok_sud_izd1 ,0)  -nvl( qube.ur_isp_other_paid_sud_izd1 ,0) )  as ur_isp_other_ost_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
sum(un.ur_isp_other_paid_sud_izd1)  as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
ur_isp_other.paid_sud_izd as ur_isp_other_paid_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_sud_izd as paid_sud_izd/**//*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_sud_izd as paid_sud_izd  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n7 as paid_sud_izd  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_sud_izd as paid_sud_izd  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n7 as paid_sud_izd  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_not_new" table="ur_isp_other" type="number" title="" parname="item_is_not_new" ColumnVisible="0" />
        <column name="is_new" table="ur_isp_other" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_isp_other" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_isp_other">
              <params>
                <param name="kod_isp_other_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ostatok_zadol_all1 as ur_hist_mat_ostatok_zadol_all, /*Всего*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv, /*Гос. пошлина*//*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent, /*Астрент*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd, /*Судебные издержки*//*number*/
qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_osn1 as ur_isp_other_ost_osn, /*Основная реализация*//*number*/
qube.ur_isp_other_ost_peni1 as ur_isp_other_ost_peni, /*Проценты (пени)*//*number*/
qube.ur_isp_other_ost_ogr1 as ur_isp_other_ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_isp_other_ost_gp1 as ur_isp_other_ost_gp, /*Гос. пошлина*//*number*/
qube.ur_isp_other_ost_astrent1 as ur_isp_other_ost_astrent, /*Астрент*//*number*/
qube.ur_isp_other_ost_sud_izd1 as ur_isp_other_ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  as ur_hist_mat_ostatok_zadol_all1, /*Остаток задолженности (Всего)*//*number*/
sum(qube.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Осн. реал.*//*number*/
sum(qube.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Проценты (пени)*//*number*/
sum(qube.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(qube.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Гос. пошлина*//*number*/
sum(qube.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Астрент*//*number*/
sum(qube.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_osnreal1 ,0)  -nvl( qube.ur_isp_other_paid_onsreal1 ,0) )  as ur_isp_other_ost_osn1, /*Остаток задолженности по осн. реал*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_peni1 ,0)  -nvl( qube.ur_isp_other_paid_peni1 ,0) )  as ur_isp_other_ost_peni1, /*Остаток задолженности по пени*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_ogr1 ,0)  -nvl( qube.ur_isp_other_paid_rvre1 ,0) )  as ur_isp_other_ost_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_gp_otv1 ,0)  -nvl( qube.ur_isp_other_paid_gp1 ,0) )  as ur_isp_other_ost_gp1, /*Остаток задолженности по гос.пошлине*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_astrent1 ,0)  -nvl( qube.ur_isp_other_paid_astr1 ,0) )  as ur_isp_other_ost_astrent1, /*Остаток задолженности по астренту*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_sud_izd1 ,0)  -nvl( qube.ur_isp_other_paid_sud_izd1 ,0) )  as ur_isp_other_ost_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_astr1)  as ur_isp_other_paid_astr1, /*number*/
sum(un.ur_isp_other_paid_gp1)  as ur_isp_other_paid_gp1, /*number*/
sum(un.ur_isp_other_paid_onsreal1)  as ur_isp_other_paid_onsreal1, /*number*/
sum(un.ur_isp_other_paid_peni1)  as ur_isp_other_paid_peni1, /*number*/
sum(un.ur_isp_other_paid_rvre1)  as ur_isp_other_paid_rvre1, /*number*/
sum(un.ur_isp_other_paid_sud_izd1)  as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_astr as ur_isp_other_paid_astr1, /*number*/
ur_isp_other.paid_gp as ur_isp_other_paid_gp1, /*number*/
ur_isp_other.paid_onsreal as ur_isp_other_paid_onsreal1, /*number*/
ur_isp_other.paid_peni as ur_isp_other_paid_peni1, /*number*/
ur_isp_other.paid_rvre as ur_isp_other_paid_rvre1, /*number*/
ur_isp_other.paid_sud_izd as ur_isp_other_paid_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_rvre as paid_rvre, /**//*number*/
a.paid_astr as paid_astr, /**//*number*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
a.paid_onsreal as paid_onsreal, /**//*number*/
a.paid_peni as paid_peni, /**//*number*/
a.paid_gp as paid_gp, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_hist_mat_ostatok_zadol_all" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_osnreal" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_peni" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_ogr" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_gp_otv" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_astrent" table="ur_isp_other" />
            <dependant name="ur_hist_mat_ostatok_sud_izd" table="ur_isp_other" />
            <dependant name="ur_opl_isp_other" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_all" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_osn" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_peni" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_ogr" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_gp" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_astrent" table="ur_isp_other" />
            <dependant name="ur_isp_other_ost_sud_izd" table="ur_isp_other" />
          </dependants>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_isp_other as kod_isp_other 
,:dat_event as dat_event 
,:name as name 
,:paid_onsreal as paid_onsreal 
,:paid_peni as paid_peni 
,:paid_rvre as paid_rvre 
,:paid_gp as paid_gp 
,:paid_astr as paid_astr 
,:paid_sud_izd as paid_sud_izd 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_isp_other 
(kod_isp_other 
,dat_event 
,name 
,paid_onsreal 
,paid_peni 
,paid_rvre 
,paid_gp 
,paid_astr 
,paid_sud_izd 
,kod_folders 
) 
 values  
(r.kod_isp_other 
,r.dat_event 
,r.name 
,r.paid_onsreal 
,r.paid_peni 
,r.paid_rvre 
,r.paid_gp 
,r.paid_astr 
,r.paid_sud_izd 
,r.kod_folders 
) 
 returning  
kod_isp_other into :kod_isp_other; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_isp_other where kod_isp_other=:kod_isp_other</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_isp_other' 
and 
names=:form_id 
and 
f2=:kod_isp_other; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_isp_other as kod_isp_other 
,:dat_event as dat_event 
,:name as name 
,:paid_onsreal as paid_onsreal 
,:paid_peni as paid_peni 
,:paid_rvre as paid_rvre 
,:paid_gp as paid_gp 
,:paid_astr as paid_astr 
,:paid_sud_izd as paid_sud_izd 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,s1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
) 
 values  
('ur_isp_other' 
,:form_id 
,:kod_isp_other 
,:row_state_id 
,r.kod_isp_other 
,r.dat_event 
,r.name 
,r.paid_onsreal 
,r.paid_peni 
,r.paid_rvre 
,r.paid_gp 
,r.paid_astr 
,r.paid_sud_izd 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_isp_other as kod_isp_other 
,:dat_event as dat_event 
,:name as name 
,:paid_onsreal as paid_onsreal 
,:paid_peni as paid_peni 
,:paid_rvre as paid_rvre 
,:paid_gp as paid_gp 
,:paid_astr as paid_astr 
,:paid_sud_izd as paid_sud_izd 
,:kod_folders as kod_folders 
,a.u_m 
,a.d_m 
 
from ur_isp_other a  where kod_isp_other=:kod_isp_other) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,s1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,s2 
,d2 
) 
 values  
('ur_isp_other' 
,:form_id 
,:kod_isp_other 
,:row_state_id 
,r.kod_isp_other 
,r.dat_event 
,r.name 
,r.paid_onsreal 
,r.paid_peni 
,r.paid_rvre 
,r.paid_gp 
,r.paid_astr 
,r.paid_sud_izd 
,r.kod_folders 
,r.u_m 
,r.d_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_isp_other' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_isp_other set  
(kod_isp_other 
,dat_event 
,name 
,paid_onsreal 
,paid_peni 
,paid_rvre 
,paid_gp 
,paid_astr 
,paid_sud_izd 
,kod_folders 
) 
= 
 ( select  
:kod_isp_other as kod_isp_other 
,:dat_event as dat_event 
,:name as name 
,:paid_onsreal as paid_onsreal 
,:paid_peni as paid_peni 
,:paid_rvre as paid_rvre 
,:paid_gp as paid_gp 
,:paid_astr as paid_astr 
,:paid_sud_izd as paid_sud_izd 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_isp_other=:kod_isp_other 
;
end;
</update-text>
      <scheme>
        <table name="ur_isp_other" as="ur_isp_other">
          <columns>
            <column name="kod_isp_other" type="number" title="" visible="0" />
            <column name="dat_event" type="date" title="Дата события" />
            <column name="name" type="string" title="Наименование" />
            <column name="ur_hist_mat_ostatok_zadol_all" type="number" title="Всего" />
            <column name="ur_hist_mat_ostatok_osnreal" type="number" title="Осн. реал." />
            <column name="ur_hist_mat_ostatok_peni" type="number" title="Проценты (пени)" />
            <column name="ur_hist_mat_ostatok_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="ur_hist_mat_ostatok_gp_otv" type="number" title="Гос. пошлина" />
            <column name="ur_hist_mat_ostatok_astrent" type="number" title="Астрент" />
            <column name="ur_hist_mat_ostatok_sud_izd" type="number" title="Судебные издержки" />
            <column name="ur_opl_isp_other" type="number" title="Всего" />
            <column name="paid_onsreal" type="number" title="Основная реализация" />
            <column name="paid_peni" type="number" title="Проценты (пени)" />
            <column name="paid_rvre" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="paid_gp" type="number" title="Гос. пошлина" />
            <column name="paid_astr" type="number" title="Астрент" />
            <column name="paid_sud_izd" type="number" title="Судебные издержки" />
            <column name="ur_isp_other_ost_all" type="number" title="Всего" />
            <column name="ur_isp_other_ost_osn" type="number" title="Основная реализация" />
            <column name="ur_isp_other_ost_peni" type="number" title="Проценты (пени)" />
            <column name="ur_isp_other_ost_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="ur_isp_other_ost_gp" type="number" title="Гос. пошлина" />
            <column name="ur_isp_other_ost_astrent" type="number" title="Астрент" />
            <column name="ur_isp_other_ost_sud_izd" type="number" title="Судебные издержки" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_isp_other" type="number" title="" visible="0" />
            <column name="dat_event" type="date" title="Дата события" />
            <column name="name" type="string" title="Наименование" />
            <band title="Сумма задолженности заявленная к выплате">
              <column name="ur_hist_mat_ostatok_zadol_all" type="number" title="Всего" />
              <column name="ur_hist_mat_ostatok_osnreal" type="number" title="Осн. реал." />
              <column name="ur_hist_mat_ostatok_peni" type="number" title="Проценты (пени)" />
              <column name="ur_hist_mat_ostatok_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="ur_hist_mat_ostatok_gp_otv" type="number" title="Гос. пошлина" />
              <column name="ur_hist_mat_ostatok_astrent" type="number" title="Астрент" />
              <column name="ur_hist_mat_ostatok_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <band title="Задолженность удовлетворена на сумму">
              <column name="ur_opl_isp_other" type="number" title="Всего" />
              <column name="paid_onsreal" type="number" title="Основная реализация" />
              <column name="paid_peni" type="number" title="Проценты (пени)" />
              <column name="paid_rvre" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="paid_gp" type="number" title="Гос. пошлина" />
              <column name="paid_astr" type="number" title="Астрент" />
              <column name="paid_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <band title="Остаток задолженности">
              <column name="ur_isp_other_ost_all" type="number" title="Всего" />
              <column name="ur_isp_other_ost_osn" type="number" title="Основная реализация" />
              <column name="ur_isp_other_ost_peni" type="number" title="Проценты (пени)" />
              <column name="ur_isp_other_ost_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="ur_isp_other_ost_gp" type="number" title="Гос. пошлина" />
              <column name="ur_isp_other_ost_astrent" type="number" title="Астрент" />
              <column name="ur_isp_other_ost_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_isp_other_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_isp_other_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_isp_other.dat_event as dat_event, /*Дата события*//*date*/
ur_isp_other.name as name, /*Наименование*//*string*/
qube.ur_hist_mat_ostatok_zadol_all1 as ur_hist_mat_ostatok_zadol_all, /*Всего*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv, /*Гос. пошлина*//*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent, /*Астрент*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd, /*Судебные издержки*//*number*/
qube.ur_opl_isp_other1 as ur_opl_isp_other, /*Всего*//*number*/
ur_isp_other.paid_onsreal as paid_onsreal, /*Основная реализация*//*number*/
ur_isp_other.paid_peni as paid_peni, /*Проценты (пени)*//*number*/
ur_isp_other.paid_rvre as paid_rvre, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp_other.paid_gp as paid_gp, /*Гос. пошлина*//*number*/
ur_isp_other.paid_astr as paid_astr, /*Астрент*//*number*/
ur_isp_other.paid_sud_izd as paid_sud_izd, /*Судебные издержки*//*number*/
qube.ur_isp_other_ost_all1 as ur_isp_other_ost_all, /*Всего*//*number*/
qube.ur_isp_other_ost_osn1 as ur_isp_other_ost_osn, /*Основная реализация*//*number*/
qube.ur_isp_other_ost_peni1 as ur_isp_other_ost_peni, /*Проценты (пени)*//*number*/
qube.ur_isp_other_ost_ogr1 as ur_isp_other_ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_isp_other_ost_gp1 as ur_isp_other_ost_gp, /*Гос. пошлина*//*number*/
qube.ur_isp_other_ost_astrent1 as ur_isp_other_ost_astrent, /*Астрент*//*number*/
qube.ur_isp_other_ost_sud_izd1 as ur_isp_other_ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp_other.is_not_new as is_not_new, /*number*/
ur_isp_other.is_new as is_new, /*number*/
ur_isp_other.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  as ur_hist_mat_ostatok_zadol_all1, /*Остаток задолженности (Всего)*//*number*/
sum(qube.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Осн. реал.*//*number*/
sum(qube.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Проценты (пени)*//*number*/
sum(qube.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(qube.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Гос. пошлина*//*number*/
sum(qube.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Астрент*//*number*/
sum(qube.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  as ur_opl_isp_other1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_isp_other_hand_opl1 ,0) )  ,0) )  as ur_isp_other_ost_all1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_osnreal1 ,0)  -nvl( qube.ur_isp_other_paid_onsreal1 ,0) )  as ur_isp_other_ost_osn1, /*Остаток задолженности по осн. реал*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_peni1 ,0)  -nvl( qube.ur_isp_other_paid_peni1 ,0) )  as ur_isp_other_ost_peni1, /*Остаток задолженности по пени*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_ogr1 ,0)  -nvl( qube.ur_isp_other_paid_rvre1 ,0) )  as ur_isp_other_ost_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_gp_otv1 ,0)  -nvl( qube.ur_isp_other_paid_gp1 ,0) )  as ur_isp_other_ost_gp1, /*Остаток задолженности по гос.пошлине*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_astrent1 ,0)  -nvl( qube.ur_isp_other_paid_astr1 ,0) )  as ur_isp_other_ost_astrent1, /*Остаток задолженности по астренту*//*number*/
sum( nvl( qube.ur_hist_mat_ostatok_sud_izd1 ,0)  -nvl( qube.ur_isp_other_paid_sud_izd1 ,0) )  as ur_isp_other_ost_sud_izd1/*Остаток задолженности по судебным издержкам*//*number*/

from (
--
select qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_isp_other as kod_isp_other, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_isp_other as kod_isp_other, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_isp_other as kod_isp_other, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other as kod_isp_other, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_isp_other
select a.kod_dp_isp_other as kod_dp_isp_other, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp_other
a
--\ur_dp_isp_other
)
kod_dp_isp_other_a_d on kod_dp_isp_other_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_isp_other
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other/*number*//*key*/

from (select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on kod_dp_isp_other_a_d.kod_isp_other = ur_isp_other.kod_isp_other--\ur_isp_other
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp_other.kod_isp_other is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_isp_other_a_d.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_isp_other, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_isp_other as kod_isp_other, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_ostatok_astrent1 as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
qube.ur_hist_mat_ostatok_gp_otv1 as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
qube.ur_hist_mat_ostatok_ogr1 as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
qube.ur_hist_mat_ostatok_osnreal1 as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
qube.ur_hist_mat_ostatok_peni1 as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
qube.ur_hist_mat_ostatok_sud_izd1 as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_other_hand_opl1 as ur_isp_other_hand_opl1, /*number*/
qube.ur_isp_other_paid_astr1 as ur_isp_other_paid_astr1, /*number*/
qube.ur_isp_other_paid_gp1 as ur_isp_other_paid_gp1, /*number*/
qube.ur_isp_other_paid_onsreal1 as ur_isp_other_paid_onsreal1, /*number*/
qube.ur_isp_other_paid_peni1 as ur_isp_other_paid_peni1, /*number*/
qube.ur_isp_other_paid_rvre1 as ur_isp_other_paid_rvre1, /*number*/
qube.ur_isp_other_paid_sud_izd1 as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select un.kod_isp_other as kod_isp_other, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_ostatok_astrent1)  as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
sum(un.ur_hist_mat_ostatok_gp_otv1)  as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
sum(un.ur_hist_mat_ostatok_ogr1)  as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
sum(un.ur_hist_mat_ostatok_osnreal1)  as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
sum(un.ur_hist_mat_ostatok_peni1)  as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
sum(un.ur_hist_mat_ostatok_sud_izd1)  as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_other_hand_opl1)  as ur_isp_other_hand_opl1, /*number*/
sum(un.ur_isp_other_paid_astr1)  as ur_isp_other_paid_astr1, /*number*/
sum(un.ur_isp_other_paid_gp1)  as ur_isp_other_paid_gp1, /*number*/
sum(un.ur_isp_other_paid_onsreal1)  as ur_isp_other_paid_onsreal1, /*number*/
sum(un.ur_isp_other_paid_peni1)  as ur_isp_other_paid_peni1, /*number*/
sum(un.ur_isp_other_paid_rvre1)  as ur_isp_other_paid_rvre1, /*number*/
sum(un.ur_isp_other_paid_sud_izd1)  as ur_isp_other_paid_sud_izd1/*number*/

from (
(
(
--
select dims.kod_isp_other as kod_isp_other, /*number*//*key*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.ostatok_astrent as ur_hist_mat_ostatok_astrent1, /*Остаток задолженности по астренту*//*number*/
ur_hist_mat_dec.ostatok_gp_otv as ur_hist_mat_ostatok_gp_otv1, /*Остаток задолженности по гос.пошлине*//*number*/
ur_hist_mat_dec.ostatok_ogr as ur_hist_mat_ostatok_ogr1, /*Остаток задолженности по расходам на ограничения*//*number*/
ur_hist_mat_dec.ostatok_osnreal as ur_hist_mat_ostatok_osnreal1, /*Остаток задолженности по осн. реал*//*number*/
ur_hist_mat_dec.ostatok_peni as ur_hist_mat_ostatok_peni1, /*Остаток задолженности по пени*//*number*/
ur_hist_mat_dec.ostatok_sud_izd as ur_hist_mat_ostatok_sud_izd1, /*Остаток задолженности по судебным издержкам*//*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_other_hand_opl1, /*number*/
null as ur_isp_other_paid_astr1, /*number*/
null as ur_isp_other_paid_gp1, /*number*/
null as ur_isp_other_paid_onsreal1, /*number*/
null as ur_isp_other_paid_peni1, /*number*/
null as ur_isp_other_paid_rvre1, /*number*/
null as ur_isp_other_paid_sud_izd1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp_other.kod_isp_other as kod_isp_other/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp_other.kod_isp_other/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
 nvl( a.osnreal ,0)  -nvl( a.opl_osnreal ,0)  as ostatok_osnreal, /*Остаток задолженности по осн. реал*//*number*/
 nvl( a.peni ,0)  -nvl( a.opl_peni ,0)  as ostatok_peni, /*Остаток задолженности по пени*//*number*/
 nvl( a.gp_otv ,0)  -nvl( a.opl_gpotv ,0)  as ostatok_gp_otv, /*Остаток задолженности по гос.пошлине*//*number*/
 nvl( a.ogr ,0)  -nvl( a.opl_ogr ,0)  as ostatok_ogr, /*Остаток задолженности по расходам на ограничения*//*number*/
 nvl( a.sud_izd ,0)  -nvl( a.opl_sud_izd ,0)  as ostatok_sud_izd, /*Остаток задолженности по судебным издержкам*//*number*/
 nvl( a.astrent ,0)  -nvl( a.opl_astrent ,0)  as ostatok_astrent, /*Остаток задолженности по астренту*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp_other.kod_isp_other as kod_isp_other, /*number*//*key*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_ostatok_astrent1, /*number*/
null as ur_hist_mat_ostatok_gp_otv1, /*number*/
null as ur_hist_mat_ostatok_ogr1, /*number*/
null as ur_hist_mat_ostatok_osnreal1, /*number*/
null as ur_hist_mat_ostatok_peni1, /*number*/
null as ur_hist_mat_ostatok_sud_izd1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp_other.hand_opl as ur_isp_other_hand_opl1, /*number*/
ur_isp_other.paid_astr as ur_isp_other_paid_astr1, /*number*/
ur_isp_other.paid_gp as ur_isp_other_paid_gp1, /*number*/
ur_isp_other.paid_onsreal as ur_isp_other_paid_onsreal1, /*number*/
ur_isp_other.paid_peni as ur_isp_other_paid_peni1, /*number*/
ur_isp_other.paid_rvre as ur_isp_other_paid_rvre1, /*number*/
ur_isp_other.paid_sud_izd as ur_isp_other_paid_sud_izd1/*number*/

from (
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.paid_rvre as paid_rvre, /**//*number*/
a.paid_astr as paid_astr, /**//*number*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
a.paid_onsreal as paid_onsreal, /**//*number*/
a.paid_peni as paid_peni, /**//*number*/
a.paid_gp as paid_gp, /**//*number*/
 nvl( a.paid_rvre ,0)  +nvl( a.paid_astr ,0)  +nvl( a.paid_sud_izd ,0)  +nvl( a.paid_onsreal ,0)  +nvl( a.paid_peni ,0)  +nvl( a.paid_gp ,0)  as hand_opl/*number*/

from (select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other
--\ur_isp_other
where
ur_isp_other.kod_isp_other is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp_other/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp_other/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp_other
select a.kod_isp_other as kod_isp_other, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_event as dat_event, /*Дата события*//*date*/
a.name as name, /*Наименование*//*string*/
a.paid_rvre as paid_rvre, /**//*number*/
a.paid_astr as paid_astr, /**//*number*/
a.paid_sud_izd as paid_sud_izd, /**//*number*/
a.paid_onsreal as paid_onsreal, /**//*number*/
a.paid_peni as paid_peni, /**//*number*/
a.paid_gp as paid_gp, /**//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders,a.dat_event as dat_event,a.name as name,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp,0 as is_new,1 as is_not_new  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders,t.d1 as dat_event,t.s1 as name,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
a
--\(select a.kod_isp_other as kod_isp_other,a.kod_folders as kod_folders,a.dat_event as dat_event,a.name as name,a.paid_rvre as paid_rvre,a.paid_astr as paid_astr,a.paid_sud_izd as paid_sud_izd,a.paid_onsreal as paid_onsreal,a.paid_peni as paid_peni,a.paid_gp as paid_gp,0 as is_new,1 as is_not_new  from ur_isp_other a where not exists (select * from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and a.kod_isp_other=t.f2 ) and   a.kod_isp_other in :kod_isp_other_prm   union all  select t.n1 as kod_isp_other,t.n8 as kod_folders,t.d1 as dat_event,t.s1 as name,t.n4 as paid_rvre,t.n6 as paid_astr,t.n7 as paid_sud_izd,t.n2 as paid_onsreal,t.n3 as paid_peni,t.n5 as paid_gp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp_other' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prm )
)
ur_isp_other on ur_isp_other.kod_isp_other = qube.kod_isp_other--\ur_isp_other

order by dat_event DESC--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_isp_other_prim" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_isp_other_prim" key="kod_isp_other_prim" parent-table="ur_isp_other" parent-key="kod_isp_other" is-ms-upd="1">
      <select-text>
--
select ur_isp_other_prim.prim as prim, /*Исполнительные действия*//*string*/
ur_isp_other_prim.date_dept_reduction as date_dept_reduction, /*Дата уменьшения долга по ИП*//*date*/
ur_isp_other_prim.amount as amount, /*Сумма уменьшения долга по ИП*//*number*/
ur_isp_other_prim.reason as reason, /*Основание уменьшения долга по ИП*//*number*/
ur_isp_other_prim.prim2 as prim2, /*Комментарий*//*string*/
reason_x_n.name as reason_x_n, /*Основание уменьшения долга по ИП*//*string*/
ur_isp_other_prim.is_new as is_new, /*number*/
ur_isp_other_prim.is_not_new as is_not_new, /*number*/
ur_isp_other_prim.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
ur_isp_other_prim.kod_isp_other as kod_isp_other/*number*/

from (
--ur_isp_other_prim
select a.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.prim as prim, /*string*/
a.date_dept_reduction as date_dept_reduction, /*date*/
a.amount as amount, /*number*/
a.reason as reason, /*number*/
a.prim2 as prim2, /*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_isp_other_prim
a
--\ur_isp_other_prim
)
ur_isp_other_prim
--\ur_isp_other_prim
left outer join
(
--ur_isp_other_reason
select a.id as id, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ur_isp_other_reason
a
--\ur_isp_other_reason
)
reason_x_n on ur_isp_other_prim.reason = reason_x_n.id--\ur_isp_other_reason
where
ur_isp_other_prim.kod_isp_other = :fk_kod_isp_other 
order by date_dept_reduction DESC--\
</select-text>
      <columns>
        <column name="prim" table="ur_isp_other_prim" type="string" title="Исполнительные действия" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s1" />
        <column name="date_dept_reduction" table="ur_isp_other_prim" type="date" title="Дата уменьшения долга по ИП" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="date_dept_reduction" temp-col-name="d1" />
        <column name="amount" table="ur_isp_other_prim" type="number" title="Сумма уменьшения долга по ИП" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="amount" temp-col-name="n1" />
        <column name="reason" table="ur_isp_other_prim" type="number" title="Основание уменьшения долга по ИП" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="reason" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other_reason.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="id" as="id" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="id" into="n1">a.id as id, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Наименование" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Наименование*//*string*/
</column></select>
                <from>
from <query name="uv_isp_other_reason_list" as="a" path="./a/a" haskeys="1" used="1">(
<select>--uv_isp_other_reason_list
select <column table="a" column="id" type="number" column-mandatory="1" as="id" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="id">a.id as id, /*number*//*key*/
</column><column table="a" column="name" type="string" data-size="250" title="Наименование" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name/*Наименование*//*string*/
</column></select><from>
from <table name="ur_isp_other_reason" as="a" used="1">ur_isp_other_reason
a
--\ur_isp_other_reason
</table></from><where>where
<call function="gt" pth="" type="bool"><column table="a" column="id">a.id</column><text txtype="func"> &gt; </text><const><text>0</text></const></call></where>)
a
--\uv_isp_other_reason_list
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="id" as="id" title="" key="1" thissrc="id">a.id</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="id" as="id" title="" key="1" thissrc="id">a.id</column><text txtype="func"> ) like lower( </text><const><text>:id_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Наименование" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other_reason.xml" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other_reason.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="id_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="id" as="id" title="" key="1" />
                    <column table="a" column="name" as="name" title="Наименование" />
                  </select>
                  <from>
                    <query name="uv_isp_other_reason_list" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="id" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="id" />
                        <useparam name="id_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="id_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="id_filter" type="string">
                  <const>:id_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
          <dep-refresh-cmd>
            <root table="ur_isp_other_prim">
              <params>
                <param name="kod_isp_other_prim_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prim_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select reason_x_n.name as reason_x_n, /*Основание уменьшения долга по ИП*//*string*/
ur_isp_other_prim.kod_isp_other_prim as kod_isp_other_prim/*number*//*key*/

from (
--ur_isp_other_prim
select a.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
a.reason as reason/*number*/

from (select a.kod_isp_other_prim as kod_isp_other_prim,a.reason as reason  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n2 as reason  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
a
--\(select a.kod_isp_other_prim as kod_isp_other_prim,a.reason as reason  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n2 as reason  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
)
ur_isp_other_prim
--\ur_isp_other_prim
left outer join
(
--ur_isp_other_reason
select a.id as id, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ur_isp_other_reason
a
--\ur_isp_other_reason
)
reason_x_n on ur_isp_other_prim.reason = reason_x_n.id--\ur_isp_other_reason
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="reason_x_n" table="ur_isp_other_prim" />
          </dependants>
        </column>
        <column name="prim2" table="ur_isp_other_prim" type="string" title="Комментарий" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim2" temp-col-name="s2" />
        <column name="reason_x_n" table="ur_isp_other_prim.reason" type="string" title="Основание уменьшения долга по ИП" text-source-for="reason" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_other_prim_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_other_prim_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select reason_x_n.name as reason_x_n, /*Основание уменьшения долга по ИП*//*string*/
ur_isp_other_prim.kod_isp_other_prim as kod_isp_other_prim/*number*//*key*/

from (
--ur_isp_other_prim
select a.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
a.reason as reason/*number*/

from (select a.kod_isp_other_prim as kod_isp_other_prim,a.reason as reason  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n2 as reason  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
a
--\(select a.kod_isp_other_prim as kod_isp_other_prim,a.reason as reason  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n2 as reason  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
)
ur_isp_other_prim
--\ur_isp_other_prim
left outer join
(
--ur_isp_other_reason
select a.id as id, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ur_isp_other_reason
a
--\ur_isp_other_reason
)
reason_x_n on ur_isp_other_prim.reason = reason_x_n.id--\ur_isp_other_reason
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_isp_other_prim" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_isp_other_prim" type="number" title="" is-user-editable="1" />
        <column name="kod_isp_other_prim" table="ur_isp_other_prim" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_isp_other_prim" temp-col-name="n3" />
        <column name="kod_isp_other" table="ur_isp_other_prim" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_isp_other" temp-col-name="n4">
          <sel-list-compiled>
            <root>
              <query class="1" timestamp="22.09.2023 15:00:01" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_isp_other" as="kod_isp_other" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_isp_other" into="n1">a.kod_isp_other as kod_isp_other, /**//*number*//*key*/
</column><column table="a" column="dat_event" as="dat_event" title="Дата события" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_event" into="d1">a.dat_event as dat_event, /*Дата события*//*date*/
</column><column table="a" column="name" as="name" title="Наименование" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Наименование*//*string*/
</column></select>
                <from>
from <query name="ur_isp_other" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_isp_other
select <column table="a" column="kod_isp_other" type="number" as="kod_isp_other" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_isp_other" used="1">a.kod_isp_other as kod_isp_other, /*number*//*key*/
</column><column table="a" column="dat_event" type="date" title="Дата события" comment="Дата события" as="dat_event" key="0" sourcetable="./a/a" sourcecolumn="dat_event" used="1">a.dat_event as dat_event, /*Дата события*//*date*/
</column><column table="a" column="name" type="string" data-size="30" title="Наименование" comment="Наименование события" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Наименование*//*string*/
</column></select><from>
from <table name="ur_isp_other" as="a" used="1">ur_isp_other
a
--\ur_isp_other
</table></from>)
a
--\ur_isp_other
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_isp_other" as="kod_isp_other" title="" key="1" thissrc="kod_isp_other">a.kod_isp_other</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_isp_other" as="kod_isp_other" title="" key="1" thissrc="kod_isp_other">a.kod_isp_other</column><text txtype="func"> ) like lower( </text><const><text>:kod_isp_other_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_event" as="dat_event" title="Дата события" thissrc="dat_event">a.dat_event</column><text txtype="func"> ) like lower( </text><const><text>:dat_event_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Наименование" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" timestamp="22.09.2023 15:00:01" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other.xml" haskeys="1" as="a">
              <queries>
                <query class="1" timestamp="22.09.2023 15:00:01" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp_other.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_isp_other_filter" type="string" />
                    <param name="dat_event_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_isp_other" as="kod_isp_other" title="" key="1" />
                    <column table="a" column="dat_event" as="dat_event" title="Дата события" />
                    <column table="a" column="name" as="name" title="Наименование" />
                  </select>
                  <from>
                    <query name="ur_isp_other" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_isp_other" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_isp_other" />
                        <useparam name="kod_isp_other_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_event" />
                        <useparam name="dat_event_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_isp_other_filter" />
                    <useparam name="dat_event_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_isp_other_filter" type="string">
                  <const>:kod_isp_other_filter </const>
                </param>
                <param name="dat_event_filter" type="string">
                  <const>:dat_event_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:prim as prim 
,:date_dept_reduction as date_dept_reduction 
,:amount as amount 
,:reason as reason 
,:prim2 as prim2 
,:kod_isp_other_prim as kod_isp_other_prim 
,:kod_isp_other as kod_isp_other 
 
from dual ) 
 
loop 
insert into ur_isp_other_prim 
(prim 
,date_dept_reduction 
,amount 
,reason 
,prim2 
,kod_isp_other_prim 
,kod_isp_other 
) 
 values  
(r.prim 
,r.date_dept_reduction 
,r.amount 
,r.reason 
,r.prim2 
,r.kod_isp_other_prim 
,r.kod_isp_other 
) 
 returning  
kod_isp_other_prim into :kod_isp_other_prim; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_isp_other_prim where kod_isp_other_prim=:kod_isp_other_prim</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_isp_other_prim' 
and 
names=:form_id 
and 
f2=:kod_isp_other_prim; 
if :row_state_id=1  then 
for r in  
 ( select  
:prim as prim 
,:date_dept_reduction as date_dept_reduction 
,:amount as amount 
,:reason as reason 
,:prim2 as prim2 
,:kod_isp_other_prim as kod_isp_other_prim 
,:kod_isp_other as kod_isp_other 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,d1 
,n1 
,n2 
,s2 
,n3 
,n4 
) 
 values  
('ur_isp_other_prim' 
,:form_id 
,:kod_isp_other_prim 
,:row_state_id 
,r.prim 
,r.date_dept_reduction 
,r.amount 
,r.reason 
,r.prim2 
,r.kod_isp_other_prim 
,r.kod_isp_other 
); 
end loop; 
else 
for r in  
 ( select  
:prim as prim 
,:date_dept_reduction as date_dept_reduction 
,:amount as amount 
,:reason as reason 
,:prim2 as prim2 
,:kod_isp_other_prim as kod_isp_other_prim 
,:kod_isp_other as kod_isp_other 
,a.u_m 
,a.d_m 
 
from ur_isp_other_prim a  where kod_isp_other_prim=:kod_isp_other_prim) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,d1 
,n1 
,n2 
,s2 
,n3 
,n4 
,s3 
,d2 
) 
 values  
('ur_isp_other_prim' 
,:form_id 
,:kod_isp_other_prim 
,:row_state_id 
,r.prim 
,r.date_dept_reduction 
,r.amount 
,r.reason 
,r.prim2 
,r.kod_isp_other_prim 
,r.kod_isp_other 
,r.u_m 
,r.d_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_isp_other_prim' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_isp_other_prim set  
(prim 
,date_dept_reduction 
,amount 
,reason 
,prim2 
,kod_isp_other_prim 
,kod_isp_other 
) 
= 
 ( select  
:prim as prim 
,:date_dept_reduction as date_dept_reduction 
,:amount as amount 
,:reason as reason 
,:prim2 as prim2 
,:kod_isp_other_prim as kod_isp_other_prim 
,:kod_isp_other as kod_isp_other 
 
from dual ) 
 
where 
kod_isp_other_prim=:kod_isp_other_prim 
;
end;
</update-text>
      <scheme>
        <table name="ur_isp_other_prim" as="ur_isp_other_prim">
          <columns>
            <column name="prim" type="string" title="Исполнительные действия" />
            <column name="date_dept_reduction" type="date" title="Дата уменьшения долга по ИП" />
            <column name="amount" type="number" title="Сумма уменьшения долга по ИП" />
            <column name="reason" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim2" type="string" title="Комментарий" />
            <column name="reason_x_n" type="string" title="Основание уменьшения долга по ИП" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp_other_prim" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp_other" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="prim" type="string" title="Исполнительные действия" />
            <column name="date_dept_reduction" type="date" title="Дата уменьшения долга по ИП" />
            <column name="amount" type="number" title="Сумма уменьшения долга по ИП" />
            <column name="reason_x_n" type="string" title="Основание уменьшения долга по ИП" />
            <column name="reason" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim2" type="string" title="Комментарий" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp_other_prim" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp_other" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_isp_other_prim_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_isp_other_prim_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_isp_other_prim.prim as prim, /*Исполнительные действия*//*string*/
ur_isp_other_prim.date_dept_reduction as date_dept_reduction, /*Дата уменьшения долга по ИП*//*date*/
ur_isp_other_prim.amount as amount, /*Сумма уменьшения долга по ИП*//*number*/
ur_isp_other_prim.reason as reason, /*Основание уменьшения долга по ИП*//*number*/
ur_isp_other_prim.prim2 as prim2, /*Комментарий*//*string*/
reason_x_n.name as reason_x_n, /*Основание уменьшения долга по ИП*//*string*/
ur_isp_other_prim.is_new as is_new, /*number*/
ur_isp_other_prim.is_not_new as is_not_new, /*number*/
ur_isp_other_prim.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
ur_isp_other_prim.kod_isp_other as kod_isp_other/*number*/

from (
--ur_isp_other_prim
select a.kod_isp_other_prim as kod_isp_other_prim, /*number*//*key*/
a.kod_isp_other as kod_isp_other, /*number*/
a.prim as prim, /*string*/
a.date_dept_reduction as date_dept_reduction, /*date*/
a.amount as amount, /*number*/
a.reason as reason, /*number*/
a.prim2 as prim2, /*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_isp_other_prim as kod_isp_other_prim,a.kod_isp_other as kod_isp_other,a.prim as prim,a.date_dept_reduction as date_dept_reduction,a.amount as amount,a.reason as reason,a.prim2 as prim2,0 as is_new,1 as is_not_new  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n4 as kod_isp_other,t.s1 as prim,t.d1 as date_dept_reduction,t.n1 as amount,t.n2 as reason,t.s2 as prim2,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
a
--\(select a.kod_isp_other_prim as kod_isp_other_prim,a.kod_isp_other as kod_isp_other,a.prim as prim,a.date_dept_reduction as date_dept_reduction,a.amount as amount,a.reason as reason,a.prim2 as prim2,0 as is_new,1 as is_not_new  from ur_isp_other_prim a where not exists (select * from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and a.kod_isp_other_prim=t.f2 ) and   a.kod_isp_other_prim in :kod_isp_other_prim_prm   union all  select t.n3 as kod_isp_other_prim,t.n4 as kod_isp_other,t.s1 as prim,t.d1 as date_dept_reduction,t.n1 as amount,t.n2 as reason,t.s2 as prim2,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp_other_prim' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_other_prim_prm )
)
ur_isp_other_prim
--\ur_isp_other_prim
left outer join
(
--ur_isp_other_reason
select a.id as id, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ur_isp_other_reason
a
--\ur_isp_other_reason
)
reason_x_n on ur_isp_other_prim.reason = reason_x_n.id--\ur_isp_other_reason

order by date_dept_reduction DESC--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>