<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_isp_list" timestamp="28.12.2023 14:56:39" title="Выбор исполнительного листа" form-size="900;539" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_folders_isp_list.xml" elid="277" ord="277" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Условия поиска" id="17485455">
      <field id="33394184" name="kod_abon_type" controlType="UIList" title="Тип абонента" type="number" elid="559" ord="559" leaf="0" lvl="2" pelid="" column-editable="0">
        <listquery>
          <query name="kr_payer_abon_type" />
        </listquery>
        <defaultquery>
          <query name="abon_type_current" />
        </defaultquery>
      </field>
      <field id="25061304" name="dep" controlType="UIList" title="Отделение" type="number" elid="542" ord="542" leaf="0" lvl="2" pelid="" column-editable="kr_dep_is_multi">
        <listquery>
          <query name="kr_dep" />
        </listquery>
        <defaultquery>
          <query name="kr_dep_current" />
        </defaultquery>
      </field>
      <field id="53180726" name="prizn_arch_folder" controlType="UIList" title="Статус папки" type="number" elid="520" ord="520" leaf="0" lvl="2" pelid="">
        <listquery>
          <query name="prizn_arch_folder" />
        </listquery>
        <defaultquery exclude="1">
          <query name="prizn_arch_folder_act" />
        </defaultquery>
      </field>
      <field id="6224" controlType="UIText" type="string" elid="389" ord="389" leaf="1" lvl="2" pelid="" name="kodp" title="Код абонента" />
      <field id="329914" controlType="UIText" type="string" elid="389" ord="389" leaf="1" lvl="2" pelid="" title="Номер исполнительного листа" name="num_il" />
    </fieldgroup>
    <grid table="kod_isp" show-toolbar="1" show-checkbox="1" multi-select="0" id="30103720">
      <toolbar id="2610700">
        <uicommand button-type="grid-delete" column-visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="367" ord="367" leaf="1" lvl="2" pelid="" title="" id="54313897" />
        <uicommand button-type="grid-save" column-visible="0" name="grid-save" control-name="ButtonCommit" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="365" ord="365" leaf="1" lvl="2" pelid="" title="" id="60064257" />
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="364" ord="364" leaf="1" lvl="2" pelid="" title="" id="29289065" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="8816582" />
        <uicommand button-type="custom-ok" action-type="accept-selection" name="custom-ok" icon="Ok_24" title="Ок" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="381" ord="381" leaf="1" lvl="2" pelid="" id="64625712" />
      </toolbar>
      <columns id="51754208">
        <field table="kod_isp" name="kod_isp" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="4149381" />
        <field table="kod_isp" name="sname" title="Отделение" controlType="UIText" rows-limit="100" id="45778108" />
        <field table="kod_isp" name="kod_emp" title="Юрист" controlType="UICombo" rows-limit="100" id="10124670" />
        <field table="kod_isp" name="nump" title="Код абонента" controlType="UIText" rows-limit="100" id="53148734" />
        <field table="kod_isp" name="name" title="Наименование абонента" controlType="UIText" rows-limit="100" id="44681412" />
        <field table="kod_isp" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="16510628" />
        <field table="kod_isp" name="num_reg" title="Номер исп. листа" controlType="UIText" rows-limit="100" id="6131398" />
        <field table="kod_isp" name="dolg_on_il" title="Задолженность на дату выдачи исп. листа" controlType="UIText" edit-mask="N2" rows-limit="100" id="43230432" />
        <field table="kod_isp" name="is_active" title="Статус папки" controlType="UICombo" rows-limit="100" id="34349302" />
      </columns>
      <menu id="42955158">
        <uicommand object="a" name="form_ur_foldres_simple" title="Открыть (пертензии)" control="pretenz" id="58618502" />
        <uicommand object="a" name="form_ur_foldres_simple" title="Открыть (иски)" control="mat" id="19772867" />
        <uicommand title="Карточка абонента" id="41329034" />
      </menu>
      <events id="66410653">
        <useaction event-name="double-click" action-type="accept-selection" id="62030870" />
      </events>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="number" name="kod_abon_type" parname="kod_abon_type" title="Тип абонента" ColumnEditable="0" />
      <field type="number" name="dep" parname="dep" title="Отделение" ColumnEditable="kr_dep_is_multi" />
      <field type="number" name="prizn_arch_folder" parname="prizn_arch_folder" title="Статус папки" />
      <field type="string" name="kodp" parname="kodp" title="Код абонента" />
      <field type="string" name="num_il" parname="num_il" title="Номер исполнительного листа" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="kod_isp_has_changes" parname="kod_isp_has_changes" />
    </fields>
    <table name="kod_isp" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_isp" key="kod_isp" is-ms-upd="1" is-top="1" key-dimension="kod_isp">
      <select-text>
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_emp as kod_emp, /*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
qube.dolg_on_il1 as dolg_on_il, /*Задолженность на дату выдачи исп. листа*//*number*/
a.is_active as is_active, /*Статус папки*//*number*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
kod_isp.is_new as is_new, /*number*/
kod_isp.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  as dolg_on_il1, /*Задолженность на дату выдачи исп. листа*//*number*/
sum(qube.ur_folders_isp_count1)  as ur_folders_isp_count1/*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_count1 as ur_folders_isp_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_count1 as ur_folders_isp_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_folders_isp_count1)  as ur_folders_isp_count1/*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null )  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_folders_isp_a_d.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_a_d.cnt as ur_folders_isp_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
1 as cnt/*number*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
ur_folders_isp_a_d
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null ) )
--\
union all
(
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_count1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  {  and (a.is_active in :prizn_arch_folder )  }  {  and (kodp.nump = :kodp )  }  {  and (kod_isp.num_reg = :num_il )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (kod_isp.kod_isp is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (qube.ur_folders_isp_count1 is null ) --\
</select-text>
      <columns>
        <column name="kod_isp" table="kod_isp" type="number" title="" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n1" />
        <column name="sname" table="kod_podr" type="string" title="Отделение" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp" table="a" type="number" title="Юрист" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.kod_emp as kod_emp, /*number*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="nump" table="kodp" type="string" title="Код абонента" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.nump as nump, /*Код абонента*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name" table="kodp" type="string" title="Наименование абонента" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.name as name, /*Наименование абонента*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kr_dog_name" table="kod_isp" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
where
kod_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="num_reg" table="kod_isp" type="string" title="Номер исп. листа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s1" />
        <column name="dolg_on_il" table="kod_isp" type="number" title="Задолженность на дату выдачи исп. листа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il1 as dolg_on_il, /*Задолженность на дату выдачи исп. листа*//*number*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  as dolg_on_il1/*Задолженность на дату выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
null as ur_dp_sum_v1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
where
kod_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_active" table="a" type="number" title="Статус папки" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="a.kod_emp" type="string" title="Юрист" text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_active_x_n" table="a.is_active" type="string" title="Статус папки" text-source-for="is_active" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_folders as kod_folders  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n5 as kod_folders  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="kod_isp" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="kod_isp" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_isp as kod_isp 
,:num_reg as num_reg 
 
from dual ) 
 
loop 
insert into ur_isp 
(kod_isp 
,num_reg 
) 
 values  
(r.kod_isp 
,r.num_reg 
) 
 returning  
kod_isp into :kod_isp; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_isp where kod_isp=:kod_isp</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='kod_isp' 
and 
names=:form_id 
and 
f2=:kod_isp; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_isp as kod_isp 
,:num_reg as num_reg 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
) 
 values  
('kod_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.kod_isp 
,r.num_reg 
); 
end loop; 
else 
for r in  
 ( select  
:kod_isp as kod_isp 
,:num_reg as num_reg 
,a.dat_doc 
,a.gp_es 
,a.u_m 
,a.d_m 
,a.kod_folders 
,a.gp_otv 
,a.dat_post 
,a.dat_function 
,a.dat_srok 
,a.kod_emp 
,a.kod_hist_mat 
,a.kodp 
,a.opl_proc 
,a.opl_gpotv 
,a.ogr 
,a.kod_delo 
,a.osnr 
,a.peni 
,a.shtraf 
,a.dat_present 
,a.sum_present 
,a.prim 
,a.kod_isp_type 
,a.kod_info_potr 
,a.opl_ogr 
,a.kod_scan 
,a.dat_arh 
,a.work_done 
,a.dat_post_upr 
,a.incoming_number 
,a.number_sz 
,a.date_sz 
,a.opl_sud_izd_vvod 
,a.opl_astrent_vvod 
,a.opl_gp_vvod 
,a.opl_ogr_vvod 
,a.opl_peni_vvod 
,a.opl_osnreal_vvod 
 
from ur_isp a  where kod_isp=:kod_isp) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,d2 
,n6 
,s4 
,d6 
,n5 
,n7 
,d3 
,d1 
,d4 
,n3 
,n2 
,n8 
,n9 
,n10 
,n11 
,n12 
,n13 
,n14 
,n15 
,d7 
,n16 
,s2 
,n17 
,n18 
,n19 
,n4 
,d5 
,s3 
,d8 
,s5 
,s6 
,d9 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
) 
 values  
('kod_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.kod_isp 
,r.num_reg 
,r.dat_doc 
,r.gp_es 
,r.u_m 
,r.d_m 
,r.kod_folders 
,r.gp_otv 
,r.dat_post 
,r.dat_function 
,r.dat_srok 
,r.kod_emp 
,r.kod_hist_mat 
,r.kodp 
,r.opl_proc 
,r.opl_gpotv 
,r.ogr 
,r.kod_delo 
,r.osnr 
,r.peni 
,r.shtraf 
,r.dat_present 
,r.sum_present 
,r.prim 
,r.kod_isp_type 
,r.kod_info_potr 
,r.opl_ogr 
,r.kod_scan 
,r.dat_arh 
,r.work_done 
,r.dat_post_upr 
,r.incoming_number 
,r.number_sz 
,r.date_sz 
,r.opl_sud_izd_vvod 
,r.opl_astrent_vvod 
,r.opl_gp_vvod 
,r.opl_ogr_vvod 
,r.opl_peni_vvod 
,r.opl_osnreal_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='kod_isp' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_isp set  
(kod_isp 
,num_reg 
) 
= 
 ( select  
:kod_isp as kod_isp 
,:num_reg as num_reg 
 
from dual ) 
 
where 
kod_isp=:kod_isp 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_pir_sync_dat_arh">
          <column table="this" column="kod_isp" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_isp" as="kod_isp">
          <columns>
            <column name="kod_isp" type="number" title="" visible="0" />
            <column name="sname" type="string" title="Отделение" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="dolg_on_il" type="number" title="Задолженность на дату выдачи исп. листа" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp_x_n" type="string" title="Юрист" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_isp" type="number" title="" visible="0" />
            <column name="sname" type="string" title="Отделение" />
            <column name="kod_emp_x_n" type="string" title="Юрист" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="dolg_on_il" type="number" title="Задолженность на дату выдачи исп. листа" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_isp_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_isp_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_emp as kod_emp, /*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
qube.dolg_on_il1 as dolg_on_il, /*Задолженность на дату выдачи исп. листа*//*number*/
a.is_active as is_active, /*Статус папки*//*number*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
kod_isp.is_new as is_new, /*number*/
kod_isp.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  as dolg_on_il1/*Задолженность на дату выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_dp_sum_v1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select kod_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_dp_sum_v1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp
--\ur_isp
where
kod_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
kod_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_isp as kod_isp,a.num_reg as num_reg,a.kod_folders as kod_folders,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,t.n5 as kod_folders,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.num_reg as num_reg,a.kod_folders as kod_folders,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,t.n5 as kod_folders,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='kod_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_isp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>