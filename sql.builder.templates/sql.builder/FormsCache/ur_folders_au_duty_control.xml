<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_au_duty_control" title="Контроль обязанностей арб. управляющего" with-behavior="0" timestamp="11.11.2024 17:00:00" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\Банкротство\ur_folders_au_duty_control.xml" elid="212" ord="212" leaf="0" lvl="2" pelid="">
    <grid table="b" show-toolbar="1" id="62108967">
      <columns id="24430074">
        <band title="Анализ наличия/ отсутствия признаков преднамеренного и фиктивного банкротства" id="56686942">
          <field table="b" name="kod_an_done_bnk" title="Проведен" width="100" controlType="UICombo" rows-limit="100" id="58807427">
            <listquery id="27950779">
              <query name="us_au_duty_control_an_done" id="26870551" />
            </listquery>
          </field>
          <field table="b" name="result_an_done_bnk" title="Результат" width="130" controlType="UITextEx" rows-limit="100" id="5131284" />
        </band>
        <band title="Закрытие счетов" id="58552319">
          <field table="b" name="kod_work_done_close_acc" title="Работа проведена" width="100" controlType="UICombo" rows-limit="100" id="42463251">
            <listquery id="16441420">
              <query name="us_au_duty_control_work_done" id="59325866" />
            </listquery>
          </field>
          <field table="b" name="comment_close_acc" title="Комментарий" width="130" controlType="UITextEx" rows-limit="100" id="3009604" />
        </band>
        <band title="Увольнение работников" id="60643595">
          <field table="b" name="fired_in_time" title="Уволены в срок" controlType="UICombo" rows-limit="100" id="51834855" />
          <field table="b" name="reason_working" title="Продолжают деятельность, причина" width="130" controlType="UITextEx" rows-limit="100" id="36821612" />
        </band>
        <band title="Оспаривание сделок должника" id="27454638">
          <field table="b" name="dat_sud_spor_sdel" title="Дата подачи в суд заявления" width="81" controlType="UIDate" rows-limit="100" id="3359443" />
          <field table="b" name="comment_sud_spor_sdel" title="Комментарий (наличие оснований, дата СА)" width="130" controlType="UITextEx" rows-limit="100" id="10592383" />
        </band>
        <band title="Привлечение к субсидиарной ответственности" id="27894571">
          <field table="b" name="kod_an_done_subs_resp" title="Анализ проведен" width="100" controlType="UICombo" rows-limit="100" id="51898334">
            <listquery id="25925734">
              <query name="us_au_duty_control_an_done" id="49736381" />
            </listquery>
          </field>
          <field table="b" name="dat_sud_subs_resp" title="Дата подачи в суд заявления" width="81" controlType="UIDate" rows-limit="100" id="56322147" />
          <field table="b" name="comment_sud_subs_resp" title="Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)" width="130" controlType="UITextEx" rows-limit="100" id="705368" />
        </band>
        <field table="b" name="zayav_others" title="Заявления иного характера" width="130" controlType="UITextEx" rows-limit="100" id="2826740" />
        <field table="b" name="objal_au_actions" title="Обжалование действий/ бездействия арб. управляющего" width="130" controlType="UITextEx" rows-limit="100" id="4781065" />
        <field table="b" name="prim" title="Примечание" width="200" controlType="UITextEx" rows-limit="100" id="11275882" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="kod_folders" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number" />
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
      <field type="string" name="b_has_changes" parname="b_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a
--\ur_folders
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</select-text>
      <columns>
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="a" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="a" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_folders 
) 
 values  
(r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_folders as kod_folders 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.vvod 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n3 
,n4 
,n5 
,n6 
,d1 
,n7 
,s1 
,d3 
,n8 
,n9 
,n10 
,n2 
,d2 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.vvod 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_folders 
) 
= 
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="a">
          <columns>
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="b" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_au_duty_control" key="kod_au_duty_control" parent-table="a" parent-key="kod_folders" is-ms-upd="1">
      <select-text>
--
select b.kod_an_done_bnk as kod_an_done_bnk, /*Проведен*//*number*/
b.result_an_done_bnk as result_an_done_bnk, /*Результат*//*string*/
b.kod_work_done_close_acc as kod_work_done_close_acc, /*Работа проведена*//*number*/
b.comment_close_acc as comment_close_acc, /*Комментарий*//*string*/
b.fired_in_time as fired_in_time, /*Уволены в срок*//*number*/
b.reason_working as reason_working, /*Продолжают деятельность, причина*//*string*/
b.dat_sud_spor_sdel as dat_sud_spor_sdel, /*Дата подачи в суд заявления*//*date*/
b.comment_sud_spor_sdel as comment_sud_spor_sdel, /*Комментарий (наличие оснований, дата СА)*//*string*/
b.kod_an_done_subs_resp as kod_an_done_subs_resp, /*Анализ проведен*//*number*/
b.dat_sud_subs_resp as dat_sud_subs_resp, /*Дата подачи в суд заявления*//*date*/
b.comment_sud_subs_resp as comment_sud_subs_resp, /*Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)*//*string*/
b.zayav_others as zayav_others, /*Заявления иного характера*//*string*/
b.objal_au_actions as objal_au_actions, /*Обжалование действий/ бездействия арб. управляющего*//*string*/
b.prim as prim, /*Примечание*//*string*/
kod_an_done_bnk_x_n.name as kod_an_done_bnk_x_n, /*Проведен*//*string*/
kod_work_done_close_acc_x_n.name as kod_work_done_close_acc_x_n, /*Работа проведена*//*string*/
fired_in_time_x_n.name as fired_in_time_x_n, /*Уволены в срок*//*string*/
kod_an_done_subs_resp_x_n.name as kod_an_done_subs_resp_x_n, /*Анализ проведен*//*string*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
b.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
b.kod_folders as kod_folders/*number*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_an_done_bnk as kod_an_done_bnk, /*number*/
a.result_an_done_bnk as result_an_done_bnk, /*string*/
a.kod_work_done_close_acc as kod_work_done_close_acc, /*number*/
a.comment_close_acc as comment_close_acc, /*string*/
a.fired_in_time as fired_in_time, /*number*/
a.reason_working as reason_working, /*string*/
a.dat_sud_spor_sdel as dat_sud_spor_sdel, /*date*/
a.comment_sud_spor_sdel as comment_sud_spor_sdel, /*string*/
a.kod_an_done_subs_resp as kod_an_done_subs_resp, /*number*/
a.dat_sud_subs_resp as dat_sud_subs_resp, /*date*/
a.comment_sud_subs_resp as comment_sud_subs_resp, /*string*/
a.zayav_others as zayav_others, /*string*/
a.objal_au_actions as objal_au_actions, /*string*/
a.prim as prim, /*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_au_duty_control
a
--\ur_au_duty_control
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_subs_resp_x_n on b.kod_an_done_subs_resp = kod_an_done_subs_resp_x_n.kod--\us_au_duty_control_an_done
left outer join
(
--ur_yn_list
select u.val as kod, /*number*//*key*/
u.name as name/*Выбор*//*string*/

from (
(
(
--true
select 1 as val, /*number*//*key*/
'Да' as name/*string*/

from dual
dual
--\dual
)
--\true
union all
(
--false
select 0 as val, /*number*//*key*/
'Нет' as name/*string*/

from dual
dual
--\dual
)
--\false
)
--\
)
u
--\
)
fired_in_time_x_n on b.fired_in_time = fired_in_time_x_n.kod--\ur_yn_list
left outer join
(
--us_au_duty_control_work_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Работа проведена*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведена' as name/*Работа проведена*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведена'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_work_done_close_acc_x_n on b.kod_work_done_close_acc = kod_work_done_close_acc_x_n.kod--\us_au_duty_control_work_done
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_bnk_x_n on b.kod_an_done_bnk = kod_an_done_bnk_x_n.kod--\us_au_duty_control_an_done
where
b.kod_folders = :fk_kod_folders --\
</select-text>
      <columns>
        <column name="kod_an_done_bnk" table="b" type="number" title="Проведен" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_an_done_bnk" temp-col-name="n1">
          <sel-list-compiled>
            <root>
              <query title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod" as="kod" title="" key="1" used="1" type="number" into="n1">a.kod as kod, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Анализ проведен" key="0" used="1" type="string" into="s1">a.name as name/*Анализ проведен*//*string*/
</column></select>
                <from>
from <query name="us_au_duty_control_an_done" as="a" path="./a/a" used="1">(
<select>--us_au_duty_control_an_done
select <column table="u" column="kod" as="kod" type="number" key="1" used="1">u.kod as kod, /*number*//*key*/
</column><column table="u" column="name" as="name" type="string" title="Анализ проведен" used="1" key="0">u.name as name/*Анализ проведен*//*string*/
</column></select><from>
from <query as="u" used="1" path="./a/a/u">(
<query used="1" path="./a/a/u">(
<query haskeys="1" union="1" used="1" path="./a/a/u">(
<select>--
select <const type="number" as="kod" key="1" used="1"><text>0</text> as kod, /*number*//*key*/
</const><const type="string" as="name" title="Анализ проведен" used="1" key="0"><text>'Не проведен'</text> as name/*Анализ проведен*//*string*/
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query><query union="1" used="1" path="./a/a/u">union all
(
<select>--
select <const used="1" key="1"><text>1</text>, /*key*/
</const><const used="1" key="0"><text>'Проведен'</text>
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query>)
--\
</query>)
u
--\
</query></from>)
a
--\us_au_duty_control_an_done
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> ) like lower( </text><const><text>:kod_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Анализ проведен" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod" as="kod" title="" key="1" />
                    <column table="a" column="name" as="name" title="Анализ проведен" />
                  </select>
                  <from>
                    <query name="us_au_duty_control_an_done" as="a" title="Анализ проведен" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="kod_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_filter" type="string">
                  <const>:kod_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
          <dep-refresh-cmd>
            <root table="b">
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_an_done_bnk_x_n.name as kod_an_done_bnk_x_n, /*Проведен*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_an_done_bnk as kod_an_done_bnk/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_bnk as kod_an_done_bnk  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n1 as kod_an_done_bnk  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_bnk as kod_an_done_bnk  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n1 as kod_an_done_bnk  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_bnk_x_n on b.kod_an_done_bnk = kod_an_done_bnk_x_n.kod--\us_au_duty_control_an_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_an_done_bnk_x_n" table="b" />
          </dependants>
        </column>
        <column name="result_an_done_bnk" table="b" type="string" title="Результат" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="result_an_done_bnk" temp-col-name="s1" />
        <column name="kod_work_done_close_acc" table="b" type="number" title="Работа проведена" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_work_done_close_acc" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query title="Работа проведена" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2544" ord="2544" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod" as="kod" title="" key="1" used="1" type="number" into="n1">a.kod as kod, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Работа проведена" key="0" used="1" type="string" into="s1">a.name as name/*Работа проведена*//*string*/
</column></select>
                <from>
from <query name="us_au_duty_control_work_done" as="a" path="./a/a" used="1">(
<select>--us_au_duty_control_work_done
select <column table="u" column="kod" as="kod" type="number" key="1" used="1">u.kod as kod, /*number*//*key*/
</column><column table="u" column="name" as="name" type="string" title="Работа проведена" used="1" key="0">u.name as name/*Работа проведена*//*string*/
</column></select><from>
from <query as="u" used="1" path="./a/a/u">(
<query used="1" path="./a/a/u">(
<query haskeys="1" union="1" used="1" path="./a/a/u">(
<select>--
select <const type="number" as="kod" key="1" used="1"><text>0</text> as kod, /*number*//*key*/
</const><const type="string" as="name" title="Работа проведена" used="1" key="0"><text>'Не проведена'</text> as name/*Работа проведена*//*string*/
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query><query union="1" used="1" path="./a/a/u">union all
(
<select>--
select <const used="1" key="1"><text>1</text>, /*key*/
</const><const used="1" key="0"><text>'Проведена'</text>
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query>)
--\
</query>)
u
--\
</query></from>)
a
--\us_au_duty_control_work_done
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> ) like lower( </text><const><text>:kod_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Работа проведена" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Работа проведена" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2544" ord="2544" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Работа проведена" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2544" ord="2544" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod" as="kod" title="" key="1" />
                    <column table="a" column="name" as="name" title="Работа проведена" />
                  </select>
                  <from>
                    <query name="us_au_duty_control_work_done" as="a" title="Работа проведена" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="kod_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_filter" type="string">
                  <const>:kod_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
          <dep-refresh-cmd>
            <root table="b">
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_work_done_close_acc_x_n.name as kod_work_done_close_acc_x_n, /*Работа проведена*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_work_done_close_acc as kod_work_done_close_acc/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_work_done_close_acc as kod_work_done_close_acc  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n2 as kod_work_done_close_acc  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_work_done_close_acc as kod_work_done_close_acc  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n2 as kod_work_done_close_acc  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_work_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Работа проведена*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведена' as name/*Работа проведена*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведена'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_work_done_close_acc_x_n on b.kod_work_done_close_acc = kod_work_done_close_acc_x_n.kod--\us_au_duty_control_work_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_work_done_close_acc_x_n" table="b" />
          </dependants>
        </column>
        <column name="comment_close_acc" table="b" type="string" title="Комментарий" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="comment_close_acc" temp-col-name="s2" />
        <column name="fired_in_time" table="b" type="number" title="Уволены в срок" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="fired_in_time" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query title="Список да/нет" class="1" timestamp="07.03.2023 08:14:50" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_small_dicts_combo.xml" elid="3059" ord="3059" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod" as="kod" title="" key="1" used="1" type="number" into="n1">a.kod as kod, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Выбор" key="0" used="1" type="string" into="s1">a.name as name/*Выбор*//*string*/
</column></select>
                <from>
from <query name="ur_yn_list" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_yn_list
select <column table="u" column="val" as="kod" key="1" type="number" used="1">u.val as kod, /*number*//*key*/
</column><column table="u" column="name" title="Выбор" type="string" as="name" key="0" used="1">u.name as name/*Выбор*//*string*/
</column></select><from>
from <query as="u" path="./a/a/u" used="1">(
<query path="./a/a/u" used="1">(
<query name="true" union="1" path="./a/a/u" haskeys="1" used="1">(
<select>--true
select <const type="number" as="val" key="1" used="1"><text>1</text> as val, /*number*//*key*/
</const><const type="string" as="name" used="1" key="0"><text>'Да'</text> as name/*string*/
</const></select><from>
from <table name="dual" as="dual" used="1">dual
dual
--\dual
</table></from>)
--\true
</query><query name="false" union="1" path="./a/a/u" haskeys="1" used="1">union all
(
<select>--false
select <const type="number" as="val" key="1" used="1"><text>0</text> as val, /*number*//*key*/
</const><const type="string" as="name" used="1" key="0"><text>'Нет'</text> as name/*string*/
</const></select><from>
from <table name="dual" as="dual" used="1">dual
dual
--\dual
</table></from>)
--\false
</query>)
--\
</query>)
u
--\
</query></from>)
a
--\ur_yn_list
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> ) like lower( </text><const><text>:kod_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Выбор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Список да/нет" class="1" timestamp="07.03.2023 08:14:50" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_small_dicts_combo.xml" elid="3059" ord="3059" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Список да/нет" class="1" timestamp="07.03.2023 08:14:50" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_small_dicts_combo.xml" elid="3059" ord="3059" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod" as="kod" title="" key="1" />
                    <column table="a" column="name" as="name" title="Выбор" />
                  </select>
                  <from>
                    <query name="ur_yn_list" as="a" title="Список да/нет" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="kod_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_filter" type="string">
                  <const>:kod_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="b">
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select fired_in_time_x_n.name as fired_in_time_x_n, /*Уволены в срок*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.fired_in_time as fired_in_time/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.fired_in_time as fired_in_time  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n3 as fired_in_time  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.fired_in_time as fired_in_time  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n3 as fired_in_time  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--ur_yn_list
select u.val as kod, /*number*//*key*/
u.name as name/*Выбор*//*string*/

from (
(
(
--true
select 1 as val, /*number*//*key*/
'Да' as name/*string*/

from dual
dual
--\dual
)
--\true
union all
(
--false
select 0 as val, /*number*//*key*/
'Нет' as name/*string*/

from dual
dual
--\dual
)
--\false
)
--\
)
u
--\
)
fired_in_time_x_n on b.fired_in_time = fired_in_time_x_n.kod--\ur_yn_list
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="fired_in_time_x_n" table="b" />
          </dependants>
        </column>
        <column name="reason_working" table="b" type="string" title="Продолжают деятельность, причина" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="reason_working" temp-col-name="s3" />
        <column name="dat_sud_spor_sdel" table="b" type="date" title="Дата подачи в суд заявления" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_sud_spor_sdel" temp-col-name="d1" />
        <column name="comment_sud_spor_sdel" table="b" type="string" title="Комментарий (наличие оснований, дата СА)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="comment_sud_spor_sdel" temp-col-name="s4" />
        <column name="kod_an_done_subs_resp" table="b" type="number" title="Анализ проведен" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_an_done_subs_resp" temp-col-name="n4">
          <sel-list-compiled>
            <root>
              <query title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod" as="kod" title="" key="1" used="1" type="number" into="n1">a.kod as kod, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Анализ проведен" key="0" used="1" type="string" into="s1">a.name as name/*Анализ проведен*//*string*/
</column></select>
                <from>
from <query name="us_au_duty_control_an_done" as="a" path="./a/a" used="1">(
<select>--us_au_duty_control_an_done
select <column table="u" column="kod" as="kod" type="number" key="1" used="1">u.kod as kod, /*number*//*key*/
</column><column table="u" column="name" as="name" type="string" title="Анализ проведен" used="1" key="0">u.name as name/*Анализ проведен*//*string*/
</column></select><from>
from <query as="u" used="1" path="./a/a/u">(
<query used="1" path="./a/a/u">(
<query haskeys="1" union="1" used="1" path="./a/a/u">(
<select>--
select <const type="number" as="kod" key="1" used="1"><text>0</text> as kod, /*number*//*key*/
</const><const type="string" as="name" title="Анализ проведен" used="1" key="0"><text>'Не проведен'</text> as name/*Анализ проведен*//*string*/
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query><query union="1" used="1" path="./a/a/u">union all
(
<select>--
select <const used="1" key="1"><text>1</text>, /*key*/
</const><const used="1" key="0"><text>'Проведен'</text>
</const></select><from>
from <table name="dual" used="1">dual

--\dual
</table></from>)
--\
</query>)
--\
</query>)
u
--\
</query></from>)
a
--\us_au_duty_control_an_done
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> ) like lower( </text><const><text>:kod_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Анализ проведен" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Анализ проведен" timestamp="04.12.2023 15:25:00" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_au_duty_control.xml" elid="2543" ord="2543" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod" as="kod" title="" key="1" />
                    <column table="a" column="name" as="name" title="Анализ проведен" />
                  </select>
                  <from>
                    <query name="us_au_duty_control_an_done" as="a" title="Анализ проведен" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="kod_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_filter" type="string">
                  <const>:kod_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
          <dep-refresh-cmd>
            <root table="b">
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_an_done_subs_resp_x_n.name as kod_an_done_subs_resp_x_n, /*Анализ проведен*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_an_done_subs_resp as kod_an_done_subs_resp/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_subs_resp as kod_an_done_subs_resp  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n4 as kod_an_done_subs_resp  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_subs_resp as kod_an_done_subs_resp  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n4 as kod_an_done_subs_resp  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_subs_resp_x_n on b.kod_an_done_subs_resp = kod_an_done_subs_resp_x_n.kod--\us_au_duty_control_an_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_an_done_subs_resp_x_n" table="b" />
          </dependants>
        </column>
        <column name="dat_sud_subs_resp" table="b" type="date" title="Дата подачи в суд заявления" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_sud_subs_resp" temp-col-name="d2" />
        <column name="comment_sud_subs_resp" table="b" type="string" title="Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="comment_sud_subs_resp" temp-col-name="s5" />
        <column name="zayav_others" table="b" type="string" title="Заявления иного характера" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="zayav_others" temp-col-name="s6" />
        <column name="objal_au_actions" table="b" type="string" title="Обжалование действий/ бездействия арб. управляющего" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="objal_au_actions" temp-col-name="s7" />
        <column name="prim" table="b" type="string" title="Примечание" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s8" />
        <column name="kod_an_done_bnk_x_n" table="b.kod_an_done_bnk" type="string" title="Проведен" text-source-for="kod_an_done_bnk" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_an_done_bnk_x_n.name as kod_an_done_bnk_x_n, /*Проведен*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_an_done_bnk as kod_an_done_bnk/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_bnk as kod_an_done_bnk  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n1 as kod_an_done_bnk  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_bnk as kod_an_done_bnk  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n1 as kod_an_done_bnk  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_bnk_x_n on b.kod_an_done_bnk = kod_an_done_bnk_x_n.kod--\us_au_duty_control_an_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_work_done_close_acc_x_n" table="b.kod_work_done_close_acc" type="string" title="Работа проведена" text-source-for="kod_work_done_close_acc" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_work_done_close_acc_x_n.name as kod_work_done_close_acc_x_n, /*Работа проведена*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_work_done_close_acc as kod_work_done_close_acc/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_work_done_close_acc as kod_work_done_close_acc  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n2 as kod_work_done_close_acc  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_work_done_close_acc as kod_work_done_close_acc  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n2 as kod_work_done_close_acc  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_work_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Работа проведена*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведена' as name/*Работа проведена*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведена'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_work_done_close_acc_x_n on b.kod_work_done_close_acc = kod_work_done_close_acc_x_n.kod--\us_au_duty_control_work_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fired_in_time_x_n" table="b.fired_in_time" type="string" title="Уволены в срок" text-source-for="fired_in_time" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select fired_in_time_x_n.name as fired_in_time_x_n, /*Уволены в срок*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.fired_in_time as fired_in_time/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.fired_in_time as fired_in_time  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n3 as fired_in_time  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.fired_in_time as fired_in_time  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n3 as fired_in_time  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--ur_yn_list
select u.val as kod, /*number*//*key*/
u.name as name/*Выбор*//*string*/

from (
(
(
--true
select 1 as val, /*number*//*key*/
'Да' as name/*string*/

from dual
dual
--\dual
)
--\true
union all
(
--false
select 0 as val, /*number*//*key*/
'Нет' as name/*string*/

from dual
dual
--\dual
)
--\false
)
--\
)
u
--\
)
fired_in_time_x_n on b.fired_in_time = fired_in_time_x_n.kod--\ur_yn_list
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_an_done_subs_resp_x_n" table="b.kod_an_done_subs_resp" type="string" title="Анализ проведен" text-source-for="kod_an_done_subs_resp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_au_duty_control_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_au_duty_control_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_an_done_subs_resp_x_n.name as kod_an_done_subs_resp_x_n, /*Анализ проведен*//*string*/
b.kod_au_duty_control as kod_au_duty_control/*number*//*key*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_an_done_subs_resp as kod_an_done_subs_resp/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_subs_resp as kod_an_done_subs_resp  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n4 as kod_an_done_subs_resp  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_an_done_subs_resp as kod_an_done_subs_resp  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n4 as kod_an_done_subs_resp  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_subs_resp_x_n on b.kod_an_done_subs_resp = kod_an_done_subs_resp_x_n.kod--\us_au_duty_control_an_done
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="kod_au_duty_control" table="b" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_au_duty_control" temp-col-name="n5" />
        <column name="kod_folders" table="b" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n6">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="3018" ord="3018" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="3018" ord="3018" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="3018" ord="3018" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_an_done_bnk as kod_an_done_bnk 
,:result_an_done_bnk as result_an_done_bnk 
,:kod_work_done_close_acc as kod_work_done_close_acc 
,:comment_close_acc as comment_close_acc 
,:fired_in_time as fired_in_time 
,:reason_working as reason_working 
,:dat_sud_spor_sdel as dat_sud_spor_sdel 
,:comment_sud_spor_sdel as comment_sud_spor_sdel 
,:kod_an_done_subs_resp as kod_an_done_subs_resp 
,:dat_sud_subs_resp as dat_sud_subs_resp 
,:comment_sud_subs_resp as comment_sud_subs_resp 
,:zayav_others as zayav_others 
,:objal_au_actions as objal_au_actions 
,:prim as prim 
,:kod_au_duty_control as kod_au_duty_control 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_au_duty_control 
(kod_an_done_bnk 
,result_an_done_bnk 
,kod_work_done_close_acc 
,comment_close_acc 
,fired_in_time 
,reason_working 
,dat_sud_spor_sdel 
,comment_sud_spor_sdel 
,kod_an_done_subs_resp 
,dat_sud_subs_resp 
,comment_sud_subs_resp 
,zayav_others 
,objal_au_actions 
,prim 
,kod_au_duty_control 
,kod_folders 
) 
 values  
(r.kod_an_done_bnk 
,r.result_an_done_bnk 
,r.kod_work_done_close_acc 
,r.comment_close_acc 
,r.fired_in_time 
,r.reason_working 
,r.dat_sud_spor_sdel 
,r.comment_sud_spor_sdel 
,r.kod_an_done_subs_resp 
,r.dat_sud_subs_resp 
,r.comment_sud_subs_resp 
,r.zayav_others 
,r.objal_au_actions 
,r.prim 
,r.kod_au_duty_control 
,r.kod_folders 
) 
 returning  
kod_au_duty_control into :kod_au_duty_control; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_au_duty_control where kod_au_duty_control=:kod_au_duty_control</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='b' 
and 
names=:form_id 
and 
f2=:kod_au_duty_control; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_an_done_bnk as kod_an_done_bnk 
,:result_an_done_bnk as result_an_done_bnk 
,:kod_work_done_close_acc as kod_work_done_close_acc 
,:comment_close_acc as comment_close_acc 
,:fired_in_time as fired_in_time 
,:reason_working as reason_working 
,:dat_sud_spor_sdel as dat_sud_spor_sdel 
,:comment_sud_spor_sdel as comment_sud_spor_sdel 
,:kod_an_done_subs_resp as kod_an_done_subs_resp 
,:dat_sud_subs_resp as dat_sud_subs_resp 
,:comment_sud_subs_resp as comment_sud_subs_resp 
,:zayav_others as zayav_others 
,:objal_au_actions as objal_au_actions 
,:prim as prim 
,:kod_au_duty_control as kod_au_duty_control 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,n2 
,s2 
,n3 
,s3 
,d1 
,s4 
,n4 
,d2 
,s5 
,s6 
,s7 
,s8 
,n5 
,n6 
) 
 values  
('b' 
,:form_id 
,:kod_au_duty_control 
,:row_state_id 
,r.kod_an_done_bnk 
,r.result_an_done_bnk 
,r.kod_work_done_close_acc 
,r.comment_close_acc 
,r.fired_in_time 
,r.reason_working 
,r.dat_sud_spor_sdel 
,r.comment_sud_spor_sdel 
,r.kod_an_done_subs_resp 
,r.dat_sud_subs_resp 
,r.comment_sud_subs_resp 
,r.zayav_others 
,r.objal_au_actions 
,r.prim 
,r.kod_au_duty_control 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_an_done_bnk as kod_an_done_bnk 
,:result_an_done_bnk as result_an_done_bnk 
,:kod_work_done_close_acc as kod_work_done_close_acc 
,:comment_close_acc as comment_close_acc 
,:fired_in_time as fired_in_time 
,:reason_working as reason_working 
,:dat_sud_spor_sdel as dat_sud_spor_sdel 
,:comment_sud_spor_sdel as comment_sud_spor_sdel 
,:kod_an_done_subs_resp as kod_an_done_subs_resp 
,:dat_sud_subs_resp as dat_sud_subs_resp 
,:comment_sud_subs_resp as comment_sud_subs_resp 
,:zayav_others as zayav_others 
,:objal_au_actions as objal_au_actions 
,:prim as prim 
,:kod_au_duty_control as kod_au_duty_control 
,:kod_folders as kod_folders 
 
from ur_au_duty_control a  where kod_au_duty_control=:kod_au_duty_control) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,n2 
,s2 
,n3 
,s3 
,d1 
,s4 
,n4 
,d2 
,s5 
,s6 
,s7 
,s8 
,n5 
,n6 
) 
 values  
('b' 
,:form_id 
,:kod_au_duty_control 
,:row_state_id 
,r.kod_an_done_bnk 
,r.result_an_done_bnk 
,r.kod_work_done_close_acc 
,r.comment_close_acc 
,r.fired_in_time 
,r.reason_working 
,r.dat_sud_spor_sdel 
,r.comment_sud_spor_sdel 
,r.kod_an_done_subs_resp 
,r.dat_sud_subs_resp 
,r.comment_sud_subs_resp 
,r.zayav_others 
,r.objal_au_actions 
,r.prim 
,r.kod_au_duty_control 
,r.kod_folders 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='b' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_au_duty_control set  
(kod_an_done_bnk 
,result_an_done_bnk 
,kod_work_done_close_acc 
,comment_close_acc 
,fired_in_time 
,reason_working 
,dat_sud_spor_sdel 
,comment_sud_spor_sdel 
,kod_an_done_subs_resp 
,dat_sud_subs_resp 
,comment_sud_subs_resp 
,zayav_others 
,objal_au_actions 
,prim 
,kod_au_duty_control 
,kod_folders 
) 
= 
 ( select  
:kod_an_done_bnk as kod_an_done_bnk 
,:result_an_done_bnk as result_an_done_bnk 
,:kod_work_done_close_acc as kod_work_done_close_acc 
,:comment_close_acc as comment_close_acc 
,:fired_in_time as fired_in_time 
,:reason_working as reason_working 
,:dat_sud_spor_sdel as dat_sud_spor_sdel 
,:comment_sud_spor_sdel as comment_sud_spor_sdel 
,:kod_an_done_subs_resp as kod_an_done_subs_resp 
,:dat_sud_subs_resp as dat_sud_subs_resp 
,:comment_sud_subs_resp as comment_sud_subs_resp 
,:zayav_others as zayav_others 
,:objal_au_actions as objal_au_actions 
,:prim as prim 
,:kod_au_duty_control as kod_au_duty_control 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_au_duty_control=:kod_au_duty_control 
;
end;
</update-text>
      <scheme>
        <table name="ur_au_duty_control" as="b">
          <columns>
            <column name="kod_an_done_bnk" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="result_an_done_bnk" type="string" title="Результат" />
            <column name="kod_work_done_close_acc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="comment_close_acc" type="string" title="Комментарий" />
            <column name="fired_in_time" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="reason_working" type="string" title="Продолжают деятельность, причина" />
            <column name="dat_sud_spor_sdel" type="date" title="Дата подачи в суд заявления" />
            <column name="comment_sud_spor_sdel" type="string" title="Комментарий (наличие оснований, дата СА)" />
            <column name="kod_an_done_subs_resp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_sud_subs_resp" type="date" title="Дата подачи в суд заявления" />
            <column name="comment_sud_subs_resp" type="string" title="Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)" />
            <column name="zayav_others" type="string" title="Заявления иного характера" />
            <column name="objal_au_actions" type="string" title="Обжалование действий/ бездействия арб. управляющего" />
            <column name="prim" type="string" title="Примечание" />
            <column name="kod_an_done_bnk_x_n" type="string" title="Проведен" />
            <column name="kod_work_done_close_acc_x_n" type="string" title="Работа проведена" />
            <column name="fired_in_time_x_n" type="string" title="Уволены в срок" />
            <column name="kod_an_done_subs_resp_x_n" type="string" title="Анализ проведен" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_au_duty_control" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <band title="Анализ наличия/ отсутствия признаков преднамеренного и фиктивного банкротства">
              <column name="kod_an_done_bnk_x_n" type="string" title="Проведен" />
              <column name="kod_an_done_bnk" type="number" invisible-in-column-chooser="1" visible="0" />
              <column name="result_an_done_bnk" type="string" title="Результат" />
            </band>
            <band title="Закрытие счетов">
              <column name="kod_work_done_close_acc_x_n" type="string" title="Работа проведена" />
              <column name="kod_work_done_close_acc" type="number" invisible-in-column-chooser="1" visible="0" />
              <column name="comment_close_acc" type="string" title="Комментарий" />
            </band>
            <band title="Увольнение работников">
              <column name="fired_in_time_x_n" type="string" title="Уволены в срок" />
              <column name="fired_in_time" type="number" invisible-in-column-chooser="1" visible="0" />
              <column name="reason_working" type="string" title="Продолжают деятельность, причина" />
            </band>
            <band title="Оспаривание сделок должника">
              <column name="dat_sud_spor_sdel" type="date" title="Дата подачи в суд заявления" />
              <column name="comment_sud_spor_sdel" type="string" title="Комментарий (наличие оснований, дата СА)" />
            </band>
            <band title="Привлечение к субсидиарной ответственности">
              <column name="kod_an_done_subs_resp_x_n" type="string" title="Анализ проведен" />
              <column name="kod_an_done_subs_resp" type="number" invisible-in-column-chooser="1" visible="0" />
              <column name="dat_sud_subs_resp" type="date" title="Дата подачи в суд заявления" />
              <column name="comment_sud_subs_resp" type="string" title="Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)" />
            </band>
            <column name="zayav_others" type="string" title="Заявления иного характера" />
            <column name="objal_au_actions" type="string" title="Обжалование действий/ бездействия арб. управляющего" />
            <column name="prim" type="string" title="Примечание" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_au_duty_control" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_au_duty_control_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_au_duty_control_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select b.kod_an_done_bnk as kod_an_done_bnk, /*Проведен*//*number*/
b.result_an_done_bnk as result_an_done_bnk, /*Результат*//*string*/
b.kod_work_done_close_acc as kod_work_done_close_acc, /*Работа проведена*//*number*/
b.comment_close_acc as comment_close_acc, /*Комментарий*//*string*/
b.fired_in_time as fired_in_time, /*Уволены в срок*//*number*/
b.reason_working as reason_working, /*Продолжают деятельность, причина*//*string*/
b.dat_sud_spor_sdel as dat_sud_spor_sdel, /*Дата подачи в суд заявления*//*date*/
b.comment_sud_spor_sdel as comment_sud_spor_sdel, /*Комментарий (наличие оснований, дата СА)*//*string*/
b.kod_an_done_subs_resp as kod_an_done_subs_resp, /*Анализ проведен*//*number*/
b.dat_sud_subs_resp as dat_sud_subs_resp, /*Дата подачи в суд заявления*//*date*/
b.comment_sud_subs_resp as comment_sud_subs_resp, /*Комментарий (наличие оснований, привлекаемое лицо, дата СА и т.д.)*//*string*/
b.zayav_others as zayav_others, /*Заявления иного характера*//*string*/
b.objal_au_actions as objal_au_actions, /*Обжалование действий/ бездействия арб. управляющего*//*string*/
b.prim as prim, /*Примечание*//*string*/
kod_an_done_bnk_x_n.name as kod_an_done_bnk_x_n, /*Проведен*//*string*/
kod_work_done_close_acc_x_n.name as kod_work_done_close_acc_x_n, /*Работа проведена*//*string*/
fired_in_time_x_n.name as fired_in_time_x_n, /*Уволены в срок*//*string*/
kod_an_done_subs_resp_x_n.name as kod_an_done_subs_resp_x_n, /*Анализ проведен*//*string*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
b.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
b.kod_folders as kod_folders/*number*/

from (
--ur_au_duty_control
select a.kod_au_duty_control as kod_au_duty_control, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_an_done_bnk as kod_an_done_bnk, /*number*/
a.result_an_done_bnk as result_an_done_bnk, /*string*/
a.kod_work_done_close_acc as kod_work_done_close_acc, /*number*/
a.comment_close_acc as comment_close_acc, /*string*/
a.fired_in_time as fired_in_time, /*number*/
a.reason_working as reason_working, /*string*/
a.dat_sud_spor_sdel as dat_sud_spor_sdel, /*date*/
a.comment_sud_spor_sdel as comment_sud_spor_sdel, /*string*/
a.kod_an_done_subs_resp as kod_an_done_subs_resp, /*number*/
a.dat_sud_subs_resp as dat_sud_subs_resp, /*date*/
a.comment_sud_subs_resp as comment_sud_subs_resp, /*string*/
a.zayav_others as zayav_others, /*string*/
a.objal_au_actions as objal_au_actions, /*string*/
a.prim as prim, /*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_au_duty_control as kod_au_duty_control,a.kod_folders as kod_folders,a.kod_an_done_bnk as kod_an_done_bnk,a.result_an_done_bnk as result_an_done_bnk,a.kod_work_done_close_acc as kod_work_done_close_acc,a.comment_close_acc as comment_close_acc,a.fired_in_time as fired_in_time,a.reason_working as reason_working,a.dat_sud_spor_sdel as dat_sud_spor_sdel,a.comment_sud_spor_sdel as comment_sud_spor_sdel,a.kod_an_done_subs_resp as kod_an_done_subs_resp,a.dat_sud_subs_resp as dat_sud_subs_resp,a.comment_sud_subs_resp as comment_sud_subs_resp,a.zayav_others as zayav_others,a.objal_au_actions as objal_au_actions,a.prim as prim,0 as is_new,1 as is_not_new  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n6 as kod_folders,t.n1 as kod_an_done_bnk,t.s1 as result_an_done_bnk,t.n2 as kod_work_done_close_acc,t.s2 as comment_close_acc,t.n3 as fired_in_time,t.s3 as reason_working,t.d1 as dat_sud_spor_sdel,t.s4 as comment_sud_spor_sdel,t.n4 as kod_an_done_subs_resp,t.d2 as dat_sud_subs_resp,t.s5 as comment_sud_subs_resp,t.s6 as zayav_others,t.s7 as objal_au_actions,t.s8 as prim,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
a
--\(select a.kod_au_duty_control as kod_au_duty_control,a.kod_folders as kod_folders,a.kod_an_done_bnk as kod_an_done_bnk,a.result_an_done_bnk as result_an_done_bnk,a.kod_work_done_close_acc as kod_work_done_close_acc,a.comment_close_acc as comment_close_acc,a.fired_in_time as fired_in_time,a.reason_working as reason_working,a.dat_sud_spor_sdel as dat_sud_spor_sdel,a.comment_sud_spor_sdel as comment_sud_spor_sdel,a.kod_an_done_subs_resp as kod_an_done_subs_resp,a.dat_sud_subs_resp as dat_sud_subs_resp,a.comment_sud_subs_resp as comment_sud_subs_resp,a.zayav_others as zayav_others,a.objal_au_actions as objal_au_actions,a.prim as prim,0 as is_new,1 as is_not_new  from ur_au_duty_control a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_au_duty_control=t.f2 ) and   a.kod_au_duty_control in :kod_au_duty_control_prm   union all  select t.n5 as kod_au_duty_control,t.n6 as kod_folders,t.n1 as kod_an_done_bnk,t.s1 as result_an_done_bnk,t.n2 as kod_work_done_close_acc,t.s2 as comment_close_acc,t.n3 as fired_in_time,t.s3 as reason_working,t.d1 as dat_sud_spor_sdel,t.s4 as comment_sud_spor_sdel,t.n4 as kod_an_done_subs_resp,t.d2 as dat_sud_subs_resp,t.s5 as comment_sud_subs_resp,t.s6 as zayav_others,t.s7 as objal_au_actions,t.s8 as prim,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_au_duty_control_prm )
)
b
--\ur_au_duty_control
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_subs_resp_x_n on b.kod_an_done_subs_resp = kod_an_done_subs_resp_x_n.kod--\us_au_duty_control_an_done
left outer join
(
--ur_yn_list
select u.val as kod, /*number*//*key*/
u.name as name/*Выбор*//*string*/

from (
(
(
--true
select 1 as val, /*number*//*key*/
'Да' as name/*string*/

from dual
dual
--\dual
)
--\true
union all
(
--false
select 0 as val, /*number*//*key*/
'Нет' as name/*string*/

from dual
dual
--\dual
)
--\false
)
--\
)
u
--\
)
fired_in_time_x_n on b.fired_in_time = fired_in_time_x_n.kod--\ur_yn_list
left outer join
(
--us_au_duty_control_work_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Работа проведена*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведена' as name/*Работа проведена*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведена'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_work_done_close_acc_x_n on b.kod_work_done_close_acc = kod_work_done_close_acc_x_n.kod--\us_au_duty_control_work_done
left outer join
(
--us_au_duty_control_an_done
select u.kod as kod, /*number*//*key*/
u.name as name/*Анализ проведен*//*string*/

from (
(
(
--
select 0 as kod, /*number*//*key*/
'Не проведен' as name/*Анализ проведен*//*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'Проведен'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
kod_an_done_bnk_x_n on b.kod_an_done_bnk = kod_an_done_bnk_x_n.kod--\us_au_duty_control_an_done
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>