<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_dogplat_doc_view" title="Суммы по юр. документу" timestamp="16.10.2018 17:00:26" form-size="1037;537" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_dogplat_select.xml" elid="191" ord="191" leaf="0" lvl="2" pelid="">
    <grid table="ur_dogplat" show-toolbar="1" show-footer="1" id="14019556">
      <toolbar id="34491785">
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="62980714" />
        <uicommand action-type="save-and-close" button-type="custom-save-and-close" name="custom-save-and-close" icon="CommitAndClose_24" title="Сохранить и закрыть" file="sql.builder.templates\sql.builder\projects\common\main.xml" id="48585072" />
        <uicommand action-type="show-sub-form" title="Пересчитать задолженность" control="rasch" id="52817224" />
        <uicommand object="ur_dogplat" name="select_sf" modal="1" title="Выбор СФ/Счетов" id="5954375">
          <useparam name="p_kod" id="8080243" />
          <useparam name="p_kod_sdp" id="30533535" />
          <useparam name="kodp" id="55998971" />
        </uicommand>
        <uicommand object="ur_dogplat" name="select_pd" modal="1" title="Выбор документов на оплату" id="59624004">
          <useparam name="p_kod" id="18985302" />
          <useparam name="p_kod_sdp" id="31367558" />
          <useparam name="kodp" id="19748990" />
        </uicommand>
        <uicommand modal="1" object="ur_dogplat" name="opl_view" title="Оплаты по документу" id="20883494">
          <useparam name="p_kod_dogplat" id="58604517" />
        </uicommand>
      </toolbar>
      <columns id="26340587">
        <field table="ur_dogplat" name="kod_dogplat" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="1127650" />
        <field table="ur_dogplat" name="kod_peni_sf" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="6068753" />
        <field table="ur_dogplat" name="kod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="39300985" />
        <field table="ur_dogplat" name="kod_sdp" title="" controlType="UICombo" rows-limit="100" id="34526710" />
        <field table="ur_dogplat" name="kod_sf" title="" controlType="UICombo" rows-limit="100" id="32987608" />
        <field table="ur_dogplat" name="kr_dog_ndog" title="Номер договора" controlType="UIText" rows-limit="100" id="47759822" />
        <field table="ur_dogplat" name="name_doc" title="Документ начисления" controlType="UIText" rows-limit="100" id="19163959" />
        <field table="ur_dogplat" name="ym" title="Отчетный период" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="61602376" />
        <field table="ur_dogplat" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="23686137" />
        <field table="ur_dogplat" name="sr_facras_nachisl" title="Начислено" controlType="UIText" edit-mask="N2" rows-limit="100" id="60604939" />
        <field table="ur_dogplat" name="peni_period_str" title="Период пени" width="132" controlType="UIText" rows-limit="100" id="61217151">
          <buttons id="7613080">
            <uicommand action-type="dynamic-form" call="vr_peni_period_select" type="Ellipsis" side="Right" visible="p_kod_peni_sf" title="Выбор периодов пени" modal="1" id="205758">
              <useparam table="ur_dogplat" column="kod_sf" name="p_kod_peni_sf" id="54418153" />
            </uicommand>
          </buttons>
        </field>
        <field table="ur_dogplat" name="ur_opl_do_ur" title="Оплата до включения в юр. документ" controlType="UIText" edit-mask="N2" rows-limit="100" id="13248530" />
        <field table="ur_dogplat" name="summa" title="Выставленно по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="56260558" />
        <field table="ur_dogplat" name="dat_form" title="Дата расч. задолж." controlType="UIDate" rows-limit="100" id="55288612" />
        <field table="ur_dogplat" name="ur_opl" title="Оплата по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="51983445" />
        <field table="ur_dogplat" name="dolg_tek" title="Текущая задолженность" controlType="UIText" edit-mask="N2" rows-limit="100" id="34064366" />
      </columns>
      <menu id="38467721">
        <uicommand modal="1" object="ur_dogplat" name="opl_view" title="Оплаты по документу" id="22804705">
          <useparam name="p_kod_dogplat" id="35077651" />
        </uicommand>
      </menu>
    </grid>
    <fieldgroup title="Перерасчет задолженности" is-form="1" as="rasch" expanded="0" id="40742289">
      <field id="48961550" controlType="UIDate" type="date" name="dat" title="Дата расчета задолженности">
        <defaultquery>
          <query name="today" />
        </defaultquery>
      </field>
      <uicommand action-type="custom" title="Пересчитать задолженность" id="53699982">
        <useaction object="ur_dogplat" name="recalc_sum" id="53716512">
          <useparam name="dat" id="66746908" />
        </useaction>
        <useaction action-type="hide-sub-form" id="41353918" />
      </uicommand>
    </fieldgroup>
  </form>
  <params>
    <param name="p_kod" type="number">
      <const>500001401</const>
    </param>
    <param name="p_kod_sdp" type="number">
      <const>6</const>
    </param>
    <param name="kodp" type="number">
      <const>500182948</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod" type="number">
        <const>500001401</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const>6</const>
      </param>
      <param name="kodp" type="number">
        <const>500182948</const>
      </param>
    </params>
    <fields>
      <field type="date" name="dat" parname="dat" title="Дата расчета задолженности" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_dogplat_has_changes" parname="ur_dogplat_has_changes" />
    </fields>
    <table name="ur_dogplat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf, /*number*/
ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.kod_sf as kod_sf, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_dogplat.name_doc as name_doc, /*Документ начисления*//*string*/
ur_dogplat.ym as ym, /*Отчетный период*//*number*/
ur_dogplat.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.ur_opl_do_ur1 as ur_opl_do_ur, /*Оплата до включения в юр. документ*//*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
ur_dogplat.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
qube.ur_opl1 as ur_opl, /*Оплата по юр. документу*//*number*/
qube.fin_ul_ob1 as dolg_tek, /*Текущая задолженность*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (kod_opl.dat_uch &lt;= ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl_do_ur1, /*Оплата до включения в юр. документ*//*number*/
sum( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl1, /*Оплата по юр. документу*//*number*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf2 ,0) )  as fin_ul_ob1/*Оборот*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
max(un.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1, /*Номер договора*//*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_dog as kod_dog/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
sr_facvip.kod_peni_sf as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = sr_facvip_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat
--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null ) )
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_peni_sf1, /*number*/
null as kr_dog_ndog1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_facras_nachisl1, /*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.kod_sf as kod_sf, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.ym as ym, /*Отчетный период*//*number*/
 case  when (a.kod_sf is not null )  then kod_sf.name when (a.kod_deb is not null )  then kod_deb.name when (a.kod_izv is not null )  then kod_izv.name end  as name_doc, /*Документ начисления*//*string*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
'п/д ' || ' № ' || a.num_pl || ' от ' || ( to_char( a.dat_deb ,'DD.MM.YYYY') )  as name/*Документ на оплату*//*string*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name/*Документ начисления*//*string*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--tnr_izv
select a.kod_izv as kod_izv, /*number*//*key*/
type_izv.abbr || ' №' || a.num_izv || ' от  ' || ( to_char( a.date_izv ,'DD.MM.YYYY') )  as name/*Аббревиатура*//*string*/

from tnr_izv
a
--\tnr_izv
left outer join
(
--tk_vidizv
select a.kod_vidizv as kod_vidizv, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from tk_vidizv
a
--\tk_vidizv
)
type_izv on a.type_izv = type_izv.kod_vidizv--\tk_vidizv
)
kod_izv on a.kod_izv = kod_izv.kod_izv--\tnr_izv
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</select-text>
      <columns>
        <column name="kod_dogplat" table="ur_dogplat" type="number" title="" parname="p_kod_dogplat" ColumnVisible="0" ClientDefault="p_kod" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
        <column name="kod_peni_sf" table="ur_dogplat" type="number" title="" parname="p_kod_peni_sf" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kod_peni_sf1 as kod_peni_sf, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1/*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1/*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
max(un.kod_peni_sf1)  as kod_peni_sf1/*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
sr_facvip.kod_peni_sf as kod_peni_sf1/*number*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = sr_facvip_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_peni_sf1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod" is-updateable="1" is-updateable-ext="1" update-target="kod" temp-col-name="n2" />
        <column name="kod_sdp" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod_sdp" is-updateable="1" is-updateable-ext="1" update-target="kod_sdp" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_sdp_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="kod_sf" table="ur_dogplat" type="number" title="" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_sf" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_dogplat.name_doc as name_doc, /*Документ начисления*//*string*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 case  when (a.kod_sf is not null )  then kod_sf.name when (a.kod_deb is not null )  then kod_deb.name when (a.kod_izv is not null )  then kod_izv.name end  as name_doc, /*Документ начисления*//*string*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
'п/д ' || ' № ' || a.num_pl || ' от ' || ( to_char( a.dat_deb ,'DD.MM.YYYY') )  as name/*Документ на оплату*//*string*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name/*Документ начисления*//*string*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--tnr_izv
select a.kod_izv as kod_izv, /*number*//*key*/
type_izv.abbr || ' №' || a.num_izv || ' от  ' || ( to_char( a.date_izv ,'DD.MM.YYYY') )  as name/*Аббревиатура*//*string*/

from tnr_izv
a
--\tnr_izv
left outer join
(
--tk_vidizv
select a.kod_vidizv as kod_vidizv, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from tk_vidizv
a
--\tk_vidizv
)
type_izv on a.type_izv = type_izv.kod_vidizv--\tk_vidizv
)
kod_izv on a.kod_izv = kod_izv.kod_izv--\tnr_izv
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="name_doc" table="ur_dogplat" />
            <dependant name="kod_sf_x_n" table="ur_dogplat" />
            <dependant name="is_doc" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="kr_dog_ndog" table="ur_dogplat" type="string" title="Номер договора" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kr_dog_ndog1 as kr_dog_ndog1/*Номер договора*//*string*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kr_dog_ndog1 as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1/*Номер договора*//*string*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_dog as kod_dog  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n11 as kod_dog  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_dog as kod_dog  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n11 as kod_dog  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1/*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name_doc" table="ur_dogplat" type="string" title="Документ начисления" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_dogplat.name_doc as name_doc, /*Документ начисления*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when (a.kod_sf is not null )  then kod_sf.name when (a.kod_deb is not null )  then kod_deb.name when (a.kod_izv is not null )  then kod_izv.name end  as name_doc/*Документ начисления*//*string*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
'п/д ' || ' № ' || a.num_pl || ' от ' || ( to_char( a.dat_deb ,'DD.MM.YYYY') )  as name/*Документ на оплату*//*string*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name/*Документ начисления*//*string*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--tnr_izv
select a.kod_izv as kod_izv, /*number*//*key*/
type_izv.abbr || ' №' || a.num_izv || ' от  ' || ( to_char( a.date_izv ,'DD.MM.YYYY') )  as name/*Аббревиатура*//*string*/

from tnr_izv
a
--\tnr_izv
left outer join
(
--tk_vidizv
select a.kod_vidizv as kod_vidizv, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from tk_vidizv
a
--\tk_vidizv
)
type_izv on a.type_izv = type_izv.kod_vidizv--\tk_vidizv
)
kod_izv on a.kod_izv = kod_izv.kod_izv--\tnr_izv
)
ur_dogplat
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ym" table="ur_dogplat" type="number" title="Отчетный период" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n5" />
        <column name="vid_real" table="ur_dogplat" type="number" title="Вид реализации" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vid_real" temp-col-name="n6">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_real" as="vid_real" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_real" into="n1">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид реализации" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select>
                <from>
from <query name="sk_vid_real" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_real">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид реализации" comment="полное наименование- уже не печатается в назначение платежа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" type="string" title="Вид реализации(аббр)" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" used="1">sk_vid_real
a
--\sk_vid_real
</table></from>)
a
--\sk_vid_real
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> ) like lower( </text><const><text>:vid_real_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид реализации" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_real_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_real" as="vid_real" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид реализации" />
                    <column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" />
                  </select>
                  <from>
                    <query name="sk_vid_real" as="a" title="Вид реализации" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="vid_real_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_real_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_real_filter" type="string">
                  <const>:vid_real_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="vid_real_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="sr_facras_nachisl" table="ur_dogplat" type="number" title="Начислено" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
sr_facras.nachisl as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str" table="ur_dogplat" type="string" title="Период пени" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as peni_period_ym1/*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_do_ur" table="ur_dogplat" type="number" title="Оплата до включения в юр. документ" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_ur1 as ur_opl_do_ur, /*Оплата до включения в юр. документ*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt;= ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl_do_ur1/*Оплата до включения в юр. документ*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form/*Дата расч. задолж.*//*date*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="summa" table="ur_dogplat" type="number" title="Выставленно по юр. документу" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="summa" temp-col-name="n7" />
        <column name="dat_form" table="ur_dogplat" type="date" title="Дата расч. задолж." EditableInvert="1" Editable="is_doc" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_form" temp-col-name="d1">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_ur1 as ur_opl_do_ur, /*Оплата до включения в юр. документ*//*number*/
qube.ur_opl1 as ur_opl, /*Оплата по юр. документу*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt;= ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl_do_ur1, /*Оплата до включения в юр. документ*//*number*/
sum( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl1/*Оплата по юр. документу*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_do_ur" table="ur_dogplat" />
            <dependant name="ur_opl" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="ur_opl" table="ur_dogplat" type="number" title="Оплата по юр. документу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl1 as ur_opl, /*Оплата по юр. документу*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl1/*Оплата по юр. документу*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_tek" table="ur_dogplat" type="number" title="Текущая задолженность" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob1 as dolg_tek, /*Текущая задолженность*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  as fin_ul_ob1/*Оборот*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sdp_x_n" table="ur_dogplat.kod_sdp" type="string" title="" text-source-for="kod_sdp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sf_x_n" table="ur_dogplat.kod_sf" type="number" title="" text-source-for="kod_sf" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="ur_dogplat.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_doc" table="ur_dogplat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:ym as ym 
,:vid_real as vid_real 
,:summa as summa 
,:dat_form as dat_form 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod_dogplat 
,kod 
,kod_sdp 
,kod_sf 
,ym 
,vid_real 
,summa 
,dat_form 
) 
 values  
(r.kod_dogplat 
,r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.ym 
,r.vid_real 
,r.summa 
,r.dat_form 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_dogplat' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:ym as ym 
,:vid_real as vid_real 
,:summa as summa 
,:dat_form as dat_form 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,d1 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
,r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.ym 
,r.vid_real 
,r.summa 
,r.dat_form 
); 
end loop; 
else 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:ym as ym 
,:vid_real as vid_real 
,:summa as summa 
,:dat_form as dat_form 
,a.kod_deb 
,a.u_m 
,a.d_m 
,a.sum_v 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,d1 
,n8 
,s1 
,d2 
,n9 
,n10 
,d3 
,n11 
,n12 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
,r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.ym 
,r.vid_real 
,r.summa 
,r.dat_form 
,r.kod_deb 
,r.u_m 
,r.d_m 
,r.sum_v 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_dogplat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod_dogplat 
,kod 
,kod_sdp 
,kod_sf 
,ym 
,vid_real 
,summa 
,dat_form 
) 
= 
 ( select  
:kod_dogplat as kod_dogplat 
,:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:ym as ym 
,:vid_real as vid_real 
,:summa as summa 
,:dat_form as dat_form 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="ur_dogplat">
          <columns>
            <column name="kod_dogplat" type="number" title="" visible="0" />
            <column name="kod_peni_sf" type="number" title="" visible="0" />
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_ndog" type="string" title="Номер договора" />
            <column name="name_doc" type="string" title="Документ начисления" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчетный период" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="ur_opl_do_ur" type="number" title="Оплата до включения в юр. документ" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="dat_form" type="date" title="Дата расч. задолж." />
            <column name="ur_opl" type="number" title="Оплата по юр. документу" />
            <column name="dolg_tek" type="number" title="Текущая задолженность" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="kod_sf_x_n" type="number" title="" visible="0" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_dogplat" type="number" title="" visible="0" />
            <column name="kod_peni_sf" type="number" title="" visible="0" />
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf_x_n" type="number" title="" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_ndog" type="string" title="Номер договора" />
            <column name="name_doc" type="string" title="Документ начисления" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчетный период" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="ur_opl_do_ur" type="number" title="Оплата до включения в юр. документ" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="dat_form" type="date" title="Дата расч. задолж." />
            <column name="ur_opl" type="number" title="Оплата по юр. документу" />
            <column name="dolg_tek" type="number" title="Текущая задолженность" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf, /*number*/
ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.kod_sf as kod_sf, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_dogplat.name_doc as name_doc, /*Документ начисления*//*string*/
ur_dogplat.ym as ym, /*Отчетный период*//*number*/
ur_dogplat.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.ur_opl_do_ur1 as ur_opl_do_ur, /*Оплата до включения в юр. документ*//*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
ur_dogplat.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
qube.ur_opl1 as ur_opl, /*Оплата по юр. документу*//*number*/
qube.fin_ul_ob1 as dolg_tek, /*Текущая задолженность*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (kod_opl.dat_uch &lt;= ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl_do_ur1, /*Оплата до включения в юр. документ*//*number*/
sum( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  as ur_opl1, /*Оплата по юр. документу*//*number*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf2 ,0) )  as fin_ul_ob1/*Оборот*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
max(un.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1, /*Номер договора*//*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_dog as kod_dog  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n11 as kod_dog  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_dog as kod_dog  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n11 as kod_dog  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
sr_facvip.kod_peni_sf as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = sr_facvip_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
null as sr_facras_nachisl1, /*number*/
null as kod_peni_sf1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_dogplat.kod_dogplat/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_peni_sf1, /*number*/
null as kr_dog_ndog1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_facras_nachisl1, /*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.kod_sf as kod_sf, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.ym as ym, /*Отчетный период*//*number*/
 case  when (a.kod_sf is not null )  then kod_sf.name when (a.kod_deb is not null )  then kod_deb.name when (a.kod_izv is not null )  then kod_izv.name end  as name_doc, /*Документ начисления*//*string*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.dat_form as dat_form,a.kod_sf as kod_sf,a.summa as summa,a.vid_real as vid_real,a.ym as ym,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.d1 as dat_form,t.n4 as kod_sf,t.n7 as summa,t.n6 as vid_real,t.n5 as ym,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.dat_form as dat_form,a.kod_sf as kod_sf,a.summa as summa,a.vid_real as vid_real,a.ym as ym,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.d1 as dat_form,t.n4 as kod_sf,t.n7 as summa,t.n6 as vid_real,t.n5 as ym,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
'п/д ' || ' № ' || a.num_pl || ' от ' || ( to_char( a.dat_deb ,'DD.MM.YYYY') )  as name/*Документ на оплату*//*string*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name/*Документ начисления*//*string*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--tnr_izv
select a.kod_izv as kod_izv, /*number*//*key*/
type_izv.abbr || ' №' || a.num_izv || ' от  ' || ( to_char( a.date_izv ,'DD.MM.YYYY') )  as name/*Аббревиатура*//*string*/

from tnr_izv
a
--\tnr_izv
left outer join
(
--tk_vidizv
select a.kod_vidizv as kod_vidizv, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from tk_vidizv
a
--\tk_vidizv
)
type_izv on a.type_izv = type_izv.kod_vidizv--\tk_vidizv
)
kod_izv on a.kod_izv = kod_izv.kod_izv--\tnr_izv
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>