<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="vr_doc_reestr_folders" title="Настройка списка выходных каталогов" timestamp="28.12.2023 14:57:07" is-report="1" folder="rep_avans" with-behavior="0" file="sql.builder.templates\sql.builder\projects\ipr\forms\vr_doc_reestr_folders.xml" elid="284" ord="284" leaf="0" lvl="2" pelid="">
    <grid table="vr_doc_reestr_folders" show-toolbar="1" id="34130602">
      <columns id="33565303">
        <field table="vr_doc_reestr_folders" name="name" title="Каталог" width="227" controlType="UIText" rows-limit="100" id="2364950" />
      </columns>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="vr_doc_reestr_folders_has_changes" parname="vr_doc_reestr_folders_has_changes" />
    </fields>
    <table name="vr_doc_reestr_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_doc_reestr_folders" key="kod_folder" is-ms-upd="1" is-top="1">
      <select-text>
--
select vr_doc_reestr_folders.name as name, /*Каталог*//*string*/
vr_doc_reestr_folders.is_new as is_new, /*number*/
vr_doc_reestr_folders.is_not_new as is_not_new, /*number*/
vr_doc_reestr_folders.kod_folder as kod_folder/*number*//*key*/

from (
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name, /*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
)
vr_doc_reestr_folders
--\vr_doc_reestr_folders
--\
</select-text>
      <columns>
        <column name="name" table="vr_doc_reestr_folders" type="string" title="Каталог" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="name" temp-col-name="s1" />
        <column name="is_new" table="vr_doc_reestr_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_doc_reestr_folders" type="number" title="" is-user-editable="1" />
        <column name="kod_folder" table="vr_doc_reestr_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folder" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:name as name 
,:kod_folder as kod_folder 
 
from dual ) 
 
loop 
insert into vr_doc_reestr_folders 
(name 
,kod_folder 
) 
 values  
(r.name 
,r.kod_folder 
) 
 returning  
kod_folder into :kod_folder; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_doc_reestr_folders where kod_folder=:kod_folder</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_doc_reestr_folders' 
and 
names=:form_id 
and 
f2=:kod_folder; 
if :row_state_id=1  then 
for r in  
 ( select  
:name as name 
,:kod_folder as kod_folder 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n1 
) 
 values  
('vr_doc_reestr_folders' 
,:form_id 
,:kod_folder 
,:row_state_id 
,r.name 
,r.kod_folder 
); 
end loop; 
else 
for r in  
 ( select  
:name as name 
,:kod_folder as kod_folder 
 
from vr_doc_reestr_folders a  where kod_folder=:kod_folder) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n1 
) 
 values  
('vr_doc_reestr_folders' 
,:form_id 
,:kod_folder 
,:row_state_id 
,r.name 
,r.kod_folder 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_doc_reestr_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_doc_reestr_folders set  
(name 
,kod_folder 
) 
= 
 ( select  
:name as name 
,:kod_folder as kod_folder 
 
from dual ) 
 
where 
kod_folder=:kod_folder 
;
end;
</update-text>
      <scheme>
        <table name="vr_doc_reestr_folders" as="vr_doc_reestr_folders">
          <columns>
            <column name="name" type="string" title="Каталог" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folder" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="name" type="string" title="Каталог" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folder" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folder_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folder_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select vr_doc_reestr_folders.name as name, /*Каталог*//*string*/
vr_doc_reestr_folders.is_new as is_new, /*number*/
vr_doc_reestr_folders.is_not_new as is_not_new, /*number*/
vr_doc_reestr_folders.kod_folder as kod_folder/*number*//*key*/

from (
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name, /*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folder as kod_folder,a.name as name,0 as is_new,1 as is_not_new  from vr_doc_reestr_folders a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_folders' and t.names=:form_id  and a.kod_folder=t.f2 ) and   a.kod_folder in :kod_folder_prm   union all  select t.n1 as kod_folder,t.s1 as name,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_doc_reestr_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folder_prm )
a
--\(select a.kod_folder as kod_folder,a.name as name,0 as is_new,1 as is_not_new  from vr_doc_reestr_folders a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_folders' and t.names=:form_id  and a.kod_folder=t.f2 ) and   a.kod_folder in :kod_folder_prm   union all  select t.n1 as kod_folder,t.s1 as name,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_doc_reestr_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folder_prm )
)
vr_doc_reestr_folders
--\vr_doc_reestr_folders
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>