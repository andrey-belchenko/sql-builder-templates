<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_dogplat_hand" title="Ввод суммы задолженности" with-behavior="0" timestamp="28.12.2023 14:44:15" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms.xml" elid="196" ord="196" leaf="0" lvl="2" pelid="">
    <grid table="ur_dogplat" show-toolbar="1" id="22023605">
      <toolbar id="53497276">
        <uicommand title="Сохранить и закрыть" action-type="save-and-close" id="7340407" />
      </toolbar>
      <columns id="15609999">
        <field table="ur_dogplat" name="kod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="17103720" />
        <field table="ur_dogplat" name="kod_sdp" title="" controlType="UICombo" rows-limit="100" id="61511808" />
        <field table="ur_dogplat" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="48454492" />
        <field table="ur_dogplat" name="summa" title="Выставленно по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="11893153" />
        <field table="ur_dogplat" name="sum_v" title="Признано по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="54762949" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="p_kod" type="number">
      <const>1000000146</const>
    </param>
    <param name="p_kod_sdp" type="number">
      <const>4</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod" type="number">
        <const>1000000146</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const>4</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_dogplat_has_changes" parname="ur_dogplat_has_changes" />
    </fields>
    <table name="ur_dogplat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.vid_real as vid_real, /*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
ur_dogplat.sum_v as sum_v, /*Признано по юр. документу*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp ) --\
</select-text>
      <columns>
        <column name="kod" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod" is-updateable="1" is-updateable-ext="1" update-target="kod" temp-col-name="n2" />
        <column name="kod_sdp" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod_sdp" is-updateable="1" is-updateable-ext="1" update-target="kod_sdp" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_sdp_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="vid_real" table="ur_dogplat" type="number" title="Вид реализации" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vid_real" temp-col-name="n6">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_real" as="vid_real" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_real" into="n1">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид реализации" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select>
                <from>
from <query name="sk_vid_real" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_real">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид реализации" comment="полное наименование- уже не печатается в назначение платежа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" type="string" title="Вид реализации(аббр)" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" used="1">sk_vid_real
a
--\sk_vid_real
</table></from>)
a
--\sk_vid_real
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> ) like lower( </text><const><text>:vid_real_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид реализации" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_real_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_real" as="vid_real" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид реализации" />
                    <column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" />
                  </select>
                  <from>
                    <query name="sk_vid_real" as="a" title="Вид реализации" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="vid_real_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_real_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_real_filter" type="string">
                  <const>:vid_real_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="vid_real_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="summa" table="ur_dogplat" type="number" title="Выставленно по юр. документу" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="summa" temp-col-name="n7" />
        <column name="sum_v" table="ur_dogplat" type="number" title="Признано по юр. документу" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sum_v" temp-col-name="n9" />
        <column name="kod_sdp_x_n" table="ur_dogplat.kod_sdp" type="string" title="" text-source-for="kod_sdp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="ur_dogplat.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_doc" table="ur_dogplat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
        <column name="kod_dogplat" table="ur_dogplat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod 
,kod_sdp 
,vid_real 
,summa 
,sum_v 
,kod_dogplat 
) 
 values  
(r.kod 
,r.kod_sdp 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_dogplat' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n3 
,n6 
,n7 
,n9 
,n1 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod 
,r.kod_sdp 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
); 
end loop; 
else 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
,a.kod_deb 
,a.dat_form 
,a.u_m 
,a.d_m 
,a.kod_sf 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.ym 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n3 
,n6 
,n7 
,n9 
,n1 
,n8 
,d1 
,s1 
,d2 
,n4 
,n10 
,d3 
,n11 
,n12 
,n5 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod 
,r.kod_sdp 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
,r.kod_deb 
,r.dat_form 
,r.u_m 
,r.d_m 
,r.kod_sf 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.ym 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_dogplat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod 
,kod_sdp 
,vid_real 
,summa 
,sum_v 
,kod_dogplat 
) 
= 
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="ur_dogplat">
          <columns>
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="sum_v" type="number" title="Признано по юр. документу" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="sum_v" type="number" title="Признано по юр. документу" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.vid_real as vid_real, /*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
ur_dogplat.sum_v as sum_v, /*Признано по юр. документу*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.summa as summa,a.vid_real as vid_real,a.sum_v as sum_v,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.n7 as summa,t.n6 as vid_real,t.n9 as sum_v,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.summa as summa,a.vid_real as vid_real,a.sum_v as sum_v,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.n7 as summa,t.n6 as vid_real,t.n9 as sum_v,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>