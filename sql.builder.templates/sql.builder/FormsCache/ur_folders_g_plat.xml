<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_g_plat" title="Платежи ГП [:t.tname]" timestamp="28.12.2023 14:48:17" class="1" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_folders_g_plat.xml" elid="232" ord="232" leaf="0" lvl="2" pelid="">
    <field table="t" name="tname" title="" controlType="UIText" rows-limit="100" id="23777912" />
    <field table="b" name="num_delo" title="Номер дела" controlType="UIText" rows-limit="100" id="18837016" />
    <grid table="a" show-toolbar="1" id="25135659">
      <toolbar id="36926212">
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="31393507" />
        <uicommand button-type="grid-save" column-visible="0" name="grid-save" control-name="ButtonCommit" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="365" ord="365" leaf="1" lvl="2" pelid="" title="" id="53243180" />
        <uicommand action-type="custom" button-type="custom-commit" name="custom-commit" icon="Commit_24" title="Сохранить" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="378" ord="378" leaf="1" lvl="2" pelid="" id="65286186">
          <useaction action-type="save" id="3316281" />
          <useaction name="update_ur_mat_sum_gp" id="54412424">
            <useparam name="kod_mat" id="41545208" />
          </useaction>
        </uicommand>
        <uicommand action-type="custom" button-type="custom-save-and-close" name="custom-save-and-close" icon="CommitAndClose_24" title="Сохранить и закрыть" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="380" ord="380" leaf="1" lvl="2" pelid="" id="47973632">
          <useaction action-type="save" id="37615820" />
          <useaction name="update_ur_mat_sum_gp" id="33487893">
            <useparam name="kod_mat" id="47481431" />
          </useaction>
          <useaction action-type="close" id="30027877" />
        </uicommand>
        <uicommand action-type="dynamic-form-create-multiple" call="ur_folders_g_add_plat" title="Добавить" modal="1" id="42481485">
          <useparam name="opl_type" id="59574538" />
          <useparam name="kod_mat" id="3333947" />
        </uicommand>
      </toolbar>
      <columns id="6805282">
        <field table="a" name="nrn" title="ID записи из КИСУ Парус" controlType="UIText" edit-mask="N2" rows-limit="100" id="10932227" />
        <field table="a" name="sfinoper" title="Вид финансовой операции" controlType="UIText" rows-limit="100" id="39875410" />
        <field table="a" name="snum" title="Номер платежного документа" controlType="UIText" rows-limit="100" id="5333552" />
        <field table="a" name="ddate" title="Дата платежного документа" controlType="UIDate" rows-limit="100" id="16672740" />
        <field table="a" name="npay_sum" title="Сумма платежного документа" controlType="UIText" edit-mask="N2" rows-limit="100" id="58849155" />
        <field table="a" name="ndog" title="Номер Договора в ПК АСУСЭ" controlType="UIText" rows-limit="100" id="18144627" />
        <field table="a" name="inn" title="ИНН Контрагента" controlType="UIText" rows-limit="100" id="32629994" />
        <field table="a" name="indebfrom" title="Период задолженности С" controlType="UIDate" rows-limit="100" id="54055279" />
        <field table="a" name="indebto" title="Период задолженности ПО" controlType="UIDate" rows-limit="100" id="41028694" />
        <field table="a" name="kodfil" title="Код филиала Татэнергосбыта" controlType="UIText" rows-limit="100" id="23684680" />
        <field table="a" name="namefil" title="Полное наименование филиала Татэнергосбыт" controlType="UIText" rows-limit="100" id="25382072" />
        <field table="a" name="prsud" title="Признак привязки к судебному делу (не используется)" controlType="UIText" rows-limit="100" id="28627822" />
        <field table="a" name="nsud" title="Номер судебного дела" controlType="UIText" rows-limit="100" id="19132926" />
        <field table="a" name="svdoc_type" title="Документ основание: тип" controlType="UIText" rows-limit="100" id="57300304" />
        <field table="a" name="svdoc_numb" title="Документ основание: номер документа" controlType="UIText" rows-limit="100" id="29500698" />
        <field table="a" name="dvdoc_date" title="Документ основание: дата" controlType="UIDate" rows-limit="100" id="55123296" />
        <field table="a" name="sfdoc_type" title="Документ-подтверждение: тип" controlType="UIText" rows-limit="100" id="21191674" />
        <field table="a" name="sfdoc_numb" title="Документ-подтверждение: номер документа" controlType="UIText" rows-limit="100" id="1851917" />
        <field table="a" name="dfdoc_date" title="Документ-подтверждение: дата" controlType="UIDate" rows-limit="100" id="34654608" />
        <field table="a" name="sescort_doctype" title="Документ-сопровождение: тип" controlType="UIText" rows-limit="100" id="36941511" />
        <field table="a" name="sescort_docnumb" title="Документ-сопровождение: номер документа" controlType="UIText" rows-limit="100" id="18402762" />
        <field table="a" name="descort_docdate" title="Документ-сопровождение: дата" controlType="UIDate" rows-limit="100" id="19534846" />
        <field table="a" name="deleted" title="Удален в КИСУ «Парус»" controlType="UICheck" rows-limit="100" id="45442458" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="opl_type" type="number">
      <const>0</const>
    </param>
    <param name="kod_mat" type="number">
      <const type="number">2000002217</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="opl_type" type="number">
        <const>0</const>
      </param>
      <param name="kod_mat" type="number">
        <const type="number">2000002217</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="b_has_changes" parname="b_has_changes" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
      <field type="string" name="t_has_changes" parname="t_has_changes" />
    </fields>
    <table name="b" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_mat" delete-validation="ur_dp_exists_vld" key="kod_mat" is-ms-upd="1" is-top="1" key-dimension="kod_mat">
      <select-text>
--
select b.num_delo as num_delo, /*Номер дела*//*string*/
qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
b.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1, /*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.cnt as ur_dogplat_count1, /*number*/
null as ur_hist_mat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
b on ur_dogplat_a_d.kod_mat = b.kod_mat--\ur_mat
where
(b.kod_mat = :kod_mat )  and (b.kod_mat is not null ) )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
b on ur_hist_mat_a_d.kod_mat = b.kod_mat--\ur_mat
where
(b.kod_mat = :kod_mat )  and (b.kod_mat is not null ) )
--\
union all
(
--
select b.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1, /*number*/
null as ur_hist_mat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
b
--\ur_mat
where
(b.kod_mat = :kod_mat )  and (b.kod_mat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_mat
a
--\ur_mat
)
b on b.kod_mat = qube.kod_mat--\ur_mat
--\
</select-text>
      <columns>
        <column name="num_delo" table="b" type="string" title="Номер дела" ColumnEditable="0" Mandatory="qube.ur_hist_mat_count" is-updateable="1" is-updateable-ext="1" update-target="num_delo" temp-col-name="s1" />
        <column name="ur_hist_mat_count" table="b" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
b.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on ur_hist_mat_a_d.kod_mat = b.kod_mat--\ur_mat
where
b.kod_mat is not null )
--\
union all
(
--
select b.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b
--\ur_mat
where
b.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on b.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="ur_dp_exists_vld" table="b" type="string" title="Валидация (наличие привязанных документов)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
b.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.cnt as ur_dogplat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on ur_dogplat_a_d.kod_mat = b.kod_mat--\ur_mat
where
b.kod_mat is not null )
--\
union all
(
--
select b.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b
--\ur_mat
where
b.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on b.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat" table="b" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:num_delo as num_delo 
,:kod_mat as kod_mat 
 
from dual ) 
 
loop 
insert into ur_mat 
(num_delo 
,kod_mat 
) 
 values  
(r.num_delo 
,r.kod_mat 
) 
 returning  
kod_mat into :kod_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_mat where kod_mat=:kod_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='b' 
and 
names=:form_id 
and 
f2=:kod_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:num_delo as num_delo 
,:kod_mat as kod_mat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n3 
) 
 values  
('b' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.num_delo 
,r.kod_mat 
); 
end loop; 
else 
for r in  
 ( select  
:num_delo as num_delo 
,:kod_mat as kod_mat 
,a.kod_folders 
,a.kod_doc 
,a.kod_ssp 
,a.num_reg 
,a.dat_otv 
,a.kod_ret_isk 
,a.dat_prin 
,a.u_m 
,a.d_m 
,a.num_otz 
,a.dat_otz 
,a.dat_doc 
,a.fio_otz 
,a.kod_subject 
,a.prichina_otz 
,a.sum_gp 
,a.prim 
,a.dat_gp 
,a.kod_sud 
,a.num_pp_gp 
,a.kod_parent 
,a.kodp 
,a.ogr 
,a.kod_dispute 
,a.type_claim_template 
,a.kod_delo 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_emp 
,a.kod_vi 
,a.dep 
,a.dat_finish 
,a.prim_mor_dz 
,a.osnreal 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
,a.ur_opl_do_resh_vvod 
,a.shtraf 
,a.peni 
,a.otvetch_info 
,a.link_delo 
,a.sum_zach_gp 
,a.num_zach_doc 
,a.dat_zach 
,a.sum_ifns_gp 
,a.num_ifns_doc 
,a.dat_ifns 
,a.kod_scan 
,a.astrent_exists 
,a.dat_post 
,a.dat_arh 
,a.type_rassm 
,a.dat_post_mat_pio 
,a.num_zap_post_mat 
 
from ur_mat a  where kod_mat=:kod_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n3 
,n4 
,n5 
,n6 
,s2 
,d1 
,n7 
,d2 
,s3 
,d3 
,s4 
,d4 
,d5 
,s5 
,n8 
,s6 
,n9 
,s7 
,d6 
,n10 
,s8 
,n11 
,n1 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,d7 
,s9 
,n22 
,n23 
,n24 
,n25 
,n26 
,n27 
,s10 
,s11 
,n28 
,s12 
,d8 
,n29 
,s13 
,d9 
,n30 
,n31 
,d10 
,d11 
,n32 
,d12 
,s14 
) 
 values  
('b' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.num_delo 
,r.kod_mat 
,r.kod_folders 
,r.kod_doc 
,r.kod_ssp 
,r.num_reg 
,r.dat_otv 
,r.kod_ret_isk 
,r.dat_prin 
,r.u_m 
,r.d_m 
,r.num_otz 
,r.dat_otz 
,r.dat_doc 
,r.fio_otz 
,r.kod_subject 
,r.prichina_otz 
,r.sum_gp 
,r.prim 
,r.dat_gp 
,r.kod_sud 
,r.num_pp_gp 
,r.kod_parent 
,r.kodp 
,r.ogr 
,r.kod_dispute 
,r.type_claim_template 
,r.kod_delo 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_emp 
,r.kod_vi 
,r.dep 
,r.dat_finish 
,r.prim_mor_dz 
,r.osnreal 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
,r.ur_opl_do_resh_vvod 
,r.shtraf 
,r.peni 
,r.otvetch_info 
,r.link_delo 
,r.sum_zach_gp 
,r.num_zach_doc 
,r.dat_zach 
,r.sum_ifns_gp 
,r.num_ifns_doc 
,r.dat_ifns 
,r.kod_scan 
,r.astrent_exists 
,r.dat_post 
,r.dat_arh 
,r.type_rassm 
,r.dat_post_mat_pio 
,r.num_zap_post_mat 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='b' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_mat set  
(num_delo 
,kod_mat 
) 
= 
 ( select  
:num_delo as num_delo 
,:kod_mat as kod_mat 
 
from dual ) 
 
where 
kod_mat=:kod_mat 
;
end;
</update-text>
      <events>
        <useaction action-type="custom" event-name="object-save">
          <useaction action-type="execute-update" call="ur_mat_upd_num_reg">
            <column table="this" column="kod_mat" />
          </useaction>
          <useaction action-type="execute-update" call="ur_mat_upd_pretenz">
            <column table="this" column="kod_mat" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_mat" as="b">
          <columns>
            <column name="num_delo" type="string" title="Номер дела" />
            <column name="ur_hist_mat_count" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_dp_exists_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select b.num_delo as num_delo, /*Номер дела*//*string*/
qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
b.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1, /*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.cnt as ur_dogplat_count1, /*number*/
null as ur_hist_mat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on ur_dogplat_a_d.kod_mat = b.kod_mat--\ur_mat
where
b.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on ur_hist_mat_a_d.kod_mat = b.kod_mat--\ur_mat
where
b.kod_mat is not null )
--\
union all
(
--
select b.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1, /*number*/
null as ur_hist_mat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b
--\ur_mat
where
b.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_mat as kod_mat,a.num_delo as num_delo,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.s1 as num_delo,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.num_delo as num_delo,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.s1 as num_delo,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
b on b.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_gp_opl_info" column-editable="0" key="nrn" is-ms-upd="1" is-top="1">
      <select-text>
--
select a.nrn as nrn, /**//*number*//*key*/
a.sfinoper as sfinoper, /**//*string*/
a.snum as snum, /**//*string*/
a.ddate as ddate, /**//*date*/
a.npay_sum as npay_sum, /**//*number*/
a.ndog as ndog, /**//*string*/
a.inn as inn, /**//*string*/
a.indebfrom as indebfrom, /**//*date*/
a.indebto as indebto, /**//*date*/
a.kodfil as kodfil, /**//*string*/
a.namefil as namefil, /**//*string*/
a.prsud as prsud, /**//*string*/
a.nsud as nsud, /**//*string*/
a.svdoc_type as svdoc_type, /**//*string*/
a.svdoc_numb as svdoc_numb, /**//*string*/
a.dvdoc_date as dvdoc_date, /**//*date*/
a.sfdoc_type as sfdoc_type, /**//*string*/
a.sfdoc_numb as sfdoc_numb, /**//*string*/
a.dfdoc_date as dfdoc_date, /**//*date*/
a.sescort_doctype as sescort_doctype, /**//*string*/
a.sescort_docnumb as sescort_docnumb, /**//*string*/
a.descort_docdate as descort_docdate, /**//*date*/
a.deleted as deleted, /**//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (
--ur_gp_opl_info
select a.nrn as nrn, /*ID записи из КИСУ Парус*//*number*//*key*/
a.sfinoper as sfinoper, /*Вид финансовой операции*//*string*/
a.snum as snum, /*Номер платежного документа*//*string*/
a.ddate as ddate, /*Дата платежного документа*//*date*/
a.npay_sum as npay_sum, /*Сумма платежного документа*//*number*/
a.ndog as ndog, /*Номер Договора в ПК АСУСЭ*//*string*/
a.inn as inn, /*ИНН Контрагента*//*string*/
a.indebfrom as indebfrom, /*Период задолженности С*//*date*/
a.indebto as indebto, /*Период задолженности ПО*//*date*/
a.kodfil as kodfil, /*Код филиала Татэнергосбыта*//*string*/
a.namefil as namefil, /*Полное наименование филиала Татэнергосбыт*//*string*/
a.prsud as prsud, /*Признак привязки к судебному делу (не используется)*//*string*/
a.nsud as nsud, /*Номер судебного дела*//*string*/
a.svdoc_type as svdoc_type, /*Документ основание: тип*//*string*/
a.svdoc_numb as svdoc_numb, /*Документ основание: номер документа*//*string*/
a.dvdoc_date as dvdoc_date, /*Документ основание: дата*//*date*/
a.sfdoc_type as sfdoc_type, /*Документ-подтверждение: тип*//*string*/
a.sfdoc_numb as sfdoc_numb, /*Документ-подтверждение: номер документа*//*string*/
a.dfdoc_date as dfdoc_date, /*Документ-подтверждение: дата*//*date*/
a.sescort_doctype as sescort_doctype, /*Документ-сопровождение: тип*//*string*/
a.sescort_docnumb as sescort_docnumb, /*Документ-сопровождение: номер документа*//*string*/
a.descort_docdate as descort_docdate, /*Документ-сопровождение: дата*//*date*/
a.deleted as deleted, /*Удален в КИСУ «Парус»*//*number*/
a.kod_mat as kod_mat, /*number*/
 case  when ((a.sfinoper = 'Приход')  and (a.svdoc_type = 'Справка') )  then 2 when ((a.sfinoper = 'Приход')  and (('СУД_РЕШ' = a.svdoc_type)  or ('П/Т' = a.svdoc_type) ) )  then 1 when (a.sfinoper = 'Расход')  then 0 end  as payer_type, /*Тип оплаты*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_gp_opl_info
a
--\ur_gp_opl_info
)
a
--\ur_gp_opl_info
where
(a.payer_type = :opl_type )  and (a.kod_mat = :kod_mat ) --\
</select-text>
      <columns>
        <column name="nrn" table="a" type="number" title="ID записи из КИСУ Парус" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="nrn" temp-col-name="n1" />
        <column name="sfinoper" table="a" type="string" title="Вид финансовой операции" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sfinoper" temp-col-name="s1" />
        <column name="snum" table="a" type="string" title="Номер платежного документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="snum" temp-col-name="s2" />
        <column name="ddate" table="a" type="date" title="Дата платежного документа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="ddate" temp-col-name="d1" />
        <column name="npay_sum" table="a" type="number" title="Сумма платежного документа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="npay_sum" temp-col-name="n2" />
        <column name="ndog" table="a" type="string" title="Номер Договора в ПК АСУСЭ" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ndog" temp-col-name="s3" />
        <column name="inn" table="a" type="string" title="ИНН Контрагента" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="inn" temp-col-name="s4" />
        <column name="indebfrom" table="a" type="date" title="Период задолженности С" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="indebfrom" temp-col-name="d2" />
        <column name="indebto" table="a" type="date" title="Период задолженности ПО" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="indebto" temp-col-name="d3" />
        <column name="kodfil" table="a" type="string" title="Код филиала Татэнергосбыта" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kodfil" temp-col-name="s5" />
        <column name="namefil" table="a" type="string" title="Полное наименование филиала Татэнергосбыт" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="namefil" temp-col-name="s6" />
        <column name="prsud" table="a" type="string" title="Признак привязки к судебному делу (не используется)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prsud" temp-col-name="s7" />
        <column name="nsud" table="a" type="string" title="Номер судебного дела" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="nsud" temp-col-name="s8" />
        <column name="svdoc_type" table="a" type="string" title="Документ основание: тип" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="svdoc_type" temp-col-name="s9" />
        <column name="svdoc_numb" table="a" type="string" title="Документ основание: номер документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="svdoc_numb" temp-col-name="s10" />
        <column name="dvdoc_date" table="a" type="date" title="Документ основание: дата" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dvdoc_date" temp-col-name="d4" />
        <column name="sfdoc_type" table="a" type="string" title="Документ-подтверждение: тип" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sfdoc_type" temp-col-name="s11" />
        <column name="sfdoc_numb" table="a" type="string" title="Документ-подтверждение: номер документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sfdoc_numb" temp-col-name="s12" />
        <column name="dfdoc_date" table="a" type="date" title="Документ-подтверждение: дата" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dfdoc_date" temp-col-name="d5" />
        <column name="sescort_doctype" table="a" type="string" title="Документ-сопровождение: тип" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sescort_doctype" temp-col-name="s13" />
        <column name="sescort_docnumb" table="a" type="string" title="Документ-сопровождение: номер документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sescort_docnumb" temp-col-name="s14" />
        <column name="descort_docdate" table="a" type="date" title="Документ-сопровождение: дата" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="descort_docdate" temp-col-name="d6" />
        <column name="deleted" table="a" type="number" title="Удален в КИСУ «Парус»" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="deleted" temp-col-name="n3" />
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:nrn as nrn 
,:sfinoper as sfinoper 
,:snum as snum 
,:ddate as ddate 
,:npay_sum as npay_sum 
,:ndog as ndog 
,:inn as inn 
,:indebfrom as indebfrom 
,:indebto as indebto 
,:kodfil as kodfil 
,:namefil as namefil 
,:prsud as prsud 
,:nsud as nsud 
,:svdoc_type as svdoc_type 
,:svdoc_numb as svdoc_numb 
,:dvdoc_date as dvdoc_date 
,:sfdoc_type as sfdoc_type 
,:sfdoc_numb as sfdoc_numb 
,:dfdoc_date as dfdoc_date 
,:sescort_doctype as sescort_doctype 
,:sescort_docnumb as sescort_docnumb 
,:descort_docdate as descort_docdate 
,:deleted as deleted 
 
from dual ) 
 
loop 
insert into ur_gp_opl_info 
(nrn 
,sfinoper 
,snum 
,ddate 
,npay_sum 
,ndog 
,inn 
,indebfrom 
,indebto 
,kodfil 
,namefil 
,prsud 
,nsud 
,svdoc_type 
,svdoc_numb 
,dvdoc_date 
,sfdoc_type 
,sfdoc_numb 
,dfdoc_date 
,sescort_doctype 
,sescort_docnumb 
,descort_docdate 
,deleted 
) 
 values  
(r.nrn 
,r.sfinoper 
,r.snum 
,r.ddate 
,r.npay_sum 
,r.ndog 
,r.inn 
,r.indebfrom 
,r.indebto 
,r.kodfil 
,r.namefil 
,r.prsud 
,r.nsud 
,r.svdoc_type 
,r.svdoc_numb 
,r.dvdoc_date 
,r.sfdoc_type 
,r.sfdoc_numb 
,r.dfdoc_date 
,r.sescort_doctype 
,r.sescort_docnumb 
,r.descort_docdate 
,r.deleted 
) 
 returning  
nrn into :nrn; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_gp_opl_info where nrn=:nrn</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:nrn; 
if :row_state_id=1  then 
for r in  
 ( select  
:nrn as nrn 
,:sfinoper as sfinoper 
,:snum as snum 
,:ddate as ddate 
,:npay_sum as npay_sum 
,:ndog as ndog 
,:inn as inn 
,:indebfrom as indebfrom 
,:indebto as indebto 
,:kodfil as kodfil 
,:namefil as namefil 
,:prsud as prsud 
,:nsud as nsud 
,:svdoc_type as svdoc_type 
,:svdoc_numb as svdoc_numb 
,:dvdoc_date as dvdoc_date 
,:sfdoc_type as sfdoc_type 
,:sfdoc_numb as sfdoc_numb 
,:dfdoc_date as dfdoc_date 
,:sescort_doctype as sescort_doctype 
,:sescort_docnumb as sescort_docnumb 
,:descort_docdate as descort_docdate 
,:deleted as deleted 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,s2 
,d1 
,n2 
,s3 
,s4 
,d2 
,d3 
,s5 
,s6 
,s7 
,s8 
,s9 
,s10 
,d4 
,s11 
,s12 
,d5 
,s13 
,s14 
,d6 
,n3 
) 
 values  
('a' 
,:form_id 
,:nrn 
,:row_state_id 
,r.nrn 
,r.sfinoper 
,r.snum 
,r.ddate 
,r.npay_sum 
,r.ndog 
,r.inn 
,r.indebfrom 
,r.indebto 
,r.kodfil 
,r.namefil 
,r.prsud 
,r.nsud 
,r.svdoc_type 
,r.svdoc_numb 
,r.dvdoc_date 
,r.sfdoc_type 
,r.sfdoc_numb 
,r.dfdoc_date 
,r.sescort_doctype 
,r.sescort_docnumb 
,r.descort_docdate 
,r.deleted 
); 
end loop; 
else 
for r in  
 ( select  
:nrn as nrn 
,:sfinoper as sfinoper 
,:snum as snum 
,:ddate as ddate 
,:npay_sum as npay_sum 
,:ndog as ndog 
,:inn as inn 
,:indebfrom as indebfrom 
,:indebto as indebto 
,:kodfil as kodfil 
,:namefil as namefil 
,:prsud as prsud 
,:nsud as nsud 
,:svdoc_type as svdoc_type 
,:svdoc_numb as svdoc_numb 
,:dvdoc_date as dvdoc_date 
,:sfdoc_type as sfdoc_type 
,:sfdoc_numb as sfdoc_numb 
,:dfdoc_date as dfdoc_date 
,:sescort_doctype as sescort_doctype 
,:sescort_docnumb as sescort_docnumb 
,:descort_docdate as descort_docdate 
,:deleted as deleted 
,a.kod_mat 
 
from ur_gp_opl_info a  where nrn=:nrn) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,s2 
,d1 
,n2 
,s3 
,s4 
,d2 
,d3 
,s5 
,s6 
,s7 
,s8 
,s9 
,s10 
,d4 
,s11 
,s12 
,d5 
,s13 
,s14 
,d6 
,n3 
,n4 
) 
 values  
('a' 
,:form_id 
,:nrn 
,:row_state_id 
,r.nrn 
,r.sfinoper 
,r.snum 
,r.ddate 
,r.npay_sum 
,r.ndog 
,r.inn 
,r.indebfrom 
,r.indebto 
,r.kodfil 
,r.namefil 
,r.prsud 
,r.nsud 
,r.svdoc_type 
,r.svdoc_numb 
,r.dvdoc_date 
,r.sfdoc_type 
,r.sfdoc_numb 
,r.dfdoc_date 
,r.sescort_doctype 
,r.sescort_docnumb 
,r.descort_docdate 
,r.deleted 
,r.kod_mat 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_gp_opl_info set  
(nrn 
,sfinoper 
,snum 
,ddate 
,npay_sum 
,ndog 
,inn 
,indebfrom 
,indebto 
,kodfil 
,namefil 
,prsud 
,nsud 
,svdoc_type 
,svdoc_numb 
,dvdoc_date 
,sfdoc_type 
,sfdoc_numb 
,dfdoc_date 
,sescort_doctype 
,sescort_docnumb 
,descort_docdate 
,deleted 
) 
= 
 ( select  
:nrn as nrn 
,:sfinoper as sfinoper 
,:snum as snum 
,:ddate as ddate 
,:npay_sum as npay_sum 
,:ndog as ndog 
,:inn as inn 
,:indebfrom as indebfrom 
,:indebto as indebto 
,:kodfil as kodfil 
,:namefil as namefil 
,:prsud as prsud 
,:nsud as nsud 
,:svdoc_type as svdoc_type 
,:svdoc_numb as svdoc_numb 
,:dvdoc_date as dvdoc_date 
,:sfdoc_type as sfdoc_type 
,:sfdoc_numb as sfdoc_numb 
,:dfdoc_date as dfdoc_date 
,:sescort_doctype as sescort_doctype 
,:sescort_docnumb as sescort_docnumb 
,:descort_docdate as descort_docdate 
,:deleted as deleted 
 
from dual ) 
 
where 
nrn=:nrn 
;
end;
</update-text>
      <events>
        <useaction action-type="execute-update" call="ur_folders_g_update_plat" event-name="instead-object-delete">
          <column table="this" column="nrn" />
          <const>null</const>
        </useaction>
      </events>
      <scheme>
        <table name="ur_gp_opl_info" as="a">
          <columns>
            <column name="nrn" type="number" title="ID записи из КИСУ Парус" />
            <column name="sfinoper" type="string" title="Вид финансовой операции" />
            <column name="snum" type="string" title="Номер платежного документа" />
            <column name="ddate" type="date" title="Дата платежного документа" />
            <column name="npay_sum" type="number" title="Сумма платежного документа" />
            <column name="ndog" type="string" title="Номер Договора в ПК АСУСЭ" />
            <column name="inn" type="string" title="ИНН Контрагента" />
            <column name="indebfrom" type="date" title="Период задолженности С" />
            <column name="indebto" type="date" title="Период задолженности ПО" />
            <column name="kodfil" type="string" title="Код филиала Татэнергосбыта" />
            <column name="namefil" type="string" title="Полное наименование филиала Татэнергосбыт" />
            <column name="prsud" type="string" title="Признак привязки к судебному делу (не используется)" />
            <column name="nsud" type="string" title="Номер судебного дела" />
            <column name="svdoc_type" type="string" title="Документ основание: тип" />
            <column name="svdoc_numb" type="string" title="Документ основание: номер документа" />
            <column name="dvdoc_date" type="date" title="Документ основание: дата" />
            <column name="sfdoc_type" type="string" title="Документ-подтверждение: тип" />
            <column name="sfdoc_numb" type="string" title="Документ-подтверждение: номер документа" />
            <column name="dfdoc_date" type="date" title="Документ-подтверждение: дата" />
            <column name="sescort_doctype" type="string" title="Документ-сопровождение: тип" />
            <column name="sescort_docnumb" type="string" title="Документ-сопровождение: номер документа" />
            <column name="descort_docdate" type="date" title="Документ-сопровождение: дата" />
            <column name="deleted" type="number" title="Удален в КИСУ «Парус»" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="nrn" type="number" title="ID записи из КИСУ Парус" />
            <column name="sfinoper" type="string" title="Вид финансовой операции" />
            <column name="snum" type="string" title="Номер платежного документа" />
            <column name="ddate" type="date" title="Дата платежного документа" />
            <column name="npay_sum" type="number" title="Сумма платежного документа" />
            <column name="ndog" type="string" title="Номер Договора в ПК АСУСЭ" />
            <column name="inn" type="string" title="ИНН Контрагента" />
            <column name="indebfrom" type="date" title="Период задолженности С" />
            <column name="indebto" type="date" title="Период задолженности ПО" />
            <column name="kodfil" type="string" title="Код филиала Татэнергосбыта" />
            <column name="namefil" type="string" title="Полное наименование филиала Татэнергосбыт" />
            <column name="prsud" type="string" title="Признак привязки к судебному делу (не используется)" />
            <column name="nsud" type="string" title="Номер судебного дела" />
            <column name="svdoc_type" type="string" title="Документ основание: тип" />
            <column name="svdoc_numb" type="string" title="Документ основание: номер документа" />
            <column name="dvdoc_date" type="date" title="Документ основание: дата" />
            <column name="sfdoc_type" type="string" title="Документ-подтверждение: тип" />
            <column name="sfdoc_numb" type="string" title="Документ-подтверждение: номер документа" />
            <column name="dfdoc_date" type="date" title="Документ-подтверждение: дата" />
            <column name="sescort_doctype" type="string" title="Документ-сопровождение: тип" />
            <column name="sescort_docnumb" type="string" title="Документ-сопровождение: номер документа" />
            <column name="descort_docdate" type="date" title="Документ-сопровождение: дата" />
            <column name="deleted" type="number" title="Удален в КИСУ «Парус»" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="nrn_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="nrn_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select a.nrn as nrn, /**//*number*//*key*/
a.sfinoper as sfinoper, /**//*string*/
a.snum as snum, /**//*string*/
a.ddate as ddate, /**//*date*/
a.npay_sum as npay_sum, /**//*number*/
a.ndog as ndog, /**//*string*/
a.inn as inn, /**//*string*/
a.indebfrom as indebfrom, /**//*date*/
a.indebto as indebto, /**//*date*/
a.kodfil as kodfil, /**//*string*/
a.namefil as namefil, /**//*string*/
a.prsud as prsud, /**//*string*/
a.nsud as nsud, /**//*string*/
a.svdoc_type as svdoc_type, /**//*string*/
a.svdoc_numb as svdoc_numb, /**//*string*/
a.dvdoc_date as dvdoc_date, /**//*date*/
a.sfdoc_type as sfdoc_type, /**//*string*/
a.sfdoc_numb as sfdoc_numb, /**//*string*/
a.dfdoc_date as dfdoc_date, /**//*date*/
a.sescort_doctype as sescort_doctype, /**//*string*/
a.sescort_docnumb as sescort_docnumb, /**//*string*/
a.descort_docdate as descort_docdate, /**//*date*/
a.deleted as deleted, /**//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (
--ur_gp_opl_info
select a.nrn as nrn, /*ID записи из КИСУ Парус*//*number*//*key*/
a.sfinoper as sfinoper, /*Вид финансовой операции*//*string*/
a.snum as snum, /*Номер платежного документа*//*string*/
a.ddate as ddate, /*Дата платежного документа*//*date*/
a.npay_sum as npay_sum, /*Сумма платежного документа*//*number*/
a.ndog as ndog, /*Номер Договора в ПК АСУСЭ*//*string*/
a.inn as inn, /*ИНН Контрагента*//*string*/
a.indebfrom as indebfrom, /*Период задолженности С*//*date*/
a.indebto as indebto, /*Период задолженности ПО*//*date*/
a.kodfil as kodfil, /*Код филиала Татэнергосбыта*//*string*/
a.namefil as namefil, /*Полное наименование филиала Татэнергосбыт*//*string*/
a.prsud as prsud, /*Признак привязки к судебному делу (не используется)*//*string*/
a.nsud as nsud, /*Номер судебного дела*//*string*/
a.svdoc_type as svdoc_type, /*Документ основание: тип*//*string*/
a.svdoc_numb as svdoc_numb, /*Документ основание: номер документа*//*string*/
a.dvdoc_date as dvdoc_date, /*Документ основание: дата*//*date*/
a.sfdoc_type as sfdoc_type, /*Документ-подтверждение: тип*//*string*/
a.sfdoc_numb as sfdoc_numb, /*Документ-подтверждение: номер документа*//*string*/
a.dfdoc_date as dfdoc_date, /*Документ-подтверждение: дата*//*date*/
a.sescort_doctype as sescort_doctype, /*Документ-сопровождение: тип*//*string*/
a.sescort_docnumb as sescort_docnumb, /*Документ-сопровождение: номер документа*//*string*/
a.descort_docdate as descort_docdate, /*Документ-сопровождение: дата*//*date*/
a.deleted as deleted, /*Удален в КИСУ «Парус»*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.nrn as nrn,a.sfinoper as sfinoper,a.snum as snum,a.ddate as ddate,a.npay_sum as npay_sum,a.ndog as ndog,a.inn as inn,a.indebfrom as indebfrom,a.indebto as indebto,a.kodfil as kodfil,a.namefil as namefil,a.prsud as prsud,a.nsud as nsud,a.svdoc_type as svdoc_type,a.svdoc_numb as svdoc_numb,a.dvdoc_date as dvdoc_date,a.sfdoc_type as sfdoc_type,a.sfdoc_numb as sfdoc_numb,a.dfdoc_date as dfdoc_date,a.sescort_doctype as sescort_doctype,a.sescort_docnumb as sescort_docnumb,a.descort_docdate as descort_docdate,a.deleted as deleted,0 as is_new,1 as is_not_new  from ur_gp_opl_info a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.nrn=t.f2 ) and   a.nrn in :nrn_prm   union all  select t.n1 as nrn,t.s1 as sfinoper,t.s2 as snum,t.d1 as ddate,t.n2 as npay_sum,t.s3 as ndog,t.s4 as inn,t.d2 as indebfrom,t.d3 as indebto,t.s5 as kodfil,t.s6 as namefil,t.s7 as prsud,t.s8 as nsud,t.s9 as svdoc_type,t.s10 as svdoc_numb,t.d4 as dvdoc_date,t.s11 as sfdoc_type,t.s12 as sfdoc_numb,t.d5 as dfdoc_date,t.s13 as sescort_doctype,t.s14 as sescort_docnumb,t.d6 as descort_docdate,t.n3 as deleted,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :nrn_prm )
a
--\(select a.nrn as nrn,a.sfinoper as sfinoper,a.snum as snum,a.ddate as ddate,a.npay_sum as npay_sum,a.ndog as ndog,a.inn as inn,a.indebfrom as indebfrom,a.indebto as indebto,a.kodfil as kodfil,a.namefil as namefil,a.prsud as prsud,a.nsud as nsud,a.svdoc_type as svdoc_type,a.svdoc_numb as svdoc_numb,a.dvdoc_date as dvdoc_date,a.sfdoc_type as sfdoc_type,a.sfdoc_numb as sfdoc_numb,a.dfdoc_date as dfdoc_date,a.sescort_doctype as sescort_doctype,a.sescort_docnumb as sescort_docnumb,a.descort_docdate as descort_docdate,a.deleted as deleted,0 as is_new,1 as is_not_new  from ur_gp_opl_info a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.nrn=t.f2 ) and   a.nrn in :nrn_prm   union all  select t.n1 as nrn,t.s1 as sfinoper,t.s2 as snum,t.d1 as ddate,t.n2 as npay_sum,t.s3 as ndog,t.s4 as inn,t.d2 as indebfrom,t.d3 as indebto,t.s5 as kodfil,t.s6 as namefil,t.s7 as prsud,t.s8 as nsud,t.s9 as svdoc_type,t.s10 as svdoc_numb,t.d4 as dvdoc_date,t.s11 as sfdoc_type,t.s12 as sfdoc_numb,t.d5 as dfdoc_date,t.s13 as sescort_doctype,t.s14 as sescort_docnumb,t.d6 as descort_docdate,t.n3 as deleted,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :nrn_prm )
)
a
--\ur_gp_opl_info
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="t" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" column-editable="0" is-ms-upd="0" is-top="1">
      <select-text>
--
select t.name as tname/*string*/

from (
--ur_gp_opl_type
select u.payer_type as payer_type, /*number*//*key*/
u.name as name/*string*/

from (
(
(
--
select 0 as payer_type, /*number*//*key*/
'в бюджет' as name/*string*/

from dual

--\dual
)
--\
union all
(
--
select 1, /*key*/
'от ответчика'

from dual

--\dual
)
--\
union all
(
--
select 2, /*key*/
'из бюджета'

from dual

--\dual
)
--\
)
--\
)
u
--\
)
t
--\ur_gp_opl_type
where
t.payer_type = :opl_type --\
</select-text>
      <columns>
        <column name="tname" table="t" type="string" title="" ClientVisible="0" ColumnEditable="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="ur_gp_opl_type" as="t">
          <columns>
            <column name="tname" type="string" title="" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>