<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_dogplat_select" title="Выбор СФ/Счетов" timestamp="28.12.2023 14:44:27" form-size="1033;627" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_dogplat_select.xml" elid="199" ord="199" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Условия поиска" id="17767041">
      <field id="62939387" controlType="UIList" title="Договор" name="kod_dog" type="number" rows-limit="100" elid="588" ord="588" leaf="0" lvl="2" pelid="">
        <listquery>
          <query name="kr_dogovor_list(dep)" />
        </listquery>
      </field>
      <field id="47453175" controlType="UIDate" type="date" elid="397" ord="397" leaf="0" lvl="2" pelid="" name="dat" title="Дата расчета задолженности">
        <defaultquery>
          <query name="today" />
        </defaultquery>
      </field>
      <field id="31990351" controlType="UICheck" checked="1" type="number" elid="387" ord="387" leaf="1" lvl="2" pelid="" title="Только долговые" name="p_dolg" />
    </fieldgroup>
    <fieldgroup title="Найденные документы" id="51377266">
      <grid table="nach" show-checkbox="1" show-toolbar="1" id="30092096">
        <toolbar column-visible="0" id="8028013">
          <uicommand button-type="grid-refresh" column-visible="1" name="grid-refresh" control-name="ButtonRefresh" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="366" ord="366" leaf="1" lvl="2" pelid="" title="" id="2129126" />
          <uicommand action-type="save-and-close" button-type="custom-ok" title="Подтрердить выбор сохранить и закрыть" name="custom-ok" icon="Ok_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="381" ord="381" leaf="1" lvl="2" pelid="" id="45734851" />
        </toolbar>
        <columns id="40438508">
          <field table="nach" name="kod_sf" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="2112803" />
          <field table="nach" name="name" title="Договор" controlType="UIText" rows-limit="100" id="29284693" />
          <field table="nach" name="num_sf" title="Номер документа начисления" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="22797465" />
          <field table="nach" name="dat_sf" title="Дата документа начисления" controlType="UIDate" rows-limit="100" id="16223368" />
          <field table="nach" name="num_pl" title="Номер документа на оплату" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="4524163" />
          <field table="nach" name="ur_state_name" title="Юр. статус" controlType="UIText" rows-limit="100" id="24800239" />
          <field table="nach" name="ym" title="Отчетный период начисления" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="63615555" />
          <field table="nach" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="52299783" />
          <field table="nach" name="vid_sf" title="Вид документа" controlType="UICombo" rows-limit="100" id="8788468" />
          <field table="nach" name="sr_facras_nachisl" title="Начислено" controlType="UIText" edit-mask="N2" rows-limit="100" id="57855104" />
          <field table="nach" name="opl" title="Оплачено" controlType="UIText" edit-mask="N2" rows-limit="100" id="44429938" />
          <field table="nach" name="dolg" title="Посроченная задолженность" controlType="UIText" edit-mask="N2" rows-limit="100" id="10773949">
            <withparams id="24281746">
              <useparam name="dat" id="65034600" />
            </withparams>
          </field>
          <field table="nach" name="dat_bzad" title="Дата возникновения обязательства по погашению задолженности" controlType="UIDate" rows-limit="100" id="11864163" />
        </columns>
        <events id="15762235">
          <useaction event-name="checked-row-save" action-type="custom" id="45880779">
            <useaction action-type="execute-add" call="ur_dogplat_insert_sf" id="15210793">
              <useparam name="p_kod_sdp" id="62866187" />
              <useparam name="p_kod" id="43573586" />
              <useparam name="selected_kod_sf" id="27698714" />
              <useparam name="selected_summa" id="58745714" />
              <useparam name="dat" id="26515128" />
              <const id="63124538">null</const>
              <const id="57266220">null</const>
            </useaction>
            <useaction action-type="client-delete-row" id="865675" />
          </useaction>
        </events>
      </grid>
    </fieldgroup>
    <toolbar id="34684087">
      <uicommand button-type="form-save-and-close" column-visible="1" name="form-save-and-close" control-name="ButtonSaveAndClose" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="372" ord="372" leaf="1" lvl="2" pelid="" title="" id="38640566" />
    </toolbar>
  </form>
  <params>
    <param name="p_kod" type="number">
      <const>74</const>
    </param>
    <param name="p_kod_sdp" type="number">
      <const>4</const>
    </param>
    <param name="kodp" type="number">
      <const>2175</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod" type="number">
        <const>74</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const>4</const>
      </param>
      <param name="kodp" type="number">
        <const>2175</const>
      </param>
    </params>
    <fields>
      <field type="number" name="kod_dog" parname="kod_dog" title="Договор" />
      <field type="date" name="dat" parname="dat" title="Дата расчета задолженности" />
      <field type="number" name="p_dolg" parname="p_dolg" title="Только долговые" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="nach_has_changes" parname="nach_has_changes" />
    </fields>
    <table name="nach" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="sr_facvip" column-editable="0" key="kod_sf" is-ms-upd="1" is-top="1" key-dimension="kod_sf">
      <select-text>
--
select nach.kod_sf as kod_sf, /*number*//*key*/
kod_dog_fin.name as name, /*Договор*//*string*/
nach.num_sf as num_sf, /*Номер документа начисления*//*number*/
nach.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
kod_deb.num_pl as num_pl, /*Номер документа на оплату*//*number*/
ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.ym as ym, /*Отчетный период начисления*//*number*/
nach.vid_real as vid_real, /*number*/
nach.vid_sf as vid_sf, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.opl1 as opl, /*Оплачено*//*number*/
qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vid_sf_x_n.name as vid_sf_x_n, /*Вид документа*//*string*/
nach.is_new as is_new, /*number*/
nach.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(qube.opl1)  as opl1, /*Оплачено*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1, /*Оборот*//*number*/
sum( case  when ((kod_dogplat.kod = :p_kod )  and (kod_dogplat.kod_sdp = :p_kod_sdp ) )  then qube.ur_dogplat_count1 end )  as ur_dp_for_doc_cnt1, /*Наличие привязки по указанному документу*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date2, /*Оборот*//*number*/
max( nullif(greatest (  nvl( qube.kod_ur_state_51 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_61 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_41 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_31 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_21 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_11 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999) )  as kod_ur_state1/*Код юр. статуса*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_dogplat as kod_dogplat, /*number*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.opl1 as opl1, /*Оплачено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
(
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
null as kod_dogplat, 
qube.kod_sf as kod_sf, /*number*/
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as opl1, /*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dogplat_count1/*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2, /*Начислено*//*number*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select nach.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
sr_facras_a_d.kod_sf as kod_sf, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl2, /*Начислено*//*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad, /*date*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null ) )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_sf_a_d.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null ) )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
null as kod_dogplat, 
qube.kod_sf as kod_sf, /*number*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.opl1 as opl1, /*Оплачено*//*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dogplat_count1/*number*/

from (
--
select un.kod_sf as kod_sf, /*number*//*key*/
sum(un.opl1)  as opl1, /*Оплачено*//*number*/
max(un.kod_ur_state_61)  as kod_ur_state_61, /*number*/
max(un.kod_ur_state_21)  as kod_ur_state_21, /*number*/
max(un.kod_ur_state_41)  as kod_ur_state_41, /*number*/
max(un.kod_ur_state_51)  as kod_ur_state_51, /*number*/
max(un.kod_ur_state_31)  as kod_ur_state_31, /*number*/
max(un.kod_ur_state_11)  as kod_ur_state_11/*number*/

from (
(
(
--
select nach.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null ) )
--\
union all
(
--
select sr_opl_a_d.kod_sf as kod_sf, /*number*//*key*/
sr_opl_a_d.oplf as opl1, /*Оплачено*//*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as oplf/*Оплачено*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_a_d
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_a_d.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null ) )
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
ur_hist_mat_ba.kod_ur_state as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_ba_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_hist_mat_ba_a_d.kod_hist_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba on ur_hist_mat_ba.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_ba
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
ur_hist_mat_dec.kod_ur_state as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
ur_inkasso.kod_ur_state as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_inkasso_a_d.kod_inkasso as kod_inkasso_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_inkasso_a_d.kod_inkasso, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso on ur_inkasso.kod_inkasso = dims.kod_inkasso_prm--\ur_inkasso
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
ur_kazn.kod_ur_state as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_kazn_a_d.kod_kazn as kod_kazn_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_kazn_a_d.kod_kazn, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_kazn = dims.kod_kazn_prm--\ur_kazn
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
ur_mat_isp.kod_ur_state as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_mat_isp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_mat_isp_a_d.kod_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp on ur_mat_isp.kod_mat = dims.kod_mat_prm--\ur_mat_isp
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
ur_mat_pp.kod_ur_state as kod_ur_state_11/*number*/

from (
--
select ur_mat_pp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null )  group by
ur_mat_pp_a_d.kod_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp on ur_mat_pp.kod_mat = dims.kod_mat_prm--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_dogplat as kod_dogplat, /*number*/
qube.kod_sf as kod_sf, /*number*/
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as opl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1/*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
nach.kod_sf as kod_sf, /*number*/
kod_dogplat.cnt as ur_dogplat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.dat_ezad as dat_ezad/*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( nvl( nach.dat_ezad ,  DATE'8999-12-31'  ) )  &gt;= :dat )  and (( 1=1 ) )  and (nach.kod_sf is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
a.kod_dog as kod_dog, /*number*/
a.vid_real as vid_real, /*number*/
a.vid_sf as vid_sf, /*number*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
a.ym as ym, /*Отчетный период начисления*//*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.name as name/*Вид документа начисления*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf_x_n on nach.vid_sf = vid_sf_x_n.vid_sf--\sk_vid_sf
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on nach.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.num_pl as num_pl/*Номер документа на оплату*//*number*/

from sr_debet
a
--\sr_debet
)
kod_deb on nach.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
where
(qube.ur_dp_for_doc_cnt1 is null )  and (( 1=1 )  {  and (( nvl( qube.fin_ul_ob_on_date2 ,0)!=0 )  and ( nvl( :p_dolg  ,0)=1 ) )  } ) --\
</select-text>
      <columns>
        <column name="kod_sf" table="nach" type="number" title="" parname="selected_kod_sf" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_sf" temp-col-name="n1" />
        <column name="name" table="kod_dog_fin" type="string" title="Договор" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_fin.name as name, /*Договор*//*string*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_sf as kod_sf,a.kod_dog as kod_dog,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n5 as kod_dog,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.kod_dog as kod_dog,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n5 as kod_dog,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="num_sf" table="nach" type="number" title="Номер документа начисления" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_sf" temp-col-name="n9" />
        <column name="dat_sf" table="nach" type="date" title="Дата документа начисления" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_sf" temp-col-name="d1">
          <dep-refresh-cmd>
            <root table="nach">
              <params>
                <param name="dat" type="date" column="" />
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="dat" type="date" column="" />
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1/*Оборот*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_sf as kod_sf, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select nach.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
sr_facras_a_d.kod_sf as kod_sf, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_sf_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dolg" table="nach" />
            <dependant name="dat_bzad" table="nach" />
          </dependants>
        </column>
        <column name="num_pl" table="kod_deb" type="number" title="Номер документа на оплату" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_deb.num_pl as num_pl, /*Номер документа на оплату*//*number*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from (select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.num_pl as num_pl/*Номер документа на оплату*//*number*/

from sr_debet
a
--\sr_debet
)
kod_deb on nach.kod_deb = kod_deb.kod_deb--\sr_debet
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_state_name" table="ur_state" type="string" title="Юр. статус" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params />
              <select>
                <params />
                <query>
--
select ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.kod_sf as kod_sf

from (
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
(
(
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--
select un.kod_ur_state as kod_ur_state/*number*//*key*/

from (
(
(
--
select ur_hist_mat_ba_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_hist_mat_ba_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_hist_mat_dec_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_inkasso_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_inkasso_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_kazn_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_kazn_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_mat_isp_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_mat_isp_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_mat_pp_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_mat_pp_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_state.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
)
--\
)
un
--\
 group by
un.kod_ur_state/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_ur_state/*number*//*key*/
)
qube
--\
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_state.kod_ur_state = qube.kod_ur_state--\ur_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ym" table="nach" type="number" title="Отчетный период начисления" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n10" />
        <column name="vid_real" table="nach" type="number" title="Вид реализации" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vid_real" temp-col-name="n6">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_real" as="vid_real" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_real" into="n1">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид реализации" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select>
                <from>
from <query name="sk_vid_real" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_real">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид реализации" comment="полное наименование- уже не печатается в назначение платежа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" type="string" title="Вид реализации(аббр)" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" used="1">sk_vid_real
a
--\sk_vid_real
</table></from>)
a
--\sk_vid_real
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> ) like lower( </text><const><text>:vid_real_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид реализации" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_real_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_real" as="vid_real" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид реализации" />
                    <column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" />
                  </select>
                  <from>
                    <query name="sk_vid_real" as="a" title="Вид реализации" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="vid_real_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_real_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_real_filter" type="string">
                  <const>:vid_real_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="nach">
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from (select a.kod_sf as kod_sf,a.vid_real as vid_real,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n6 as vid_real,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_real as vid_real,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n6 as vid_real,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on nach.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="vid_real_x_n" table="nach" />
          </dependants>
        </column>
        <column name="vid_sf" table="nach" type="number" title="Вид документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vid_sf" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_sf.xml" elid="2895" ord="2895" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_sf" as="vid_sf" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_sf" into="n1">a.vid_sf as vid_sf, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид документа начисления" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид документа начисления*//*string*/
</column><column table="a" column="name_for_sf" as="name_for_sf" title="Вид документа начисления" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name_for_sf" into="s2">a.name_for_sf as name_for_sf, /*Вид документа начисления*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Аббревиатура" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s3">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select>
                <from>
from <query name="sk_vid_sf" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_sf
select <column table="a" column="vid_sf" type="number" title="" as="vid_sf" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_sf">a.vid_sf as vid_sf, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид документа начисления" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид документа начисления*//*string*/
</column><column table="a" column="name_for_sf" type="string" title="Вид документа начисления" as="name_for_sf" key="0" used="1" sourcetable="./a/a" sourcecolumn="name_for_sf">a.name_for_sf as name_for_sf, /*Вид документа начисления*//*string*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="sk_vid_sf" as="a" used="1">sk_vid_sf
a
--\sk_vid_sf
</table></from>)
a
--\sk_vid_sf
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_sf" as="vid_sf" title="" key="1" thissrc="vid_sf">a.vid_sf</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_sf" as="vid_sf" title="" key="1" thissrc="vid_sf">a.vid_sf</column><text txtype="func"> ) like lower( </text><const><text>:vid_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид документа начисления" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name_for_sf" as="name_for_sf" title="Вид документа начисления" thissrc="name_for_sf">a.name_for_sf</column><text txtype="func"> ) like lower( </text><const><text>:name_for_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Аббревиатура" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_sf.xml" elid="2895" ord="2895" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_sf.xml" elid="2895" ord="2895" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_sf_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="name_for_sf_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_sf" as="vid_sf" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид документа начисления" />
                    <column table="a" column="name_for_sf" as="name_for_sf" title="Вид документа начисления" />
                    <column table="a" column="abbr" as="abbr" title="Аббревиатура" />
                  </select>
                  <from>
                    <query name="sk_vid_sf" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_sf" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_sf" />
                        <useparam name="vid_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name_for_sf" />
                        <useparam name="name_for_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_sf_filter" />
                    <useparam name="name_filter" />
                    <useparam name="name_for_sf_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_sf_filter" type="string">
                  <const>:vid_sf_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="name_for_sf_filter" type="string">
                  <const>:name_for_sf_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="nach">
              <params>
                <param name="dat" type="date" column="" />
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="dat" type="date" column="" />
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_fin.name as name, /*Договор*//*string*/
kod_deb.num_pl as num_pl, /*Номер документа на оплату*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.opl1 as opl, /*Оплачено*//*number*/
qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vid_sf_x_n.name as vid_sf_x_n, /*Вид документа*//*string*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(qube.opl1)  as opl1, /*Оплачено*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1/*Оборот*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.opl1 as opl1, /*Оплачено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_sf as kod_sf, /*number*/
null as opl1, /*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2, /*Начислено*//*number*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select nach.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
sr_facras_a_d.kod_sf as kod_sf, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl2, /*Начислено*//*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_sf_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_sf as kod_sf, /*number*/
qube.opl1 as opl1, /*Оплачено*//*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sf as kod_sf, /*number*//*key*/
sum(un.opl1)  as opl1/*Оплачено*//*number*/

from (
(
(
--
select nach.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_a_d.kod_sf as kod_sf, /*number*//*key*/
sr_opl_a_d.oplf as opl1/*Оплачено*//*number*/

from (
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as oplf/*Оплачено*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_a_d
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
a.kod_dog as kod_dog, /*number*/
a.vid_real as vid_real, /*number*/
a.vid_sf as vid_sf, /*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.vid_real as vid_real,a.vid_sf as vid_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n5 as kod_dog,t.n6 as vid_real,t.n7 as vid_sf,t.d7 as dat_zadol,t.d1 as dat_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.vid_real as vid_real,a.vid_sf as vid_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n5 as kod_dog,t.n6 as vid_real,t.n7 as vid_sf,t.d7 as dat_zadol,t.d1 as dat_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.name as name/*Вид документа начисления*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf_x_n on nach.vid_sf = vid_sf_x_n.vid_sf--\sk_vid_sf
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on nach.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.num_pl as num_pl/*Номер документа на оплату*//*number*/

from sr_debet
a
--\sr_debet
)
kod_deb on nach.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="name" table="nach" />
            <dependant name="num_pl" table="nach" />
            <dependant name="sr_facras_nachisl" table="nach" />
            <dependant name="opl" table="nach" />
            <dependant name="dolg" table="nach" />
            <dependant name="dat_bzad" table="nach" />
            <dependant name="vid_real_x_n" table="nach" />
            <dependant name="vid_sf_x_n" table="nach" />
          </dependants>
        </column>
        <column name="sr_facras_nachisl" table="nach" type="number" title="Начислено" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select qube.kod_sf as kod_sf, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select sr_facras_a_d.kod_sf as kod_sf, /*number*//*key*/
sr_facras_a_d.nachisl as sr_facras_nachisl1/*Начислено*//*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select nach.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="opl" table="nach" type="number" title="Оплачено" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.opl1 as opl, /*Оплачено*//*number*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum(qube.opl1)  as opl1/*Оплачено*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
qube.opl1 as opl1/*Оплачено*//*number*/

from (
(
(
--
select qube.kod_sf as kod_sf, /*number*//*key*/
qube.opl1 as opl1/*Оплачено*//*number*/

from (
--
select un.kod_sf as kod_sf, /*number*//*key*/
sum(un.opl1)  as opl1/*Оплачено*//*number*/

from (
(
(
--
select nach.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_a_d.kod_sf as kod_sf, /*number*//*key*/
sr_opl_a_d.oplf as opl1/*Оплачено*//*number*/

from (
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as oplf/*Оплачено*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_a_d
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1/*number*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg" table="nach" type="number" title="Посроченная задолженность" parname="selected_summa" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="dat" type="date" column="" />
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="dat" type="date" column="" />
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1/*Оборот*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_sf as kod_sf, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select nach.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
sr_facras_a_d.kod_sf as kod_sf, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_sf_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_bzad" table="nach" type="date" title="Дата возникновения обязательства по погашению задолженности" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="nach.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from (select a.kod_sf as kod_sf,a.vid_real as vid_real,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n6 as vid_real,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_real as vid_real,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n6 as vid_real,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on nach.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_sf_x_n" table="nach.vid_sf" type="string" title="Вид документа" text-source-for="vid_sf" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_sf_x_n.name as vid_sf_x_n, /*Вид документа*//*string*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select qube.kod_sf as kod_sf/*number*//*key*/

from (
--
select un.kod_sf as kod_sf/*number*//*key*/

from (
(
(
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_sf as kod_sf/*number*//*key*/

from (
--
select nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
nach.kod_sf/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.name as name/*Вид документа начисления*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf_x_n on nach.vid_sf = vid_sf_x_n.vid_sf--\sk_vid_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="nach" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="nach" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_sf as kod_sf 
,:num_sf as num_sf 
,:dat_sf as dat_sf 
,:ym as ym 
,:vid_real as vid_real 
,:vid_sf as vid_sf 
 
from dual ) 
 
loop 
insert into sr_facvip 
(kod_sf 
,num_sf 
,dat_sf 
,ym 
,vid_real 
,vid_sf 
) 
 values  
(r.kod_sf 
,r.num_sf 
,r.dat_sf 
,r.ym 
,r.vid_real 
,r.vid_sf 
) 
 returning  
kod_sf into :kod_sf; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_facvip where kod_sf=:kod_sf</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='nach' 
and 
names=:form_id 
and 
f2=:kod_sf; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_sf as kod_sf 
,:num_sf as num_sf 
,:dat_sf as dat_sf 
,:ym as ym 
,:vid_real as vid_real 
,:vid_sf as vid_sf 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n9 
,d1 
,n10 
,n6 
,n7 
) 
 values  
('nach' 
,:form_id 
,:kod_sf 
,:row_state_id 
,r.kod_sf 
,r.num_sf 
,r.dat_sf 
,r.ym 
,r.vid_real 
,r.vid_sf 
); 
end loop; 
else 
for r in  
 ( select  
:kod_sf as kod_sf 
,:num_sf as num_sf 
,:dat_sf as dat_sf 
,:ym as ym 
,:vid_real as vid_real 
,:vid_sf as vid_sf 
,a.tep_el 
,a.kod_deb 
,a.kodp 
,a.kod_dog 
,a.vid_pl 
,a.dat_priem 
,a.pr_old 
,a.pr_sv 
,a.pr_osn 
,a.gru_pl 
,a.den 
,a.kod_dog_r 
,a.dat_uchet 
,a.dat_ezad 
,a.vist_day 
,a.num_sf_uch 
,a.ym_uch 
,a.d_m 
,a.u_m 
,a.pr_hand 
,a.vid_avans 
,a.prim_uo 
,a.kod_sf_old 
,a.kodp_plat 
,a.kod_sf_konsol 
,a.vid_recalc 
,a.kod_dog_link 
,a.pr_uch_av 
,a.kod_bu_akt 
,a.kod_sf_first 
,a.tip_bu_akt 
,a.kniga 
,a.dat_pen_ezad 
,a.dat_zadol 
,a.nom_sf 
,a.proc 
 
from sr_facvip a  where kod_sf=:kod_sf) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n9 
,d1 
,n10 
,n6 
,n7 
,n2 
,n3 
,n4 
,n5 
,n8 
,d2 
,n11 
,n12 
,n13 
,n14 
,n15 
,n16 
,d3 
,d4 
,n17 
,n18 
,n19 
,d5 
,s1 
,n20 
,n21 
,s2 
,n22 
,n23 
,n24 
,n25 
,n26 
,n27 
,n28 
,n29 
,n30 
,n31 
,d6 
,d7 
,s3 
,n32 
) 
 values  
('nach' 
,:form_id 
,:kod_sf 
,:row_state_id 
,r.kod_sf 
,r.num_sf 
,r.dat_sf 
,r.ym 
,r.vid_real 
,r.vid_sf 
,r.tep_el 
,r.kod_deb 
,r.kodp 
,r.kod_dog 
,r.vid_pl 
,r.dat_priem 
,r.pr_old 
,r.pr_sv 
,r.pr_osn 
,r.gru_pl 
,r.den 
,r.kod_dog_r 
,r.dat_uchet 
,r.dat_ezad 
,r.vist_day 
,r.num_sf_uch 
,r.ym_uch 
,r.d_m 
,r.u_m 
,r.pr_hand 
,r.vid_avans 
,r.prim_uo 
,r.kod_sf_old 
,r.kodp_plat 
,r.kod_sf_konsol 
,r.vid_recalc 
,r.kod_dog_link 
,r.pr_uch_av 
,r.kod_bu_akt 
,r.kod_sf_first 
,r.tip_bu_akt 
,r.kniga 
,r.dat_pen_ezad 
,r.dat_zadol 
,r.nom_sf 
,r.proc 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='nach' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_facvip set  
(kod_sf 
,num_sf 
,dat_sf 
,ym 
,vid_real 
,vid_sf 
) 
= 
 ( select  
:kod_sf as kod_sf 
,:num_sf as num_sf 
,:dat_sf as dat_sf 
,:ym as ym 
,:vid_real as vid_real 
,:vid_sf as vid_sf 
 
from dual ) 
 
where 
kod_sf=:kod_sf 
;
end;
</update-text>
      <scheme>
        <table name="sr_facvip" as="nach">
          <columns>
            <column name="kod_sf" type="number" title="" visible="0" />
            <column name="name" type="string" title="Договор" />
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="num_pl" type="number" format="F0" edit-mask="F0" title="Номер документа на оплату" />
            <column name="ur_state_name" type="string" title="Юр. статус" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчетный период начисления" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vid_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="opl" type="number" title="Оплачено" />
            <column name="dolg" type="number" title="Посроченная задолженность" />
            <column name="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_sf_x_n" type="string" title="Вид документа" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_sf" type="number" title="" visible="0" />
            <column name="name" type="string" title="Договор" />
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="num_pl" type="number" format="F0" edit-mask="F0" title="Номер документа на оплату" />
            <column name="ur_state_name" type="string" title="Юр. статус" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчетный период начисления" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vid_sf_x_n" type="string" title="Вид документа" />
            <column name="vid_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="opl" type="number" title="Оплачено" />
            <column name="dolg" type="number" title="Посроченная задолженность" />
            <column name="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="dat" type="date" column="" />
            <param name="kod_sf_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="dat" type="date" column="" />
              <param name="kod_sf_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select nach.kod_sf as kod_sf, /*number*//*key*/
kod_dog_fin.name as name, /*Договор*//*string*/
nach.num_sf as num_sf, /*Номер документа начисления*//*number*/
nach.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
kod_deb.num_pl as num_pl, /*Номер документа на оплату*//*number*/
ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.ym as ym, /*Отчетный период начисления*//*number*/
nach.vid_real as vid_real, /*number*/
nach.vid_sf as vid_sf, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.opl1 as opl, /*Оплачено*//*number*/
qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vid_sf_x_n.name as vid_sf_x_n, /*Вид документа*//*string*/
nach.is_new as is_new, /*number*/
nach.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(qube.opl1)  as opl1, /*Оплачено*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1, /*Оборот*//*number*/
max( nullif(greatest (  nvl( qube.kod_ur_state_51 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_61 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_41 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_31 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_21 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_11 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999) )  as kod_ur_state1/*Код юр. статуса*//*number*/

from (
--
select qube.kod_sf as kod_sf, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.opl1 as opl1, /*Оплачено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_sf as kod_sf, /*number*/
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as opl1, /*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf as kod_sf, /*number*//*key*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2, /*Начислено*//*number*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select nach.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
sr_facras_a_d.kod_sf as kod_sf, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl2, /*Начислено*//*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on sr_facras_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.dat_zadol as dat_zadol,a.dat_sf as dat_sf,a.vid_sf as vid_sf,a.kod_deb as kod_deb  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.d7 as dat_zadol,t.d1 as dat_sf,t.n7 as vid_sf,t.n3 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_sf_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_sf as kod_sf, /*number*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.opl1 as opl1, /*Оплачено*//*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sf as kod_sf, /*number*//*key*/
sum(un.opl1)  as opl1, /*Оплачено*//*number*/
max(un.kod_ur_state_61)  as kod_ur_state_61, /*number*/
max(un.kod_ur_state_21)  as kod_ur_state_21, /*number*/
max(un.kod_ur_state_41)  as kod_ur_state_41, /*number*/
max(un.kod_ur_state_51)  as kod_ur_state_51, /*number*/
max(un.kod_ur_state_31)  as kod_ur_state_31, /*number*/
max(un.kod_ur_state_11)  as kod_ur_state_11/*number*/

from (
(
(
--
select nach.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach
--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select sr_opl_a_d.kod_sf as kod_sf, /*number*//*key*/
sr_opl_a_d.oplf as opl1, /*Оплачено*//*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as oplf/*Оплачено*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_a_d
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on sr_opl_a_d.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null )
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
ur_hist_mat_ba.kod_ur_state as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_ba_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf2_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_hist_mat_ba_a_d.kod_hist_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba on ur_hist_mat_ba.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_ba
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
ur_hist_mat_dec.kod_ur_state as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
ur_inkasso.kod_ur_state as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_inkasso_a_d.kod_inkasso as kod_inkasso_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_inkasso_a_d.kod_inkasso, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso on ur_inkasso.kod_inkasso = dims.kod_inkasso_prm--\ur_inkasso
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
ur_kazn.kod_ur_state as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_kazn_a_d.kod_kazn as kod_kazn_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_kazn_a_d.kod_kazn, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_kazn = dims.kod_kazn_prm--\ur_kazn
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
ur_mat_isp.kod_ur_state as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_mat_isp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_mat_isp_a_d.kod_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp on ur_mat_isp.kod_mat = dims.kod_mat_prm--\ur_mat_isp
)
--\
union all
(
--
select dims.kod_sf as kod_sf, /*number*//*key*/
null as opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
ur_mat_pp.kod_ur_state as kod_ur_state_11/*number*/

from (
--
select ur_mat_pp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
nach.kod_sf as kod_sf/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from (select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
where
a.vid_sf not in (2 , 9) )
nach on kod_deb_sf1_a_d1.kod_sf = nach.kod_sf--\sr_facvip
where
nach.kod_sf is not null  group by
ur_mat_pp_a_d.kod_mat, /*number*//*key*/
nach.kod_sf/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp on ur_mat_pp.kod_mat = dims.kod_mat_prm--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sf/*number*//*key*/
)
qube
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
a.kod_dog as kod_dog, /*number*/
a.vid_real as vid_real, /*number*/
a.vid_sf as vid_sf, /*number*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
a.ym as ym, /*Отчетный период начисления*//*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.vid_real as vid_real,a.vid_sf as vid_sf,a.num_sf as num_sf,a.dat_sf as dat_sf,a.ym as ym,a.dat_zadol as dat_zadol,0 as is_new,1 as is_not_new  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n5 as kod_dog,t.n6 as vid_real,t.n7 as vid_sf,t.n9 as num_sf,t.d1 as dat_sf,t.n10 as ym,t.d7 as dat_zadol,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.vid_real as vid_real,a.vid_sf as vid_sf,a.num_sf as num_sf,a.dat_sf as dat_sf,a.ym as ym,a.dat_zadol as dat_zadol,0 as is_new,1 as is_not_new  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n3 as kod_deb,t.n5 as kod_dog,t.n6 as vid_real,t.n7 as vid_sf,t.n9 as num_sf,t.d1 as dat_sf,t.n10 as ym,t.d7 as dat_zadol,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
nach on nach.kod_sf = qube.kod_sf--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.name as name/*Вид документа начисления*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf_x_n on nach.vid_sf = vid_sf_x_n.vid_sf--\sk_vid_sf
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on nach.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.num_pl as num_pl/*Номер документа на оплату*//*number*/

from sr_debet
a
--\sr_debet
)
kod_deb on nach.kod_deb = kod_deb.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>