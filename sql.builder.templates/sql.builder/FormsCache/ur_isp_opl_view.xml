<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_isp_opl_view" title="Оплата по исп. листу [:ur_isp.num_reg]" timestamp="28.12.2023 14:56:44" form-size="1033;627" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_isp_opl_view.xml" elid="278" ord="278" leaf="0" lvl="2" pelid="">
    <field table="ur_isp" name="num_reg" title="Номер исп. листа" controlType="UIText" rows-limit="100" id="37505633" />
    <grid table="opl" show-toolbar="1" multi-select="0" show-footer="1" id="63140985">
      <toolbar id="25901771">
        <uicommand button-type="grid-delete" column-visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="367" ord="367" leaf="1" lvl="2" pelid="" title="" id="59516315" />
        <uicommand button-type="grid-save" column-visible="0" name="grid-save" control-name="ButtonCommit" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="365" ord="365" leaf="1" lvl="2" pelid="" title="" id="248127" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="13150762" />
      </toolbar>
      <columns id="10054774">
        <field table="opl" name="kod_opl" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="30616619" />
        <field table="opl" name="num_reg" title="Номер исп. листа" controlType="UIText" rows-limit="100" id="21071095" />
        <field table="opl" name="nump" title="Код абонента" width="114" controlType="UIText" rows-limit="100" id="11820636" />
        <field table="opl" name="ndog" title="Номер договора" width="96" controlType="UIText" rows-limit="100" id="54814121" />
        <field table="opl" name="sym" title="Период оплаты" controlType="UIText" rows-limit="100" id="65866895" />
        <field table="opl" name="dat_opl" title="Дата платежного документа" controlType="UIDate" rows-limit="100" id="43726270" />
        <field table="opl" name="num_opl" title="Номер документа оплаты" controlType="UIText" rows-limit="100" id="7890150" />
        <field table="opl" name="type_opl" title="Тип оплаты" width="152" controlType="UIText" rows-limit="100" id="57601719" />
        <field table="opl" name="vid_real" title="Вид реализации" width="130" controlType="UIText" rows-limit="100" id="65079918" />
        <field table="opl" name="opl" title="Оплата, руб." controlType="UIText" edit-mask="N2" rows-limit="100" id="709274" />
        <field table="opl" name="num_sf" title="Номер документа на оплату" width="103" controlType="UIText" rows-limit="100" id="44062652" />
        <field table="opl" name="dat_sf" title="Дата документа на оплату" controlType="UIDate" rows-limit="100" id="66495938" />
        <field table="opl" name="sf_sym" title="Период начисления" controlType="UIText" rows-limit="100" id="60204446" />
        <field table="opl" name="nachisl" title="Начисления, руб." controlType="UIText" edit-mask="N2" rows-limit="100" id="298302" />
        <field table="opl" name="kodbpol_name" title="Банк получателя" controlType="UIText" rows-limit="100" id="51149228" />
        <field table="opl" name="rs" title="Р/сч" width="139" controlType="UIText" rows-limit="100" id="44145029" />
        <field table="opl" name="pname" title="Информация о плательщике" width="202" controlType="UITextEx" rows-limit="100" id="26067590" />
        <field table="opl" name="kodb_name" title="Банк плательщика" width="235" controlType="UIText" rows-limit="100" id="25571664" />
        <field table="opl" name="remark" title="Примечание 1" width="272" controlType="UITextEx" rows-limit="100" id="3739187" />
        <field table="opl" name="prim" title="Примечание 2" width="173" controlType="UITextEx" rows-limit="100" id="45754295" />
      </columns>
    </grid>
    <toolbar id="58137901" />
  </form>
  <params>
    <param name="p_kod_isp" type="number">
      <const>1000000908</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod_isp" type="number">
        <const>1000000908</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_isp_has_changes" parname="ur_isp_has_changes" />
      <field type="string" name="opl_has_changes" parname="opl_has_changes" />
    </fields>
    <table name="ur_isp" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_isp" key="kod_isp" is-ms-upd="1" is-top="1" key-dimension="kod_isp">
      <select-text>
--
select ur_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
ur_isp.is_new as is_new, /*number*/
ur_isp.is_not_new as is_not_new, /*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp = :p_kod_isp --\
</select-text>
      <columns>
        <column name="num_reg" table="ur_isp" type="string" title="Номер исп. листа" ColumnVisible="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s1" />
        <column name="is_new" table="ur_isp" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_isp" type="number" title="" is-user-editable="1" />
        <column name="kod_isp" table="ur_isp" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:num_reg as num_reg 
,:kod_isp as kod_isp 
 
from dual ) 
 
loop 
insert into ur_isp 
(num_reg 
,kod_isp 
) 
 values  
(r.num_reg 
,r.kod_isp 
) 
 returning  
kod_isp into :kod_isp; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_isp where kod_isp=:kod_isp</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_isp' 
and 
names=:form_id 
and 
f2=:kod_isp; 
if :row_state_id=1  then 
for r in  
 ( select  
:num_reg as num_reg 
,:kod_isp as kod_isp 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n1 
) 
 values  
('ur_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.num_reg 
,r.kod_isp 
); 
end loop; 
else 
for r in  
 ( select  
:num_reg as num_reg 
,:kod_isp as kod_isp 
,a.dat_doc 
,a.gp_es 
,a.u_m 
,a.d_m 
,a.kod_folders 
,a.gp_otv 
,a.dat_post 
,a.dat_function 
,a.dat_srok 
,a.kod_emp 
,a.kod_hist_mat 
,a.kodp 
,a.opl_proc 
,a.opl_gpotv 
,a.ogr 
,a.kod_delo 
,a.osnr 
,a.peni 
,a.shtraf 
,a.dat_present 
,a.sum_present 
,a.prim 
,a.kod_isp_type 
,a.kod_info_potr 
,a.opl_ogr 
,a.kod_scan 
,a.dat_arh 
,a.work_done 
,a.dat_post_upr 
,a.incoming_number 
,a.number_sz 
,a.date_sz 
,a.opl_sud_izd_vvod 
,a.opl_astrent_vvod 
,a.opl_gp_vvod 
,a.opl_ogr_vvod 
,a.opl_peni_vvod 
,a.opl_osnreal_vvod 
 
from ur_isp a  where kod_isp=:kod_isp) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,n1 
,d2 
,n6 
,s4 
,d6 
,n5 
,n7 
,d3 
,d1 
,d4 
,n3 
,n2 
,n8 
,n9 
,n10 
,n11 
,n12 
,n13 
,n14 
,n15 
,d7 
,n16 
,s2 
,n17 
,n18 
,n19 
,n4 
,d5 
,s3 
,d8 
,s5 
,s6 
,d9 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
) 
 values  
('ur_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.num_reg 
,r.kod_isp 
,r.dat_doc 
,r.gp_es 
,r.u_m 
,r.d_m 
,r.kod_folders 
,r.gp_otv 
,r.dat_post 
,r.dat_function 
,r.dat_srok 
,r.kod_emp 
,r.kod_hist_mat 
,r.kodp 
,r.opl_proc 
,r.opl_gpotv 
,r.ogr 
,r.kod_delo 
,r.osnr 
,r.peni 
,r.shtraf 
,r.dat_present 
,r.sum_present 
,r.prim 
,r.kod_isp_type 
,r.kod_info_potr 
,r.opl_ogr 
,r.kod_scan 
,r.dat_arh 
,r.work_done 
,r.dat_post_upr 
,r.incoming_number 
,r.number_sz 
,r.date_sz 
,r.opl_sud_izd_vvod 
,r.opl_astrent_vvod 
,r.opl_gp_vvod 
,r.opl_ogr_vvod 
,r.opl_peni_vvod 
,r.opl_osnreal_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_isp' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_isp set  
(num_reg 
,kod_isp 
) 
= 
 ( select  
:num_reg as num_reg 
,:kod_isp as kod_isp 
 
from dual ) 
 
where 
kod_isp=:kod_isp 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_pir_sync_dat_arh">
          <column table="this" column="kod_isp" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_isp" as="ur_isp">
          <columns>
            <column name="num_reg" type="string" title="Номер исп. листа" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_isp_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_isp_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
ur_isp.is_new as is_new, /*number*/
ur_isp.is_not_new as is_not_new, /*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_isp as kod_isp,a.num_reg as num_reg,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.num_reg as num_reg,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="opl" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="sr_opl_sf_isp" key="kod_opl" is-ms-upd="0" is-top="1">
      <select-text>
--
select opl.kod_opl as kod_opl, /*number*//*key*/
opl.num_reg as num_reg, /*Номер исп. листа*//*string*/
opl.nump as nump, /*Код абонента*//*string*/
opl.ndog as ndog, /*Номер договора*//*string*/
opl.sym as sym, /*Период оплаты*//*string*/
opl.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
opl.num_opl as num_opl, /*Номер документа оплаты*//*string*/
opl.type_opl as type_opl, /*Тип оплаты*//*string*/
opl.vid_real as vid_real, /*Вид реализации*//*string*/
opl.opl as opl, /*Оплата, руб.*//*number*/
opl.num_sf as num_sf, /*Номер документа на оплату*//*string*/
opl.dat_sf as dat_sf, /*Дата документа на оплату*//*date*/
opl.sf_sym as sf_sym, /*Период начисления*//*string*/
opl.nachisl as nachisl, /*Начисления, руб.*//*number*/
opl.kodbpol_name as kodbpol_name, /*Банк получателя*//*string*/
opl.rs as rs, /*Р/сч*//*string*/
opl.pname as pname, /*Информация о плательщике*//*string*/
opl.kodb_name as kodb_name, /*Банк плательщика*//*string*/
opl.remark as remark, /*Примечание 1*//*string*/
opl.prim as prim/*Примечание 2*//*string*/

from (
--sr_opl_sf_isp
select kod_opl.kod_opl as kod_opl, /*number*//*key*/
kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
kodp.nump as nump, /*Код абонента*//*string*/
kod_dog.ndog as ndog, /*Номер договора*//*string*/
 trim(to_char( kod_opl.ym ,'9999.99'))  as sym, /*Период оплаты*//*string*/
kod_opl.dat_opl as dat_opl, /*Дата платежного документа*//*date*/
kod_opl.num_opl as num_opl, /*Номер документа оплаты*//*string*/
 decode( kod_type_opl.kod_type_opl , 0 , 'Разнесено на плат.док-ты' , kod_type_opl.name )  as type_opl, /*Тип оплаты*//*string*/
vid_real.name as vid_real, /*Вид реализации*//*string*/
qube.ur_opl_posl_il1 as opl, /*Оплата, руб.*//*number*/
kod_sf.nom_sf as num_sf, /*Номер документа на оплату*//*string*/
kod_sf.dat_sf as dat_sf, /*Дата документа на оплату*//*date*/
kod_sf.nachisl as nachisl, /*Начисления, руб.*//*number*/
 trim(to_char( kod_sf.ym ,'9999.99'))  as sf_sym, /*Период начисления*//*string*/
kodbps.name as kodbpol_name, /*Банк получателя*//*string*/
kodbpol.rs as rs, /*Р/сч*//*string*/
kod_link.pname as pname, /*Информация о плательщике*//*string*/
kodb.name as kodb_name, /*Банк плательщика*//*string*/
kod_link.remark as remark, /*Примечание 1*//*string*/
kod_link.prim as prim/*Примечание 2*//*string*/

from (
--
select qube.kod_opl as kod_opl, /*number*//*key*/
qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_dog as kod_dog, /*number*//*key*/
qube.kodp as kodp, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  as ur_opl_posl_il1/*Оплата по исп. листу*//*number*/

from (
--
select qube.kod_opl as kod_opl, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_dog as kod_dog, /*number*//*key*/
qube.kodp as kodp, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dog as kod_dog, /*number*//*key*/
null as kod_dogplat, 
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kodp as kodp, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dog as kod_dog, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kodp as kodp, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_dog as kod_dog, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kodp as kodp, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_opl.kod_dog as kod_dog, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kodp.kodp as kodp/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog1_a_d1 on kod_opl.kod_dog = kod_dog1_a_d1.kod_dog--\kr_dogovor
left outer join
(
--kr_payer
select a.kodp as kodp/**//*number*//*key*/

from kr_payer
a
--\kr_payer
)
kodp on kod_dog1_a_d1.kodp = kodp.kodp--\kr_payer
where
(kod_isp.kod_isp = :p_kod_isp )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_opl.kod_dog, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kodp.kodp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_dog, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kodp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dog as kod_dog, /*number*//*key*/
qube.kod_dogplat as kod_dogplat, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kodp as kodp, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dog as kod_dog, /*number*//*key*/
un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kodp as kodp, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dog as kod_dog, /*number*//*key*/
dims.kod_dogplat as kod_dogplat, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kodp as kodp, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_sf_a_d.kod_dog as kod_dog, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dog.kodp as kodp/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on kod_sf_a_d.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_isp.kod_isp = :p_kod_isp )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_sf_a_d.kod_dog, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dog.kodp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dog, /*number*//*key*/
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kodp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_opl, /*number*//*key*/
qube.kod_isp, /*number*//*key*/
qube.kod_dog, /*number*//*key*/
qube.kodp/*number*//*key*/
)
qube
--\
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kodp.kodp = qube.kodp--\kr_payer
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on kod_dog.kod_dog = qube.kod_dog--\kr_dogovor
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_sf as kod_sf, /*number*/
a.num_opl as num_opl, /*Номер платежного документа*//*string*/
a.ym as ym, /*Период оплаты*//*number*/
a.kod_type_opl as kod_type_opl, /*number*/
a.kod_link as kod_link, /*number*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on kod_opl.vid_real = vid_real.vid_real--\sk_vid_real
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kodbpol as kodbpol, /**//*number*/
a.pname as pname, /*Плательщик*//*string*/
a.remark as remark, /*Назначение платежа*//*string*/
a.kodb as kodb, /**//*number*/
a.prim as prim/**//*string*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on kod_opl.kod_link = kod_link.kod_link--\sr_opl_bank
left outer join
(
--ks_bank
select a.kodb as kodb, /**//*number*//*key*/
a.name as name/*Банк*//*string*/

from ks_bank
a
--\ks_bank
)
kodb on kod_link.kodb = kodb.kodb--\ks_bank
left outer join
(
--ks_bankpol
select a.kodbpol as kodbpol, /**//*number*//*key*/
a.kodb as kodb, /**//*number*/
a.rs as rs/*№ Счета*//*string*/

from ks_bankpol
a
--\ks_bankpol
)
kodbpol on kod_link.kodbpol = kodbpol.kodbpol--\ks_bankpol
left outer join
(
--ks_bank
select a.kodb as kodb, /**//*number*//*key*/
a.name as name/*Банк*//*string*/

from ks_bank
a
--\ks_bank
)
kodbps on kodbpol.kodb = kodbps.kodb--\ks_bank
left outer join
(
--sk_type_opl
select a.kod_type_opl as kod_type_opl, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_type_opl
a
--\sk_type_opl
)
kod_type_opl on kod_opl.kod_type_opl = kod_type_opl.kod_type_opl--\sk_type_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
a.ym as ym, /*Отчетный период начисления*//*number*/
a.nom_sf as nom_sf, /*Номер документа начисления*//*string*/
(
--
select sum(sr_facras_psh12.nachisl)  as nachisl/*Начислено*//*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_psh12
--\sr_facras
where
(sr_facras_psh12.kod_sf = a.kod_sf) )
--\
 as nachisl/*Начислено*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on kod_opl.kod_sf = kod_sf.kod_sf--\sr_facvip
where
 nvl( qube.ur_opl_posl_il1 ,0)  != nvl( 0 ,0) 
order by dat_opl, num_opl)
opl
--\sr_opl_sf_isp
--\
</select-text>
      <columns>
        <column name="kod_opl" table="opl" type="number" title="" ColumnVisible="0" is-refreshed="1" />
        <column name="num_reg" table="opl" type="string" title="Номер исп. листа" ColumnVisible="0" is-refreshed="1" />
        <column name="nump" table="opl" type="string" title="Код абонента" is-user-editable="1" is-refreshed="1" />
        <column name="ndog" table="opl" type="string" title="Номер договора" is-user-editable="1" is-refreshed="1" />
        <column name="sym" table="opl" type="string" title="Период оплаты" is-user-editable="1" is-refreshed="1" />
        <column name="dat_opl" table="opl" type="date" title="Дата платежного документа" is-user-editable="1" is-refreshed="1" />
        <column name="num_opl" table="opl" type="string" title="Номер документа оплаты" ColumnEditable="0" is-refreshed="1" />
        <column name="type_opl" table="opl" type="string" title="Тип оплаты" is-user-editable="1" is-refreshed="1" />
        <column name="vid_real" table="opl" type="string" title="Вид реализации" is-user-editable="1" is-refreshed="1" />
        <column name="opl" table="opl" type="number" title="Оплата, руб." is-user-editable="1" is-refreshed="1" />
        <column name="num_sf" table="opl" type="string" title="Номер документа на оплату" is-user-editable="1" is-refreshed="1" />
        <column name="dat_sf" table="opl" type="date" title="Дата документа на оплату" is-user-editable="1" is-refreshed="1" />
        <column name="sf_sym" table="opl" type="string" title="Период начисления" is-user-editable="1" is-refreshed="1" />
        <column name="nachisl" table="opl" type="number" title="Начисления, руб." is-user-editable="1" is-refreshed="1" />
        <column name="kodbpol_name" table="opl" type="string" title="Банк получателя" is-user-editable="1" is-refreshed="1" />
        <column name="rs" table="opl" type="string" title="Р/сч" is-user-editable="1" is-refreshed="1" />
        <column name="pname" table="opl" type="string" title="Информация о плательщике" is-user-editable="1" is-refreshed="1" />
        <column name="kodb_name" table="opl" type="string" title="Банк плательщика" is-user-editable="1" is-refreshed="1" />
        <column name="remark" table="opl" type="string" title="Примечание 1" is-user-editable="1" is-refreshed="1" />
        <column name="prim" table="opl" type="string" title="Примечание 2" is-user-editable="1" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="sr_opl_sf_isp" as="opl">
          <columns>
            <column name="kod_opl" type="number" title="" visible="0" />
            <column name="num_reg" type="string" title="Номер исп. листа" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="ndog" type="string" title="Номер договора" />
            <column name="sym" type="string" title="Период оплаты" />
            <column name="dat_opl" type="date" title="Дата платежного документа" />
            <column name="num_opl" type="string" title="Номер документа оплаты" />
            <column name="type_opl" type="string" title="Тип оплаты" />
            <column name="vid_real" type="string" title="Вид реализации" />
            <column name="opl" type="number" title="Оплата, руб." />
            <column name="num_sf" type="string" title="Номер документа на оплату" />
            <column name="dat_sf" type="date" title="Дата документа на оплату" />
            <column name="sf_sym" type="string" title="Период начисления" />
            <column name="nachisl" type="number" title="Начисления, руб." />
            <column name="kodbpol_name" type="string" title="Банк получателя" />
            <column name="rs" type="string" title="Р/сч" />
            <column name="pname" type="string" title="Информация о плательщике" />
            <column name="kodb_name" type="string" title="Банк плательщика" />
            <column name="remark" type="string" title="Примечание 1" />
            <column name="prim" type="string" title="Примечание 2" />
          </columns>
          <viewcolumns>
            <column name="kod_opl" type="number" title="" visible="0" />
            <column name="num_reg" type="string" title="Номер исп. листа" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="ndog" type="string" title="Номер договора" />
            <column name="sym" type="string" title="Период оплаты" />
            <column name="dat_opl" type="date" title="Дата платежного документа" />
            <column name="num_opl" type="string" title="Номер документа оплаты" />
            <column name="type_opl" type="string" title="Тип оплаты" />
            <column name="vid_real" type="string" title="Вид реализации" />
            <column name="opl" type="number" title="Оплата, руб." />
            <column name="num_sf" type="string" title="Номер документа на оплату" />
            <column name="dat_sf" type="date" title="Дата документа на оплату" />
            <column name="sf_sym" type="string" title="Период начисления" />
            <column name="nachisl" type="number" title="Начисления, руб." />
            <column name="kodbpol_name" type="string" title="Банк получателя" />
            <column name="rs" type="string" title="Р/сч" />
            <column name="pname" type="string" title="Информация о плательщике" />
            <column name="kodb_name" type="string" title="Банк плательщика" />
            <column name="remark" type="string" title="Примечание 1" />
            <column name="prim" type="string" title="Примечание 2" />
          </viewcolumns>
        </table>
      </scheme>
    </table>
  </dataset>
</root>