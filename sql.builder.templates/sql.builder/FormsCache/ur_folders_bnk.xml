<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_bnk" title="Иски в папке (бакротство)" security-id="asuse_ur_pir_isk" with-behavior="0" timestamp="28.12.2023 14:46:21" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\bnk.xml" elid="215" ord="215" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="30454834" />
    <field table="ur_folders" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="50937199" />
    <field table="ur_folders" name="not_vvod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="6496138" />
    <field table="ur_folders" name="kod_podr" title="Отделение" controlType="UICombo" rows-limit="100" id="61150552" />
    <field table="f10" name="val" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="40318207" />
    <splitcontainer id="2118706">
      <fieldgroup title="Материалы переданные в суд" id="50116354">
        <grid table="ur_mat" show-toolbar="1" id="49061380">
          <toolbar id="47534204">
            <uicommand object="ur_mat" name="form_ur_dogplat_doc_view_isk" button-type="select-money" editable="item_is_not_new" modal="1" title="Суммы по юр. документу" id="49012661">
              <const id="23177783">15</const>
              <useparam name="ur_folders_kodp" id="20462956" />
              <useparam name="dep" id="10794850" />
            </uicommand>
          </toolbar>
          <columns id="35113220">
            <field table="ur_mat" name="kod_mat" title="Материалы переданные в суд" controlType="UIText" edit-mask="N2" rows-limit="100" id="36284861" />
            <field table="ur_mat" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="53303943" />
            <field table="ur_mat" name="num_reg" title="№ исх." controlType="UIText" rows-limit="100" id="10900347" />
            <field table="ur_mat" name="dat_doc" title="Дата подачи в суд" controlType="UIDate" rows-limit="100" id="17434802" />
            <field table="ur_mat" name="dat_prin" title="Дата принятия документов в суде" controlType="UIDate" rows-limit="100" id="51998937" />
            <field table="ur_mat" name="kod_sud" title="Суд / судебный участок" controlType="UICombo" rows-limit="100" id="16520961" />
            <field table="ur_mat" name="kod_doc" title="Документ" controlType="UICombo" rows-limit="100" id="51261525" />
            <field table="ur_mat" name="kod_subject" title="Предмет" controlType="UICombo" rows-limit="100" id="42066651" />
            <field table="ur_mat" name="ur_dp_sum_all" title="Задолженность по иску" controlType="UIText" edit-mask="N2" rows-limit="100" id="23508747" />
            <field table="ur_mat" name="ur_dogplat_ym_min" title="Период задолженности с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="950079" />
            <field table="ur_mat" name="ur_dogplat_ym_max" title="Период задолженности по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="51526303" />
            <field table="ur_mat" name="ur_dp_sum_osn" title="Основная реал." controlType="UIText" edit-mask="N2" rows-limit="100" id="50676099" />
            <field table="ur_mat" name="ur_dp_sum_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="11262864" />
            <field table="ur_mat" name="ur_dp_sum_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="29111612" />
            <field table="ur_mat" name="ogr" title="Расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="35924302" />
            <field table="ur_mat" name="sum_gp" title="Сумма гос. пошлины" controlType="UIText" edit-mask="N2" rows-limit="100" id="46743131" />
            <field table="ur_mat" name="num_pp_gp" title="№ пл. пор. ГП" controlType="UIText" rows-limit="100" id="36517961" />
            <field table="ur_mat" name="dat_gp" title="Дата перечисления ГП" controlType="UIDate" rows-limit="100" id="61254607" />
            <field table="ur_mat" name="ur_opl_bnk_do_resh" title="Оплата до вынес. реш. суда" controlType="UIText" edit-mask="N2" rows-limit="100" id="64173816" />
            <field table="ur_mat" name="dolg_on_resh" title="Остаток задолженности до вынес. реш. суда" controlType="UIText" edit-mask="N2" rows-limit="100" id="51913910" />
            <field table="ur_mat" name="dat_otz" title="Дата возврата" controlType="UIDate" rows-limit="100" id="60685350" />
            <field table="ur_mat" name="kod_ret_isk" title="Причина возврата документа" controlType="UICombo" rows-limit="100" id="8635829" />
            <field table="ur_mat" name="fio_otz" title="За чьей подписью возврат" controlType="UIText" rows-limit="100" id="4737111" />
            <field table="ur_mat" name="prichina_otz" title="Основание для возврата" controlType="UIText" rows-limit="100" id="66959394" />
            <field table="ur_mat" name="prim_mor_dz" title="Причина исключения/изменения мораторной задолженности" controlType="UIText" rows-limit="100" id="27523290" />
            <field table="ur_mat" name="kod_scan" title="Файл" controlType="UIFile" rows-limit="100" id="51971487" />
            <field table="ur_mat" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="42644114" />
            <field table="ur_mat" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="27899030" />
          </columns>
        </grid>
      </fieldgroup>
      <fieldgroup title="История рассмотрения" id="64616429">
        <grid table="ur_hist_mat" show-toolbar="1" id="17679842">
          <toolbar id="8446187">
            <uicommand object="ur_hist_mat" name="create_form_ur_hist_mat_bnk" button-type="custom-add-form" title="Добавить" modal="1" editable="item_is_not_new" icon="AddForm_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="376" ord="376" leaf="1" lvl="2" pelid="" id="6874256">
              <const id="38921086">null</const>
              <useparam name="cur_kod_mat" id="49551676" />
              <const id="8993137">15</const>
            </uicommand>
            <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="364" ord="364" leaf="1" lvl="2" pelid="" title="" id="28791252" />
            <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="49541356" />
          </toolbar>
          <columns id="45077277">
            <field table="ur_hist_mat" name="kod_mat" title="Материалы переданные в суд" controlType="UICombo" rows-limit="100" id="44994766" />
            <field table="ur_hist_mat" name="dat_post" title="Дата прин. суд. акта" controlType="UIDate" rows-limit="100" id="13305058" />
            <field table="ur_hist_mat" name="kod_post" title="Судебный акт" controlType="UICombo" rows-limit="100" id="61381470" />
            <field table="ur_hist_mat" name="result_name" title="Результат рассмотрения" controlType="UIText" rows-limit="100" id="17877702" />
            <field table="ur_hist_mat" name="decision" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="41187506" />
            <band title="Задолженность по решению суда" id="15351250">
              <field table="ur_hist_mat" name="ur_dp_priz_all" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="54262643" />
              <field table="ur_hist_mat" name="ur_dp_ym_min_priz" title="Период задолж. с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="19535492" />
              <field table="ur_hist_mat" name="ur_dp_ym_max_priz" title="Период задолж. по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="47255799" />
              <field table="ur_hist_mat" name="ur_dp_priz_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="206970" />
              <field table="ur_hist_mat" name="ur_dp_priz_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="44509003" />
              <field table="ur_hist_mat" name="ur_dp_priz_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="1978297" />
              <field table="ur_hist_mat" name="gp_otv" title="ГП с ответчика" controlType="UIText" edit-mask="N2" rows-limit="100" id="54111137" />
              <field table="ur_hist_mat" name="gp_es" title="ГП с исца" controlType="UIText" edit-mask="N2" rows-limit="100" id="63717361" />
              <field table="ur_hist_mat" name="gp_ret" title="ГП возврат из бюджета" controlType="UIText" edit-mask="N2" rows-limit="100" id="2729000" />
            </band>
            <band title="Оплата по. реш. суда" id="30658363">
              <field table="ur_hist_mat" name="ur_opl_bnk_posl_resh" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="8309934" />
              <field table="ur_hist_mat" name="ur_opl_bnk_posl_resh_osn" title="Осн. реал." controlType="UIText" edit-mask="N2" rows-limit="100" id="55829325" />
              <field table="ur_hist_mat" name="ur_opl_bnk_posl_resh_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="58269114" />
              <field table="ur_hist_mat" name="ur_opl_bnk_posl_resh_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="66531145" />
              <field table="ur_hist_mat" name="ur_opl_bnk_posl_resh_gp" title="ГП" controlType="UIText" edit-mask="N2" rows-limit="100" id="54911651" />
            </band>
            <band title="Текущая задолженность" id="57010133">
              <field table="ur_hist_mat" name="fin_ul_ob" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="14280524" />
              <field table="ur_hist_mat" name="fin_ul_ob_osn" title="Осн. реал. " controlType="UIText" edit-mask="N2" rows-limit="100" id="50001645" />
              <field table="ur_hist_mat" name="fin_ul_ob_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="62877361" />
              <field table="ur_hist_mat" name="fin_ul_ob_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="59087928" />
              <field table="ur_hist_mat" name="fin_ul_ob_gp" title="ГП" controlType="UIText" edit-mask="N2" rows-limit="100" id="17771055" />
            </band>
            <field table="ur_hist_mat" name="kod_scan" title="Файл" controlType="UIFile" rows-limit="100" id="1638189" />
            <field table="ur_hist_mat" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="15159027" />
          </columns>
          <events id="61111421">
            <useaction object="ur_hist_mat" name="form_ur_hist_mat_bnk" event-name="double-click" modal="1" id="16347505">
              <useparam name="cur_kod_mat1" id="40285472" />
              <const id="54755257">15</const>
            </useaction>
          </events>
        </grid>
      </fieldgroup>
    </splitcontainer>
  </form>
  <params>
    <param name="kod_folders" type="number">
      <const>1018</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const exclude="1">158</const>
        <const>1018</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_mat_has_changes" parname="ur_mat_has_changes" />
      <field type="string" name="ur_hist_mat_has_changes" parname="ur_hist_mat_has_changes" />
      <field type="string" name="f10_has_changes" parname="f10_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders_ba">
      <select-text>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_podr as kod_podr, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
a.kod_podr as kod_podr, /*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from ur_folders
a
--\ur_folders
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
where
ur_folders.kod_folders = :kod_folders --\
</select-text>
      <columns>
        <column name="kodp" table="ur_folders" type="number" title="Абонент" parname="ur_folders_kodp" ColumnVisible="0" ColumnMandatory="1" NewVal="kodp_new_val" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="ur_folders" />
            <dependant name="kodp_new_val" table="ur_folders" />
          </dependants>
        </column>
        <column name="vvod" table="ur_folders" type="number" title="Способ учета задолженности" parname="is_vvod" ColumnVisible="0" ColumnDefault="ur_folders_vvod_default" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vvod" temp-col-name="n10">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="not_vvod" table="ur_folders" />
            <dependant name="vvod_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="not_vvod" table="ur_folders" type="number" title="" parname="is_not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr" table="ur_folders" type="number" title="Отделение" parname="dep" ColumnVisible="0" ColumnDefault="kr_dep_current" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_podr" temp-col-name="n11">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_podr_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="kodp_x_n" table="ur_folders.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="ur_folders.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr_x_n" table="ur_folders.kod_podr" type="string" title="Отделение" text-source-for="kod_podr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_new_val" table="ur_folders" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
kod_isp.kodp as kodp_new_val, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kodp 
,vvod 
,kod_podr 
,kod_folders 
) 
 values  
(r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n11 
,n1 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.dat_finish 
,a.num_doc 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n11 
,n1 
,n3 
,n4 
,n5 
,d1 
,n6 
,s1 
,d2 
,n7 
,n8 
,n9 
,d3 
,s2 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.dat_finish 
,r.num_doc 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kodp 
,vvod 
,kod_podr 
,kod_folders 
) 
= 
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_ba" as="ur_folders">
          <columns>
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" visible="0" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" visible="0" />
            <column name="kod_podr_x_n" type="string" title="Отделение" visible="0" />
            <column name="kodp_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_podr as kod_podr, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_ba
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
a.kod_podr as kod_podr, /*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_ba/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 9)
ur_folders
--\ur_folders_ba
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_mat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_mat" key="kod_mat" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_mat_ba">
      <select-text>
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_mat.num_reg as num_reg, /*№ исх.*//*string*/
ur_mat.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
ur_mat.kod_sud as kod_sud, /*number*/
ur_mat.kod_doc as kod_doc, /*number*/
ur_mat.kod_subject as kod_subject, /*number*/
qube.ur_dp_sum_all1 as ur_dp_sum_all, /*Задолженность по иску*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период задолженности с*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период задолженности по*//*number*/
qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реал.*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_sum_shtr1 as ur_dp_sum_shtr, /*Штраф*//*number*/
ur_mat.ogr as ogr, /*Расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_mat.sum_gp as sum_gp, /*Сумма гос. пошлины*//*number*/
ur_mat.num_pp_gp as num_pp_gp, /*№ пл. пор. ГП*//*string*/
ur_mat.dat_gp as dat_gp, /*Дата перечисления ГП*//*date*/
qube.ur_opl_bnk_do_resh1 as ur_opl_bnk_do_resh, /*Оплата до вынес. реш. суда*//*number*/
qube.dolg_on_resh1 as dolg_on_resh, /*Остаток задолженности до вынес. реш. суда*//*number*/
ur_mat.dat_otz as dat_otz, /*Дата возврата*//*date*/
ur_mat.kod_ret_isk as kod_ret_isk, /*number*/
ur_mat.fio_otz as fio_otz, /*За чьей подписью возврат*//*string*/
ur_mat.prichina_otz as prichina_otz, /*Основание для возврата*//*string*/
ur_mat.prim_mor_dz as prim_mor_dz, /*Причина исключения/изменения мораторной задолженности*//*string*/
ur_mat.kod_scan as kod_scan, /*number*/
ur_mat.prim as prim, /*Примечание*//*string*/
ur_mat.is_not_new as is_not_new, /*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_sud_x_n.name as kod_sud_x_n, /*Суд / судебный участок*//*string*/
kod_doc_x_n.abbr as kod_doc_x_n, /*Документ*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
kod_ret_isk_x_n.name as kod_ret_isk_x_n, /*Причина возврата документа*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count, /*number*/
ur_mat.kod_sdp as kod_sdp, /*number*/
ur_mat.is_new as is_new, /*number*/
ur_mat.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( case  when (kod_dogplat.vid_real != 9)  then qube.ur_dp_summa1 end )  as ur_dp_sum_all1, /*Выст. по юр. док. всего*//*number*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период задолженности с*//*number*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период задолженности по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa1 end )  as ur_dp_sum_osn1, /*Выст. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_summa1 end )  as ur_dp_sum_shtr1, /*Выст. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec_ba.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_do_resh1, /*Оплата до вынес. реш. суда*//*number*/
sum( case  when (kod_hist_mat_dec.dat_post is not null )  then ( nvl( qube.ur_dp_summa2 ,0)  -nvl( ( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  as dolg_on_resh1, /*Остаток задолженности до вынес. реш. суда*//*number*/
sum(qube.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
(ur_mat.kod_folders = :fk_kod_folders )  and (ur_mat.kod_mat is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_hist_mat_ba_a_d.cnt as ur_hist_mat_ba_count1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_hist_mat_ba_a_d.kod_mat = ur_mat.kod_mat_ba--\ur_mat_ba
where
(ur_mat.kod_folders = :fk_kod_folders )  and (ur_mat.kod_mat is not null ) )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
(ur_mat.kod_folders = :fk_kod_folders )  and (ur_mat.kod_mat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = ur_mat.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
(ur_mat.kod_folders = :fk_kod_folders )  and (ur_mat.kod_mat is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as kr_dog_name1, /*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa2)  as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.ym_max as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
ur_dogplat.ym_min as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
ur_dogplat.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
ur_dogplat.summa as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
(ur_mat.kod_folders = :fk_kod_folders )  and (ur_mat.kod_mat is not null )  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min, /*Период начисления с*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_doc as kod_doc, /*number*/
a.num_reg as num_reg, /*Номер иска*//*string*/
a.kod_ret_isk as kod_ret_isk, /*number*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.dat_otz as dat_otz, /*Дата возврата*//*date*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.fio_otz as fio_otz, /*За чьей подписью возврат*//*string*/
a.kod_subject as kod_subject, /*number*/
a.prichina_otz as prichina_otz, /*Основание для возврата*//*string*/
a.sum_gp as sum_gp, /*Оплачено госпошлины при подаче*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.dat_gp as dat_gp, /*Дата перечисления ГП*//*date*/
a.kod_sud as kod_sud, /*number*/
a.num_pp_gp as num_pp_gp, /*№ пл. пор. ГП*//*string*/
nvl(a.ogr,0)  as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.prim_mor_dz as prim_mor_dz, /*Причина исключения/изменения мораторной задолженности*//*string*/
a.kod_scan as kod_scan, /*number*/
kod_folders.kod_sdp as kod_sdp, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--uk_ret_isk
select a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
a.name as name/*Причина возврата документа*//*string*/

from uk_ret_isk
a
--\uk_ret_isk
)
kod_ret_isk_x_n on ur_mat.kod_ret_isk = kod_ret_isk_x_n.kod_ret_isk--\uk_ret_isk
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_mat.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc_x_n on ur_mat.kod_doc = kod_doc_x_n.kod_doc--\us_doc
left outer join
(
--us_sud
select a.kod_sud as kod_sud, /*number*//*key*/
a.name as name/*Судебный участок*//*string*/

from us_sud
a
--\us_sud
)
kod_sud_x_n on ur_mat.kod_sud = kod_sud_x_n.kod_sud--\us_sud
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</select-text>
      <columns>
        <column name="kod_mat" table="ur_mat" type="number" title="Материалы переданные в суд" parname="cur_kod_mat" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n3" />
        <column name="kr_dog_name" table="ur_mat" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="num_reg" table="ur_mat" type="string" title="№ исх." ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s2" />
        <column name="dat_doc" table="ur_mat" type="date" title="Дата подачи в суд" is-user-editable="1" Mandatory="dat_otz" is-updateable="1" is-updateable-ext="1" update-target="dat_doc" temp-col-name="d5" />
        <column name="dat_prin" table="ur_mat" type="date" title="Дата принятия документов в суде" is-user-editable="1" Mandatory="qube.ur_hist_mat_ba_count" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.dat_prin as dat_prin,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.d2 as dat_prin,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.dat_prin as dat_prin,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.d2 as dat_prin,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sud" table="ur_mat" type="number" title="Суд / судебный участок" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_sud" temp-col-name="n10">
          <sel-list-compiled>
            <root>
              <query class="1" title="Суд / судебный участок" order="name, kod_sud" timestamp="13.09.2023 15:45:32" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_sud.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="name">name</column>
                  <column column="kod_sud">kod_sud</column>
                </order>
                <select>--a
select <column table="us_sud" column="kod_sud" key="1" as="kod_sud" used="1" type="number" sourcetable="./a/us_sud" sourcecolumn="kod_sud" into="n1">us_sud.kod_sud as kod_sud, /*number*//*key*/
</column><column table="us_sud" column="kod_parent" as="kod_parent" key="0" used="1" type="number" sourcetable="./a/us_sud" sourcecolumn="kod_parent" reference="us_sud" refcol="kod_sud" into="n2">us_sud.kod_parent as kod_parent, /*number*/
</column><column table="us_sud" column="name" title="Судебный участок" as="name" key="0" used="1" type="string" sourcetable="./a/us_sud" sourcecolumn="name" into="s1">us_sud.name as name/*Судебный участок*//*string*/
</column></select>
                <from>
from <query name="us_sud" as="us_sud" path="./a/us_sud" haskeys="1" used="1">(
<select>--us_sud
select <column table="a" column="kod_sud" type="number" key="1" as="kod_sud" sourcetable="./a/us_sud" sourcecolumn="kod_sud" used="1">a.kod_sud as kod_sud, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Судебный участок" as="name" key="0" sourcetable="./a/us_sud" sourcecolumn="name" used="1">a.name as name, /*Судебный участок*//*string*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="us_sud" refcol="kod_sud" key="0" sourcetable="./a/us_sud" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent/*number*/
</column></select><from>
from <table name="us_sud" as="a" title="Суд / судебный участок" used="1">us_sud
a
--\us_sud
</table></from>)
us_sud
--\us_sud
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="us_sud" column="kod_sud" key="1" as="kod_sud" thissrc="kod_sud">us_sud.kod_sud</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="us_sud" column="kod_sud" key="1" as="kod_sud" thissrc="kod_sud">us_sud.kod_sud</column><text txtype="func"> ) like lower( </text><const><text>:kod_sud_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="us_sud" column="kod_parent" as="kod_parent" thissrc="kod_parent">us_sud.kod_parent</column><text txtype="func"> ) like lower( </text><const><text>:kod_parent_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="us_sud" column="name" title="Судебный участок" as="name" thissrc="name">us_sud.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by name, kod_sud</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Суд / судебный участок" order="name, kod_sud" timestamp="13.09.2023 15:45:32" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_sud.xml" haskeys="1" as="a">
              <queries>
                <query class="1" title="Суд / судебный участок" order="name, kod_sud" timestamp="13.09.2023 15:45:32" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_sud.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_sud_filter" type="string" />
                    <param name="kod_parent_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="us_sud" column="kod_sud" key="1" as="kod_sud" />
                    <column table="us_sud" column="kod_parent" as="kod_parent" />
                    <column table="us_sud" column="name" title="Судебный участок" as="name" />
                  </select>
                  <from>
                    <query name="us_sud" as="us_sud" title="Суд / судебный участок" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_sud" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_sud" />
                        <useparam name="kod_sud_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_parent" />
                        <useparam name="kod_parent_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="name" />
                    <column column="kod_sud" />
                  </order>
                  <order>
                    <column column="name" />
                    <column column="kod_sud" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_sud_filter" />
                    <useparam name="kod_parent_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_sud_filter" type="string">
                  <const>:kod_sud_filter </const>
                </param>
                <param name="kod_parent_filter" type="string">
                  <const>:kod_parent_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sud_x_n.name as kod_sud_x_n, /*Суд / судебный участок*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_sud as kod_sud, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_sud as kod_sud,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n10 as kod_sud,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_sud as kod_sud,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n10 as kod_sud,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_sud
select a.kod_sud as kod_sud, /*number*//*key*/
a.name as name/*Судебный участок*//*string*/

from us_sud
a
--\us_sud
)
kod_sud_x_n on ur_mat.kod_sud = kod_sud_x_n.kod_sud--\us_sud
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_sud_x_n" table="ur_mat" />
          </dependants>
        </column>
        <column name="kod_doc" table="ur_mat" type="number" title="Документ" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_doc" temp-col-name="n5">
          <sel-list-compiled>
            <root>
              <query class="1" title="Документ" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_doc.xml" elid="2635" ord="2635" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="kod_doc" into="n1">a.kod_doc as kod_doc, /*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr" into="s1">a.abbr as abbr, /*Аббревиатура*//*string*/
</column><column table="a" column="name" type="string" title="Вид документа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name" into="s2">a.name as name/*Вид документа*//*string*/
</column></select>
                <from>
from <query name="us_doc" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_doc
select <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp, /*number*/
</column><column table="a" column="name" type="string" title="Вид документа" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name, /*Вид документа*//*string*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" vid="1" as="abbr" key="0" sourcetable="./a/a" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="us_doc" as="a" title="Документ" used="1">us_doc
a
--\us_doc
</table></from>)
a
--\us_doc
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_sdp">a.kod_sdp</column><text txtype="func"> in </text><const><text>:kod_sdp </text></const>) </call><text txtype="func"> } </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" thissrc="kod_doc">a.kod_doc</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" thissrc="kod_doc">a.kod_doc</column><text txtype="func"> ) like lower( </text><const><text>:kod_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" type="string" title="Вид документа" as="name" key="0" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Документ" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_doc.xml" elid="2635" ord="2635" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Документ" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_doc.xml" elid="2635" ord="2635" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="kod_sdp" type="number" column="kod_sdp" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_doc_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" />
                    <column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" />
                    <column table="a" column="name" type="string" title="Вид документа" as="name" key="0" />
                  </select>
                  <from>
                    <query name="us_doc" as="a" title="Документ" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="in" optional="1">
                          <column table="a" column="kod_sdp" />
                          <useparam name="kod_sdp" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_doc" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_doc" />
                        <useparam name="kod_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_sdp" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_doc_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_sdp" type="number" column="kod_sdp">
                  <const>:kod_sdp </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_doc_filter" type="string">
                  <const>:kod_doc_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="kod_sdp" type="number" column="kod_sdp" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_doc_x_n.abbr as kod_doc_x_n, /*Документ*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc_x_n on ur_mat.kod_doc = kod_doc_x_n.kod_doc--\us_doc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_doc_x_n" table="ur_mat" />
          </dependants>
        </column>
        <column name="kod_subject" table="ur_mat" type="number" title="Предмет" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_subject" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" elid="3024" ord="3024" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_subject" as="kod_subject" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_subject" into="n1">a.kod_subject as kod_subject, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Предмет иска" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Предмет иска*//*string*/
</column></select>
                <from>
from <query name="us_subject" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_subject
select <column table="a" column="kod_subject" type="number" key="1" as="kod_subject" used="1" sourcetable="./a/a" sourcecolumn="kod_subject">a.kod_subject as kod_subject, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Предмет иска" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Предмет иска*//*string*/
</column></select><from>
from <table name="us_subject" as="a" title="Предмет" used="1">us_subject
a
--\us_subject
</table></from>)
a
--\us_subject
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> ) like lower( </text><const><text>:kod_subject_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Предмет иска" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" elid="3024" ord="3024" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" elid="3024" ord="3024" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_subject_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_subject" as="kod_subject" title="" key="1" />
                    <column table="a" column="name" as="name" title="Предмет иска" />
                  </select>
                  <from>
                    <query name="us_subject" as="a" title="Предмет" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="kod_subject_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_subject_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_subject_filter" type="string">
                  <const>:kod_subject_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_subject as kod_subject, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_subject as kod_subject,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n8 as kod_subject,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_subject as kod_subject,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n8 as kod_subject,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_mat.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_subject_x_n" table="ur_mat" />
          </dependants>
        </column>
        <column name="ur_dp_sum_all" table="ur_mat" type="number" title="Задолженность по иску" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_all1 as ur_dp_sum_all, /*Задолженность по иску*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real != 9)  then qube.ur_dp_summa1 end )  as ur_dp_sum_all1/*Выст. по юр. док. всего*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa/*Выставленно по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dogplat_ym_min" table="ur_mat" type="number" title="Период задолженности с" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период задолженности с*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1/*Период задолженности с*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
(
(
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
ur_dogplat.ym_min as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min/*Период начисления с*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as ur_dogplat_ym_min1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dogplat_ym_max" table="ur_mat" type="number" title="Период задолженности по" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период задолженности по*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1/*Период задолженности по*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
(
(
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
ur_dogplat.ym_max as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as ur_dogplat_ym_max1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_osn" table="ur_mat" type="number" title="Основная реал." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реал.*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa1 end )  as ur_dp_sum_osn1/*Выст. по юр. док. осн. реал.*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa/*Выставленно по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_peni" table="ur_mat" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1/*Выст. по юр. док. пени*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa/*Выставленно по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_shtr" table="ur_mat" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_shtr1 as ur_dp_sum_shtr, /*Штраф*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_summa1 end )  as ur_dp_sum_shtr1/*Выст. по юр. док. штрафы*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa/*Выставленно по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ogr" table="ur_mat" type="number" title="Расх. за введ. огранич. реж. энергопотребл." is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ogr" temp-col-name="n12" />
        <column name="sum_gp" table="ur_mat" type="number" title="Сумма гос. пошлины" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sum_gp" temp-col-name="n9" />
        <column name="num_pp_gp" table="ur_mat" type="string" title="№ пл. пор. ГП" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_pp_gp" temp-col-name="s8" />
        <column name="dat_gp" table="ur_mat" type="date" title="Дата перечисления ГП" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_gp" temp-col-name="d6" />
        <column name="ur_opl_bnk_do_resh" table="ur_mat" type="number" title="Оплата до вынес. реш. суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_do_resh1 as ur_opl_bnk_do_resh, /*Оплата до вынес. реш. суда*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec_ba.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_do_resh1/*Оплата до вынес. реш. суда*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = ur_mat.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_resh" table="ur_mat" type="number" title="Остаток задолженности до вынес. реш. суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_resh1 as dolg_on_resh, /*Остаток задолженности до вынес. реш. суда*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum( case  when (kod_hist_mat_dec.dat_post is not null )  then ( nvl( qube.ur_dp_summa1 ,0)  -nvl( ( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  as dolg_on_resh1/*Остаток задолженности до вынес. реш. суда*//*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa/*Выставленно по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_otz" table="ur_mat" type="date" title="Дата возврата" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_otz" temp-col-name="d4" />
        <column name="kod_ret_isk" table="ur_mat" type="number" title="Причина возврата документа" is-user-editable="1" Mandatory="dat_otz" is-updateable="1" is-updateable-ext="1" update-target="kod_ret_isk" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query class="1" title="Причина возврата документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_ret_isk.xml" elid="2960" ord="2960" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_ret_isk" as="kod_ret_isk" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_ret_isk" into="n1">a.kod_ret_isk as kod_ret_isk, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Причина возврата документа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Причина возврата документа*//*string*/
</column></select>
                <from>
from <query name="uk_ret_isk" as="a" path="./a/a" haskeys="1" used="1">(
<select>--uk_ret_isk
select <column table="a" column="kod_ret_isk" type="number" as="kod_ret_isk" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="kod_ret_isk">a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Причина возврата документа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name/*Причина возврата документа*//*string*/
</column></select><from>
from <table name="uk_ret_isk" as="a" title="Причина возврата документа" used="1">uk_ret_isk
a
--\uk_ret_isk
</table></from>)
a
--\uk_ret_isk
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_ret_isk" as="kod_ret_isk" title="" key="1" thissrc="kod_ret_isk">a.kod_ret_isk</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_ret_isk" as="kod_ret_isk" title="" key="1" thissrc="kod_ret_isk">a.kod_ret_isk</column><text txtype="func"> ) like lower( </text><const><text>:kod_ret_isk_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Причина возврата документа" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Причина возврата документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_ret_isk.xml" elid="2960" ord="2960" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Причина возврата документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_ret_isk.xml" elid="2960" ord="2960" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_ret_isk_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_ret_isk" as="kod_ret_isk" title="" key="1" />
                    <column table="a" column="name" as="name" title="Причина возврата документа" />
                  </select>
                  <from>
                    <query name="uk_ret_isk" as="a" title="Причина возврата документа" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_ret_isk" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_ret_isk" />
                        <useparam name="kod_ret_isk_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_ret_isk_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_ret_isk_filter" type="string">
                  <const>:kod_ret_isk_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_ret_isk_x_n.name as kod_ret_isk_x_n, /*Причина возврата документа*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_ret_isk as kod_ret_isk, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_ret_isk as kod_ret_isk,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n7 as kod_ret_isk,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_ret_isk as kod_ret_isk,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n7 as kod_ret_isk,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--uk_ret_isk
select a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
a.name as name/*Причина возврата документа*//*string*/

from uk_ret_isk
a
--\uk_ret_isk
)
kod_ret_isk_x_n on ur_mat.kod_ret_isk = kod_ret_isk_x_n.kod_ret_isk--\uk_ret_isk
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_ret_isk_x_n" table="ur_mat" />
          </dependants>
        </column>
        <column name="fio_otz" table="ur_mat" type="string" title="За чьей подписью возврат" is-user-editable="1" Mandatory="dat_otz" is-updateable="1" is-updateable-ext="1" update-target="fio_otz" temp-col-name="s5" />
        <column name="prichina_otz" table="ur_mat" type="string" title="Основание для возврата" is-user-editable="1" Mandatory="dat_otz" is-updateable="1" is-updateable-ext="1" update-target="prichina_otz" temp-col-name="s6" />
        <column name="prim_mor_dz" table="ur_mat" type="string" title="Причина исключения/изменения мораторной задолженности" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim_mor_dz" temp-col-name="s9" />
        <column name="kod_scan" table="ur_mat" type="number" title="Файл" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_scan" temp-col-name="n30">
          <sel-list-compiled>
            <root>
              <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_scan" as="kod_scan" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_scan" into="n1">a.kod_scan as kod_scan, /**//*number*//*key*/
</column><column table="a" column="file_name" as="file_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="file_name" into="s1">a.file_name as file_name/**//*string*/
</column></select>
                <from>
from <query name="ur_scan_docs" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_scan_docs
select <column table="a" column="kod_scan" type="number" comment="уникальный ключ" as="kod_scan" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_scan" used="1">a.kod_scan as kod_scan, /*number*//*key*/
</column><column table="a" column="file_name" type="string" title="" comment="имя файла" vid="1" spec-column="file-name" as="file_name" key="0" sourcetable="./a/a" sourcecolumn="file_name" used="1">a.file_name as file_name/**//*string*/
</column></select><from>
from <table name="ur_scan_docs" as="a" title="Файл" used="1">ur_scan_docs
a
--\ur_scan_docs
</table></from>)
a
--\ur_scan_docs
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> ) like lower( </text><const><text>:kod_scan_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="file_name" as="file_name" title="" thissrc="file_name">a.file_name</column><text txtype="func"> ) like lower( </text><const><text>:file_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_scan_filter" type="string" />
                    <param name="file_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_scan" as="kod_scan" title="" key="1" />
                    <column table="a" column="file_name" as="file_name" title="" />
                  </select>
                  <from>
                    <query name="ur_scan_docs" as="a" title="Файл" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="kod_scan_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="file_name" />
                        <useparam name="file_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_scan_filter" />
                    <useparam name="file_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_scan_filter" type="string">
                  <const>:kod_scan_filter </const>
                </param>
                <param name="file_name_filter" type="string">
                  <const>:file_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_scan as kod_scan, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_scan_x_n" table="ur_mat" />
          </dependants>
        </column>
        <column name="prim" table="ur_mat" type="string" title="Примечание" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s7" />
        <column name="is_not_new" table="ur_mat" type="number" title="" parname="item_is_not_new" ColumnVisible="0" />
        <column name="kod_mat_x_n" table="ur_mat.kod_mat" type="string" title="Материалы переданные в суд" text-source-for="kod_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sud_x_n" table="ur_mat.kod_sud" type="string" title="Суд / судебный участок" text-source-for="kod_sud" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sud_x_n.name as kod_sud_x_n, /*Суд / судебный участок*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_sud as kod_sud, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_sud as kod_sud,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n10 as kod_sud,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_sud as kod_sud,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n10 as kod_sud,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_sud
select a.kod_sud as kod_sud, /*number*//*key*/
a.name as name/*Судебный участок*//*string*/

from us_sud
a
--\us_sud
)
kod_sud_x_n on ur_mat.kod_sud = kod_sud_x_n.kod_sud--\us_sud
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_doc_x_n" table="ur_mat.kod_doc" type="string" title="Документ" text-source-for="kod_doc" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_doc_x_n.abbr as kod_doc_x_n, /*Документ*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc_x_n on ur_mat.kod_doc = kod_doc_x_n.kod_doc--\us_doc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_subject_x_n" table="ur_mat.kod_subject" type="string" title="Предмет" text-source-for="kod_subject" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_subject as kod_subject, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_subject as kod_subject,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n8 as kod_subject,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_subject as kod_subject,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n8 as kod_subject,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_mat.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_ret_isk_x_n" table="ur_mat.kod_ret_isk" type="string" title="Причина возврата документа" text-source-for="kod_ret_isk" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_ret_isk_x_n.name as kod_ret_isk_x_n, /*Причина возврата документа*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_ret_isk as kod_ret_isk, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_ret_isk as kod_ret_isk,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n7 as kod_ret_isk,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_ret_isk as kod_ret_isk,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n7 as kod_ret_isk,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--uk_ret_isk
select a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
a.name as name/*Причина возврата документа*//*string*/

from uk_ret_isk
a
--\uk_ret_isk
)
kod_ret_isk_x_n on ur_mat.kod_ret_isk = kod_ret_isk_x_n.kod_ret_isk--\uk_ret_isk
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan_x_n" table="ur_mat.kod_scan" type="string" title="Файл" text-source-for="kod_scan" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_scan as kod_scan, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ba_count" table="ur_mat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count, /*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(qube.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
sum(un.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select ur_hist_mat_ba_a_d.kod_mat as kod_mat_ba, /*number*//*key*/
ur_hist_mat_ba_a_d.cnt as ur_hist_mat_ba_count1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_hist_mat_ba_a_d.kod_mat = ur_mat.kod_mat_ba--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as ur_hist_mat_ba_count1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sdp" table="ur_mat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_sdp.xml" elid="2961" ord="2961" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_sdp" as="kod_sdp" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_sdp" into="n1">a.kod_sdp as kod_sdp, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Юридический документ" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Юридический документ*//*string*/
</column></select>
                <from>
from <query name="uk_sdp" as="a" path="./a/a" haskeys="1" used="1">(
<select>--uk_sdp
select <column table="a" column="kod_sdp" type="number" as="kod_sdp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Юридический документ" vid="1" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Юридический документ*//*string*/
</column></select><from>
from <table name="uk_sdp" as="a" used="1">uk_sdp
a
--\uk_sdp
</table></from>)
a
--\uk_sdp
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_sdp" as="kod_sdp" title="" key="1" thissrc="kod_sdp">a.kod_sdp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_sdp" as="kod_sdp" title="" key="1" thissrc="kod_sdp">a.kod_sdp</column><text txtype="func"> ) like lower( </text><const><text>:kod_sdp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Юридический документ" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_sdp.xml" elid="2961" ord="2961" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\uk_sdp.xml" elid="2961" ord="2961" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_sdp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_sdp" as="kod_sdp" title="" key="1" />
                    <column table="a" column="name" as="name" title="Юридический документ" />
                  </select>
                  <from>
                    <query name="uk_sdp" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_sdp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_sdp" />
                        <useparam name="kod_sdp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_sdp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_sdp_filter" type="string">
                  <const>:kod_sdp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_mat.kod_sdp as kod_sdp, /*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
kod_folders.kod_sdp as kod_sdp, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_mat" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_mat" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n4">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
qube.ur_dp_sum_all1 as ur_dp_sum_all, /*Задолженность по иску*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период задолженности с*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период задолженности по*//*number*/
qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реал.*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_sum_shtr1 as ur_dp_sum_shtr, /*Штраф*//*number*/
qube.ur_opl_bnk_do_resh1 as ur_opl_bnk_do_resh, /*Оплата до вынес. реш. суда*//*number*/
qube.dolg_on_resh1 as dolg_on_resh, /*Остаток задолженности до вынес. реш. суда*//*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_sud_x_n.name as kod_sud_x_n, /*Суд / судебный участок*//*string*/
kod_doc_x_n.abbr as kod_doc_x_n, /*Документ*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
kod_ret_isk_x_n.name as kod_ret_isk_x_n, /*Причина возврата документа*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count, /*number*/
ur_mat.kod_sdp as kod_sdp, /*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( case  when (kod_dogplat.vid_real != 9)  then qube.ur_dp_summa1 end )  as ur_dp_sum_all1, /*Выст. по юр. док. всего*//*number*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период задолженности с*//*number*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период задолженности по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa1 end )  as ur_dp_sum_osn1, /*Выст. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_summa1 end )  as ur_dp_sum_shtr1, /*Выст. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec_ba.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_do_resh1, /*Оплата до вынес. реш. суда*//*number*/
sum( case  when (kod_hist_mat_dec.dat_post is not null )  then ( nvl( qube.ur_dp_summa2 ,0)  -nvl( ( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  as dolg_on_resh1, /*Остаток задолженности до вынес. реш. суда*//*number*/
sum(qube.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_hist_mat_ba_a_d.cnt as ur_hist_mat_ba_count1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_hist_mat_ba_a_d.kod_mat = ur_mat.kod_mat_ba--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = ur_mat.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as kr_dog_name1, /*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa2)  as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.ym_max as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
ur_dogplat.ym_min as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
ur_dogplat.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
ur_dogplat.summa as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min, /*Период начисления с*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc, /*number*/
a.kod_ret_isk as kod_ret_isk, /*number*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.kod_subject as kod_subject, /*number*/
a.kod_sud as kod_sud, /*number*/
a.kod_scan as kod_scan, /*number*/
kod_folders.kod_sdp as kod_sdp, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_ret_isk as kod_ret_isk,a.dat_prin as dat_prin,a.kod_subject as kod_subject,a.kod_sud as kod_sud,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n7 as kod_ret_isk,t.d2 as dat_prin,t.n8 as kod_subject,t.n10 as kod_sud,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_doc as kod_doc,a.kod_ret_isk as kod_ret_isk,a.dat_prin as dat_prin,a.kod_subject as kod_subject,a.kod_sud as kod_sud,a.kod_scan as kod_scan,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n5 as kod_doc,t.n7 as kod_ret_isk,t.d2 as dat_prin,t.n8 as kod_subject,t.n10 as kod_sud,t.n30 as kod_scan,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--uk_ret_isk
select a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
a.name as name/*Причина возврата документа*//*string*/

from uk_ret_isk
a
--\uk_ret_isk
)
kod_ret_isk_x_n on ur_mat.kod_ret_isk = kod_ret_isk_x_n.kod_ret_isk--\uk_ret_isk
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_mat.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc_x_n on ur_mat.kod_doc = kod_doc_x_n.kod_doc--\us_doc
left outer join
(
--us_sud
select a.kod_sud as kod_sud, /*number*//*key*/
a.name as name/*Судебный участок*//*string*/

from us_sud
a
--\us_sud
)
kod_sud_x_n on ur_mat.kod_sud = kod_sud_x_n.kod_sud--\us_sud
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kr_dog_name" table="ur_mat" />
            <dependant name="dat_prin" table="ur_mat" />
            <dependant name="ur_dp_sum_all" table="ur_mat" />
            <dependant name="ur_dogplat_ym_min" table="ur_mat" />
            <dependant name="ur_dogplat_ym_max" table="ur_mat" />
            <dependant name="ur_dp_sum_osn" table="ur_mat" />
            <dependant name="ur_dp_sum_peni" table="ur_mat" />
            <dependant name="ur_dp_sum_shtr" table="ur_mat" />
            <dependant name="ur_opl_bnk_do_resh" table="ur_mat" />
            <dependant name="dolg_on_resh" table="ur_mat" />
            <dependant name="kod_mat_x_n" table="ur_mat" />
            <dependant name="kod_sud_x_n" table="ur_mat" />
            <dependant name="kod_doc_x_n" table="ur_mat" />
            <dependant name="kod_subject_x_n" table="ur_mat" />
            <dependant name="kod_ret_isk_x_n" table="ur_mat" />
            <dependant name="kod_scan_x_n" table="ur_mat" />
            <dependant name="ur_hist_mat_ba_count" table="ur_mat" />
            <dependant name="kod_sdp" table="ur_mat" />
          </dependants>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_mat as kod_mat 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_sud as kod_sud 
,:kod_doc as kod_doc 
,:kod_subject as kod_subject 
,:ogr as ogr 
,:sum_gp as sum_gp 
,:num_pp_gp as num_pp_gp 
,:dat_gp as dat_gp 
,:dat_otz as dat_otz 
,:kod_ret_isk as kod_ret_isk 
,:fio_otz as fio_otz 
,:prichina_otz as prichina_otz 
,:prim_mor_dz as prim_mor_dz 
,:kod_scan as kod_scan 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_mat 
(kod_mat 
,num_reg 
,dat_doc 
,kod_sud 
,kod_doc 
,kod_subject 
,ogr 
,sum_gp 
,num_pp_gp 
,dat_gp 
,dat_otz 
,kod_ret_isk 
,fio_otz 
,prichina_otz 
,prim_mor_dz 
,kod_scan 
,prim 
,kod_folders 
) 
 values  
(r.kod_mat 
,r.num_reg 
,r.dat_doc 
,r.kod_sud 
,r.kod_doc 
,r.kod_subject 
,r.ogr 
,r.sum_gp 
,r.num_pp_gp 
,r.dat_gp 
,r.dat_otz 
,r.kod_ret_isk 
,r.fio_otz 
,r.prichina_otz 
,r.prim_mor_dz 
,r.kod_scan 
,r.prim 
,r.kod_folders 
) 
 returning  
kod_mat into :kod_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_mat where kod_mat=:kod_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_mat' 
and 
names=:form_id 
and 
f2=:kod_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_mat as kod_mat 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_sud as kod_sud 
,:kod_doc as kod_doc 
,:kod_subject as kod_subject 
,:ogr as ogr 
,:sum_gp as sum_gp 
,:num_pp_gp as num_pp_gp 
,:dat_gp as dat_gp 
,:dat_otz as dat_otz 
,:kod_ret_isk as kod_ret_isk 
,:fio_otz as fio_otz 
,:prichina_otz as prichina_otz 
,:prim_mor_dz as prim_mor_dz 
,:kod_scan as kod_scan 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,s2 
,d5 
,n10 
,n5 
,n8 
,n12 
,n9 
,s8 
,d6 
,d4 
,n7 
,s5 
,s6 
,s9 
,n30 
,s7 
,n4 
) 
 values  
('ur_mat' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.kod_mat 
,r.num_reg 
,r.dat_doc 
,r.kod_sud 
,r.kod_doc 
,r.kod_subject 
,r.ogr 
,r.sum_gp 
,r.num_pp_gp 
,r.dat_gp 
,r.dat_otz 
,r.kod_ret_isk 
,r.fio_otz 
,r.prichina_otz 
,r.prim_mor_dz 
,r.kod_scan 
,r.prim 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_mat as kod_mat 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_sud as kod_sud 
,:kod_doc as kod_doc 
,:kod_subject as kod_subject 
,:ogr as ogr 
,:sum_gp as sum_gp 
,:num_pp_gp as num_pp_gp 
,:dat_gp as dat_gp 
,:dat_otz as dat_otz 
,:kod_ret_isk as kod_ret_isk 
,:fio_otz as fio_otz 
,:prichina_otz as prichina_otz 
,:prim_mor_dz as prim_mor_dz 
,:kod_scan as kod_scan 
,:prim as prim 
,:kod_folders as kod_folders 
,a.kod_ssp 
,a.dat_otv 
,a.num_delo 
,a.u_m 
,a.d_m 
,a.num_otz 
,a.kod_parent 
,a.kodp 
,a.kod_dispute 
,a.type_claim_template 
,a.kod_delo 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_emp 
,a.kod_vi 
,a.dep 
,a.dat_finish 
,a.osnreal 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
,a.ur_opl_do_resh_vvod 
,a.shtraf 
,a.peni 
,a.otvetch_info 
,a.link_delo 
,a.sum_zach_gp 
,a.num_zach_doc 
,a.dat_zach 
,a.sum_ifns_gp 
,a.num_ifns_doc 
,a.dat_ifns 
,a.astrent_exists 
,a.dat_post 
,a.dat_arh 
,a.type_rassm 
,a.dat_post_mat_pio 
,a.num_zap_post_mat 
 
from ur_mat a  where kod_mat=:kod_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,s2 
,d5 
,n10 
,n5 
,n8 
,n12 
,n9 
,s8 
,d6 
,d4 
,n7 
,s5 
,s6 
,s9 
,n30 
,s7 
,n4 
,n6 
,d1 
,s1 
,s3 
,d3 
,s4 
,n11 
,n1 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,d7 
,n22 
,n23 
,n24 
,n25 
,n26 
,n27 
,s10 
,s11 
,n28 
,s12 
,d8 
,n29 
,s13 
,d9 
,n31 
,d10 
,d11 
,n32 
,d12 
,s14 
) 
 values  
('ur_mat' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.kod_mat 
,r.num_reg 
,r.dat_doc 
,r.kod_sud 
,r.kod_doc 
,r.kod_subject 
,r.ogr 
,r.sum_gp 
,r.num_pp_gp 
,r.dat_gp 
,r.dat_otz 
,r.kod_ret_isk 
,r.fio_otz 
,r.prichina_otz 
,r.prim_mor_dz 
,r.kod_scan 
,r.prim 
,r.kod_folders 
,r.kod_ssp 
,r.dat_otv 
,r.num_delo 
,r.u_m 
,r.d_m 
,r.num_otz 
,r.kod_parent 
,r.kodp 
,r.kod_dispute 
,r.type_claim_template 
,r.kod_delo 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_emp 
,r.kod_vi 
,r.dep 
,r.dat_finish 
,r.osnreal 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
,r.ur_opl_do_resh_vvod 
,r.shtraf 
,r.peni 
,r.otvetch_info 
,r.link_delo 
,r.sum_zach_gp 
,r.num_zach_doc 
,r.dat_zach 
,r.sum_ifns_gp 
,r.num_ifns_doc 
,r.dat_ifns 
,r.astrent_exists 
,r.dat_post 
,r.dat_arh 
,r.type_rassm 
,r.dat_post_mat_pio 
,r.num_zap_post_mat 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_mat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_mat set  
(kod_mat 
,num_reg 
,dat_doc 
,kod_sud 
,kod_doc 
,kod_subject 
,ogr 
,sum_gp 
,num_pp_gp 
,dat_gp 
,dat_otz 
,kod_ret_isk 
,fio_otz 
,prichina_otz 
,prim_mor_dz 
,kod_scan 
,prim 
,kod_folders 
) 
= 
 ( select  
:kod_mat as kod_mat 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_sud as kod_sud 
,:kod_doc as kod_doc 
,:kod_subject as kod_subject 
,:ogr as ogr 
,:sum_gp as sum_gp 
,:num_pp_gp as num_pp_gp 
,:dat_gp as dat_gp 
,:dat_otz as dat_otz 
,:kod_ret_isk as kod_ret_isk 
,:fio_otz as fio_otz 
,:prichina_otz as prichina_otz 
,:prim_mor_dz as prim_mor_dz 
,:kod_scan as kod_scan 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_mat=:kod_mat 
;
end;
</update-text>
      <events>
        <useaction action-type="custom" event-name="object-save">
          <useaction action-type="execute-update" call="ur_mat_upd_num_reg">
            <column table="this" column="kod_mat" />
          </useaction>
          <useaction action-type="execute-update" call="ur_mat_upd_pretenz">
            <column table="this" column="kod_mat" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_mat_ba" as="ur_mat">
          <columns>
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="№ исх." />
            <column name="dat_doc" type="date" title="Дата подачи в суд" />
            <column name="dat_prin" type="date" title="Дата принятия документов в суде" />
            <column name="kod_sud" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_dp_sum_all" type="number" title="Задолженность по иску" />
            <column name="ur_dogplat_ym_min" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_dogplat_ym_max" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="ur_dp_sum_osn" type="number" title="Основная реал." />
            <column name="ur_dp_sum_peni" type="number" title="Проценты (пени)" />
            <column name="ur_dp_sum_shtr" type="number" title="Штраф" />
            <column name="ogr" type="number" title="Расх. за введ. огранич. реж. энергопотребл." />
            <column name="sum_gp" type="number" title="Сумма гос. пошлины" />
            <column name="num_pp_gp" type="string" title="№ пл. пор. ГП" />
            <column name="dat_gp" type="date" title="Дата перечисления ГП" />
            <column name="ur_opl_bnk_do_resh" type="number" title="Оплата до вынес. реш. суда" />
            <column name="dolg_on_resh" type="number" title="Остаток задолженности до вынес. реш. суда" />
            <column name="dat_otz" type="date" title="Дата возврата" />
            <column name="kod_ret_isk" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="fio_otz" type="string" title="За чьей подписью возврат" />
            <column name="prichina_otz" type="string" title="Основание для возврата" />
            <column name="prim_mor_dz" type="string" title="Причина исключения/изменения мораторной задолженности" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_sud_x_n" type="string" title="Суд / судебный участок" />
            <column name="kod_doc_x_n" type="string" title="Документ" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="kod_ret_isk_x_n" type="string" title="Причина возврата документа" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="ur_hist_mat_ba_count" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="№ исх." />
            <column name="dat_doc" type="date" title="Дата подачи в суд" />
            <column name="dat_prin" type="date" title="Дата принятия документов в суде" />
            <column name="kod_sud_x_n" type="string" title="Суд / судебный участок" />
            <column name="kod_sud" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_doc_x_n" type="string" title="Документ" />
            <column name="kod_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_dp_sum_all" type="number" title="Задолженность по иску" />
            <column name="ur_dogplat_ym_min" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_dogplat_ym_max" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="ur_dp_sum_osn" type="number" title="Основная реал." />
            <column name="ur_dp_sum_peni" type="number" title="Проценты (пени)" />
            <column name="ur_dp_sum_shtr" type="number" title="Штраф" />
            <column name="ogr" type="number" title="Расх. за введ. огранич. реж. энергопотребл." />
            <column name="sum_gp" type="number" title="Сумма гос. пошлины" />
            <column name="num_pp_gp" type="string" title="№ пл. пор. ГП" />
            <column name="dat_gp" type="date" title="Дата перечисления ГП" />
            <column name="ur_opl_bnk_do_resh" type="number" title="Оплата до вынес. реш. суда" />
            <column name="dolg_on_resh" type="number" title="Остаток задолженности до вынес. реш. суда" />
            <column name="dat_otz" type="date" title="Дата возврата" />
            <column name="kod_ret_isk_x_n" type="string" title="Причина возврата документа" />
            <column name="kod_ret_isk" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="fio_otz" type="string" title="За чьей подписью возврат" />
            <column name="prichina_otz" type="string" title="Основание для возврата" />
            <column name="prim_mor_dz" type="string" title="Причина исключения/изменения мораторной задолженности" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="ur_hist_mat_ba_count" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_mat.num_reg as num_reg, /*№ исх.*//*string*/
ur_mat.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
ur_mat.kod_sud as kod_sud, /*number*/
ur_mat.kod_doc as kod_doc, /*number*/
ur_mat.kod_subject as kod_subject, /*number*/
qube.ur_dp_sum_all1 as ur_dp_sum_all, /*Задолженность по иску*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период задолженности с*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период задолженности по*//*number*/
qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реал.*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_sum_shtr1 as ur_dp_sum_shtr, /*Штраф*//*number*/
ur_mat.ogr as ogr, /*Расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_mat.sum_gp as sum_gp, /*Сумма гос. пошлины*//*number*/
ur_mat.num_pp_gp as num_pp_gp, /*№ пл. пор. ГП*//*string*/
ur_mat.dat_gp as dat_gp, /*Дата перечисления ГП*//*date*/
qube.ur_opl_bnk_do_resh1 as ur_opl_bnk_do_resh, /*Оплата до вынес. реш. суда*//*number*/
qube.dolg_on_resh1 as dolg_on_resh, /*Остаток задолженности до вынес. реш. суда*//*number*/
ur_mat.dat_otz as dat_otz, /*Дата возврата*//*date*/
ur_mat.kod_ret_isk as kod_ret_isk, /*number*/
ur_mat.fio_otz as fio_otz, /*За чьей подписью возврат*//*string*/
ur_mat.prichina_otz as prichina_otz, /*Основание для возврата*//*string*/
ur_mat.prim_mor_dz as prim_mor_dz, /*Причина исключения/изменения мораторной задолженности*//*string*/
ur_mat.kod_scan as kod_scan, /*number*/
ur_mat.prim as prim, /*Примечание*//*string*/
ur_mat.is_not_new as is_not_new, /*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_sud_x_n.name as kod_sud_x_n, /*Суд / судебный участок*//*string*/
kod_doc_x_n.abbr as kod_doc_x_n, /*Документ*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
kod_ret_isk_x_n.name as kod_ret_isk_x_n, /*Причина возврата документа*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count, /*number*/
ur_mat.kod_sdp as kod_sdp, /*number*/
ur_mat.is_new as is_new, /*number*/
ur_mat.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( case  when (kod_dogplat.vid_real != 9)  then qube.ur_dp_summa1 end )  as ur_dp_sum_all1, /*Выст. по юр. док. всего*//*number*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период задолженности с*//*number*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период задолженности по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa1 end )  as ur_dp_sum_osn1, /*Выст. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_summa1 end )  as ur_dp_sum_shtr1, /*Выст. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec_ba.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_do_resh1, /*Оплата до вынес. реш. суда*//*number*/
sum( case  when (kod_hist_mat_dec.dat_post is not null )  then ( nvl( qube.ur_dp_summa2 ,0)  -nvl( ( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  as dolg_on_resh1, /*Остаток задолженности до вынес. реш. суда*//*number*/
sum(qube.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
--
select qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
qube.ur_hist_mat_ba_count1 as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_hist_mat_ba_count1)  as ur_hist_mat_ba_count1/*number*/

from (
(
(
--
select dims.kod_mat_ba as kod_mat_ba, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
where
ur_mat.kod_mat is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_hist_mat_ba_a_d.cnt as ur_hist_mat_ba_count1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_hist_mat_ba_a_d.kod_mat = ur_mat.kod_mat_ba--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_hist_mat_ba_count1/*number*/

from (
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat
--\ur_mat_ba
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_mat_ba as kod_mat_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = ur_mat.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_mat_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
null as kod_hist_mat_dec_ba, 
qube.kod_mat_ba as kod_mat_ba, /*number*/
null as kod_opl, 
null as kr_dog_name1, /*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
null as ur_hist_mat_ba_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba as kod_mat_ba, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa2)  as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_mat_ba as kod_mat_ba, /*number*/
ur_dogplat.ym_max as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
ur_dogplat.ym_min as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
ur_dogplat.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
ur_dogplat.summa as ur_dp_summa2/*Выставленно по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_mat.kod_mat as kod_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_mat.kod_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_mat.kod_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min, /*Период начисления с*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_doc as kod_doc, /*number*/
a.num_reg as num_reg, /*Номер иска*//*string*/
a.kod_ret_isk as kod_ret_isk, /*number*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.dat_otz as dat_otz, /*Дата возврата*//*date*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.fio_otz as fio_otz, /*За чьей подписью возврат*//*string*/
a.kod_subject as kod_subject, /*number*/
a.prichina_otz as prichina_otz, /*Основание для возврата*//*string*/
a.sum_gp as sum_gp, /*Оплачено госпошлины при подаче*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.dat_gp as dat_gp, /*Дата перечисления ГП*//*date*/
a.kod_sud as kod_sud, /*number*/
a.num_pp_gp as num_pp_gp, /*№ пл. пор. ГП*//*string*/
nvl(a.ogr,0)  as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.prim_mor_dz as prim_mor_dz, /*Причина исключения/изменения мораторной задолженности*//*string*/
a.kod_scan as kod_scan, /*number*/
kod_folders.kod_sdp as kod_sdp, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from (select a.kod_mat as kod_mat,a.kod_folders as kod_folders,a.kod_doc as kod_doc,a.num_reg as num_reg,a.kod_ret_isk as kod_ret_isk,a.dat_prin as dat_prin,a.dat_otz as dat_otz,a.dat_doc as dat_doc,a.fio_otz as fio_otz,a.kod_subject as kod_subject,a.prichina_otz as prichina_otz,a.sum_gp as sum_gp,a.prim as prim,a.dat_gp as dat_gp,a.kod_sud as kod_sud,a.num_pp_gp as num_pp_gp,a.ogr as ogr,a.prim_mor_dz as prim_mor_dz,a.kod_scan as kod_scan,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders,t.n5 as kod_doc,t.s2 as num_reg,t.n7 as kod_ret_isk,t.d2 as dat_prin,t.d4 as dat_otz,t.d5 as dat_doc,t.s5 as fio_otz,t.n8 as kod_subject,t.s6 as prichina_otz,t.n9 as sum_gp,t.s7 as prim,t.d6 as dat_gp,t.n10 as kod_sud,t.s8 as num_pp_gp,t.n12 as ogr,t.s9 as prim_mor_dz,t.n30 as kod_scan,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.kod_folders as kod_folders,a.kod_doc as kod_doc,a.num_reg as num_reg,a.kod_ret_isk as kod_ret_isk,a.dat_prin as dat_prin,a.dat_otz as dat_otz,a.dat_doc as dat_doc,a.fio_otz as fio_otz,a.kod_subject as kod_subject,a.prichina_otz as prichina_otz,a.sum_gp as sum_gp,a.prim as prim,a.dat_gp as dat_gp,a.kod_sud as kod_sud,a.num_pp_gp as num_pp_gp,a.ogr as ogr,a.prim_mor_dz as prim_mor_dz,a.kod_scan as kod_scan,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n4 as kod_folders,t.n5 as kod_doc,t.s2 as num_reg,t.n7 as kod_ret_isk,t.d2 as dat_prin,t.d4 as dat_otz,t.d5 as dat_doc,t.s5 as fio_otz,t.n8 as kod_subject,t.s6 as prichina_otz,t.n9 as sum_gp,t.s7 as prim,t.d6 as dat_gp,t.n10 as kod_sud,t.s8 as num_pp_gp,t.n12 as ogr,t.s9 as prim_mor_dz,t.n30 as kod_scan,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_mat on ur_mat.kod_mat = qube.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--uk_ret_isk
select a.kod_ret_isk as kod_ret_isk, /*number*//*key*/
a.name as name/*Причина возврата документа*//*string*/

from uk_ret_isk
a
--\uk_ret_isk
)
kod_ret_isk_x_n on ur_mat.kod_ret_isk = kod_ret_isk_x_n.kod_ret_isk--\uk_ret_isk
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_mat.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc_x_n on ur_mat.kod_doc = kod_doc_x_n.kod_doc--\us_doc
left outer join
(
--us_sud
select a.kod_sud as kod_sud, /*number*//*key*/
a.name as name/*Судебный участок*//*string*/

from us_sud
a
--\us_sud
)
kod_sud_x_n on ur_mat.kod_sud = kod_sud_x_n.kod_sud--\us_sud
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_hist_mat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_hist_mat" column-editable="0" key="kod_hist_mat" parent-table="ur_mat" parent-key="kod_mat" is-ms-upd="1" key-dimension="kod_hist_mat_ba">
      <select-text>
--
select ur_hist_mat.kod_mat as kod_mat, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result.kod_post as kod_post, /*number*/
kod_result.name as result_name, /*Результат рассмотрения*//*string*/
ur_hist_mat.decision as decision, /*number*/
qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Основная реализация*//*number*/
qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
ur_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
ur_hist_mat.gp_ret as gp_ret, /*ГП возврат из бюджета*//*number*/
qube.ur_opl_bnk_posl_resh1 as ur_opl_bnk_posl_resh, /*Всего*//*number*/
qube.ur_opl_bnk_posl_resh_osn1 as ur_opl_bnk_posl_resh_osn, /*Осн. реал.*//*number*/
qube.ur_opl_bnk_posl_resh_peni1 as ur_opl_bnk_posl_resh_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_bnk_posl_resh_shtr1 as ur_opl_bnk_posl_resh_shtr, /*Штраф*//*number*/
qube.ur_opl_bnk_posl_resh_gp1 as ur_opl_bnk_posl_resh_gp, /*ГП*//*number*/
qube.fin_ul_ob1 as fin_ul_ob, /*Всего*//*number*/
qube.fin_ul_ob_osn1 as fin_ul_ob_osn, /*Осн. реал. *//*number*/
qube.fin_ul_ob_peni1 as fin_ul_ob_peni, /*Проценты (пени)*//*number*/
qube.fin_ul_ob_shtr1 as fin_ul_ob_shtr, /*Штраф*//*number*/
qube.fin_ul_ob_gp1 as fin_ul_ob_gp, /*ГП*//*number*/
ur_hist_mat.kod_scan as kod_scan, /*number*/
ur_hist_mat.prim as prim, /*Примечание*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_post_x_n.name as kod_post_x_n, /*Судебный акт*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1, /*Призн. по юр. док. всего*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_osn1, /*Призн. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_peni1, /*Призн. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_shtr1, /*Призн. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_posl_resh1, /*Оплата после вынес. реш. суда*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_osn1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_peni1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_shtr1, /*Оплата штрафа после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf3 ,0) )  as fin_ul_ob1, /*Оборот*//*number*/
sum( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_osn1, /*Оборот по осн. реал*//*number*/
sum( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_peni1, /*Оборот по счетам на пени*//*number*/
sum( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_shtr1, /*Оборот по счетам на штраф*//*number*/
sum( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_gp1/*Оборот по счетам на ГП*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2/*Начислено*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
sr_facras.nachisl as sr_facras_nachisl2/*Начислено*//*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
(ur_hist_mat.kod_mat = :fk_kod_mat )  and (ur_hist_mat.kod_hist_mat is not null )  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf4)  as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
(ur_hist_mat.kod_mat = :fk_kod_mat )  and (ur_hist_mat.kod_hist_mat is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
(ur_hist_mat.kod_mat = :fk_kod_mat )  and (ur_hist_mat.kod_hist_mat is not null )  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
(ur_hist_mat.kod_mat = :fk_kod_mat )  and (ur_hist_mat.kod_hist_mat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.gp_ret as gp_ret, /*Гос. пошлина, возврат из бюджета*//*number*/
a.kod_scan as kod_scan, /*number*/
kod_result.decision as decision, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
kod_post_x_n on kod_result.kod_post = kod_post_x_n.kod_post--\us_post
--\
</select-text>
      <columns>
        <column name="kod_mat" table="ur_hist_mat" type="number" title="Материалы переданные в суд" parname="cur_kod_mat1" ColumnVisible="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result.kod_post as kod_post, /*number*/
kod_result.name as result_name, /*Результат рассмотрения*//*string*/
ur_hist_mat.decision as decision, /*number*/
qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Основная реализация*//*number*/
qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
qube.ur_opl_bnk_posl_resh1 as ur_opl_bnk_posl_resh, /*Всего*//*number*/
qube.ur_opl_bnk_posl_resh_osn1 as ur_opl_bnk_posl_resh_osn, /*Осн. реал.*//*number*/
qube.ur_opl_bnk_posl_resh_peni1 as ur_opl_bnk_posl_resh_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_bnk_posl_resh_shtr1 as ur_opl_bnk_posl_resh_shtr, /*Штраф*//*number*/
qube.ur_opl_bnk_posl_resh_gp1 as ur_opl_bnk_posl_resh_gp, /*ГП*//*number*/
qube.fin_ul_ob1 as fin_ul_ob, /*Всего*//*number*/
qube.fin_ul_ob_osn1 as fin_ul_ob_osn, /*Осн. реал. *//*number*/
qube.fin_ul_ob_peni1 as fin_ul_ob_peni, /*Проценты (пени)*//*number*/
qube.fin_ul_ob_shtr1 as fin_ul_ob_shtr, /*Штраф*//*number*/
qube.fin_ul_ob_gp1 as fin_ul_ob_gp, /*ГП*//*number*/
ur_hist_mat.prim as prim, /*Примечание*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_post_x_n.name as kod_post_x_n, /*Судебный акт*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1, /*Призн. по юр. док. всего*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_osn1, /*Призн. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_peni1, /*Призн. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_shtr1, /*Призн. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_posl_resh1, /*Оплата после вынес. реш. суда*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_osn1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_peni1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_shtr1, /*Оплата штрафа после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf3 ,0) )  as fin_ul_ob1, /*Оборот*//*number*/
sum( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_osn1, /*Оборот по осн. реал*//*number*/
sum( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_peni1, /*Оборот по счетам на пени*//*number*/
sum( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_shtr1, /*Оборот по счетам на штраф*//*number*/
sum( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_gp1/*Оборот по счетам на ГП*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2/*Начислено*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
sr_facras.nachisl as sr_facras_nachisl2/*Начислено*//*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf4)  as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_result as kod_result, /*number*/
a.prim as prim, /*Примечание*//*string*/
a.kod_scan as kod_scan, /*number*/
kod_result.decision as decision, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.prim as prim,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.s1 as prim,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.prim as prim,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.s1 as prim,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
kod_post_x_n on kod_result.kod_post = kod_post_x_n.kod_post--\us_post
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_post" table="ur_hist_mat" />
            <dependant name="result_name" table="ur_hist_mat" />
            <dependant name="decision" table="ur_hist_mat" />
            <dependant name="ur_dp_priz_all" table="ur_hist_mat" />
            <dependant name="ur_dp_ym_min_priz" table="ur_hist_mat" />
            <dependant name="ur_dp_ym_max_priz" table="ur_hist_mat" />
            <dependant name="ur_dp_priz_osn" table="ur_hist_mat" />
            <dependant name="ur_dp_priz_peni" table="ur_hist_mat" />
            <dependant name="ur_dp_priz_shtr" table="ur_hist_mat" />
            <dependant name="ur_opl_bnk_posl_resh" table="ur_hist_mat" />
            <dependant name="ur_opl_bnk_posl_resh_osn" table="ur_hist_mat" />
            <dependant name="ur_opl_bnk_posl_resh_peni" table="ur_hist_mat" />
            <dependant name="ur_opl_bnk_posl_resh_shtr" table="ur_hist_mat" />
            <dependant name="ur_opl_bnk_posl_resh_gp" table="ur_hist_mat" />
            <dependant name="fin_ul_ob" table="ur_hist_mat" />
            <dependant name="fin_ul_ob_osn" table="ur_hist_mat" />
            <dependant name="fin_ul_ob_peni" table="ur_hist_mat" />
            <dependant name="fin_ul_ob_shtr" table="ur_hist_mat" />
            <dependant name="fin_ul_ob_gp" table="ur_hist_mat" />
            <dependant name="prim" table="ur_hist_mat" />
            <dependant name="kod_mat_x_n" table="ur_hist_mat" />
            <dependant name="kod_post_x_n" table="ur_hist_mat" />
            <dependant name="kod_scan_x_n" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="dat_post" table="ur_hist_mat" type="date" title="Дата прин. суд. акта" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_post" temp-col-name="d1" />
        <column name="kod_post" table="kod_result" type="number" title="Судебный акт" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result.kod_post as kod_post, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="result_name" table="kod_result" type="string" title="Результат рассмотрения" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result.name as result_name, /*Результат рассмотрения*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="decision" table="ur_hist_mat" type="number" title="" parname="decision" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.decision as decision, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.decision as decision, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_all" table="ur_hist_mat" type="number" title="Всего" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1/*Призн. по юр. док. всего*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
null as ur_dp_sum_v1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_min_priz" table="ur_hist_mat" type="number" title="Период задолж. с" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период задолж. с*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz/*Период начисления с (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
null as ur_dp_ym_min_priz1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_max_priz" table="ur_hist_mat" type="number" title="Период задолж. по" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1/*Период задолж. по*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
null as ur_dp_ym_max_priz1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_osn" table="ur_hist_mat" type="number" title="Основная реализация" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Основная реализация*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_osn1/*Призн. по юр. док. осн. реал.*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_peni" table="ur_hist_mat" type="number" title="Проценты (пени)" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_peni1/*Призн. по юр. док. пени*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_shtr" table="ur_hist_mat" type="number" title="Штраф" ClientExists="decision" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_shtr1/*Призн. по юр. док. штрафы*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="gp_otv" table="ur_hist_mat" type="number" title="ГП с ответчика" ClientExists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_otv" temp-col-name="n6" />
        <column name="gp_es" table="ur_hist_mat" type="number" title="ГП с исца" ClientExists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_es" temp-col-name="n4" />
        <column name="gp_ret" table="ur_hist_mat" type="number" title="ГП возврат из бюджета" ClientExists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_ret" temp-col-name="n25" />
        <column name="ur_opl_bnk_posl_resh" table="ur_hist_mat" type="number" title="Всего" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_posl_resh1 as ur_opl_bnk_posl_resh, /*Всего*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_posl_resh1/*Оплата после вынес. реш. суда*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_bnk_posl_resh_osn" table="ur_hist_mat" type="number" title="Осн. реал." ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_posl_resh_osn1 as ur_opl_bnk_posl_resh_osn, /*Осн. реал.*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  end )  as ur_opl_bnk_posl_resh_osn1/*Оплата ГП после выдачи исп. листа*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_bnk_posl_resh_peni" table="ur_hist_mat" type="number" title="Проценты (пени)" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_posl_resh_peni1 as ur_opl_bnk_posl_resh_peni, /*Проценты (пени)*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  end )  as ur_opl_bnk_posl_resh_peni1/*Оплата ГП после выдачи исп. листа*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_bnk_posl_resh_shtr" table="ur_hist_mat" type="number" title="Штраф" ClientExists="decision" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_posl_resh_shtr1 as ur_opl_bnk_posl_resh_shtr, /*Штраф*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  end )  as ur_opl_bnk_posl_resh_shtr1/*Оплата штрафа после выдачи исп. листа*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_bnk_posl_resh_gp" table="ur_hist_mat" type="number" title="ГП" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_bnk_posl_resh_gp1 as ur_opl_bnk_posl_resh_gp, /*ГП*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  end )  as ur_opl_bnk_posl_resh_gp1/*Оплата ГП после выдачи исп. листа*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_ob" table="ur_hist_mat" type="number" title="Всего" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob1 as fin_ul_ob, /*Всего*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  as fin_ul_ob1/*Оборот*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_ob_osn" table="ur_hist_mat" type="number" title="Осн. реал. " ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_osn1 as fin_ul_ob_osn, /*Осн. реал. *//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_osn1/*Оборот по осн. реал*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_ob_peni" table="ur_hist_mat" type="number" title="Проценты (пени)" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_peni1 as fin_ul_ob_peni, /*Проценты (пени)*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_peni1/*Оборот по счетам на пени*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_ob_shtr" table="ur_hist_mat" type="number" title="Штраф" ClientExists="decision" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_shtr1 as fin_ul_ob_shtr, /*Штраф*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_shtr1/*Оборот по счетам на штраф*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_ob_gp" table="ur_hist_mat" type="number" title="ГП" ClientExists="decision" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_gp1 as fin_ul_ob_gp, /*ГП*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_gp1/*Оборот по счетам на ГП*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan" table="ur_hist_mat" type="number" title="Файл" ColumnEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_scan" temp-col-name="n31">
          <sel-list-compiled>
            <root>
              <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_scan" as="kod_scan" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_scan" into="n1">a.kod_scan as kod_scan, /**//*number*//*key*/
</column><column table="a" column="file_name" as="file_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="file_name" into="s1">a.file_name as file_name/**//*string*/
</column></select>
                <from>
from <query name="ur_scan_docs" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_scan_docs
select <column table="a" column="kod_scan" type="number" comment="уникальный ключ" as="kod_scan" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_scan" used="1">a.kod_scan as kod_scan, /*number*//*key*/
</column><column table="a" column="file_name" type="string" title="" comment="имя файла" vid="1" spec-column="file-name" as="file_name" key="0" sourcetable="./a/a" sourcecolumn="file_name" used="1">a.file_name as file_name/**//*string*/
</column></select><from>
from <table name="ur_scan_docs" as="a" title="Файл" used="1">ur_scan_docs
a
--\ur_scan_docs
</table></from>)
a
--\ur_scan_docs
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> ) like lower( </text><const><text>:kod_scan_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="file_name" as="file_name" title="" thissrc="file_name">a.file_name</column><text txtype="func"> ) like lower( </text><const><text>:file_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_scan_filter" type="string" />
                    <param name="file_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_scan" as="kod_scan" title="" key="1" />
                    <column table="a" column="file_name" as="file_name" title="" />
                  </select>
                  <from>
                    <query name="ur_scan_docs" as="a" title="Файл" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="kod_scan_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="file_name" />
                        <useparam name="file_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_scan_filter" />
                    <useparam name="file_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_scan_filter" type="string">
                  <const>:kod_scan_filter </const>
                </param>
                <param name="file_name_filter" type="string">
                  <const>:file_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_scan as kod_scan, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_scan_x_n" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="prim" table="ur_hist_mat" type="string" title="Примечание" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.prim as prim, /*Примечание*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.prim as prim, /*Примечание*//*string*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.prim as prim,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.s1 as prim,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.prim as prim,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.s1 as prim,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat_x_n" table="ur_hist_mat.kod_mat" type="string" title="Материалы переданные в суд" text-source-for="kod_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_post_x_n" table="kod_result.kod_post" type="string" title="Судебный акт" text-source-for="kod_post" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_post_x_n.name as kod_post_x_n, /*Судебный акт*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
kod_post_x_n on kod_result.kod_post = kod_post_x_n.kod_post--\us_post
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan_x_n" table="ur_hist_mat.kod_scan" type="string" title="Файл" text-source-for="kod_scan" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_scan as kod_scan, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="kod_hist_mat" table="ur_hist_mat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_hist_mat" temp-col-name="n2" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:kod_scan as kod_scan 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into ur_hist_mat 
(kod_mat 
,dat_post 
,gp_otv 
,gp_es 
,gp_ret 
,kod_scan 
,kod_hist_mat 
) 
 values  
(r.kod_mat 
,r.dat_post 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.kod_scan 
,r.kod_hist_mat 
) 
 returning  
kod_hist_mat into :kod_hist_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_hist_mat where kod_hist_mat=:kod_hist_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_hist_mat' 
and 
names=:form_id 
and 
f2=:kod_hist_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:kod_scan as kod_scan 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,n6 
,n4 
,n25 
,n31 
,n2 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_mat 
,r.dat_post 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.kod_scan 
,r.kod_hist_mat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:kod_scan as kod_scan 
,:kod_hist_mat as kod_hist_mat 
,a.kod_result 
,a.dat_rassm 
,a.u_m 
,a.d_m 
,a.kod_zased 
,a.ukaz 
,a.kod_stage 
,a.kod_busin 
,a.dat_mor 
,a.kod_hist_mat_new 
,a.sud_izd 
,a.astrent 
,a.dat_vz 
,a.proc 
,a.kodp 
,a.opl_peni 
,a.opl_proc 
,a.opl_astrent 
,a.opl_osnreal 
,a.opl_gpotv 
,a.ogr 
,a.data_prinyat 
,a.snum_z 
,a.fio_court 
,a.kod_post 
,a.osnreal 
,a.shtraf 
,a.peni 
,a.manual_sums 
,a.opl_ogr 
,a.dat_entry 
,a.dat_srok 
,a.proc_calc 
,a.kod_vid_proc 
,a.proc_const 
,a.opl_sud_izd 
,a.dat_mor_out 
,a.dat_send_il 
,a.opl_ogr_dat 
,a.opl_sud_izd_dat 
,a.dat_send_zv 
,a.dat_receipt_post 
,a.dat_send_petition_il 
,a.gosposhlina 
,a.dat_um_mor_dolg 
,a.sum_um_mor_dolg 
,a.kod_osn_um_mor_dolg 
,a.comment_um_mor_dolg 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
 
from ur_hist_mat a  where kod_hist_mat=:kod_hist_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,n6 
,n4 
,n25 
,n31 
,n2 
,n1 
,d2 
,s2 
,d3 
,n5 
,s3 
,n7 
,n8 
,d4 
,n9 
,n10 
,n11 
,d5 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,d6 
,s4 
,s5 
,n20 
,n21 
,n22 
,n23 
,n24 
,n26 
,d7 
,d8 
,n27 
,n28 
,n29 
,n30 
,d9 
,d10 
,d11 
,d12 
,d13 
,d14 
,d15 
,n32 
,d16 
,n33 
,n34 
,s6 
,n35 
,n36 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_mat 
,r.dat_post 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.kod_scan 
,r.kod_hist_mat 
,r.kod_result 
,r.dat_rassm 
,r.u_m 
,r.d_m 
,r.kod_zased 
,r.ukaz 
,r.kod_stage 
,r.kod_busin 
,r.dat_mor 
,r.kod_hist_mat_new 
,r.sud_izd 
,r.astrent 
,r.dat_vz 
,r.proc 
,r.kodp 
,r.opl_peni 
,r.opl_proc 
,r.opl_astrent 
,r.opl_osnreal 
,r.opl_gpotv 
,r.ogr 
,r.data_prinyat 
,r.snum_z 
,r.fio_court 
,r.kod_post 
,r.osnreal 
,r.shtraf 
,r.peni 
,r.manual_sums 
,r.opl_ogr 
,r.dat_entry 
,r.dat_srok 
,r.proc_calc 
,r.kod_vid_proc 
,r.proc_const 
,r.opl_sud_izd 
,r.dat_mor_out 
,r.dat_send_il 
,r.opl_ogr_dat 
,r.opl_sud_izd_dat 
,r.dat_send_zv 
,r.dat_receipt_post 
,r.dat_send_petition_il 
,r.gosposhlina 
,r.dat_um_mor_dolg 
,r.sum_um_mor_dolg 
,r.kod_osn_um_mor_dolg 
,r.comment_um_mor_dolg 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_hist_mat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_hist_mat set  
(kod_mat 
,dat_post 
,gp_otv 
,gp_es 
,gp_ret 
,kod_scan 
,kod_hist_mat 
) 
= 
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:kod_scan as kod_scan 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
where 
kod_hist_mat=:kod_hist_mat 
;
end;
</update-text>
      <scheme>
        <table name="ur_hist_mat_ba" as="ur_hist_mat">
          <columns>
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_post" type="date" title="Дата прин. суд. акта" />
            <column name="kod_post" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="result_name" type="string" title="Результат рассмотрения" />
            <column name="decision" type="number" title="" visible="0" />
            <column name="ur_dp_priz_all" type="number" title="Всего" />
            <column name="ur_dp_ym_min_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. с" />
            <column name="ur_dp_ym_max_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. по" />
            <column name="ur_dp_priz_osn" type="number" title="Основная реализация" />
            <column name="ur_dp_priz_peni" type="number" title="Проценты (пени)" />
            <column name="ur_dp_priz_shtr" type="number" title="Штраф" />
            <column name="gp_otv" type="number" title="ГП с ответчика" />
            <column name="gp_es" type="number" title="ГП с исца" />
            <column name="gp_ret" type="number" title="ГП возврат из бюджета" />
            <column name="ur_opl_bnk_posl_resh" type="number" title="Всего" />
            <column name="ur_opl_bnk_posl_resh_osn" type="number" title="Осн. реал." />
            <column name="ur_opl_bnk_posl_resh_peni" type="number" title="Проценты (пени)" />
            <column name="ur_opl_bnk_posl_resh_shtr" type="number" title="Штраф" />
            <column name="ur_opl_bnk_posl_resh_gp" type="number" title="ГП" />
            <column name="fin_ul_ob" type="number" title="Всего" />
            <column name="fin_ul_ob_osn" type="number" title="Осн. реал. " />
            <column name="fin_ul_ob_peni" type="number" title="Проценты (пени)" />
            <column name="fin_ul_ob_shtr" type="number" title="Штраф" />
            <column name="fin_ul_ob_gp" type="number" title="ГП" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_post_x_n" type="string" title="Судебный акт" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_post" type="date" title="Дата прин. суд. акта" />
            <column name="kod_post_x_n" type="string" title="Судебный акт" />
            <column name="kod_post" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="result_name" type="string" title="Результат рассмотрения" />
            <column name="decision" type="number" title="" visible="0" />
            <band title="Задолженность по решению суда">
              <column name="ur_dp_priz_all" type="number" title="Всего" />
              <column name="ur_dp_ym_min_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. с" />
              <column name="ur_dp_ym_max_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. по" />
              <column name="ur_dp_priz_osn" type="number" title="Основная реализация" />
              <column name="ur_dp_priz_peni" type="number" title="Проценты (пени)" />
              <column name="ur_dp_priz_shtr" type="number" title="Штраф" />
              <column name="gp_otv" type="number" title="ГП с ответчика" />
              <column name="gp_es" type="number" title="ГП с исца" />
              <column name="gp_ret" type="number" title="ГП возврат из бюджета" />
            </band>
            <band title="Оплата по. реш. суда">
              <column name="ur_opl_bnk_posl_resh" type="number" title="Всего" />
              <column name="ur_opl_bnk_posl_resh_osn" type="number" title="Осн. реал." />
              <column name="ur_opl_bnk_posl_resh_peni" type="number" title="Проценты (пени)" />
              <column name="ur_opl_bnk_posl_resh_shtr" type="number" title="Штраф" />
              <column name="ur_opl_bnk_posl_resh_gp" type="number" title="ГП" />
            </band>
            <band title="Текущая задолженность">
              <column name="fin_ul_ob" type="number" title="Всего" />
              <column name="fin_ul_ob_osn" type="number" title="Осн. реал. " />
              <column name="fin_ul_ob_peni" type="number" title="Проценты (пени)" />
              <column name="fin_ul_ob_shtr" type="number" title="Штраф" />
              <column name="fin_ul_ob_gp" type="number" title="ГП" />
            </band>
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_hist_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_hist_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_hist_mat.kod_mat as kod_mat, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result.kod_post as kod_post, /*number*/
kod_result.name as result_name, /*Результат рассмотрения*//*string*/
ur_hist_mat.decision as decision, /*number*/
qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Основная реализация*//*number*/
qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
ur_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
ur_hist_mat.gp_ret as gp_ret, /*ГП возврат из бюджета*//*number*/
qube.ur_opl_bnk_posl_resh1 as ur_opl_bnk_posl_resh, /*Всего*//*number*/
qube.ur_opl_bnk_posl_resh_osn1 as ur_opl_bnk_posl_resh_osn, /*Осн. реал.*//*number*/
qube.ur_opl_bnk_posl_resh_peni1 as ur_opl_bnk_posl_resh_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_bnk_posl_resh_shtr1 as ur_opl_bnk_posl_resh_shtr, /*Штраф*//*number*/
qube.ur_opl_bnk_posl_resh_gp1 as ur_opl_bnk_posl_resh_gp, /*ГП*//*number*/
qube.fin_ul_ob1 as fin_ul_ob, /*Всего*//*number*/
qube.fin_ul_ob_osn1 as fin_ul_ob_osn, /*Осн. реал. *//*number*/
qube.fin_ul_ob_peni1 as fin_ul_ob_peni, /*Проценты (пени)*//*number*/
qube.fin_ul_ob_shtr1 as fin_ul_ob_shtr, /*Штраф*//*number*/
qube.fin_ul_ob_gp1 as fin_ul_ob_gp, /*ГП*//*number*/
ur_hist_mat.kod_scan as kod_scan, /*number*/
ur_hist_mat.prim as prim, /*Примечание*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_post_x_n.name as kod_post_x_n, /*Судебный акт*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1, /*Призн. по юр. док. всего*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_osn1, /*Призн. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_peni1, /*Призн. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_shtr1, /*Призн. по юр. док. штрафы*//*number*/
sum( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_bnk_posl_resh1, /*Оплата после вынес. реш. суда*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_osn1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_peni1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_shtr1, /*Оплата штрафа после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec_ba.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  end )  as ur_opl_bnk_posl_resh_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf3 ,0) )  as fin_ul_ob1, /*Оборот*//*number*/
sum( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_osn1, /*Оборот по осн. реал*//*number*/
sum( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_peni1, /*Оборот по счетам на пени*//*number*/
sum( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_shtr1, /*Оборот по счетам на штраф*//*number*/
sum( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf4 ,0) )  end )  as fin_ul_ob_gp1/*Оборот по счетам на ГП*//*number*/

from (
--
select qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2/*Начислено*//*number*/

from (
(
(
--
select dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
sr_facras.nachisl as sr_facras_nachisl2/*Начислено*//*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf4 as sr_opl_opl_sf4, /*Оплата начислений*//*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf4)  as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_hist_mat_dec_ba as kod_hist_mat_dec_ba, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf4/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat as kod_hist_mat_dec_ba, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_hist_mat.kod_hist_mat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_hist_mat_dec_ba.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_hist_mat_dec_ba, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba as kod_hist_mat_ba, /*number*//*key*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on kod_mat_ba_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_ba
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null  group by
kod_dogplat.kod_dogplat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_hist_mat_ba as kod_hist_mat_ba, /*number*/
null as kod_hist_mat_dec, 
null as kod_hist_mat_dec_ba, 
null as kod_opl, 
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as sr_opl_opl_sf4, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1/*number*/

from (
--
select un.kod_hist_mat_ba as kod_hist_mat_ba/*number*//*key*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat
--\ur_hist_mat_ba
where
ur_hist_mat.kod_hist_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_ba on kod_hist_mat_dec_ba.kod_hist_mat = qube.kod_hist_mat_dec_ba--\ur_hist_mat_dec_ba
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_hist_mat_ba/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.gp_ret as gp_ret, /*Гос. пошлина, возврат из бюджета*//*number*/
a.kod_scan as kod_scan, /*number*/
kod_result.decision as decision, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.dat_post as dat_post,a.gp_es as gp_es,a.prim as prim,a.gp_otv as gp_otv,a.gp_ret as gp_ret,a.kod_scan as kod_scan,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.d1 as dat_post,t.n4 as gp_es,t.s1 as prim,t.n6 as gp_otv,t.n25 as gp_ret,t.n31 as kod_scan,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.dat_post as dat_post,a.gp_es as gp_es,a.prim as prim,a.gp_otv as gp_otv,a.gp_ret as gp_ret,a.kod_scan as kod_scan,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.d1 as dat_post,t.n4 as gp_es,t.s1 as prim,t.n6 as gp_otv,t.n25 as gp_ret,t.n31 as kod_scan,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_folders.kod_sdp = 9)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat_ba--\ur_hist_mat_ba
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on ur_hist_mat.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
kod_post_x_n on kod_result.kod_post = kod_post_x_n.kod_post--\us_post
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="f10" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="is_customer10_flag" key="val" is-ms-upd="0" is-top="1">
      <select-text>
--
select f10.val as val/*number*/

from (
--is_customer10_flag
select  case  when (a.customer_id = 10)  then 1 else 0 end  as val/*number*/

from (
--rs_rep_sets
select a.customer_id as customer_id/**//*number*/

from rs_rep_sets
a
--\rs_rep_sets
)
a
--\rs_rep_sets
)
f10
--\is_customer10_flag
--\
</select-text>
      <columns>
        <column name="val" table="f10" type="number" title="" parname="f10" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="is_customer10_flag" as="f10">
          <columns>
            <column name="val" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>