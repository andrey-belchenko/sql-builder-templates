<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_dogplat_select_pd" title="Выбор документов на оплату" timestamp="28.12.2023 14:44:41" form-size="1006;614" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms.xml" elid="201" ord="201" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Условия поиска" id="45384205">
      <field id="66813014" controlType="UIList" title="Договор" name="kod_dog" type="number" rows-limit="100" elid="588" ord="588" leaf="0" lvl="2" pelid="">
        <listquery>
          <query name="kr_dogovor_list(dep)" />
        </listquery>
      </field>
      <field id="51428857" controlType="UIDate" type="date" elid="397" ord="397" leaf="0" lvl="2" pelid="" name="dat" title="Дата расчета задолженности">
        <defaultquery>
          <query name="today" />
        </defaultquery>
      </field>
      <field id="41374865" controlType="UICheck" checked="1" type="number" elid="387" ord="387" leaf="1" lvl="2" pelid="" title="Только долговые" name="p_dolg" />
    </fieldgroup>
    <fieldgroup title="Найденные документы" id="66055480">
      <grid table="nach" show-checkbox="1" show-toolbar="1" id="34167659">
        <toolbar column-visible="0" id="9686779">
          <uicommand button-type="grid-refresh" column-visible="1" name="grid-refresh" control-name="ButtonRefresh" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="366" ord="366" leaf="1" lvl="2" pelid="" title="" id="56552640" />
          <uicommand action-type="save-and-close" button-type="custom-ok" title="Подтрердить выбор сохранить и закрыть" name="custom-ok" icon="Ok_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="381" ord="381" leaf="1" lvl="2" pelid="" id="44499943" />
        </toolbar>
        <columns id="9380964">
          <field table="nach" name="kod_deb" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="31073959" />
          <field table="nach" name="name" title="Договор" controlType="UIText" rows-limit="100" id="45229563" />
          <field table="nach" name="num_pl" title="Номер документа на оплату" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="12763003" />
          <field table="nach" name="dat_deb" title="Дата документа на оплату" controlType="UIDate" rows-limit="100" id="15143807" />
          <field table="nach" name="ur_state_name" title="Юр. статус" controlType="UIText" rows-limit="100" id="42338489" />
          <field table="nach" name="ym" title="Период" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="11910920" />
          <field table="nach" name="sr_facras_nachisl" title="Начислено" controlType="UIText" edit-mask="N2" rows-limit="100" id="44530391" />
          <field table="nach" name="sr_facopl_opl" title="Оплачено" controlType="UIText" edit-mask="N2" rows-limit="100" id="62055653" />
          <field table="nach" name="dolg" title="Посроченная задолженность" controlType="UIText" edit-mask="N2" rows-limit="100" id="59345284">
            <withparams id="64706514">
              <useparam name="dat" id="2487082" />
            </withparams>
          </field>
          <field table="nach" name="dat_bzad" title="Дата возникновения обязательства по погашению задолженности" controlType="UIDate" rows-limit="100" id="6893194" />
        </columns>
        <events id="51292872">
          <useaction event-name="checked-row-save" action-type="custom" id="46551169">
            <useaction action-type="execute-add" call="ur_dogplat_insert_pd" id="56971905">
              <useparam name="p_kod_sdp" id="27429057" />
              <useparam name="p_kod" id="44453891" />
              <useparam name="selected_kod_deb" id="7245987" />
              <useparam name="selected_summa" id="48493043" />
              <useparam name="dat" id="19994456" />
              <const id="53073258">null</const>
              <const id="61419278">null</const>
              <const id="33996271">null</const>
            </useaction>
            <useaction action-type="client-delete-row" id="66720982" />
          </useaction>
        </events>
      </grid>
    </fieldgroup>
    <toolbar id="60944366">
      <uicommand button-type="form-save-and-close" column-visible="1" name="form-save-and-close" control-name="ButtonSaveAndClose" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="372" ord="372" leaf="1" lvl="2" pelid="" title="" id="11279533" />
    </toolbar>
  </form>
  <params>
    <param name="p_kod" type="number">
      <const>74</const>
    </param>
    <param name="p_kod_sdp" type="number">
      <const>4</const>
    </param>
    <param name="kodp" type="number">
      <const>2175</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod" type="number">
        <const>74</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const>4</const>
      </param>
      <param name="kodp" type="number">
        <const>2175</const>
      </param>
    </params>
    <fields>
      <field type="number" name="kod_dog" parname="kod_dog" title="Договор" />
      <field type="date" name="dat" parname="dat" title="Дата расчета задолженности" />
      <field type="number" name="p_dolg" parname="p_dolg" title="Только долговые" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="nach_has_changes" parname="nach_has_changes" />
    </fields>
    <table name="nach" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="sr_debet" column-editable="0" key="kod_deb" is-ms-upd="1" is-top="1" key-dimension="kod_deb">
      <select-text>
--
select nach.kod_deb as kod_deb, /*number*//*key*/
kod_dog_fin.name as name, /*Договор*//*string*/
nach.num_pl as num_pl, /*Номер документа на оплату*//*number*/
nach.dat_deb as dat_deb, /*Дата документа на оплату*//*date*/
ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.ym as ym, /*Период*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.sr_facopl_opl1 as sr_facopl_opl, /*Оплачено*//*number*/
qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
nach.is_new as is_new, /*number*/
nach.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(qube.sr_facopl_opl1)  as sr_facopl_opl1, /*Оплачено*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1, /*Оборот*//*number*/
sum( case  when ((kod_dogplat.kod = :p_kod )  and (kod_dogplat.kod_sdp = :p_kod_sdp ) )  then qube.ur_dogplat_count1 end )  as ur_dp_for_doc_cnt1, /*Наличие привязки по указанному документу*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date2, /*Оборот*//*number*/
max( nullif(greatest (  nvl( qube.kod_ur_state_51 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_61 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_41 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_31 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_21 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_11 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999) )  as kod_ur_state1/*Код юр. статуса*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_dogplat as kod_dogplat, /*number*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.sr_facopl_opl1 as sr_facopl_opl1, /*Оплачено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
(
(
--
select null as dat_dolg, /*key*/
qube.kod_deb as kod_deb, /*number*/
null as kod_dogplat, 
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.sr_facopl_opl1 as sr_facopl_opl1, /*Оплачено*//*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dogplat_count1/*number*/

from (
--
select un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facopl_opl1)  as sr_facopl_opl1, /*Оплачено*//*number*/
max(un.kod_ur_state_61)  as kod_ur_state_61, /*number*/
max(un.kod_ur_state_21)  as kod_ur_state_21, /*number*/
max(un.kod_ur_state_41)  as kod_ur_state_41, /*number*/
max(un.kod_ur_state_51)  as kod_ur_state_51, /*number*/
max(un.kod_ur_state_31)  as kod_ur_state_31, /*number*/
max(un.kod_ur_state_11)  as kod_ur_state_11/*number*/

from (
(
(
--
select nach.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach
--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null ) )
--\
union all
(
--
select kod_sf_a_d.kod_deb as kod_deb, /*number*//*key*/
sr_facopl_a_d.opl as sr_facopl_opl1, /*Оплачено*//*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_facopl
select a.kod_fopl as kod_fopl, /*number*//*key*/
a.kod_ras as kod_ras, /*number*/
a.opl as opl/*Оплачено*//*number*/

from sr_facopl
a
--\sr_facopl
)
sr_facopl_a_d
--\sr_facopl
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
kod_ras_a_d on sr_facopl_a_d.kod_ras = kod_ras_a_d.kod_ras--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_ras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null ) )
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
ur_hist_mat_ba.kod_ur_state as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_ba_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_hist_mat_ba_a_d.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba on ur_hist_mat_ba.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_ba
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
ur_hist_mat_dec.kod_ur_state as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
ur_inkasso.kod_ur_state as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_inkasso_a_d.kod_inkasso as kod_inkasso_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_inkasso_a_d.kod_inkasso, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso on ur_inkasso.kod_inkasso = dims.kod_inkasso_prm--\ur_inkasso
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
ur_kazn.kod_ur_state as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_kazn_a_d.kod_kazn as kod_kazn_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_kazn = dims.kod_kazn_prm--\ur_kazn
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
ur_mat_isp.kod_ur_state as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_mat_isp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_mat_isp_a_d.kod_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp on ur_mat_isp.kod_mat = dims.kod_mat_prm--\ur_mat_isp
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
ur_mat_pp.kod_ur_state as kod_ur_state_11/*number*/

from (
--
select ur_mat_pp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null )  group by
ur_mat_pp_a_d.kod_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp on ur_mat_pp.kod_mat = dims.kod_mat_prm--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_deb as kod_deb, /*number*/
null as kod_dogplat, 
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as sr_facopl_opl1, /*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dogplat_count1/*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2, /*Начислено*//*number*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select kod_sf_a_d.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl2, /*Начислено*//*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null ) )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_debet
a
--\sr_debet
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null ) )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as dat_dolg, /*key*/
qube.kod_deb as kod_deb, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*/
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as sr_facopl_opl1, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
--
select un.kod_deb as kod_deb, /*number*//*key*/
un.kod_dogplat as kod_dogplat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1/*number*/

from (
(
(
--
select kod_sf_a_d.kod_deb as kod_deb, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*/
kod_dogplat.cnt as ur_dogplat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from sr_debet
a
--\sr_debet
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
where
(kod_dog.kodp = :kodp )  {  and (kod_dog.kod_dog in :kod_dog )  }  and (( 1=1 ) )  and (nach.kod_deb is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_deb, /*number*//*key*/
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.num_pl as num_pl, /*Номер документа на оплату*//*number*/
a.dat_deb as dat_deb, /*Дата документа на оплату*//*date*/
a.ym as ym, /*Период*//*number*/
a.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_debet
a
--\sr_debet
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
where
(qube.ur_dp_for_doc_cnt1 is null )  and (( 1=1 )  {  and (( nvl( qube.fin_ul_ob_on_date2 ,0)!=0 )  and ( nvl( :p_dolg  ,0)=1 ) )  } ) --\
</select-text>
      <columns>
        <column name="kod_deb" table="nach" type="number" title="" parname="selected_kod_deb" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_deb" temp-col-name="n2" />
        <column name="name" table="kod_dog_fin" type="string" title="Договор" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_deb_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_deb_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_fin.name as name, /*Договор*//*string*/
nach.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb/*number*//*key*/

from (
(
(
--
select qube.kod_deb as kod_deb/*number*//*key*/

from (
--
select un.kod_deb as kod_deb/*number*//*key*/

from (
(
(
--
select nach.kod_deb as kod_deb/*number*//*key*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_deb as kod_deb,a.kod_dog as kod_dog  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.n5 as kod_dog  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.kod_dog as kod_dog  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.n5 as kod_dog  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="num_pl" table="nach" type="number" title="Номер документа на оплату" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_pl" temp-col-name="n1" />
        <column name="dat_deb" table="nach" type="date" title="Дата документа на оплату" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_deb" temp-col-name="d1" />
        <column name="ur_state_name" table="ur_state" type="string" title="Юр. статус" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params />
              <select>
                <params />
                <query>
--
select ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.kod_deb as kod_deb

from (
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
(
(
--
select qube.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--
select un.kod_ur_state as kod_ur_state/*number*//*key*/

from (
(
(
--
select ur_hist_mat_ba_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_hist_mat_ba_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_hist_mat_dec_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_inkasso_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_inkasso_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_kazn_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_kazn_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_mat_isp_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_mat_isp_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_mat_pp_a_d.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_mat_pp_a_d.kod_ur_state = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
union all
(
--
select ur_state.kod_ur_state as kod_ur_state/*number*//*key*/

from (
--ur_state
select a.kod_ur_state as kod_ur_state/*number*//*key*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
where
ur_state.kod_ur_state is not null )
--\
)
--\
)
un
--\
 group by
un.kod_ur_state/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_ur_state/*number*//*key*/
)
qube
--\
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on ur_state.kod_ur_state = qube.kod_ur_state--\ur_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ym" table="nach" type="number" title="Период" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n7" />
        <column name="sr_facras_nachisl" table="nach" type="number" title="Начислено" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_deb_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_deb_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
nach.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select qube.kod_deb as kod_deb, /*number*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1/*Начислено*//*number*/

from (
--
select un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1/*Начислено*//*number*/

from (
(
(
--
select nach.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select kod_sf_a_d.kod_deb as kod_deb, /*number*//*key*/
sr_facras_a_d.nachisl as sr_facras_nachisl1/*Начислено*//*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facras_nachisl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="sr_facopl_opl" table="nach" type="number" title="Оплачено" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_deb_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_deb_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.sr_facopl_opl1 as sr_facopl_opl, /*Оплачено*//*number*/
nach.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum(qube.sr_facopl_opl1)  as sr_facopl_opl1/*Оплачено*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
qube.sr_facopl_opl1 as sr_facopl_opl1/*Оплачено*//*number*/

from (
(
(
--
select qube.kod_deb as kod_deb, /*number*//*key*/
qube.sr_facopl_opl1 as sr_facopl_opl1/*Оплачено*//*number*/

from (
--
select un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facopl_opl1)  as sr_facopl_opl1/*Оплачено*//*number*/

from (
(
(
--
select nach.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select kod_sf_a_d.kod_deb as kod_deb, /*number*//*key*/
sr_facopl_a_d.opl as sr_facopl_opl1/*Оплачено*//*number*/

from (
--sr_facopl
select a.kod_fopl as kod_fopl, /*number*//*key*/
a.kod_ras as kod_ras, /*number*/
a.opl as opl/*Оплачено*//*number*/

from sr_facopl
a
--\sr_facopl
)
sr_facopl_a_d
--\sr_facopl
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
kod_ras_a_d on sr_facopl_a_d.kod_ras = kod_ras_a_d.kod_ras--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_ras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1/*number*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg" table="nach" type="number" title="Посроченная задолженность" parname="selected_summa" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="dat" type="date" column="" />
                <param name="kod_deb_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="dat" type="date" column="" />
                  <param name="kod_deb_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1/*Оборот*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as dat_dolg, /*key*/
qube.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_deb as kod_deb/*number*//*key*/

from (
(
(
--
select nach.kod_deb as kod_deb/*number*//*key*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_deb as kod_deb, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select kod_sf_a_d.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_bzad" table="nach" type="date" title="Дата возникновения обязательства по погашению задолженности" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_bzad" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="nach">
              <params>
                <param name="dat" type="date" column="" />
                <param name="kod_deb_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="dat" type="date" column="" />
                  <param name="kod_deb_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.kod_deb as kod_deb/*number*//*key*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1/*Оборот*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as dat_dolg, /*key*/
qube.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_deb as kod_deb/*number*//*key*/

from (
(
(
--
select nach.kod_deb as kod_deb/*number*//*key*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select dims.kod_deb as kod_deb/*number*//*key*/

from (
--
select kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_deb as kod_deb, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select kod_sf_a_d.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dolg" table="nach" />
          </dependants>
        </column>
        <column name="is_new" table="nach" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="nach" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_deb as kod_deb 
,:num_pl as num_pl 
,:dat_deb as dat_deb 
,:ym as ym 
,:dat_bzad as dat_bzad 
 
from dual ) 
 
loop 
insert into sr_debet 
(kod_deb 
,num_pl 
,dat_deb 
,ym 
,dat_bzad 
) 
 values  
(r.kod_deb 
,r.num_pl 
,r.dat_deb 
,r.ym 
,r.dat_bzad 
) 
 returning  
kod_deb into :kod_deb; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_debet where kod_deb=:kod_deb</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='nach' 
and 
names=:form_id 
and 
f2=:kod_deb; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_deb as kod_deb 
,:num_pl as num_pl 
,:dat_deb as dat_deb 
,:ym as ym 
,:dat_bzad as dat_bzad 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n1 
,d1 
,n7 
,d2 
) 
 values  
('nach' 
,:form_id 
,:kod_deb 
,:row_state_id 
,r.kod_deb 
,r.num_pl 
,r.dat_deb 
,r.ym 
,r.dat_bzad 
); 
end loop; 
else 
for r in  
 ( select  
:kod_deb as kod_deb 
,:num_pl as num_pl 
,:dat_deb as dat_deb 
,:ym as ym 
,:dat_bzad as dat_bzad 
,a.tep_el 
,a.kodp 
,a.kod_dog 
,a.vid_pl 
,a.dat_priem 
,a.pr_old 
,a.pr_perep 
,a.den 
,a.kodp_plat 
,a.kod_dog_link 
,a.kod_deb_konsol 
,a.u_c 
,a.d_c 
 
from sr_debet a  where kod_deb=:kod_deb) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n1 
,d1 
,n7 
,d2 
,n3 
,n4 
,n5 
,n6 
,d3 
,n8 
,n9 
,n10 
,n11 
,n12 
,n13 
,s1 
,d4 
) 
 values  
('nach' 
,:form_id 
,:kod_deb 
,:row_state_id 
,r.kod_deb 
,r.num_pl 
,r.dat_deb 
,r.ym 
,r.dat_bzad 
,r.tep_el 
,r.kodp 
,r.kod_dog 
,r.vid_pl 
,r.dat_priem 
,r.pr_old 
,r.pr_perep 
,r.den 
,r.kodp_plat 
,r.kod_dog_link 
,r.kod_deb_konsol 
,r.u_c 
,r.d_c 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='nach' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_debet set  
(kod_deb 
,num_pl 
,dat_deb 
,ym 
,dat_bzad 
) 
= 
 ( select  
:kod_deb as kod_deb 
,:num_pl as num_pl 
,:dat_deb as dat_deb 
,:ym as ym 
,:dat_bzad as dat_bzad 
 
from dual ) 
 
where 
kod_deb=:kod_deb 
;
end;
</update-text>
      <scheme>
        <table name="sr_debet" as="nach">
          <columns>
            <column name="kod_deb" type="number" title="" visible="0" />
            <column name="name" type="string" title="Договор" />
            <column name="num_pl" type="number" format="F0" edit-mask="F0" title="Номер документа на оплату" />
            <column name="dat_deb" type="date" title="Дата документа на оплату" />
            <column name="ur_state_name" type="string" title="Юр. статус" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Период" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="sr_facopl_opl" type="number" title="Оплачено" />
            <column name="dolg" type="number" title="Посроченная задолженность" />
            <column name="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_deb" type="number" title="" visible="0" />
            <column name="name" type="string" title="Договор" />
            <column name="num_pl" type="number" format="F0" edit-mask="F0" title="Номер документа на оплату" />
            <column name="dat_deb" type="date" title="Дата документа на оплату" />
            <column name="ur_state_name" type="string" title="Юр. статус" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Период" />
            <column name="sr_facras_nachisl" type="number" title="Начислено" />
            <column name="sr_facopl_opl" type="number" title="Оплачено" />
            <column name="dolg" type="number" title="Посроченная задолженность" />
            <column name="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="dat" type="date" column="" />
            <param name="kod_deb_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="dat" type="date" column="" />
              <param name="kod_deb_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select nach.kod_deb as kod_deb, /*number*//*key*/
kod_dog_fin.name as name, /*Договор*//*string*/
nach.num_pl as num_pl, /*Номер документа на оплату*//*number*/
nach.dat_deb as dat_deb, /*Дата документа на оплату*//*date*/
ur_state.name as ur_state_name, /*Юр. статус*//*string*/
nach.ym as ym, /*Период*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl, /*Начислено*//*number*/
qube.sr_facopl_opl1 as sr_facopl_opl, /*Оплачено*//*number*/
qube.fin_ul_ob_on_date1 as dolg, /*Посроченная задолженность*//*number*/
nach.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
nach.is_new as is_new, /*number*/
nach.is_not_new as is_not_new/*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*//*key*/
sum(qube.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(qube.sr_facopl_opl1)  as sr_facopl_opl1, /*Оплачено*//*number*/
sum( case  when (qube.dat_dolg &lt;= :dat )  then ( nvl( qube.sr_facras_nachisl2 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  as fin_ul_ob_on_date1, /*Оборот*//*number*/
max( nullif(greatest (  nvl( qube.kod_ur_state_51 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_61 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_41 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_31 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_21 , -99999999999999999999999999999999999999)  , nvl( qube.kod_ur_state_11 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999) )  as kod_ur_state1/*Код юр. статуса*//*number*/

from (
--
select qube.kod_deb as kod_deb, /*number*/
qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.sr_facopl_opl1 as sr_facopl_opl1, /*Оплачено*//*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as dat_dolg, /*key*/
qube.kod_deb as kod_deb, /*number*/
qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
qube.kod_ur_state_61 as kod_ur_state_61, /*number*/
qube.sr_facopl_opl1 as sr_facopl_opl1, /*Оплачено*//*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facopl_opl1)  as sr_facopl_opl1, /*Оплачено*//*number*/
max(un.kod_ur_state_61)  as kod_ur_state_61, /*number*/
max(un.kod_ur_state_21)  as kod_ur_state_21, /*number*/
max(un.kod_ur_state_41)  as kod_ur_state_41, /*number*/
max(un.kod_ur_state_51)  as kod_ur_state_51, /*number*/
max(un.kod_ur_state_31)  as kod_ur_state_31, /*number*/
max(un.kod_ur_state_11)  as kod_ur_state_11/*number*/

from (
(
(
--
select nach.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach
--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select kod_sf_a_d.kod_deb as kod_deb, /*number*//*key*/
sr_facopl_a_d.opl as sr_facopl_opl1, /*Оплачено*//*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--sr_facopl
select a.kod_fopl as kod_fopl, /*number*//*key*/
a.kod_ras as kod_ras, /*number*/
a.opl as opl/*Оплачено*//*number*/

from sr_facopl
a
--\sr_facopl
)
sr_facopl_a_d
--\sr_facopl
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
kod_ras_a_d on sr_facopl_a_d.kod_ras = kod_ras_a_d.kod_ras--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_ras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
ur_hist_mat_ba.kod_ur_state as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_ba_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba_a_d on ur_hist_mat_ba_a_d.kod_mat = kod_mat_ba_a_d.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_dogplat_bnk
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_bnk_a_d on kod_dogplat_bnk_a_d.kod_mat = kod_mat_ba_a_d.kod_mat--\ur_dogplat_bnk
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf2_a_d1 on kod_dogplat_bnk_a_d.kod_deb_sf = kod_deb_sf2_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf2_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_hist_mat_ba_a_d.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
 case  when (a.dat_mor is not null )  then 6 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba on ur_hist_mat_ba.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_ba
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
ur_hist_mat_dec.kod_ur_state as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (a.dat_entry is not null )  then 2 end  as kod_ur_state/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
ur_inkasso.kod_ur_state as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_inkasso_a_d.kod_inkasso as kod_inkasso_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_inkasso
select a.kod_inkasso as kod_inkasso/*number*//*key*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso_a_d
--\ur_inkasso
left outer join
(
--ur_dp_inkasso
select a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
a.kod_inkasso as kod_inkasso, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_inkasso
a
--\ur_dp_inkasso
)
kod_dp_inkasso_a_d on kod_dp_inkasso_a_d.kod_inkasso = ur_inkasso_a_d.kod_inkasso--\ur_dp_inkasso
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_inkasso_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_inkasso_a_d.kod_inkasso, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_inkasso
select a.kod_inkasso as kod_inkasso, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 4 end  as kod_ur_state/*number*/

from ur_inkasso
a
--\ur_inkasso
)
ur_inkasso on ur_inkasso.kod_inkasso = dims.kod_inkasso_prm--\ur_inkasso
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
ur_kazn.kod_ur_state as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_kazn_a_d.kod_kazn as kod_kazn_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn_a_d
--\ur_kazn
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_kazn = ur_kazn_a_d.kod_kazn--\ur_dp_kazn
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 5 end  as kod_ur_state/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_kazn = dims.kod_kazn_prm--\ur_kazn
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
ur_mat_isp.kod_ur_state as kod_ur_state_31, /*number*/
null as kod_ur_state_11/*number*/

from (
--
select ur_mat_isp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp_a_d
--\ur_mat_isp
left outer join
(
--ur_dp_isp
select a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_isp
a
--\ur_dp_isp
)
kod_dp_isp_a_d on kod_dp_isp_a_d.kod_mat = ur_mat_isp_a_d.kod_mat--\ur_dp_isp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dp_isp_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_mat_isp_a_d.kod_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_isp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_isp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 3 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 2)
ur_mat_isp on ur_mat_isp.kod_mat = dims.kod_mat_prm--\ur_mat_isp
)
--\
union all
(
--
select dims.kod_deb as kod_deb, /*number*//*key*/
null as sr_facopl_opl1, /*number*/
null as kod_ur_state_61, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_31, /*number*/
ur_mat_pp.kod_ur_state as kod_ur_state_11/*number*/

from (
--
select ur_mat_pp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
kod_sf_a_d.kod_deb as kod_deb/*number*//*key*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp_a_d
--\ur_mat_pp
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_mat = ur_mat_pp_a_d.kod_mat--\ur_dogplat
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
kod_deb_sf1_a_d1 on kod_dogplat_a_d.kod_deb_sf = kod_deb_sf1_a_d1.kod_deb_sf--\vv_all_deb_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_deb_sf1_a_d1.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null  group by
ur_mat_pp_a_d.kod_mat, /*number*//*key*/
kod_sf_a_d.kod_deb/*number*//*key*/
)
dims
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*//*key*/
 case  when (a.dat_doc is not null )  then 1 end  as kod_ur_state/*number*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
ur_mat_pp on ur_mat_pp.kod_mat = dims.kod_mat_prm--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
qube.kod_deb as kod_deb, /*number*/
null as kod_ur_state_11, /*number*/
null as kod_ur_state_21, /*number*/
null as kod_ur_state_31, /*number*/
null as kod_ur_state_41, /*number*/
null as kod_ur_state_51, /*number*/
null as kod_ur_state_61, /*number*/
null as sr_facopl_opl1, /*number*/
qube.sr_facras_nachisl2 as sr_facras_nachisl2, /*Начислено*//*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.dat_dolg as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb as kod_deb, /*number*//*key*/
sum(un.sr_facras_nachisl2)  as sr_facras_nachisl2, /*Начислено*//*number*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select kod_sf_a_d.dat_bzad as dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl2, /*Начислено*//*number*/
sr_facras_a_d.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb, /*number*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
union all
(
--
select sr_opl_sf_a_d.dat_oper_dolg as dat_dolg, /*Дата операции оплаты задолженности*//*date*//*key*/
kod_sf_a_d.kod_deb as kod_deb, /*number*/
null as sr_facras_nachisl2, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf_a_d.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf, /*Оплата начислений*//*number*/
 nullif(greatest (  nvl( kod_sf.dat_bzad , to_date('01.01.0001','DD.MM.YYYY'))  , nvl( a.dat_uch , to_date('01.01.0001','DD.MM.YYYY'))  ), to_date('01.01.0001','DD.MM.YYYY'))  as dat_oper_dolg/*Дата операции оплаты задолженности*//*date*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 coalesce( kod_deb.dat_bzad , a.dat_zadol , a.dat_sf )  as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/

from (select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.dat_bzad as dat_bzad  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.d2 as dat_bzad  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
kod_deb on a.kod_deb = kod_deb.kod_deb--\sr_debet
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_deb as kod_deb/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--sr_debet
select a.kod_deb as kod_deb/*number*//*key*/

from (select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on kod_sf_a_d.kod_deb = nach.kod_deb--\sr_debet
where
nach.kod_deb is not null )
--\
)
--\
)
un
--\
 group by
un.dat_dolg, /*Дата возникновения обязательства по погашению задолженности*//*date*//*key*/
un.kod_deb/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_deb/*number*//*key*/
)
qube
--\
left outer join
(
--sr_debet
select a.kod_deb as kod_deb, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.num_pl as num_pl, /*Номер документа на оплату*//*number*/
a.dat_deb as dat_deb, /*Дата документа на оплату*//*date*/
a.ym as ym, /*Период*//*number*/
a.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.num_pl as num_pl,a.dat_deb as dat_deb,a.ym as ym,a.dat_bzad as dat_bzad,0 as is_new,1 as is_not_new  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.n5 as kod_dog,t.n1 as num_pl,t.d1 as dat_deb,t.n7 as ym,t.d2 as dat_bzad,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
a
--\(select a.kod_deb as kod_deb,a.kod_dog as kod_dog,a.num_pl as num_pl,a.dat_deb as dat_deb,a.ym as ym,a.dat_bzad as dat_bzad,0 as is_new,1 as is_not_new  from sr_debet a where not exists (select * from rr_temp t where t.skod ='nach' and t.names=:form_id  and a.kod_deb=t.f2 ) and   a.kod_deb in :kod_deb_prm   union all  select t.n2 as kod_deb,t.n5 as kod_dog,t.n1 as num_pl,t.d1 as dat_deb,t.n7 as ym,t.d2 as dat_bzad,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='nach' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_deb_prm )
)
nach on nach.kod_deb = qube.kod_deb--\sr_debet
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_dog_fin as kod_dog_fin/*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on nach.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_fin on kod_dog.kod_dog_fin = kod_dog_fin.kod_dog--\kr_dogovor
left outer join
(
--ur_state
select a.kod_ur_state as kod_ur_state, /*number*//*key*/
a.name as name/*Юр. статус*//*string*/

from (
      select 6  as kod_ur_state , 'Мораторная задолженность' as name from dual
      union select 5 , 'На исполнительном производстве(казн.)' from dual
      union select 4 , 'На исполнительном производстве(инк.)' from dual
      union select 3 , 'На исполнительном производстве(ССП)' from dual
      union select 2 , 'Взысканная задолженность' from dual
      union select 1 , 'Исковая задолженность' from dual
    )a
--\ur_sate
)
ur_state on qube.kod_ur_state1 = ur_state.kod_ur_state--\ur_state
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>