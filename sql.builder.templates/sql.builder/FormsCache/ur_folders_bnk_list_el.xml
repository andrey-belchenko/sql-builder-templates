<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_bnk_list_el" is-report="1" folder="ur_reports" security-id="asuse_ur_pir" with-behavior="0" title="Банкротство" timestamp="19.04.2025 02:56:03" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\bnk_el.xml" elid="115" ord="115" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Условия поиска" id="988586">
      <field id="9348954" name="kod_abon_type" controlType="UIList" title="Тип абонента" type="number" elid="564" ord="564" leaf="0" lvl="2" pelid="" column-editable="0">
        <listquery>
          <query name="kr_payer_abon_type" />
        </listquery>
        <defaultquery>
          <query name="abon_type_current" />
        </defaultquery>
      </field>
      <field id="17031726" name="dep" controlType="UIList" title="Отделение" type="number" elid="547" ord="547" leaf="0" lvl="2" pelid="" column-editable="kr_dep_is_multi">
        <listquery>
          <query name="kr_dep" />
        </listquery>
        <defaultquery>
          <query name="kr_dep_current" />
        </defaultquery>
      </field>
      <field id="19067808" name="prizn_arch_folder" controlType="UIList" title="Статус папки" type="number" elid="525" ord="525" leaf="0" lvl="2" pelid="">
        <listquery>
          <query name="prizn_arch_folder" />
        </listquery>
        <defaultquery>
          <query name="prizn_arch_folder_act" />
        </defaultquery>
      </field>
      <field id="37392545" controlType="UIText" type="string" elid="390" ord="390" leaf="1" lvl="2" pelid="" name="kodp" title="Код абонента" hint="LIKE" />
    </fieldgroup>
    <grid table="a" show-toolbar="1" id="5154653">
      <toolbar id="43663660">
        <uicommand object="a" name="create_form_bnk_main_el" button-type="custom-add-form" title="Создать карточку" icon="AddForm_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="377" ord="377" leaf="1" lvl="2" pelid="" id="8897276" />
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="365" ord="365" leaf="1" lvl="2" pelid="" title="" id="12966624" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="364" ord="364" leaf="1" lvl="2" pelid="" title="" id="49590760" />
      </toolbar>
      <columns id="20311517">
        <field table="a" name="sname" title="Отделение" controlType="UIText" rows-limit="100" id="64561322" />
        <field table="a" name="ur_folders_dog_name_ext" title="Номер договора" width="120" controlType="UIText" rows-limit="100" id="29863272" />
        <field table="a" name="name" title="Наименование потребителя" width="227" controlType="UIText" rows-limit="100" id="27053763" />
        <field table="a" name="ur_stage_bk_num_dela" title="Номер дела" controlType="UIText" rows-limit="100" id="8988713" />
        <field table="a" name="ur_stage_bk_dat_zayav_bankrot" title="Дата принятия заявл." controlType="UIDate" rows-limit="100" id="30591648" />
        <field table="a" name="ur_stage_bk_rn_1_stage_name" title="Процедура банкротства" controlType="UIText" rows-limit="100" id="21169251" />
        <field table="a" name="ur_stage_bk_rn_1_dat_create" title="Дата введения процедуры" width="81" controlType="UIDate" rows-limit="100" id="64454591" />
        <field table="a" name="ur_stage_bk_rn_1_dat_srok_proc" title="Срок процедуры" width="81" controlType="UIDate" rows-limit="100" id="11192359" />
        <field table="a" name="ur_stage_bk_rn_1_dat_finish" title="Дата завершения/ прекращения дела о банкротстве" width="81" controlType="UIDate" rows-limit="100" id="3907340" />
        <band title="Остаток мораторной задолженности" id="24626456">
          <field table="a" name="ur_bnk_list_ost_all_ba" title="Всего" width="81" controlType="UIText" edit-mask="N2" rows-limit="100" id="46186029" />
          <field table="a" name="ur_bnk_list_ost_osnreal" title="Основная реализация" width="81" controlType="UIText" edit-mask="N2" rows-limit="100" id="48074654" />
          <field table="a" name="ur_bnk_list_ost_peni" title="Проценты (Пени)" width="81" controlType="UIText" edit-mask="N2" rows-limit="100" id="15595987" />
          <field table="a" name="ur_bnk_list_ost_gp" title="ГП" width="81" controlType="UIText" edit-mask="N2" rows-limit="100" id="28076679" />
          <field table="a" name="ur_hist_mat_ba_ost_ogr" title="Расх. за введ. огран. реж. энерг." width="81" controlType="UIText" edit-mask="N2" rows-limit="100" id="66804541" />
        </band>
        <field table="a" name="dat_create" title="Дата создания папки" controlType="UIDate" rows-limit="100" id="46584320" />
        <field table="a" name="dat_finish" title="Дата сброса папки в архив" width="92" controlType="UIDate" rows-limit="100" id="2884644" />
        <field table="a" name="is_active" title="Статус папки" controlType="UICombo" rows-limit="100" id="22530818" />
        <field table="a" name="kod_folders" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="50404031" />
        <field table="a" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="35990277" />
      </columns>
      <menu id="34620147">
        <uicommand object="a" name="form_ur_folders_bnk_main_el" title="Открыть карточку" id="48585925" />
      </menu>
      <events id="52768522">
        <useaction object="a" name="form_ur_folders_bnk_main_el" event-name="double-click" id="43145871" />
      </events>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="number" name="kod_abon_type" parname="kod_abon_type" title="Тип абонента" ColumnEditable="0" />
      <field type="number" name="dep" parname="dep" title="Отделение" ColumnEditable="kr_dep_is_multi" />
      <field type="number" name="prizn_arch_folder" parname="prizn_arch_folder" title="Статус папки" />
      <field type="string" name="kodp" parname="kodp" title="Код абонента" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" column-editable="0" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
qube.ur_folders_dog_name_ext1 as ur_folders_dog_name_ext, /*Номер договора*//*string*/
kodp.name as name, /*Наименование потребителя*//*string*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela, /*Номер дела*//*string*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot, /*Дата принятия заявл.*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name, /*Процедура банкротства*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create, /*Дата введения процедуры*//*date*/
qube.z23df_1 as ur_stage_bk_rn_1_dat_srok_proc, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish, /*Дата завершения/ прекращения дела о банкротстве*//*date*/
nullif(qube.ur_bnk_list_ost_all_ba1,0)  as ur_bnk_list_ost_all_ba, /*Всего*//*number*/
nullif(qube.ur_bnk_list_ost_osnreal1,0)  as ur_bnk_list_ost_osnreal, /*Основная реализация*//*number*/
nullif(qube.ur_bnk_list_ost_peni1,0)  as ur_bnk_list_ost_peni, /*Проценты (Пени)*//*number*/
nullif(qube.ur_bnk_list_ost_gp1,0)  as ur_bnk_list_ost_gp, /*ГП*//*number*/
nullif(qube.ur_hist_mat_ba_ost_ogr1,0)  as ur_hist_mat_ba_ost_ogr, /*Расх. за введ. огран. реж. энерг.*//*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /*number*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_dog_name1 else qube.kr_dog_name1 end )  as ur_folders_dog_name_ext1, /*Договор*//*string*/
max(qube.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
min(qube.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл.*//*date*/
max(qube.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1, /*Процедура банкротства*//*string*/
max(qube.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1, /*Дата введения процедуры*//*date*/
max(qube.z23df_1)  as z23df_1, /*Срок процедуры*//*date*/
max(qube.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения/ прекращения дела о банкротстве*//*date*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_ogr_ba1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_ogr_ba1 ,0) )  ,0) )  else ( nvl( ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_ba_ost_ogr1 ,0) )  end )  ,0) )  as ur_bnk_list_ost_all_ba1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0) )  else ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_osnreal1, /*Осн. реал.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0) )  else ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_peni1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0) )  else ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_gp1, /*Госпошлина*//*number*/
sum(qube.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Расх. за введ. огран. реж. энерг.*//*number*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1, /*Договор*//*string*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
qube.z23df_1 as z23df_1, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1, /*Договор*//*string*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
qube.z23df_1 as z23df_1, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(un.ur_folders_dog_name1)  as ur_folders_dog_name1, /*Договор*//*string*/
max(un.ur_hist_mat_ba_gp_ba1)  as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
max(un.ur_hist_mat_ba_ogr_ba1)  as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_ba_opl_gpotv_ba1)  as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
sum(un.ur_hist_mat_ba_opl_ogr_ba1)  as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_opl_osnreal_ba1)  as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
sum(un.ur_hist_mat_ba_opl_peni_ba1)  as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
sum(un.ur_hist_mat_ba_osnreal_ba1)  as ur_hist_mat_ba_osnreal_ba1, /*number*/
sum(un.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_peni_ba1)  as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1, /*number*/
min(un.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
max(un.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
max(un.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
max(un.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
max(un.z23df_1)  as z23df_1, /*Срок процедуры*//*date*/
max(un.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
a.name as ur_folders_dog_name1, /*Договор*//*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
kod_dog.name as name, /*Договор*//*string*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
ur_hist_mat_ba_a_d.gosposhlina_ba as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
ur_hist_mat_ba_a_d.ogr_ba as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_ba_a_d.opl_gpotv_ba as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
ur_hist_mat_ba_a_d.opl_ogr_ba as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.opl_osnreal_ba as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
ur_hist_mat_ba_a_d.opl_peni_ba as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
ur_hist_mat_ba_a_d.osnreal_ba as ur_hist_mat_ba_osnreal_ba1, /*number*/
ur_hist_mat_ba_a_d.ost_ogr as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.peni_ba as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.osnreal as osnreal_ba, /**//*number*/
a.ogr as ogr_ba, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_ba, /*Пени*//*number*/
a.gosposhlina as gosposhlina_ba, /*Госпошлина*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_osnreal as opl_osnreal_ba, /*Осн. реал.*//*number*/
a.opl_peni as opl_peni_ba, /*Проценты (пени)*//*number*/
a.opl_gpotv as opl_gpotv_ba, /*ГП*//*number*/
a.opl_ogr as opl_ogr_ba/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_stage_bk_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
ur_stage_bk_a_d.dat_zayav_bankrot as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
ur_stage_bk_a_d.num_dela as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.num_dela as num_dela, /*Номер дела*//*string*/
a.dat_zayav_bankrot as dat_zayav_bankrot/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
ur_stage_bk_a_d
--\ur_stage_bk
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_stage_bk_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
ur_stage_bk_rn_1_a_d.dat_create as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
ur_stage_bk_rn_1_a_d.dat_finish as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
ur_stage_bk_rn_1_a_d.dat_srok_proc as z23df_1, /*Срок процедуры*//*date*/
ur_stage_bk_rn_1_a_d.stage_name as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.stage_name as stage_name, /*Стадия процедуры банкротства*//*string*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc, /*Срок процедуры*//*date*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
kod_stage.name as stage_name, /*Стадия процедуры банкротства*//*string*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc, /*Срок процедуры*//*date*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.kod_stage as kod_stage, /*Стадия процедуры банкротства*//*number*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_finish as dat_finish, /*Дата завершения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc/*Срок процедуры*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
left outer join
(
--uk_stage
select a.kod_stage as kod_stage, /*number*//*key*/
a.name as name/*Стадия процедуры банкротства*//*string*/

from uk_stage
a
--\uk_stage
)
kod_stage on a.kod_stage = kod_stage.kod_stage--\uk_stage
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 9)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
a.kod_dog as kod_dog/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.vvod as vvod, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
)
a on a.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on a.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="sname" table="kod_podr" type="string" title="Отделение" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_folders_dog_name_ext" table="a" type="string" title="Номер договора" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_dog_name_ext1 as ur_folders_dog_name_ext, /*Номер договора*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_dog_name1 else qube.kr_dog_name1 end )  as ur_folders_dog_name_ext1/*Договор*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1/*Договор*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(un.ur_folders_dog_name1)  as ur_folders_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_folders_dog_name1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
a.name as ur_folders_dog_name1/*Договор*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_dog.name as name/*Договор*//*string*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name" table="kodp" type="string" title="Наименование потребителя" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.name as name, /*Наименование потребителя*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_num_dela" table="ur_stage_bk" type="string" title="Номер дела" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela, /*Номер дела*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1/*Номер дела*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1/*Номер дела*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1/*Номер дела*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1/*Номер дела*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_stage_bk_num_dela1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_a_d.num_dela as ur_stage_bk_num_dela1/*Номер дела*//*string*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.num_dela as num_dela/*Номер дела*//*string*/

from ur_stage_bk
a
--\ur_stage_bk
)
ur_stage_bk_a_d
--\ur_stage_bk
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_dat_zayav_bankrot" table="ur_stage_bk" type="date" title="Дата принятия заявл." is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot, /*Дата принятия заявл.*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1/*Дата принятия заявл.*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_stage_bk_dat_zayav_bankrot1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_a_d.dat_zayav_bankrot as ur_stage_bk_dat_zayav_bankrot1/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.dat_zayav_bankrot as dat_zayav_bankrot/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
ur_stage_bk_a_d
--\ur_stage_bk
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_rn_1_stage_name" table="ur_stage_bk_rn_1" type="string" title="Процедура банкротства" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name, /*Процедура банкротства*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1/*Процедура банкротства*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_rn_1_a_d.stage_name as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.stage_name as stage_name/*Стадия процедуры банкротства*//*string*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
kod_stage.name as stage_name/*Стадия процедуры банкротства*//*string*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.kod_stage as kod_stage, /*Стадия процедуры банкротства*//*number*/
a.dat_create as dat_create/*Дата введения стадии*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
left outer join
(
--uk_stage
select a.kod_stage as kod_stage, /*number*//*key*/
a.name as name/*Стадия процедуры банкротства*//*string*/

from uk_stage
a
--\uk_stage
)
kod_stage on a.kod_stage = kod_stage.kod_stage--\uk_stage
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_rn_1_dat_create" table="ur_stage_bk_rn_1" type="date" title="Дата введения процедуры" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create, /*Дата введения процедуры*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1/*Дата введения процедуры*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1/*Дата введения стадии*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1/*Дата введения стадии*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1/*Дата введения стадии*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_stage_bk_rn_1_dat_create1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_rn_1_a_d.dat_create as ur_stage_bk_rn_1_dat_create1/*Дата введения стадии*//*date*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.dat_create as dat_create/*Дата введения стадии*//*date*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
a.dat_create as dat_create/*Дата введения стадии*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.dat_create as dat_create/*Дата введения стадии*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_rn_1_dat_srok_proc" table="ur_stage_bk_rn_1" type="date" title="Срок процедуры" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.z23df_1 as ur_stage_bk_rn_1_dat_srok_proc, /*Срок процедуры*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.z23df_1)  as z23df_1/*Срок процедуры*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.z23df_1 as z23df_1/*Срок процедуры*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.z23df_1 as z23df_1/*Срок процедуры*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.z23df_1)  as z23df_1/*Срок процедуры*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as z23df_1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_rn_1_a_d.dat_srok_proc as z23df_1/*Срок процедуры*//*date*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.dat_srok_proc as dat_srok_proc/*Срок процедуры*//*date*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
a.dat_srok_proc as dat_srok_proc/*Срок процедуры*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc/*Срок процедуры*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_stage_bk_rn_1_dat_finish" table="ur_stage_bk_rn_1" type="date" title="Дата завершения/ прекращения дела о банкротстве" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish, /*Дата завершения/ прекращения дела о банкротстве*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1/*Дата завершения/ прекращения дела о банкротстве*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1/*Дата завершения стадии*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1/*Дата завершения стадии*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1/*Дата завершения стадии*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_stage_bk_rn_1_dat_finish1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_stage_bk_rn_1_a_d.dat_finish as ur_stage_bk_rn_1_dat_finish1/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_bnk_list_ost_all_ba" table="ur_hist_mat" type="number" title="Всего" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_bnk_list_ost_all_ba1,0)  as ur_bnk_list_ost_all_ba, /*Всего*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_ogr_ba1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_ogr_ba1 ,0) )  ,0) )  else ( nvl( ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_ba_ost_ogr1 ,0) )  end )  ,0) )  as ur_bnk_list_ost_all_ba1/*Пени*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_hist_mat_ba_gp_ba1)  as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
max(un.ur_hist_mat_ba_ogr_ba1)  as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_ba_opl_gpotv_ba1)  as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
sum(un.ur_hist_mat_ba_opl_ogr_ba1)  as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_opl_osnreal_ba1)  as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
sum(un.ur_hist_mat_ba_opl_peni_ba1)  as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
sum(un.ur_hist_mat_ba_osnreal_ba1)  as ur_hist_mat_ba_osnreal_ba1, /*number*/
sum(un.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_peni_ba1)  as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.gosposhlina_ba as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
ur_hist_mat_ba_a_d.ogr_ba as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_ba_a_d.opl_gpotv_ba as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
ur_hist_mat_ba_a_d.opl_ogr_ba as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.opl_osnreal_ba as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
ur_hist_mat_ba_a_d.opl_peni_ba as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
ur_hist_mat_ba_a_d.osnreal_ba as ur_hist_mat_ba_osnreal_ba1, /*number*/
ur_hist_mat_ba_a_d.ost_ogr as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.peni_ba as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.osnreal as osnreal_ba, /**//*number*/
a.ogr as ogr_ba, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_ba, /*Пени*//*number*/
a.gosposhlina as gosposhlina_ba, /*Госпошлина*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_osnreal as opl_osnreal_ba, /*Осн. реал.*//*number*/
a.opl_peni as opl_peni_ba, /*Проценты (пени)*//*number*/
a.opl_gpotv as opl_gpotv_ba, /*ГП*//*number*/
a.opl_ogr as opl_ogr_ba/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_bnk_list_ost_osnreal" table="ur_hist_mat" type="number" title="Основная реализация" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_bnk_list_ost_osnreal1,0)  as ur_bnk_list_ost_osnreal, /*Основная реализация*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0) )  else ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_osnreal1/*Осн. реал.*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_hist_mat_ba_opl_osnreal_ba1)  as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
sum(un.ur_hist_mat_ba_osnreal_ba1)  as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.opl_osnreal_ba as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
ur_hist_mat_ba_a_d.osnreal_ba as ur_hist_mat_ba_osnreal_ba1/*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.osnreal as osnreal_ba, /**//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_osnreal as opl_osnreal_ba/*Осн. реал.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_bnk_list_ost_peni" table="ur_hist_mat" type="number" title="Проценты (Пени)" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_bnk_list_ost_peni1,0)  as ur_bnk_list_ost_peni, /*Проценты (Пени)*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0) )  else ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_peni1/*Пени*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_hist_mat_ba_opl_peni_ba1)  as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
sum(un.ur_hist_mat_ba_peni_ba1)  as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.opl_peni_ba as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
ur_hist_mat_ba_a_d.peni_ba as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.peni as peni_ba, /*Пени*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_peni as opl_peni_ba/*Проценты (пени)*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_bnk_list_ost_gp" table="ur_hist_mat" type="number" title="ГП" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_bnk_list_ost_gp1,0)  as ur_bnk_list_ost_gp, /*ГП*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0) )  else ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_gp1/*Госпошлина*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1/*ГП*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1/*ГП*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_hist_mat_ba_gp_ba1)  as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
sum(un.ur_hist_mat_ba_opl_gpotv_ba1)  as ur_hist_mat_ba_opl_gpotv_ba1/*ГП*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.gosposhlina_ba as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
ur_hist_mat_ba_a_d.opl_gpotv_ba as ur_hist_mat_ba_opl_gpotv_ba1/*ГП*//*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.gosposhlina as gosposhlina_ba, /*Госпошлина*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_gpotv as opl_gpotv_ba/*ГП*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_ba_ost_ogr" table="ur_hist_mat" type="number" title="Расх. за введ. огран. реж. энерг." is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_hist_mat_ba_ost_ogr1,0)  as ur_hist_mat_ba_ost_ogr, /*Расх. за введ. огран. реж. энерг.*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum(qube.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1/*Расх. за введ. огран. реж. энерг.*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1/*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1/*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1/*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_ost_ogr1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.ost_ogr as ur_hist_mat_ba_ost_ogr1/*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
kod_mat_ba.kod_folders as kod_folders/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_create" table="a" type="date" title="Дата создания папки" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_create" temp-col-name="d1" />
        <column name="dat_finish" table="a" type="date" title="Дата сброса папки в архив" Visible="is_not_new" ColumnEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_finish" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="is_active" table="a" />
            <dependant name="is_active_x_n" table="a" />
          </dependants>
        </column>
        <column name="is_active" table="a" type="number" title="Статус папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="a" type="number" title="" parname="kod_folders" ColumnVisible="false" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
        <column name="vvod" table="a" type="number" title="Способ учета задолженности" ColumnEditable="0" ColumnDefault="ur_folders_vvod_default" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vvod" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select nullif(qube.ur_bnk_list_ost_all_ba1,0)  as ur_bnk_list_ost_all_ba, /*Всего*//*number*/
nullif(qube.ur_bnk_list_ost_osnreal1,0)  as ur_bnk_list_ost_osnreal, /*Основная реализация*//*number*/
nullif(qube.ur_bnk_list_ost_peni1,0)  as ur_bnk_list_ost_peni, /*Проценты (Пени)*//*number*/
nullif(qube.ur_bnk_list_ost_gp1,0)  as ur_bnk_list_ost_gp, /*ГП*//*number*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_ogr_ba1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_ogr_ba1 ,0) )  ,0) )  else ( nvl( ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_ba_ost_ogr1 ,0) )  end )  ,0) )  as ur_bnk_list_ost_all_ba1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0) )  else ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_osnreal1, /*Осн. реал.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0) )  else ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_peni1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0) )  else ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_gp1/*Госпошлина*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_hist_mat_ba_gp_ba1)  as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
max(un.ur_hist_mat_ba_ogr_ba1)  as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_ba_opl_gpotv_ba1)  as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
sum(un.ur_hist_mat_ba_opl_ogr_ba1)  as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_opl_osnreal_ba1)  as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
sum(un.ur_hist_mat_ba_opl_peni_ba1)  as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
sum(un.ur_hist_mat_ba_osnreal_ba1)  as ur_hist_mat_ba_osnreal_ba1, /*number*/
sum(un.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_peni_ba1)  as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_ba_a_d.gosposhlina_ba as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
ur_hist_mat_ba_a_d.ogr_ba as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_ba_a_d.opl_gpotv_ba as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
ur_hist_mat_ba_a_d.opl_ogr_ba as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.opl_osnreal_ba as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
ur_hist_mat_ba_a_d.opl_peni_ba as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
ur_hist_mat_ba_a_d.osnreal_ba as ur_hist_mat_ba_osnreal_ba1, /*number*/
ur_hist_mat_ba_a_d.ost_ogr as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.peni_ba as ur_hist_mat_ba_peni_ba1/*Пени*//*number*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.osnreal as osnreal_ba, /**//*number*/
a.ogr as ogr_ba, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_ba, /*Пени*//*number*/
a.gosposhlina as gosposhlina_ba, /*Госпошлина*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_osnreal as opl_osnreal_ba, /*Осн. реал.*//*number*/
a.opl_peni as opl_peni_ba, /*Проценты (пени)*//*number*/
a.opl_gpotv as opl_gpotv_ba, /*ГП*//*number*/
a.opl_ogr as opl_ogr_ba/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on a.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_bnk_list_ost_all_ba" table="a" />
            <dependant name="ur_bnk_list_ost_osnreal" table="a" />
            <dependant name="ur_bnk_list_ost_peni" table="a" />
            <dependant name="ur_bnk_list_ost_gp" table="a" />
            <dependant name="vvod_x_n" table="a" />
          </dependants>
        </column>
        <column name="is_active_x_n" table="a.is_active" type="string" title="Статус папки" text-source-for="is_active" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="a.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on a.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="a" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
,:vvod as vvod 
 
from dual ) 
 
loop 
insert into ur_folders 
(dat_create 
,dat_finish 
,kod_folders 
,vvod 
) 
 values  
(r.dat_create 
,r.dat_finish 
,r.kod_folders 
,r.vvod 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
,:vvod as vvod 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,d1 
,d2 
,n1 
,n2 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.dat_create 
,r.dat_finish 
,r.kod_folders 
,r.vvod 
); 
end loop; 
else 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
,:vvod as vvod 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,d1 
,d2 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,s1 
,d3 
,n8 
,n9 
,n10 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.dat_create 
,r.dat_finish 
,r.kod_folders 
,r.vvod 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(dat_create 
,dat_finish 
,kod_folders 
,vvod 
) 
= 
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
,:vvod as vvod 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="a">
          <columns>
            <column name="sname" type="string" title="Отделение" />
            <column name="ur_folders_dog_name_ext" type="string" title="Номер договора" />
            <column name="name" type="string" title="Наименование потребителя" />
            <column name="ur_stage_bk_num_dela" type="string" title="Номер дела" />
            <column name="ur_stage_bk_dat_zayav_bankrot" type="date" title="Дата принятия заявл." />
            <column name="ur_stage_bk_rn_1_stage_name" type="string" title="Процедура банкротства" />
            <column name="ur_stage_bk_rn_1_dat_create" type="date" title="Дата введения процедуры" />
            <column name="ur_stage_bk_rn_1_dat_srok_proc" type="date" title="Срок процедуры" />
            <column name="ur_stage_bk_rn_1_dat_finish" type="date" title="Дата завершения/ прекращения дела о банкротстве" />
            <column name="ur_bnk_list_ost_all_ba" type="number" title="Всего" />
            <column name="ur_bnk_list_ost_osnreal" type="number" title="Основная реализация" />
            <column name="ur_bnk_list_ost_peni" type="number" title="Проценты (Пени)" />
            <column name="ur_bnk_list_ost_gp" type="number" title="ГП" />
            <column name="ur_hist_mat_ba_ost_ogr" type="number" title="Расх. за введ. огран. реж. энерг." />
            <column name="dat_create" type="date" title="Дата создания папки" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" title="" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="sname" type="string" title="Отделение" />
            <column name="ur_folders_dog_name_ext" type="string" title="Номер договора" />
            <column name="name" type="string" title="Наименование потребителя" />
            <column name="ur_stage_bk_num_dela" type="string" title="Номер дела" />
            <column name="ur_stage_bk_dat_zayav_bankrot" type="date" title="Дата принятия заявл." />
            <column name="ur_stage_bk_rn_1_stage_name" type="string" title="Процедура банкротства" />
            <column name="ur_stage_bk_rn_1_dat_create" type="date" title="Дата введения процедуры" />
            <column name="ur_stage_bk_rn_1_dat_srok_proc" type="date" title="Срок процедуры" />
            <column name="ur_stage_bk_rn_1_dat_finish" type="date" title="Дата завершения/ прекращения дела о банкротстве" />
            <band title="Остаток мораторной задолженности">
              <column name="ur_bnk_list_ost_all_ba" type="number" title="Всего" />
              <column name="ur_bnk_list_ost_osnreal" type="number" title="Основная реализация" />
              <column name="ur_bnk_list_ost_peni" type="number" title="Проценты (Пени)" />
              <column name="ur_bnk_list_ost_gp" type="number" title="ГП" />
              <column name="ur_hist_mat_ba_ost_ogr" type="number" title="Расх. за введ. огран. реж. энерг." />
            </band>
            <column name="dat_create" type="date" title="Дата создания папки" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" title="" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
qube.ur_folders_dog_name_ext1 as ur_folders_dog_name_ext, /*Номер договора*//*string*/
kodp.name as name, /*Наименование потребителя*//*string*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela, /*Номер дела*//*string*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot, /*Дата принятия заявл.*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name, /*Процедура банкротства*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create, /*Дата введения процедуры*//*date*/
qube.z23df_1 as ur_stage_bk_rn_1_dat_srok_proc, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish, /*Дата завершения/ прекращения дела о банкротстве*//*date*/
nullif(qube.ur_bnk_list_ost_all_ba1,0)  as ur_bnk_list_ost_all_ba, /*Всего*//*number*/
nullif(qube.ur_bnk_list_ost_osnreal1,0)  as ur_bnk_list_ost_osnreal, /*Основная реализация*//*number*/
nullif(qube.ur_bnk_list_ost_peni1,0)  as ur_bnk_list_ost_peni, /*Проценты (Пени)*//*number*/
nullif(qube.ur_bnk_list_ost_gp1,0)  as ur_bnk_list_ost_gp, /*ГП*//*number*/
nullif(qube.ur_hist_mat_ba_ost_ogr1,0)  as ur_hist_mat_ba_ost_ogr, /*Расх. за введ. огран. реж. энерг.*//*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /*number*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_dog_name1 else qube.kr_dog_name1 end )  as ur_folders_dog_name_ext1, /*Договор*//*string*/
max(qube.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
min(qube.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл.*//*date*/
max(qube.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1, /*Процедура банкротства*//*string*/
max(qube.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1, /*Дата введения процедуры*//*date*/
max(qube.z23df_1)  as z23df_1, /*Срок процедуры*//*date*/
max(qube.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения/ прекращения дела о банкротстве*//*date*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_ogr_ba1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0)  +nvl( qube.ur_hist_mat_ba_opl_ogr_ba1 ,0) )  ,0) )  else ( nvl( ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (4) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_ba_ost_ogr1 ,0) )  end )  ,0) )  as ur_bnk_list_ost_all_ba1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_osnreal_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_osnreal_ba1 ,0) )  else ( case  when (vid_real.vid_real in (2) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_osnreal1, /*Осн. реал.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_peni_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_peni_ba1 ,0) )  else ( case  when (vid_real.vid_real in (7) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_peni1, /*Пени*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_ba_gp_ba1 ,0)  -nvl( qube.ur_hist_mat_ba_opl_gpotv_ba1 ,0) )  else ( case  when (vid_real.vid_real in (9) )  then ( nvl( qube.sr_facras_nachisl1 ,0)  -nvl( qube.sr_opl_opl_sf1 ,0) )  end )  end )  ,0) )  as ur_bnk_list_ost_gp1, /*Госпошлина*//*number*/
sum(qube.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Расх. за введ. огран. реж. энерг.*//*number*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1, /*Договор*//*string*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
qube.z23df_1 as z23df_1, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as vid_real, 
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
null as sr_facras_nachisl1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_folders_dog_name1 as ur_folders_dog_name1, /*Договор*//*string*/
qube.ur_hist_mat_ba_gp_ba1 as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
qube.ur_hist_mat_ba_ogr_ba1 as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_ba_opl_gpotv_ba1 as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
qube.ur_hist_mat_ba_opl_ogr_ba1 as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_opl_osnreal_ba1 as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
qube.ur_hist_mat_ba_opl_peni_ba1 as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
qube.ur_hist_mat_ba_osnreal_ba1 as ur_hist_mat_ba_osnreal_ba1, /*number*/
qube.ur_hist_mat_ba_ost_ogr1 as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_hist_mat_ba_peni_ba1 as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_stage_bk_dat_zayav_bankrot1 as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
qube.ur_stage_bk_num_dela1 as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
qube.ur_stage_bk_rn_1_dat_create1 as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
qube.ur_stage_bk_rn_1_dat_finish1 as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
qube.z23df_1 as z23df_1, /*Срок процедуры*//*date*/
qube.ur_stage_bk_rn_1_stage_name1 as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(un.ur_folders_dog_name1)  as ur_folders_dog_name1, /*Договор*//*string*/
max(un.ur_hist_mat_ba_gp_ba1)  as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
max(un.ur_hist_mat_ba_ogr_ba1)  as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_ba_opl_gpotv_ba1)  as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
sum(un.ur_hist_mat_ba_opl_ogr_ba1)  as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_opl_osnreal_ba1)  as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
sum(un.ur_hist_mat_ba_opl_peni_ba1)  as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
sum(un.ur_hist_mat_ba_osnreal_ba1)  as ur_hist_mat_ba_osnreal_ba1, /*number*/
sum(un.ur_hist_mat_ba_ost_ogr1)  as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_hist_mat_ba_peni_ba1)  as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1, /*number*/
min(un.ur_stage_bk_dat_zayav_bankrot1)  as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
max(un.ur_stage_bk_num_dela1)  as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
max(un.ur_stage_bk_rn_1_dat_create1)  as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
max(un.ur_stage_bk_rn_1_dat_finish1)  as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
max(un.z23df_1)  as z23df_1, /*Срок процедуры*//*date*/
max(un.ur_stage_bk_rn_1_stage_name1)  as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
a.name as ur_folders_dog_name1, /*Договор*//*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_dog.name as name/*Договор*//*string*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_hist_mat_ba_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
ur_hist_mat_ba_a_d.gosposhlina_ba as ur_hist_mat_ba_gp_ba1, /*Госпошлина*//*number*/
ur_hist_mat_ba_a_d.ogr_ba as ur_hist_mat_ba_ogr_ba1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_ba_a_d.opl_gpotv_ba as ur_hist_mat_ba_opl_gpotv_ba1, /*ГП*//*number*/
ur_hist_mat_ba_a_d.opl_ogr_ba as ur_hist_mat_ba_opl_ogr_ba1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.opl_osnreal_ba as ur_hist_mat_ba_opl_osnreal_ba1, /*Осн. реал.*//*number*/
ur_hist_mat_ba_a_d.opl_peni_ba as ur_hist_mat_ba_opl_peni_ba1, /*Проценты (пени)*//*number*/
ur_hist_mat_ba_a_d.osnreal_ba as ur_hist_mat_ba_osnreal_ba1, /*number*/
ur_hist_mat_ba_a_d.ost_ogr as ur_hist_mat_ba_ost_ogr1, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
ur_hist_mat_ba_a_d.peni_ba as ur_hist_mat_ba_peni_ba1, /*Пени*//*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_hist_mat_ba
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
a.osnreal as osnreal_ba, /**//*number*/
a.ogr as ogr_ba, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_ba, /*Пени*//*number*/
a.gosposhlina as gosposhlina_ba, /*Госпошлина*//*number*/
kod_mat_ba.kod_folders as kod_folders, /*number*/
a.opl_osnreal as opl_osnreal_ba, /*Осн. реал.*//*number*/
a.opl_peni as opl_peni_ba, /*Проценты (пени)*//*number*/
a.opl_gpotv as opl_gpotv_ba, /*ГП*//*number*/
a.opl_ogr as opl_ogr_ba/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba1 on a.kod_mat = kod_mat_ba1.kod_mat_ba--\ur_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat_ba1.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_mat_ba
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_ba/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n6 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 9)
kod_mat_ba on a.kod_mat = kod_mat_ba.kod_mat_ba--\ur_mat_ba
where
kod_folders.kod_sdp = 9)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_hist_mat_ba_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
ur_stage_bk_a_d.dat_zayav_bankrot as ur_stage_bk_dat_zayav_bankrot1, /*Дата принятия заявл. о призн. должника банкротом*//*date*/
ur_stage_bk_a_d.num_dela as ur_stage_bk_num_dela1, /*Номер дела*//*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.num_dela as num_dela, /*Номер дела*//*string*/
a.dat_zayav_bankrot as dat_zayav_bankrot/*Дата принятия заявл. о призн. должника банкротом*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
ur_stage_bk_a_d
--\ur_stage_bk
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_stage_bk_rn_1_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
ur_stage_bk_rn_1_a_d.dat_create as ur_stage_bk_rn_1_dat_create1, /*Дата введения стадии*//*date*/
ur_stage_bk_rn_1_a_d.dat_finish as ur_stage_bk_rn_1_dat_finish1, /*Дата завершения стадии*//*date*/
ur_stage_bk_rn_1_a_d.dat_srok_proc as z23df_1, /*Срок процедуры*//*date*/
ur_stage_bk_rn_1_a_d.stage_name as ur_stage_bk_rn_1_stage_name1/*Стадия процедуры банкротства*//*string*/

from (
--ur_stage_bk_rn_1
select a.kod_folders as kod_folders, /*number*/
a.stage_name as stage_name, /*Стадия процедуры банкротства*//*string*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc, /*Срок процедуры*//*date*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk_rn
select a.kod_folders as kod_folders, /*number*/
 row_number() over(  partition by a.kod_folders order by a.dat_create desc  )  as rn, /*Дата введения стадии*//*number*/
kod_stage.name as stage_name, /*Стадия процедуры банкротства*//*string*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc, /*Срок процедуры*//*date*/
a.dat_finish as dat_finish/*Дата завершения стадии*//*date*/

from (
--ur_stage_bk
select a.kod_folders as kod_folders, /*number*/
a.kod_stage as kod_stage, /*Стадия процедуры банкротства*//*number*/
a.dat_create as dat_create, /*Дата введения стадии*//*date*/
a.dat_finish as dat_finish, /*Дата завершения стадии*//*date*/
a.dat_srok_proc as dat_srok_proc/*Срок процедуры*//*date*/

from ur_stage_bk
a
--\ur_stage_bk
)
a
--\ur_stage_bk
left outer join
(
--uk_stage
select a.kod_stage as kod_stage, /*number*//*key*/
a.name as name/*Стадия процедуры банкротства*//*string*/

from uk_stage
a
--\uk_stage
)
kod_stage on a.kod_stage = kod_stage.kod_stage--\uk_stage
)
a
--\ur_stage_bk_rn
where
a.rn = 1)
ur_stage_bk_rn_1_a_d
--\ur_stage_bk_rn_1
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_stage_bk_rn_1_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_name1, /*string*/
qube.sr_facras_nachisl1 as sr_facras_nachisl1, /*Начислено*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_folders_dog_name1, /*string*/
null as ur_hist_mat_ba_gp_ba1, /*number*/
null as ur_hist_mat_ba_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_gpotv_ba1, /*number*/
null as ur_hist_mat_ba_opl_ogr_ba1, /*number*/
null as ur_hist_mat_ba_opl_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_opl_peni_ba1, /*number*/
null as ur_hist_mat_ba_osnreal_ba1, /*number*/
null as ur_hist_mat_ba_ost_ogr1, /*number*/
null as ur_hist_mat_ba_peni_ba1, /*number*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_stage_bk_dat_zayav_bankrot1, /*date*/
null as ur_stage_bk_num_dela1, /*string*/
null as ur_stage_bk_rn_1_dat_create1, /*date*/
null as ur_stage_bk_rn_1_dat_finish1, /*date*/
null as z23df_1, /*date*/
null as ur_stage_bk_rn_1_stage_name1/*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_facras_nachisl1)  as sr_facras_nachisl1, /*Начислено*//*number*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_facras.nachisl as sr_facras_nachisl1, /*Начислено*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select sr_facras_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_a_d
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_facras_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_facras_a_d.kod_ras, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras
select a.kod_ras as kod_ras, /*number*//*key*/
a.nachisl as nachisl/*Начислено*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras on sr_facras.kod_ras = dims.kod_ras_prm--\sr_facras
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_facras_nachisl1, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat_a_d.kod_folders, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as vvod,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.vvod as vvod, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.dat_create as dat_create,a.vvod as vvod,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kodp,t.d1 as dat_create,t.n2 as vvod,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.dat_create as dat_create,a.vvod as vvod,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kodp,t.d1 as dat_create,t.n2 as vvod,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on a.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>