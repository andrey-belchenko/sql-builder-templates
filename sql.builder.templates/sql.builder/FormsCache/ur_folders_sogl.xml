<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_sogl" title="Доп. документы  в папке" security-id="asuse_ur_pir_sogl" with-behavior="0" timestamp="14.12.2023 14:15:00" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_sogl.xml" elid="265" ord="265" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="53809985" />
    <field table="ur_folders" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="58946527" />
    <field table="ur_folders" name="not_vvod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="36429175" />
    <grid table="ur_sogl" show-toolbar="1" id="41068976">
      <toolbar id="10592638">
        <uicommand object="ur_sogl" name="form_ur_dogplat_doc_view" button-type="select-money" editable="item_is_not_new" modal="1" visible="is_not_vvod" title="Суммы по юр. документу" id="30251949">
          <const id="34159601">3</const>
          <useparam name="ur_folders_kodp" id="58366387" />
        </uicommand>
        <uicommand name="upech_doc" editable="item_is_not_new" title="Печать отчётов" id="32994388">
          <useparam name="cur_kod_sogl" id="32370396" />
          <const id="52117823">3</const>
          <useparam name="kod_folders" id="56455994" />
        </uicommand>
      </toolbar>
      <columns id="4275285">
        <field table="ur_sogl" name="kod_sogl" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="31645011" />
        <field table="ur_sogl" name="kod_tipdoc" title="Тип документа" controlType="UICombo" rows-limit="100" id="19312432" />
        <field table="ur_sogl" name="num_reg" title="Номер документа" controlType="UIText" rows-limit="100" id="61414423" />
        <field table="ur_sogl" name="dat_doc" title="Дата документа" controlType="UIDate" rows-limit="100" id="53232323" />
        <field table="ur_sogl" name="kod_subject" title="Предмет" controlType="UICombo" rows-limit="100" id="50471185" />
        <field table="ur_sogl" name="kr_dog_ndog" title="Номер договора" controlType="UIText" rows-limit="100" id="18317577" />
        <field table="ur_sogl" name="dat_do" title="Оплатить до" controlType="UIDate" rows-limit="100" id="55988617" />
        <field table="ur_sogl" name="ur_dp_sum_all_on_sogl" title="Задолженность в сумме" controlType="UIText" edit-mask="N2" rows-limit="100" id="30490393" />
        <field table="ur_sogl" name="count_mes" title="Количество месяцев" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="48520778" />
        <field table="ur_sogl" name="ur_dogplat_ym_max" title="Период начисления по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="17068477" />
        <field table="ur_sogl" name="ur_dogplat_ym_min" title="Период начисления с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="25254287" />
        <field table="ur_sogl" name="ur_dp_sum_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="15223034" />
        <field table="ur_sogl" name="ur_dp_sum_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="21443601" />
        <field table="ur_sogl" name="ogr" title=" Расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="9233366" />
        <field table="ur_sogl" name="ur_opl_on_sogl" title="Оплата по доп. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="46582587" />
        <field table="ur_sogl" name="ur_opl_osn" title="Оплата основной реализации" controlType="UIText" edit-mask="N2" rows-limit="100" id="30466892" />
        <field table="ur_sogl" name="ur_opl_peni" title="Оплата проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="10783323" />
        <field table="ur_sogl" name="opl_ogr" title="Оплата расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="7374049" />
        <field table="ur_sogl" name="ur_dolg_on_sogl" title="Остаток задолженности по доп. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="11436390" />
        <field table="ur_sogl" name="ur_dolg_vist_osn" title="Остаток задолженности по основной реализации" controlType="UIText" edit-mask="N2" rows-limit="100" id="13871689" />
        <field table="ur_sogl" name="ur_dolg_vist_peni" title="Остаток задолженности проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="31534137" />
        <field table="ur_sogl" name="ur_sogl_ost_ogr" title="Остаток задолж. расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="59990759" />
        <field table="ur_sogl" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="46007256" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="kod_folders" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const exclude="1">157</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_sogl_has_changes" parname="ur_sogl_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders
--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="kodp" table="ur_folders" type="number" title="Абонент" parname="ur_folders_kodp" ColumnVisible="0" ColumnMandatory="1" NewVal="kodp_new_val" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="ur_folders" />
            <dependant name="kodp_new_val" table="ur_folders" />
          </dependants>
        </column>
        <column name="vvod" table="ur_folders" type="number" title="Способ учета задолженности" parname="is_vvod" ColumnVisible="0" ColumnDefault="ur_folders_vvod_default" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vvod" temp-col-name="n10">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="not_vvod" table="ur_folders" />
            <dependant name="vvod_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="not_vvod" table="ur_folders" type="number" title="" parname="is_not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="ur_folders.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="ur_folders.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_new_val" table="ur_folders" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="ur_folders" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kodp 
,vvod 
,kod_folders 
) 
 values  
(r.kodp 
,r.vvod 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n1 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n1 
,n3 
,n4 
,n5 
,d1 
,n6 
,s1 
,d3 
,n7 
,n8 
,n9 
,d2 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_folders 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kodp 
,vvod 
,kod_folders 
) 
= 
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="ur_folders">
          <columns>
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" visible="0" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" visible="0" />
            <column name="kodp_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_sogl" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_sogl" key="kod_sogl" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_sogl">
      <select-text>
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
ur_sogl.kod_tipdoc as kod_tipdoc, /*number*/
ur_sogl.num_reg as num_reg, /*Номер документа*//*string*/
ur_sogl.dat_doc as dat_doc, /*Дата документа*//*date*/
ur_sogl.kod_subject as kod_subject, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_sogl.dat_do as dat_do, /*Оплатить до*//*date*/
qube.ur_dp_sum_all_on_sogl1 as ur_dp_sum_all_on_sogl, /*Задолженность в сумме*//*number*/
ur_sogl.count_mes as count_mes, /*Количество месяцев*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период начисления с*//*number*/
qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реализация*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
ur_sogl.ogr as ogr, /* Расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_opl_on_sogl1 as ur_opl_on_sogl, /*Оплата по доп. документу*//*number*/
qube.ur_opl_osn1 as ur_opl_osn, /*Оплата основной реализации*//*number*/
qube.ur_opl_peni1 as ur_opl_peni, /*Оплата проценты (пени)*//*number*/
ur_sogl.opl_ogr as opl_ogr, /*Оплата расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_dolg_on_sogl1 as ur_dolg_on_sogl, /*Остаток задолженности по доп. документу*//*number*/
qube.ur_dolg_vist_osn1 as ur_dolg_vist_osn, /*Остаток задолженности по основной реализации*//*number*/
qube.ur_dolg_vist_peni1 as ur_dolg_vist_peni, /*Остаток задолженности проценты (пени)*//*number*/
qube.ur_sogl_ost_ogr1 as ur_sogl_ost_ogr, /*Остаток задолж. расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_sogl.is_not_new as is_not_new, /*number*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_sogl.dat_do_new_val as dat_do_new_val, /*date*/
ur_sogl.count_mes_new_val as count_mes_new_val, /*number*/
ur_sogl.is_new as is_new, /*number*/
ur_sogl.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  as ur_dp_sum_all_on_sogl1, /*Заявленная сумма по доп.документу*//*number*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa2 end )  as ur_dp_sum_osn1, /*Выст. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa2 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
sum( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_opl_on_sogl1, /*Оплата  по доп.документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  as ur_opl_osn1, /*Оплата по юр. документу (осн. реал)*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  as ur_opl_peni1, /*Оплата по юр. документу (пени)*//*number*/
sum( nvl( ( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  ,0)  -nvl( ( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  ,0) )  as ur_dolg_on_sogl1, /*Задолженность  по доп.документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( nvl( qube.ur_dp_summa3 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  ,0) )  end )  as ur_dolg_vist_osn1, /*Задолженность по юр. документу от предъявленной суммы (осн. реал)*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( nvl( qube.ur_dp_summa3 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  ,0) )  end )  as ur_dolg_vist_peni1, /*Задолженность по юр. документу от предъявленной суммы (пени)*//*number*/
sum( nvl( qube.ur_sogl_ogr1 ,0)  -nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_sogl_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa3 as ur_dp_summa3, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa3, /*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_sogl as kod_sogl, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1, /*Номер договора*//*string*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_sogl as kod_sogl/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl on kod_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
(ur_sogl.kod_folders = :fk_kod_folders )  and (ur_sogl.kod_sogl is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl
--\ur_sogl
where
(ur_sogl.kod_folders = :fk_kod_folders )  and (ur_sogl.kod_sogl is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_ndog1, /*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa3, /*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
(ur_sogl.kod_folders = :fk_kod_folders )  and (ur_sogl.kod_sogl is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_ndog1, /*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa3 as ur_dp_summa3, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum(un.ur_dp_summa2)  as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa3)  as ur_dp_summa3/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*/
kod_dogplat.vid_real as vid_real, /*number*/
kod_dogplat.ym_max as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
kod_dogplat.ym_min as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
kod_dogplat.summa as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa3/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.kod_sogl as kod_sogl, /*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min, /*Период начисления с*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
(ur_sogl.kod_folders = :fk_kod_folders )  and (ur_sogl.kod_sogl is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_subject as kod_subject, /*number*/
a.num_reg as num_reg, /*Номер доп. документа*//*string*/
a.dat_do as dat_do, /*Оплатить до*//*date*/
a.dat_doc as dat_doc, /*Дата доп. документа*//*date*/
a.kod_tipdoc as kod_tipdoc, /*number*/
a.count_mes as count_mes, /*Количество месяцев*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 add_months( a.dat_doc , a.count_mes )  as dat_do_new_val, /*date*/
 round( ( MONTHS_BETWEEN( a.dat_do , a.dat_doc ) )  , 0 )  as count_mes_new_val, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_sogl.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</select-text>
      <columns>
        <column name="kod_sogl" table="ur_sogl" type="number" title="" parname="cur_kod_sogl" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_sogl" temp-col-name="n1" />
        <column name="kod_tipdoc" table="ur_sogl" type="number" title="Тип документа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_tipdoc" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_tipdoc" into="n1">a.kod_tipdoc as kod_tipdoc, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Тип документа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Тип документа*//*string*/
</column></select>
                <from>
from <query name="kk_tipdoc_ur_1" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kk_tipdoc_ur_1
select <column table="a" column="kod_tipdoc" type="number" as="kod_tipdoc" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_tipdoc" used="1">a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Тип документа" vid="1" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Тип документа*//*string*/
</column></select><from>
from <table name="kk_tipdoc" as="a" title="Тип документа" used="1">kk_tipdoc
a
--\kk_tipdoc
</table></from><where>where
<call function="=" pth="" type="bool"><column table="a" column="ur_prizn">a.ur_prizn</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\kk_tipdoc_ur_1
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" thissrc="kod_tipdoc">a.kod_tipdoc</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" thissrc="kod_tipdoc">a.kod_tipdoc</column><text txtype="func"> ) like lower( </text><const><text>:kod_tipdoc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Тип документа" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_tipdoc_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" />
                    <column table="a" column="name" as="name" title="Тип документа" />
                  </select>
                  <from>
                    <query name="kk_tipdoc_ur_1" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_tipdoc" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_tipdoc" />
                        <useparam name="kod_tipdoc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_tipdoc_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_tipdoc_filter" type="string">
                  <const>:kod_tipdoc_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_tipdoc_x_n" table="ur_sogl" />
          </dependants>
        </column>
        <column name="num_reg" table="ur_sogl" type="string" title="Номер документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s1" />
        <column name="dat_doc" table="ur_sogl" type="date" title="Дата документа" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_doc" temp-col-name="d1">
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_sogl.dat_do_new_val as dat_do_new_val, /*date*/
ur_sogl.count_mes_new_val as count_mes_new_val, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
 add_months( a.dat_doc , a.count_mes )  as dat_do_new_val, /*date*/
 round( ( MONTHS_BETWEEN( a.dat_do , a.dat_doc ) )  , 0 )  as count_mes_new_val/*number*/

from (select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes,a.dat_do as dat_do  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes,t.d2 as dat_do  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes,a.dat_do as dat_do  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes,t.d2 as dat_do  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dat_do_new_val" table="ur_sogl" />
            <dependant name="count_mes_new_val" table="ur_sogl" />
          </dependants>
        </column>
        <column name="kod_subject" table="ur_sogl" type="number" title="Предмет" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_subject" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_subject" as="kod_subject" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_subject" into="n1">a.kod_subject as kod_subject, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Предмет иска" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Предмет иска*//*string*/
</column></select>
                <from>
from <query name="us_subject" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_subject
select <column table="a" column="kod_subject" type="number" key="1" as="kod_subject" used="1" sourcetable="./a/a" sourcecolumn="kod_subject">a.kod_subject as kod_subject, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Предмет иска" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Предмет иска*//*string*/
</column></select><from>
from <table name="us_subject" as="a" title="Предмет" used="1">us_subject
a
--\us_subject
</table></from>)
a
--\us_subject
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> ) like lower( </text><const><text>:kod_subject_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Предмет иска" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" as="a">
              <queries>
                <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_subject_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_subject" as="kod_subject" title="" key="1" />
                    <column table="a" column="name" as="name" title="Предмет иска" />
                  </select>
                  <from>
                    <query name="us_subject" as="a" title="Предмет" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="kod_subject_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_subject_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_subject_filter" type="string">
                  <const>:kod_subject_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_subject as kod_subject/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_subject as kod_subject  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_subject as kod_subject  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_sogl.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_subject_x_n" table="ur_sogl" />
          </dependants>
        </column>
        <column name="kr_dog_ndog" table="ur_sogl" type="string" title="Номер договора" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.kr_dog_ndog1 as kr_dog_ndog1/*Номер договора*//*string*/

from (
(
(
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.kr_dog_ndog1 as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1/*Номер договора*//*string*/

from (
(
(
--
select dims.kod_sogl as kod_sogl, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1/*Номер договора*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_sogl as kod_sogl/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as kr_dog_ndog1/*string*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_do" table="ur_sogl" type="date" title="Оплатить до" is-user-editable="1" ColumnMandatory="1" NewVal="dat_do_new_val" is-updateable="1" is-updateable-ext="1" update-target="dat_do" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_sogl.count_mes_new_val as count_mes_new_val, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
 round( ( MONTHS_BETWEEN( a.dat_do , a.dat_doc ) )  , 0 )  as count_mes_new_val/*number*/

from (select a.kod_sogl as kod_sogl,a.dat_do as dat_do,a.dat_doc as dat_doc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d2 as dat_do,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.dat_do as dat_do,a.dat_doc as dat_doc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d2 as dat_do,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="count_mes_new_val" table="ur_sogl" />
          </dependants>
        </column>
        <column name="ur_dp_sum_all_on_sogl" table="ur_sogl" type="number" title="Задолженность в сумме" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_all_on_sogl1 as ur_dp_sum_all_on_sogl, /*Задолженность в сумме*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  as ur_dp_sum_all_on_sogl1/*Заявленная сумма по доп.документу*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dp_summa1, /*number*/
ur_sogl.ogr as ur_sogl_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="count_mes" table="ur_sogl" type="number" title="Количество месяцев" is-user-editable="1" NewVal="count_mes_new_val" is-updateable="1" is-updateable-ext="1" update-target="count_mes" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_sogl.dat_do_new_val as dat_do_new_val, /*date*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
 add_months( a.dat_doc , a.count_mes )  as dat_do_new_val/*date*/

from (select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dat_do_new_val" table="ur_sogl" />
          </dependants>
        </column>
        <column name="ur_dogplat_ym_max" table="ur_sogl" type="number" title="Период начисления по" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период начисления по*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
(
(
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.ym_max as ur_dogplat_ym_max1/*Период начисления по*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dogplat_ym_max1/*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dogplat_ym_min" table="ur_sogl" type="number" title="Период начисления с" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период начисления с*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
(
(
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.ym_min as ur_dogplat_ym_min1/*Период начисления с*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min/*Период начисления с*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dogplat_ym_min1/*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_osn" table="ur_sogl" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реализация*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa1 end )  as ur_dp_sum_osn1/*Выст. по юр. док. осн. реал.*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_sogl as kod_sogl, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*/
kod_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_sogl as kod_sogl, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_peni" table="ur_sogl" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1/*Выст. по юр. док. пени*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_sogl as kod_sogl, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*/
kod_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_sogl as kod_sogl, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ogr" table="ur_sogl" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ogr" temp-col-name="n5">
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_all_on_sogl1 as ur_dp_sum_all_on_sogl, /*Задолженность в сумме*//*number*/
qube.ur_dolg_on_sogl1 as ur_dolg_on_sogl, /*Остаток задолженности по доп. документу*//*number*/
qube.ur_sogl_ost_ogr1 as ur_sogl_ost_ogr, /*Остаток задолж. расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  as ur_dp_sum_all_on_sogl1, /*Заявленная сумма по доп.документу*//*number*/
sum( nvl( ( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  ,0)  -nvl( ( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  ,0) )  as ur_dolg_on_sogl1, /*Задолженность  по доп.документу*//*number*/
sum( nvl( qube.ur_sogl_ogr1 ,0)  -nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_sogl_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1, /*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dp_summa1, /*number*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_dp_sum_all_on_sogl" table="ur_sogl" />
            <dependant name="ur_dolg_on_sogl" table="ur_sogl" />
            <dependant name="ur_sogl_ost_ogr" table="ur_sogl" />
          </dependants>
        </column>
        <column name="ur_opl_on_sogl" table="ur_sogl" type="number" title="Оплата по доп. документу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_on_sogl1 as ur_opl_on_sogl, /*Оплата по доп. документу*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_opl_on_sogl1/*Оплата  по доп.документу*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_osn" table="ur_sogl" type="number" title="Оплата основной реализации" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_osn1 as ur_opl_osn, /*Оплата основной реализации*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_osn1/*Оплата по юр. документу (осн. реал)*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_peni" table="ur_sogl" type="number" title="Оплата проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_peni1 as ur_opl_peni, /*Оплата проценты (пени)*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_peni1/*Оплата по юр. документу (пени)*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="opl_ogr" table="ur_sogl" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="opl_ogr" temp-col-name="n6">
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_on_sogl1 as ur_opl_on_sogl, /*Оплата по доп. документу*//*number*/
qube.ur_dolg_on_sogl1 as ur_dolg_on_sogl, /*Остаток задолженности по доп. документу*//*number*/
qube.ur_sogl_ost_ogr1 as ur_sogl_ost_ogr, /*Остаток задолж. расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_opl_on_sogl1, /*Оплата  по доп.документу*//*number*/
sum( nvl( ( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  ,0)  -nvl( ( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  ,0) )  as ur_dolg_on_sogl1, /*Задолженность  по доп.документу*//*number*/
sum( nvl( qube.ur_sogl_ogr1 ,0)  -nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_sogl_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1, /*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dp_summa1, /*number*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_on_sogl" table="ur_sogl" />
            <dependant name="ur_dolg_on_sogl" table="ur_sogl" />
            <dependant name="ur_sogl_ost_ogr" table="ur_sogl" />
          </dependants>
        </column>
        <column name="ur_dolg_on_sogl" table="ur_sogl" type="number" title="Остаток задолженности по доп. документу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dolg_on_sogl1 as ur_dolg_on_sogl, /*Остаток задолженности по доп. документу*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  ,0)  -nvl( ( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  ,0) )  as ur_dolg_on_sogl1/*Задолженность  по доп.документу*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1, /*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as ur_dp_summa1, /*number*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dolg_vist_osn" table="ur_sogl" type="number" title="Остаток задолженности по основной реализации" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dolg_vist_osn1 as ur_dolg_vist_osn, /*Остаток задолженности по основной реализации*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( nvl( qube.ur_dp_summa1 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0) )  end )  as ur_dolg_vist_osn1/*Задолженность по юр. документу от предъявленной суммы (осн. реал)*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real, /*number*/
ur_dogplat_a_d.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dolg_vist_peni" table="ur_sogl" type="number" title="Остаток задолженности проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dolg_vist_peni1 as ur_dolg_vist_peni, /*Остаток задолженности проценты (пени)*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( nvl( qube.ur_dp_summa1 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0) )  end )  as ur_dolg_vist_peni1/*Задолженность по юр. документу от предъявленной суммы (пени)*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_sogl as kod_sogl, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real, /*number*/
ur_dogplat_a_d.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_sogl as kod_sogl/*number*//*key*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_sogl_ost_ogr" table="ur_sogl" type="number" title="Остаток задолж. расх. за введ. огранич. реж. энергопотребл." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_sogl_ost_ogr1 as ur_sogl_ost_ogr, /*Остаток задолж. расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
sum( nvl( qube.ur_sogl_ogr1 ,0)  -nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_sogl_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_not_new" table="ur_sogl" type="number" title="" parname="item_is_not_new" ColumnVisible="0" />
        <column name="kod_tipdoc_x_n" table="ur_sogl.kod_tipdoc" type="string" title="Тип документа" text-source-for="kod_tipdoc" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_subject_x_n" table="ur_sogl.kod_subject" type="string" title="Предмет" text-source-for="kod_subject" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_subject as kod_subject/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_subject as kod_subject  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_subject as kod_subject  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_sogl.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_do_new_val" table="ur_sogl" type="date" title="Дата доп. документа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_sogl.dat_do_new_val as dat_do_new_val, /*date*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
 add_months( a.dat_doc , a.count_mes )  as dat_do_new_val/*date*/

from (select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.dat_doc as dat_doc,a.count_mes as count_mes  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d1 as dat_doc,t.n4 as count_mes  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="count_mes_new_val" table="ur_sogl" type="number" title="Оплатить до" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_sogl.count_mes_new_val as count_mes_new_val, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
 round( ( MONTHS_BETWEEN( a.dat_do , a.dat_doc ) )  , 0 )  as count_mes_new_val/*number*/

from (select a.kod_sogl as kod_sogl,a.dat_do as dat_do,a.dat_doc as dat_doc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d2 as dat_do,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.dat_do as dat_do,a.dat_doc as dat_doc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.d2 as dat_do,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_sogl" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_sogl" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_sogl as kod_sogl 
,:kod_tipdoc as kod_tipdoc 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:dat_do as dat_do 
,:count_mes as count_mes 
,:ogr as ogr 
,:opl_ogr as opl_ogr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_sogl 
(kod_sogl 
,kod_tipdoc 
,num_reg 
,dat_doc 
,kod_subject 
,dat_do 
,count_mes 
,ogr 
,opl_ogr 
,kod_folders 
) 
 values  
(r.kod_sogl 
,r.kod_tipdoc 
,r.num_reg 
,r.dat_doc 
,r.kod_subject 
,r.dat_do 
,r.count_mes 
,r.ogr 
,r.opl_ogr 
,r.kod_folders 
) 
 returning  
kod_sogl into :kod_sogl; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_sogl where kod_sogl=:kod_sogl</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_sogl' 
and 
names=:form_id 
and 
f2=:kod_sogl; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_sogl as kod_sogl 
,:kod_tipdoc as kod_tipdoc 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:dat_do as dat_do 
,:count_mes as count_mes 
,:ogr as ogr 
,:opl_ogr as opl_ogr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,d1 
,n3 
,d2 
,n4 
,n5 
,n6 
,n7 
) 
 values  
('ur_sogl' 
,:form_id 
,:kod_sogl 
,:row_state_id 
,r.kod_sogl 
,r.kod_tipdoc 
,r.num_reg 
,r.dat_doc 
,r.kod_subject 
,r.dat_do 
,r.count_mes 
,r.ogr 
,r.opl_ogr 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_sogl as kod_sogl 
,:kod_tipdoc as kod_tipdoc 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:dat_do as dat_do 
,:count_mes as count_mes 
,:ogr as ogr 
,:opl_ogr as opl_ogr 
,:kod_folders as kod_folders 
,a.dat_finish 
,a.u_m 
,a.d_m 
,a.prim 
,a.status 
,a.kodp 
,a.proc 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_emp 
,a.kod_vi 
,a.dep 
,a.dat_finish_f 
,a.opl_proc 
 
from ur_sogl a  where kod_sogl=:kod_sogl) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,d1 
,n3 
,d2 
,n4 
,n5 
,n6 
,n7 
,d3 
,s2 
,d4 
,s3 
,n8 
,n9 
,n10 
,n11 
,n12 
,n13 
,n14 
,n15 
,n16 
,d5 
,n17 
) 
 values  
('ur_sogl' 
,:form_id 
,:kod_sogl 
,:row_state_id 
,r.kod_sogl 
,r.kod_tipdoc 
,r.num_reg 
,r.dat_doc 
,r.kod_subject 
,r.dat_do 
,r.count_mes 
,r.ogr 
,r.opl_ogr 
,r.kod_folders 
,r.dat_finish 
,r.u_m 
,r.d_m 
,r.prim 
,r.status 
,r.kodp 
,r.proc 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_emp 
,r.kod_vi 
,r.dep 
,r.dat_finish_f 
,r.opl_proc 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_sogl' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_sogl set  
(kod_sogl 
,kod_tipdoc 
,num_reg 
,dat_doc 
,kod_subject 
,dat_do 
,count_mes 
,ogr 
,opl_ogr 
,kod_folders 
) 
= 
 ( select  
:kod_sogl as kod_sogl 
,:kod_tipdoc as kod_tipdoc 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:dat_do as dat_do 
,:count_mes as count_mes 
,:ogr as ogr 
,:opl_ogr as opl_ogr 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_sogl=:kod_sogl 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="custom">
          <useaction name="ur_save.p_graf_sync_bzad">
            <const>null</const>
            <column table="this" column="kod_sogl" />
            <const>null</const>
          </useaction>
          <useaction action-type="execute-update" call="ur_sogl_upd_num_reg">
            <column table="this" column="kod_sogl" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_sogl" as="ur_sogl">
          <columns>
            <column name="kod_sogl" type="number" title="" visible="0" />
            <column name="kod_tipdoc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_reg" type="string" title="Номер документа" />
            <column name="dat_doc" type="date" title="Дата документа" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_ndog" type="string" title="Номер договора" />
            <column name="dat_do" type="date" title="Оплатить до" />
            <column name="ur_dp_sum_all_on_sogl" type="number" title="Задолженность в сумме" />
            <column name="count_mes" type="number" format="F0" edit-mask="F0" title="Количество месяцев" />
            <column name="ur_dogplat_ym_max" type="number" format="F2" edit-mask="F2" title="Период начисления по" />
            <column name="ur_dogplat_ym_min" type="number" format="F2" edit-mask="F2" title="Период начисления с" />
            <column name="ur_dp_sum_osn" type="number" title="Основная реализация" />
            <column name="ur_dp_sum_peni" type="number" title="Проценты (пени)" />
            <column name="ogr" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_opl_on_sogl" type="number" title="Оплата по доп. документу" />
            <column name="ur_opl_osn" type="number" title="Оплата основной реализации" />
            <column name="ur_opl_peni" type="number" title="Оплата проценты (пени)" />
            <column name="opl_ogr" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_dolg_on_sogl" type="number" title="Остаток задолженности по доп. документу" />
            <column name="ur_dolg_vist_osn" type="number" title="Остаток задолженности по основной реализации" />
            <column name="ur_dolg_vist_peni" type="number" title="Остаток задолженности проценты (пени)" />
            <column name="ur_sogl_ost_ogr" type="number" title="Остаток задолж. расх. за введ. огранич. реж. энергопотребл." />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="kod_tipdoc_x_n" type="string" title="Тип документа" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="dat_do_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="count_mes_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_sogl" type="number" title="" visible="0" />
            <column name="kod_tipdoc_x_n" type="string" title="Тип документа" />
            <column name="kod_tipdoc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_reg" type="string" title="Номер документа" />
            <column name="dat_doc" type="date" title="Дата документа" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_ndog" type="string" title="Номер договора" />
            <column name="dat_do" type="date" title="Оплатить до" />
            <column name="ur_dp_sum_all_on_sogl" type="number" title="Задолженность в сумме" />
            <column name="count_mes" type="number" format="F0" edit-mask="F0" title="Количество месяцев" />
            <column name="ur_dogplat_ym_max" type="number" format="F2" edit-mask="F2" title="Период начисления по" />
            <column name="ur_dogplat_ym_min" type="number" format="F2" edit-mask="F2" title="Период начисления с" />
            <column name="ur_dp_sum_osn" type="number" title="Основная реализация" />
            <column name="ur_dp_sum_peni" type="number" title="Проценты (пени)" />
            <column name="ogr" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_opl_on_sogl" type="number" title="Оплата по доп. документу" />
            <column name="ur_opl_osn" type="number" title="Оплата основной реализации" />
            <column name="ur_opl_peni" type="number" title="Оплата проценты (пени)" />
            <column name="opl_ogr" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_dolg_on_sogl" type="number" title="Остаток задолженности по доп. документу" />
            <column name="ur_dolg_vist_osn" type="number" title="Остаток задолженности по основной реализации" />
            <column name="ur_dolg_vist_peni" type="number" title="Остаток задолженности проценты (пени)" />
            <column name="ur_sogl_ost_ogr" type="number" title="Остаток задолж. расх. за введ. огранич. реж. энергопотребл." />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="dat_do_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="count_mes_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_sogl_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_sogl_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
ur_sogl.kod_tipdoc as kod_tipdoc, /*number*/
ur_sogl.num_reg as num_reg, /*Номер документа*//*string*/
ur_sogl.dat_doc as dat_doc, /*Дата документа*//*date*/
ur_sogl.kod_subject as kod_subject, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog, /*Номер договора*//*string*/
ur_sogl.dat_do as dat_do, /*Оплатить до*//*date*/
qube.ur_dp_sum_all_on_sogl1 as ur_dp_sum_all_on_sogl, /*Задолженность в сумме*//*number*/
ur_sogl.count_mes as count_mes, /*Количество месяцев*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min, /*Период начисления с*//*number*/
qube.ur_dp_sum_osn1 as ur_dp_sum_osn, /*Основная реализация*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Проценты (пени)*//*number*/
ur_sogl.ogr as ogr, /* Расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_opl_on_sogl1 as ur_opl_on_sogl, /*Оплата по доп. документу*//*number*/
qube.ur_opl_osn1 as ur_opl_osn, /*Оплата основной реализации*//*number*/
qube.ur_opl_peni1 as ur_opl_peni, /*Оплата проценты (пени)*//*number*/
ur_sogl.opl_ogr as opl_ogr, /*Оплата расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_dolg_on_sogl1 as ur_dolg_on_sogl, /*Остаток задолженности по доп. документу*//*number*/
qube.ur_dolg_vist_osn1 as ur_dolg_vist_osn, /*Остаток задолженности по основной реализации*//*number*/
qube.ur_dolg_vist_peni1 as ur_dolg_vist_peni, /*Остаток задолженности проценты (пени)*//*number*/
qube.ur_sogl_ost_ogr1 as ur_sogl_ost_ogr, /*Остаток задолж. расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_sogl.is_not_new as is_not_new, /*number*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_sogl.dat_do_new_val as dat_do_new_val, /*date*/
ur_sogl.count_mes_new_val as count_mes_new_val, /*number*/
ur_sogl.is_new as is_new, /*number*/
ur_sogl.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(qube.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  as ur_dp_sum_all_on_sogl1, /*Заявленная сумма по доп.документу*//*number*/
max(qube.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(qube.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_summa2 end )  as ur_dp_sum_osn1, /*Выст. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa2 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
sum( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_opl_on_sogl1, /*Оплата  по доп.документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  as ur_opl_osn1, /*Оплата по юр. документу (осн. реал)*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  as ur_opl_peni1, /*Оплата по юр. документу (пени)*//*number*/
sum( nvl( ( nvl( qube.ur_dp_summa1 ,0)  +nvl( qube.ur_sogl_ogr1 ,0) )  ,0)  -nvl( ( nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  ,0)  +nvl( qube.ur_sogl_opl_ogr1 ,0) )  ,0) )  as ur_dolg_on_sogl1, /*Задолженность  по доп.документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( nvl( qube.ur_dp_summa3 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  ,0) )  end )  as ur_dolg_vist_osn1, /*Задолженность по юр. документу от предъявленной суммы (осн. реал)*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( nvl( qube.ur_dp_summa3 ,0)  -nvl( ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  ,0) )  end )  as ur_dolg_vist_peni1, /*Задолженность по юр. документу от предъявленной суммы (пени)*//*number*/
sum( nvl( qube.ur_sogl_ogr1 ,0)  -nvl( qube.ur_sogl_opl_ogr1 ,0) )  as ur_sogl_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_sogl as kod_sogl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa3 as ur_dp_summa3, /*Выставленно по юр. документу*//*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
null as vid_real, 
qube.kr_dog_ndog1 as kr_dog_ndog1, /*Номер договора*//*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa3, /*number*/
qube.ur_sogl_ogr1 as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_sogl_opl_ogr1 as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_sogl as kod_sogl, /*number*//*key*/
stragg_dist(un.kr_dog_ndog1)  as kr_dog_ndog1, /*Номер договора*//*string*/
sum(un.ur_sogl_ogr1)  as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_sogl_opl_ogr1)  as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_sogl as kod_sogl, /*number*//*key*/
kr_dogovor.ndog as kr_dog_ndog1, /*Номер договора*//*string*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_sogl as kod_sogl/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_sogl as kod_sogl/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat_a_d.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_sogl/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_sogl.kod_sogl as kod_sogl, /*number*//*key*/
null as kr_dog_ndog1, /*string*/
ur_sogl.ogr as ur_sogl_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_sogl.opl_ogr as ur_sogl_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n5 as ogr,t.n6 as opl_ogr  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_sogl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_ndog1, /*string*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dogplat_ym_max1, /*number*/
null as ur_dogplat_ym_min1, /*number*/
null as ur_dp_summa2, /*number*/
null as ur_dp_summa1, /*number*/
null as ur_dp_summa3, /*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.kod_sogl as kod_sogl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dogplat.kod_sogl, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.kod_sogl as kod_sogl, /*number*/
qube.vid_real as vid_real, /*number*/
null as kr_dog_ndog1, /*string*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dogplat_ym_max1 as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
qube.ur_dogplat_ym_min1 as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
qube.ur_dp_summa2 as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_dp_summa3 as ur_dp_summa3, /*Выставленно по юр. документу*//*number*/
null as ur_sogl_ogr1, /*number*/
null as ur_sogl_opl_ogr1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_sogl as kod_sogl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
max(un.ur_dogplat_ym_max1)  as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
min(un.ur_dogplat_ym_min1)  as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
sum(un.ur_dp_summa2)  as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
sum(un.ur_dp_summa3)  as ur_dp_summa3/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_sogl as kod_sogl, /*number*/
kod_dogplat.vid_real as vid_real, /*number*/
kod_dogplat.ym_max as ur_dogplat_ym_max1, /*Период начисления по*//*number*/
kod_dogplat.ym_min as ur_dogplat_ym_min1, /*Период начисления с*//*number*/
kod_dogplat.summa as ur_dp_summa2, /*Выставленно по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa3/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.kod_sogl as kod_sogl, /*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_min, /*Период начисления с*//*number*/
 case  when (a.vid_real not in (7 , 9) )  then a.ym end  as ym_max/*Период начисления по*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on kod_dogplat.kod_sogl = ur_sogl.kod_sogl--\ur_sogl
where
ur_sogl.kod_sogl is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_sogl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_sogl/*number*//*key*/
)
qube
--\
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_subject as kod_subject, /*number*/
a.num_reg as num_reg, /*Номер доп. документа*//*string*/
a.dat_do as dat_do, /*Оплатить до*//*date*/
a.dat_doc as dat_doc, /*Дата доп. документа*//*date*/
a.kod_tipdoc as kod_tipdoc, /*number*/
a.count_mes as count_mes, /*Количество месяцев*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 add_months( a.dat_doc , a.count_mes )  as dat_do_new_val, /*date*/
 round( ( MONTHS_BETWEEN( a.dat_do , a.dat_doc ) )  , 0 )  as count_mes_new_val, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_folders as kod_folders,a.kod_subject as kod_subject,a.num_reg as num_reg,a.dat_do as dat_do,a.dat_doc as dat_doc,a.kod_tipdoc as kod_tipdoc,a.count_mes as count_mes,a.ogr as ogr,a.opl_ogr as opl_ogr,0 as is_new,1 as is_not_new  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n7 as kod_folders,t.n3 as kod_subject,t.s1 as num_reg,t.d2 as dat_do,t.d1 as dat_doc,t.n2 as kod_tipdoc,t.n4 as count_mes,t.n5 as ogr,t.n6 as opl_ogr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_folders as kod_folders,a.kod_subject as kod_subject,a.num_reg as num_reg,a.dat_do as dat_do,a.dat_doc as dat_doc,a.kod_tipdoc as kod_tipdoc,a.count_mes as count_mes,a.ogr as ogr,a.opl_ogr as opl_ogr,0 as is_new,1 as is_not_new  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n7 as kod_folders,t.n3 as kod_subject,t.s1 as num_reg,t.d2 as dat_do,t.d1 as dat_doc,t.n2 as kod_tipdoc,t.n4 as count_mes,t.n5 as ogr,t.n6 as opl_ogr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl on ur_sogl.kod_sogl = qube.kod_sogl--\ur_sogl
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_sogl.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>