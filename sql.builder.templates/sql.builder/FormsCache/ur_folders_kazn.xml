<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_kazn" title="Казначейство" security-id="asuse_ur_isp_kazn" with-behavior="0" timestamp="28.12.2023 14:10:00" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_kazn.xml" elid="247" ord="247" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kod_mat_main" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="15546923" />
    <field table="f10" name="val" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="29029861" />
    <grid table="ur_kazn" show-toolbar="1" id="1606835">
      <toolbar id="7171730">
        <uicommand action-type="dynamic-form" call="ur_dp_kazn" modal="1" title="Суммы по юр. документу" id="58534945">
          <useparam name="cur_kod_kazn" id="11053290" />
          <useparam name="kod_mat_main" id="50531728" />
        </uicommand>
        <uicommand name="upech_doc" editable="item_is_not_new" title="Печать отчётов" id="174920">
          <useparam name="cur_kod_kazn" id="51122544" />
          <const id="15649523">12</const>
          <useparam name="kod_folders" id="37650702" />
        </uicommand>
      </toolbar>
      <columns id="4536667">
        <field table="ur_kazn" name="kod_kazn" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="25605511" />
        <field table="ur_kazn" name="num_reg" title="Номер письма" controlType="UIText" rows-limit="100" id="22521316" />
        <field table="ur_kazn" name="dat_doc" title="Дата письма" controlType="UIDate" rows-limit="100" id="30737990" />
        <field table="ur_kazn" name="kod_dog_kazn" title="Казначейство" controlType="UICombo" rows-limit="100" id="426679" />
        <field table="ur_kazn" name="dat_podachi" title="Дата передачи письма" controlType="UIDate" rows-limit="100" id="13474953" />
        <band title="Сумма задолженности заявленная к выплате" id="8715011">
          <field table="ur_kazn" name="dolg_on_il_hnd" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="54810168" />
          <field table="ur_kazn" name="dolg_on_il_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="62531709" />
          <field table="ur_kazn" name="dolg_on_il_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="23323197" />
          <field table="ur_kazn" name="peni_period_str" title="Период пени" controlType="UIText" rows-limit="100" id="14718816" />
          <field table="ur_kazn" name="dolg_on_il_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="46267981" />
          <field table="ur_kazn" name="ur_hist_mat_dec_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="64411628" />
          <field table="ur_kazn" name="dolg_on_il_gp_doc" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="29349798" />
          <field table="ur_kazn" name="dolg_on_il_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="50" id="11996002" />
          <field table="ur_kazn" name="ur_hist_mat_dec_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="32621449" />
        </band>
        <field table="ur_kazn" name="kod_state" title="Состояние" controlType="UICombo" rows-limit="100" id="21771134" />
        <field table="ur_kazn" name="dat_otv" title="Дата исполнения" controlType="UIDate" rows-limit="100" id="1251341" />
        <field table="ur_kazn" name="dat_otz" title="Дата отзыва" controlType="UIDate" rows-limit="100" id="25656257" />
        <band title="Задолженность удовлетворена на сумму" id="26732019">
          <field table="ur_kazn" name="ur_opl_kazn" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="3479648" />
          <field table="ur_kazn" name="ur_opl_posl_il_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="40848762" />
          <field table="ur_kazn" name="ur_opl_posl_il_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="14402600" />
          <field table="ur_kazn" name="ur_opl_posl_il_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="51580112" />
          <field table="ur_kazn" name="ogr_v" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="1516378" />
          <field table="ur_kazn" name="ur_opl_posl_il_gp" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="21831069" />
          <field table="ur_kazn" name="astrent_v" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="56587981" />
          <field table="ur_kazn" name="sud_izd_v" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="1504765" />
        </band>
        <band title="Остаток задолженности" id="28907989">
          <field table="ur_kazn" name="dolg_kazn" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="22270957" />
          <field table="ur_kazn" name="dolg_resh_tek_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="22729860" />
          <field table="ur_kazn" name="dolg_resh_tek_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="23952515" />
          <field table="ur_kazn" name="dolg_resh_tek_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="65969072" />
          <field table="ur_kazn" name="dolg_kazn_tek_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="30167860" />
          <field table="ur_kazn" name="dolg_resh_tek_gp_doc" title="Гос. пошлина" controlType="UIText" edit-mask="N2" rows-limit="100" id="32278330" />
          <field table="ur_kazn" name="dolg_kazn_tek_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="35911485" />
          <field table="ur_kazn" name="dolg_kazn_tek_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="13473603" />
        </band>
        <field table="ur_kazn" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="44376866" />
        <field table="ur_kazn" name="kod_scan" title="Файл" controlType="UIFile" rows-limit="100" id="11558657" />
        <field table="ur_kazn" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="52226839" />
        <field table="ur_kazn" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="14923534" />
      </columns>
      <events id="11496802">
        <useaction event-name="new-row-save" action-type="execute-add" call="ur_dp_kazn_insert_all" id="42837250">
          <useparam name="cur_kod_kazn" id="51785659" />
        </useaction>
      </events>
    </grid>
  </form>
  <params>
    <param name="kod_folders" type="number" />
    <param name="kod_isp" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const exclude="1">232</const>
      </param>
      <param name="kod_isp" type="number">
        <const exclude="1">34</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_kazn_has_changes" parname="ur_kazn_has_changes" />
      <field type="string" name="f10_has_changes" parname="f10_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders_isp">
      <select-text>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
where
ur_folders.kod_folders = :kod_folders --\
</select-text>
      <columns>
        <column name="kod_mat_main" table="kod_mat" type="number" title="" parname="kod_mat_main" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_folders 
) 
 values  
(r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_folders as kod_folders 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.vvod 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,n4 
,n1 
,n5 
,n6 
,d1 
,n7 
,s1 
,d3 
,n8 
,n9 
,n10 
,n11 
,d2 
,s2 
,n2 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_folders 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.vvod 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_folders 
) 
= 
 ( select  
:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_isp" as="ur_folders">
          <columns>
            <column name="kod_mat_main" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_mat.kod_mat as kod_mat_main, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n3 as kod_folders,t.n9 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n6 as kod_sdp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
ur_folders
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on ur_folders.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on kod_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_kazn" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_kazn" key="kod_kazn" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_kazn">
      <select-text>
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
ur_kazn.num_reg as num_reg, /*Номер письма*//*string*/
ur_kazn.dat_doc as dat_doc, /*Дата письма*//*date*/
ur_kazn.kod_dog_kazn as kod_dog_kazn, /*Казначейство*//*number*/
ur_kazn.dat_podachi as dat_podachi, /*Дата передачи письма*//*date*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_on_il_gp_doc1 as dolg_on_il_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_state as kod_state, /*Состояние*//*number*/
ur_kazn.dat_otv as dat_otv, /*Дата исполнения*//*date*/
ur_kazn.dat_otz as dat_otz, /*Дата отзыва*//*date*/
qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Основная реализация*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
ur_kazn.ogr_v as ogr_v, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*Гос. пошлина*//*number*/
ur_kazn.astrent_v as astrent_v, /*Астрент*//*number*/
ur_kazn.sud_izd_v as sud_izd_v, /*Судебные издержки*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Основная реализация*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
qube.dolg_kazn_tek_ogr1 as dolg_kazn_tek_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp_doc1 as dolg_resh_tek_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_kazn_tek_astr1 as dolg_kazn_tek_astr, /*Астрент*//*number*/
qube.dolg_kazn_tek_sud_izd1 as dolg_kazn_tek_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.prim as prim, /*Примечание*//*string*/
ur_kazn.kod_scan as kod_scan, /*number*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_kazn.is_not_new as is_not_new, /*number*/
kod_dog_kazn_x_n.name as kod_dog_kazn_x_n, /*Казначейство*//*string*/
kod_state_x_n.name as kod_state_x_n, /*Состояние*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_kazn.is_new as is_new, /*number*/
ur_kazn.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum(qube.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_gp_doc1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum(qube.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( nvl( qube.ur_hist_mat_dec_ogr1 ,0)  -nvl( qube.ur_kazn_ogr_v1 ,0) )  as dolg_kazn_tek_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp_doc1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0)  -nvl( qube.ur_kazn_astrent_v1 ,0) )  as dolg_kazn_tek_astr1, /*Начислено астрент*//*number*/
sum( nvl( qube.ur_hist_mat_dec_sud_izd1 ,0)  -nvl( qube.ur_kazn_sud_izd_v1 ,0) )  as dolg_kazn_tek_sud_izd1, /*Судебные издержки*//*number*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_kazn_astrent_v1)  as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_ogr_v1)  as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_sud_izd_v1)  as ur_kazn_sud_izd_v1, /*Удовлетворено судебные издержки*//*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_kazn.astrent_v as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.ogr_v as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.sud_izd_v as ur_kazn_sud_izd_v1, /*Удовлетворено судебные издержки*//*number*/
null as peni_period_ym1/*string*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn
--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null ) )
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
(ur_kazn.kod_folders = :fk_kod_folders )  and (ur_kazn.kod_kazn is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_state as kod_state, /*number*/
a.num_reg as num_reg, /*Номер документа в казначействе*//*string*/
a.dat_otv as dat_otv, /*Дата исполнения*//*date*/
a.prim as prim, /*Примечание*//*string*/
a.dat_doc as dat_doc, /*Дата документа в казначействе*//*date*/
a.kod_dog_kazn as kod_dog_kazn, /*number*/
a.dat_podachi as dat_podachi, /*Дата передачи в казначейство*//*date*/
a.dat_otz as dat_otz, /*Дата отзыва из казначейства*//*date*/
a.kod_scan as kod_scan, /**//*number*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_kazn
a
--\ur_kazn
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_kazn.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_kazn.kod_state = kod_state_x_n.kod_state--\us_state
left outer join
(
--ks_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.name as name/*Казначейство*//*string*/

from ks_kazn
a
--\ks_kazn
)
kod_dog_kazn_x_n on ur_kazn.kod_dog_kazn = kod_dog_kazn_x_n.kod_kazn--\ks_kazn
--\
</select-text>
      <columns>
        <column name="kod_kazn" table="ur_kazn" type="number" title="" parname="cur_kod_kazn" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_kazn" temp-col-name="n1" />
        <column name="num_reg" table="ur_kazn" type="string" title="Номер письма" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s1" />
        <column name="dat_doc" table="ur_kazn" type="date" title="Дата письма" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_doc" temp-col-name="d1" />
        <column name="kod_dog_kazn" table="ur_kazn" type="number" title="Казначейство" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dog_kazn" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query order="name" class="1" title="Казначейство" timestamp="11.05.2017 21:22:06" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ks_kazn.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="name">name</column>
                </order>
                <select>--a
select <column table="a" column="kod_kazn" type="number" as="kod_kazn" key="1" fixed="1" sourcetable="./a" sourcecolumn="kod_kazn" used="1" into="n1">a.kod_kazn as kod_kazn, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Казначейство" comment="наименование" as="name" key="0" sourcetable="./a" sourcecolumn="name" used="1" into="s1">a.name as name, /*Казначейство*//*string*/
</column><column table="a" column="inn" type="string" title="ИНН" as="inn" key="0" sourcetable="./a" sourcecolumn="inn" used="1" into="s2">a.inn as inn, /*ИНН*//*string*/
</column><column table="a" column="rs" type="string" title="" as="rs" key="0" sourcetable="./a" sourcecolumn="rs" used="1" into="s3">a.rs as rs, /**//*string*/
</column><column table="a" column="npp" type="number" title="" comment="номер" as="npp" key="0" sourcetable="./a" sourcecolumn="npp" used="1" into="n2">a.npp as npp, /**//*number*/
</column><column table="a" column="okrk" type="number" title="Округ" comment="номер округа казначейства" as="okrk" key="0" sourcetable="./a" sourcecolumn="okrk" used="1" into="n3">a.okrk as okrk, /*Округ*//*number*/
</column><column table="a" column="allname" type="string" title="" comment="полное наименование" as="allname" key="0" sourcetable="./a" sourcecolumn="allname" used="1" into="s4">a.allname as allname, /**//*string*/
</column><column table="a" column="is_new" type="number" sys="1" as="is_new" key="0" sourcetable="./a" sourcecolumn="is_new" used="1" into="n4">0 as is_new, /*number*/
</column><column table="a" column="is_not_new" type="number" sys="1" as="is_not_new" key="0" sourcetable="./a" sourcecolumn="is_not_new" used="1" into="n5">1 as is_not_new/*number*/
</column></select>
                <from>
from <table name="ks_kazn" as="a" title="Казначейство" used="1">ks_kazn
a
--\ks_kazn
</table></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_kazn" type="number" as="kod_kazn" key="1" fixed="1" sourcetable="./a" sourcecolumn="kod_kazn" thissrc="kod_kazn">a.kod_kazn</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_kazn" type="number" as="kod_kazn" key="1" fixed="1" sourcetable="./a" sourcecolumn="kod_kazn" thissrc="kod_kazn">a.kod_kazn</column><text txtype="func"> ) like lower( </text><const><text>:kod_kazn_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" type="string" title="Казначейство" comment="наименование" as="name" key="0" sourcetable="./a" sourcecolumn="name" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="inn" type="string" title="ИНН" as="inn" key="0" sourcetable="./a" sourcecolumn="inn" thissrc="inn">a.inn</column><text txtype="func"> ) like lower( </text><const><text>:inn_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="rs" type="string" title="" as="rs" key="0" sourcetable="./a" sourcecolumn="rs" thissrc="rs">a.rs</column><text txtype="func"> ) like lower( </text><const><text>:rs_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="npp" type="number" title="" comment="номер" as="npp" key="0" sourcetable="./a" sourcecolumn="npp" thissrc="npp">a.npp</column><text txtype="func"> ) like lower( </text><const><text>:npp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="okrk" type="number" title="Округ" comment="номер округа казначейства" as="okrk" key="0" sourcetable="./a" sourcecolumn="okrk" thissrc="okrk">a.okrk</column><text txtype="func"> ) like lower( </text><const><text>:okrk_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="allname" type="string" title="" comment="полное наименование" as="allname" key="0" sourcetable="./a" sourcecolumn="allname" thissrc="allname">a.allname</column><text txtype="func"> ) like lower( </text><const><text>:allname_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_new" type="number" sys="1" as="is_new" key="0" sourcetable="./a" sourcecolumn="is_new" thissrc="is_new">0</column><text txtype="func"> ) like lower( </text><const><text>:is_new_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_not_new" type="number" sys="1" as="is_not_new" key="0" sourcetable="./a" sourcecolumn="is_not_new" thissrc="is_not_new">1</column><text txtype="func"> ) like lower( </text><const><text>:is_not_new_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by name</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="name" class="1" title="Казначейство" timestamp="11.05.2017 21:22:06" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ks_kazn.xml" haskeys="1" as="a">
              <queries>
                <query order="name" class="1" title="Казначейство" timestamp="11.05.2017 21:22:06" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ks_kazn.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_kazn_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="inn_filter" type="string" />
                    <param name="rs_filter" type="string" />
                    <param name="npp_filter" type="string" />
                    <param name="okrk_filter" type="string" />
                    <param name="allname_filter" type="string" />
                    <param name="is_new_filter" type="string" />
                    <param name="is_not_new_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_kazn" type="number" as="kod_kazn" key="1" fixed="1" />
                    <column table="a" column="name" type="string" title="Казначейство" comment="наименование" as="name" key="0" />
                    <column table="a" column="inn" type="string" title="ИНН" as="inn" key="0" />
                    <column table="a" column="rs" type="string" title="" as="rs" key="0" />
                    <column table="a" column="npp" type="number" title="" comment="номер" as="npp" key="0" />
                    <column table="a" column="okrk" type="number" title="Округ" comment="номер округа казначейства" as="okrk" key="0" />
                    <column table="a" column="allname" type="string" title="" comment="полное наименование" as="allname" key="0" />
                    <column table="a" column="is_new" type="number" sys="1" as="is_new" key="0" />
                    <column table="a" column="is_not_new" type="number" sys="1" as="is_not_new" key="0" />
                  </select>
                  <from>
                    <table name="ks_kazn" as="a" title="Казначейство" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_kazn" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_kazn" />
                        <useparam name="kod_kazn_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="inn" />
                        <useparam name="inn_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="rs" />
                        <useparam name="rs_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="npp" />
                        <useparam name="npp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="okrk" />
                        <useparam name="okrk_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="allname" />
                        <useparam name="allname_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_new" />
                        <useparam name="is_new_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_not_new" />
                        <useparam name="is_not_new_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="name" />
                  </order>
                  <order>
                    <column column="name" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_kazn_filter" />
                    <useparam name="name_filter" />
                    <useparam name="inn_filter" />
                    <useparam name="rs_filter" />
                    <useparam name="npp_filter" />
                    <useparam name="okrk_filter" />
                    <useparam name="allname_filter" />
                    <useparam name="is_new_filter" />
                    <useparam name="is_not_new_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_kazn_filter" type="string">
                  <const>:kod_kazn_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="inn_filter" type="string">
                  <const>:inn_filter </const>
                </param>
                <param name="rs_filter" type="string">
                  <const>:rs_filter </const>
                </param>
                <param name="npp_filter" type="string">
                  <const>:npp_filter </const>
                </param>
                <param name="okrk_filter" type="string">
                  <const>:okrk_filter </const>
                </param>
                <param name="allname_filter" type="string">
                  <const>:allname_filter </const>
                </param>
                <param name="is_new_filter" type="string">
                  <const>:is_new_filter </const>
                </param>
                <param name="is_not_new_filter" type="string">
                  <const>:is_not_new_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_kazn_x_n.name as kod_dog_kazn_x_n, /*Казначейство*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_dog_kazn as kod_dog_kazn/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_dog_kazn as kod_dog_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n2 as kod_dog_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_dog_kazn as kod_dog_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n2 as kod_dog_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--ks_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.name as name/*Казначейство*//*string*/

from ks_kazn
a
--\ks_kazn
)
kod_dog_kazn_x_n on ur_kazn.kod_dog_kazn = kod_dog_kazn_x_n.kod_kazn--\ks_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_dog_kazn_x_n" table="ur_kazn" />
          </dependants>
        </column>
        <column name="dat_podachi" table="ur_kazn" type="date" title="Дата передачи письма" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_podachi" temp-col-name="d2" />
        <column name="dolg_on_il_hnd" table="ur_kazn" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1/*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_osn" table="ur_kazn" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1/*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_peni" table="ur_kazn" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1/*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str" table="ur_kazn" type="string" title="Период пени" ColumnVisible="is_customer10_flag" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as peni_period_ym1/*string*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_shtr" table="ur_kazn" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1/*Задолженность на дату выдачи исп. листа по штрафу*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_dec_ogr" table="ur_kazn" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum(qube.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1/*Расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as ur_hist_mat_dec_ogr1/*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_gp_doc" table="ur_kazn" type="number" title="Гос. пошлина" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_gp_doc1 as dolg_on_il_gp_doc, /*Гос. пошлина*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_gp_doc1/*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_astr" table="ur_kazn" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1/*Долг по астренту*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select null as kod_isp, /*key*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1/*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1/*Начислено астрент*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1/*Начислено астрент*//*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1/*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_dec_sud_izd" table="ur_kazn" type="number" title="Судебные издержки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum(qube.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as ur_hist_mat_dec_sud_izd1/*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_state" table="ur_kazn" type="number" title="Состояние" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_state" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_state" as="kod_state" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_state" into="n1">a.kod_state as kod_state, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Состояние документа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Состояние документа*//*string*/
</column></select>
                <from>
from <query name="us_state" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_state
select <column table="a" column="kod_state" type="number" key="1" as="kod_state" used="1" sourcetable="./a/a" sourcecolumn="kod_state">a.kod_state as kod_state, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Состояние документа" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Состояние документа*//*string*/
</column></select><from>
from <table name="us_state" as="a" title="Состояние документа" used="1">us_state
a
--\us_state
</table></from>)
a
--\us_state
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_state" as="kod_state" title="" key="1" thissrc="kod_state">a.kod_state</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_state" as="kod_state" title="" key="1" thissrc="kod_state">a.kod_state</column><text txtype="func"> ) like lower( </text><const><text>:kod_state_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Состояние документа" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" as="a">
              <queries>
                <query title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_state_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_state" as="kod_state" title="" key="1" />
                    <column table="a" column="name" as="name" title="Состояние документа" />
                  </select>
                  <from>
                    <query name="us_state" as="a" title="Состояние документа" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_state" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_state" />
                        <useparam name="kod_state_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_state_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_state_filter" type="string">
                  <const>:kod_state_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_state_x_n.name as kod_state_x_n, /*Состояние*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_state as kod_state/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_state as kod_state  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n3 as kod_state  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_state as kod_state  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n3 as kod_state  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_kazn.kod_state = kod_state_x_n.kod_state--\us_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_state_x_n" table="ur_kazn" />
          </dependants>
        </column>
        <column name="dat_otv" table="ur_kazn" type="date" title="Дата исполнения" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_otv" temp-col-name="d3" />
        <column name="dat_otz" table="ur_kazn" type="date" title="Дата отзыва" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_otz" temp-col-name="d4" />
        <column name="ur_opl_kazn" table="ur_kazn" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1/*Дата выдачи исп. листа*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
ur_kazn.hand_opl as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_osn" table="ur_kazn" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Основная реализация*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1/*Оплата осн. реал. после выдачи исп. листа*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_peni" table="ur_kazn" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1/*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_shtr" table="ur_kazn" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1/*Оплата штрафа после выд. исп. л.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ogr_v" table="ur_kazn" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ogr_v" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_kazn_tek_ogr1 as dolg_kazn_tek_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( nvl( qube.ur_hist_mat_dec_ogr1 ,0)  -nvl( qube.ur_kazn_ogr_v1 ,0) )  as dolg_kazn_tek_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_ogr_v1)  as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.ogr_v as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_ogr" table="ur_kazn" />
          </dependants>
        </column>
        <column name="ur_opl_posl_il_gp" table="ur_kazn" type="number" title="Гос. пошлина" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*Гос. пошлина*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1/*Оплата ГП после выдачи исп. листа*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="astrent_v" table="ur_kazn" type="number" title="Астрент" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="astrent_v" temp-col-name="n5">
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_kazn_tek_astr1 as dolg_kazn_tek_astr, /*Астрент*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0)  -nvl( qube.ur_kazn_astrent_v1 ,0) )  as dolg_kazn_tek_astr1/*Начислено астрент*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_kazn_astrent_v1)  as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_kazn.astrent_v as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.astrent_v as astrent_v,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n5 as astrent_v,t.n4 as ogr_v,t.n6 as sud_izd_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.astrent_v as astrent_v,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n5 as astrent_v,t.n4 as ogr_v,t.n6 as sud_izd_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_astr" table="ur_kazn" />
          </dependants>
        </column>
        <column name="sud_izd_v" table="ur_kazn" type="number" title="Судебные издержки" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sud_izd_v" temp-col-name="n6">
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_kazn_tek_sud_izd1 as dolg_kazn_tek_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( nvl( qube.ur_hist_mat_dec_sud_izd1 ,0)  -nvl( qube.ur_kazn_sud_izd_v1 ,0) )  as dolg_kazn_tek_sud_izd1/*Судебные издержки*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_sud_izd_v1)  as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.sud_izd_v as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.sud_izd_v as sud_izd_v,a.ogr_v as ogr_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n6 as sud_izd_v,t.n4 as ogr_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.sud_izd_v as sud_izd_v,a.ogr_v as ogr_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n6 as sud_izd_v,t.n4 as ogr_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_sud_izd" table="ur_kazn" />
          </dependants>
        </column>
        <column name="dolg_kazn" table="ur_kazn" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1/*Признано по юр. документу*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_kazn_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_osn" table="ur_kazn" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Основная реализация*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1/*Текущая задолженность по решению осн. реал*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_peni" table="ur_kazn" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1/*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_shtr" table="ur_kazn" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1/*Текущая задолженность по решению  штраф*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_kazn_tek_ogr" table="ur_kazn" type="number" title="Расх. за введ. огр. реж. энергопотр." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_kazn_tek_ogr1 as dolg_kazn_tek_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_dec_ogr1 ,0)  -nvl( qube.ur_kazn_ogr_v1 ,0) )  as dolg_kazn_tek_ogr1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_kazn_ogr_v1)  as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_kazn_ogr_v1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as ur_hist_mat_dec_ogr1, /*number*/
ur_kazn.ogr_v as ur_kazn_ogr_v1/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.ogr_v as ogr_v/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_gp_doc" table="ur_kazn" type="number" title="Гос. пошлина" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_gp_doc1 as dolg_resh_tek_gp_doc, /*Гос. пошлина*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp_doc1/*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn/*number*//*key*/

from (
(
(
--
select ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_kazn_tek_astr" table="ur_kazn" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_kazn_tek_astr1 as dolg_kazn_tek_astr, /*Астрент*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0)  -nvl( qube.ur_kazn_astrent_v1 ,0) )  as dolg_kazn_tek_astr1/*Начислено астрент*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1/*Удовлетворено астрент*//*number*/

from (
(
(
--
select null as kod_isp, /*key*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1/*Удовлетворено астрент*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_kazn_astrent_v1)  as ur_kazn_astrent_v1/*Удовлетворено астрент*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_kazn_astrent_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_kazn.astrent_v as ur_kazn_astrent_v1/*Удовлетворено астрент*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.astrent_v as astrent_v/*Удовлетворено астрент*//*number*/

from (select a.kod_kazn as kod_kazn,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as ur_kazn_astrent_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_kazn_tek_sud_izd" table="ur_kazn" type="number" title="Судебные издержки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_kazn_tek_sud_izd1 as dolg_kazn_tek_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( qube.ur_hist_mat_dec_sud_izd1 ,0)  -nvl( qube.ur_kazn_sud_izd_v1 ,0) )  as dolg_kazn_tek_sud_izd1/*Судебные издержки*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_kazn_sud_izd_v1)  as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
ur_kazn.sud_izd_v as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.sud_izd_v as sud_izd_v/*Удовлетворено судебные издержки*//*number*/

from (select a.kod_kazn as kod_kazn,a.sud_izd_v as sud_izd_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n6 as sud_izd_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.sud_izd_v as sud_izd_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n6 as sud_izd_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="prim" table="ur_kazn" type="string" title="Примечание" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s2" />
        <column name="kod_scan" table="ur_kazn" type="number" title="Файл" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_scan" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_scan" as="kod_scan" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_scan" into="n1">a.kod_scan as kod_scan, /**//*number*//*key*/
</column><column table="a" column="file_name" as="file_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="file_name" into="s1">a.file_name as file_name/**//*string*/
</column></select>
                <from>
from <query name="ur_scan_docs" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_scan_docs
select <column table="a" column="kod_scan" type="number" comment="уникальный ключ" as="kod_scan" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_scan" used="1">a.kod_scan as kod_scan, /*number*//*key*/
</column><column table="a" column="file_name" type="string" title="" comment="имя файла" vid="1" spec-column="file-name" as="file_name" key="0" sourcetable="./a/a" sourcecolumn="file_name" used="1">a.file_name as file_name/**//*string*/
</column></select><from>
from <table name="ur_scan_docs" as="a" title="Файл" used="1">ur_scan_docs
a
--\ur_scan_docs
</table></from>)
a
--\ur_scan_docs
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> ) like lower( </text><const><text>:kod_scan_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="file_name" as="file_name" title="" thissrc="file_name">a.file_name</column><text txtype="func"> ) like lower( </text><const><text>:file_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" haskeys="1" as="a">
              <queries>
                <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_scan_filter" type="string" />
                    <param name="file_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_scan" as="kod_scan" title="" key="1" />
                    <column table="a" column="file_name" as="file_name" title="" />
                  </select>
                  <from>
                    <query name="ur_scan_docs" as="a" title="Файл" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="kod_scan_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="file_name" />
                        <useparam name="file_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_scan_filter" />
                    <useparam name="file_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_scan_filter" type="string">
                  <const>:kod_scan_filter </const>
                </param>
                <param name="file_name_filter" type="string">
                  <const>:file_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_scan as kod_scan/**//*number*/

from (select a.kod_kazn as kod_kazn,a.kod_scan as kod_scan  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n7 as kod_scan  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_scan as kod_scan  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n7 as kod_scan  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_kazn.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_scan_x_n" table="ur_kazn" />
          </dependants>
        </column>
        <column name="kr_dog_name" table="ur_kazn" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_not_new" table="ur_kazn" type="number" title="" parname="item_is_not_new" ColumnVisible="0" />
        <column name="kod_dog_kazn_x_n" table="ur_kazn.kod_dog_kazn" type="string" title="Казначейство" text-source-for="kod_dog_kazn" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_kazn_x_n.name as kod_dog_kazn_x_n, /*Казначейство*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_dog_kazn as kod_dog_kazn/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_dog_kazn as kod_dog_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n2 as kod_dog_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_dog_kazn as kod_dog_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n2 as kod_dog_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--ks_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.name as name/*Казначейство*//*string*/

from ks_kazn
a
--\ks_kazn
)
kod_dog_kazn_x_n on ur_kazn.kod_dog_kazn = kod_dog_kazn_x_n.kod_kazn--\ks_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_state_x_n" table="ur_kazn.kod_state" type="string" title="Состояние" text-source-for="kod_state" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_state_x_n.name as kod_state_x_n, /*Состояние*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_state as kod_state/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_state as kod_state  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n3 as kod_state  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_state as kod_state  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n3 as kod_state  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_kazn.kod_state = kod_state_x_n.kod_state--\us_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan_x_n" table="ur_kazn.kod_scan" type="string" title="Файл" text-source-for="kod_scan" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_scan as kod_scan/**//*number*/

from (select a.kod_kazn as kod_kazn,a.kod_scan as kod_scan  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n7 as kod_scan  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_scan as kod_scan  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n7 as kod_scan  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_kazn.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_kazn" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="ur_kazn" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_kazn">
              <params>
                <param name="kod_kazn_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kazn_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_on_il_gp_doc1 as dolg_on_il_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd, /*Судебные издержки*//*number*/
qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Основная реализация*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*Гос. пошлина*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Основная реализация*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
qube.dolg_kazn_tek_ogr1 as dolg_kazn_tek_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp_doc1 as dolg_resh_tek_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_kazn_tek_astr1 as dolg_kazn_tek_astr, /*Астрент*//*number*/
qube.dolg_kazn_tek_sud_izd1 as dolg_kazn_tek_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum(qube.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_gp_doc1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum(qube.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( nvl( qube.ur_hist_mat_dec_ogr1 ,0)  -nvl( qube.ur_kazn_ogr_v1 ,0) )  as dolg_kazn_tek_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp_doc1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0)  -nvl( qube.ur_kazn_astrent_v1 ,0) )  as dolg_kazn_tek_astr1, /*Начислено астрент*//*number*/
sum( nvl( qube.ur_hist_mat_dec_sud_izd1 ,0)  -nvl( qube.ur_kazn_sud_izd_v1 ,0) )  as dolg_kazn_tek_sud_izd1/*Судебные издержки*//*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_kazn_astrent_v1)  as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_ogr_v1)  as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_sud_izd_v1)  as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_kazn.astrent_v as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.ogr_v as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.sud_izd_v as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dolg_on_il_hnd" table="ur_kazn" />
            <dependant name="dolg_on_il_osn" table="ur_kazn" />
            <dependant name="dolg_on_il_peni" table="ur_kazn" />
            <dependant name="dolg_on_il_shtr" table="ur_kazn" />
            <dependant name="ur_hist_mat_dec_ogr" table="ur_kazn" />
            <dependant name="dolg_on_il_gp_doc" table="ur_kazn" />
            <dependant name="dolg_on_il_astr" table="ur_kazn" />
            <dependant name="ur_hist_mat_dec_sud_izd" table="ur_kazn" />
            <dependant name="ur_opl_kazn" table="ur_kazn" />
            <dependant name="ur_opl_posl_il_osn" table="ur_kazn" />
            <dependant name="ur_opl_posl_il_peni" table="ur_kazn" />
            <dependant name="ur_opl_posl_il_shtr" table="ur_kazn" />
            <dependant name="ur_opl_posl_il_gp" table="ur_kazn" />
            <dependant name="dolg_kazn" table="ur_kazn" />
            <dependant name="dolg_resh_tek_osn" table="ur_kazn" />
            <dependant name="dolg_resh_tek_peni" table="ur_kazn" />
            <dependant name="dolg_resh_tek_shtr" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_ogr" table="ur_kazn" />
            <dependant name="dolg_resh_tek_gp_doc" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_astr" table="ur_kazn" />
            <dependant name="dolg_kazn_tek_sud_izd" table="ur_kazn" />
          </dependants>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_kazn as kod_kazn 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_dog_kazn as kod_dog_kazn 
,:dat_podachi as dat_podachi 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:dat_otz as dat_otz 
,:ogr_v as ogr_v 
,:astrent_v as astrent_v 
,:sud_izd_v as sud_izd_v 
,:prim as prim 
,:kod_scan as kod_scan 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_kazn 
(kod_kazn 
,num_reg 
,dat_doc 
,kod_dog_kazn 
,dat_podachi 
,kod_state 
,dat_otv 
,dat_otz 
,ogr_v 
,astrent_v 
,sud_izd_v 
,prim 
,kod_scan 
,kod_folders 
) 
 values  
(r.kod_kazn 
,r.num_reg 
,r.dat_doc 
,r.kod_dog_kazn 
,r.dat_podachi 
,r.kod_state 
,r.dat_otv 
,r.dat_otz 
,r.ogr_v 
,r.astrent_v 
,r.sud_izd_v 
,r.prim 
,r.kod_scan 
,r.kod_folders 
) 
 returning  
kod_kazn into :kod_kazn; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_kazn where kod_kazn=:kod_kazn</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_kazn' 
and 
names=:form_id 
and 
f2=:kod_kazn; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_kazn as kod_kazn 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_dog_kazn as kod_dog_kazn 
,:dat_podachi as dat_podachi 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:dat_otz as dat_otz 
,:ogr_v as ogr_v 
,:astrent_v as astrent_v 
,:sud_izd_v as sud_izd_v 
,:prim as prim 
,:kod_scan as kod_scan 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,d1 
,n2 
,d2 
,n3 
,d3 
,d4 
,n4 
,n5 
,n6 
,s2 
,n7 
,n8 
) 
 values  
('ur_kazn' 
,:form_id 
,:kod_kazn 
,:row_state_id 
,r.kod_kazn 
,r.num_reg 
,r.dat_doc 
,r.kod_dog_kazn 
,r.dat_podachi 
,r.kod_state 
,r.dat_otv 
,r.dat_otz 
,r.ogr_v 
,r.astrent_v 
,r.sud_izd_v 
,r.prim 
,r.kod_scan 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_kazn as kod_kazn 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_dog_kazn as kod_dog_kazn 
,:dat_podachi as dat_podachi 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:dat_otz as dat_otz 
,:ogr_v as ogr_v 
,:astrent_v as astrent_v 
,:sud_izd_v as sud_izd_v 
,:prim as prim 
,:kod_scan as kod_scan 
,:kod_folders as kod_folders 
,a.num_pril 
,a.u_m 
,a.d_m 
,a.kodp 
 
from ur_kazn a  where kod_kazn=:kod_kazn) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,d1 
,n2 
,d2 
,n3 
,d3 
,d4 
,n4 
,n5 
,n6 
,s2 
,n7 
,n8 
,s3 
,s4 
,d5 
,n9 
) 
 values  
('ur_kazn' 
,:form_id 
,:kod_kazn 
,:row_state_id 
,r.kod_kazn 
,r.num_reg 
,r.dat_doc 
,r.kod_dog_kazn 
,r.dat_podachi 
,r.kod_state 
,r.dat_otv 
,r.dat_otz 
,r.ogr_v 
,r.astrent_v 
,r.sud_izd_v 
,r.prim 
,r.kod_scan 
,r.kod_folders 
,r.num_pril 
,r.u_m 
,r.d_m 
,r.kodp 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_kazn' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_kazn set  
(kod_kazn 
,num_reg 
,dat_doc 
,kod_dog_kazn 
,dat_podachi 
,kod_state 
,dat_otv 
,dat_otz 
,ogr_v 
,astrent_v 
,sud_izd_v 
,prim 
,kod_scan 
,kod_folders 
) 
= 
 ( select  
:kod_kazn as kod_kazn 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:kod_dog_kazn as kod_dog_kazn 
,:dat_podachi as dat_podachi 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:dat_otz as dat_otz 
,:ogr_v as ogr_v 
,:astrent_v as astrent_v 
,:sud_izd_v as sud_izd_v 
,:prim as prim 
,:kod_scan as kod_scan 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_kazn=:kod_kazn 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="custom">
          <useaction action-type="execute-update" call="ur_kazn_upd_num_reg">
            <column table="this" column="kod_kazn" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_kazn" as="ur_kazn">
          <columns>
            <column name="kod_kazn" type="number" title="" visible="0" />
            <column name="num_reg" type="string" title="Номер письма" />
            <column name="dat_doc" type="date" title="Дата письма" />
            <column name="kod_dog_kazn" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_podachi" type="date" title="Дата передачи письма" />
            <column name="dolg_on_il_hnd" type="number" title="Всего" />
            <column name="dolg_on_il_osn" type="number" title="Основная реализация" />
            <column name="dolg_on_il_peni" type="number" title="Проценты (пени)" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="dolg_on_il_shtr" type="number" title="Штраф" />
            <column name="ur_hist_mat_dec_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="dolg_on_il_gp_doc" type="number" title="Гос. пошлина" />
            <column name="dolg_on_il_astr" type="number" title="Астрент" />
            <column name="ur_hist_mat_dec_sud_izd" type="number" title="Судебные издержки" />
            <column name="kod_state" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv" type="date" title="Дата исполнения" />
            <column name="dat_otz" type="date" title="Дата отзыва" />
            <column name="ur_opl_kazn" type="number" title="Всего" />
            <column name="ur_opl_posl_il_osn" type="number" title="Основная реализация" />
            <column name="ur_opl_posl_il_peni" type="number" title="Проценты (пени)" />
            <column name="ur_opl_posl_il_shtr" type="number" title="Штраф" />
            <column name="ogr_v" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="ur_opl_posl_il_gp" type="number" title="Гос. пошлина" />
            <column name="astrent_v" type="number" title="Астрент" />
            <column name="sud_izd_v" type="number" title="Судебные издержки" />
            <column name="dolg_kazn" type="number" title="Всего" />
            <column name="dolg_resh_tek_osn" type="number" title="Основная реализация" />
            <column name="dolg_resh_tek_peni" type="number" title="Проценты (пени)" />
            <column name="dolg_resh_tek_shtr" type="number" title="Штраф" />
            <column name="dolg_kazn_tek_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="dolg_resh_tek_gp_doc" type="number" title="Гос. пошлина" />
            <column name="dolg_kazn_tek_astr" type="number" title="Астрент" />
            <column name="dolg_kazn_tek_sud_izd" type="number" title="Судебные издержки" />
            <column name="prim" type="string" title="Примечание" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="kod_dog_kazn_x_n" type="string" title="Казначейство" />
            <column name="kod_state_x_n" type="string" title="Состояние" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_kazn" type="number" title="" visible="0" />
            <column name="num_reg" type="string" title="Номер письма" />
            <column name="dat_doc" type="date" title="Дата письма" />
            <column name="kod_dog_kazn_x_n" type="string" title="Казначейство" />
            <column name="kod_dog_kazn" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_podachi" type="date" title="Дата передачи письма" />
            <band title="Сумма задолженности заявленная к выплате">
              <column name="dolg_on_il_hnd" type="number" title="Всего" />
              <column name="dolg_on_il_osn" type="number" title="Основная реализация" />
              <column name="dolg_on_il_peni" type="number" title="Проценты (пени)" />
              <column name="peni_period_str" type="string" title="Период пени" />
              <column name="dolg_on_il_shtr" type="number" title="Штраф" />
              <column name="ur_hist_mat_dec_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="dolg_on_il_gp_doc" type="number" title="Гос. пошлина" />
              <column name="dolg_on_il_astr" type="number" title="Астрент" />
              <column name="ur_hist_mat_dec_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <column name="kod_state_x_n" type="string" title="Состояние" />
            <column name="kod_state" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv" type="date" title="Дата исполнения" />
            <column name="dat_otz" type="date" title="Дата отзыва" />
            <band title="Задолженность удовлетворена на сумму">
              <column name="ur_opl_kazn" type="number" title="Всего" />
              <column name="ur_opl_posl_il_osn" type="number" title="Основная реализация" />
              <column name="ur_opl_posl_il_peni" type="number" title="Проценты (пени)" />
              <column name="ur_opl_posl_il_shtr" type="number" title="Штраф" />
              <column name="ogr_v" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="ur_opl_posl_il_gp" type="number" title="Гос. пошлина" />
              <column name="astrent_v" type="number" title="Астрент" />
              <column name="sud_izd_v" type="number" title="Судебные издержки" />
            </band>
            <band title="Остаток задолженности">
              <column name="dolg_kazn" type="number" title="Всего" />
              <column name="dolg_resh_tek_osn" type="number" title="Основная реализация" />
              <column name="dolg_resh_tek_peni" type="number" title="Проценты (пени)" />
              <column name="dolg_resh_tek_shtr" type="number" title="Штраф" />
              <column name="dolg_kazn_tek_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="dolg_resh_tek_gp_doc" type="number" title="Гос. пошлина" />
              <column name="dolg_kazn_tek_astr" type="number" title="Астрент" />
              <column name="dolg_kazn_tek_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <column name="prim" type="string" title="Примечание" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_kazn_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_kazn_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
ur_kazn.num_reg as num_reg, /*Номер письма*//*string*/
ur_kazn.dat_doc as dat_doc, /*Дата письма*//*date*/
ur_kazn.kod_dog_kazn as kod_dog_kazn, /*Казначейство*//*number*/
ur_kazn.dat_podachi as dat_podachi, /*Дата передачи письма*//*date*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_on_il_gp_doc1 as dolg_on_il_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.kod_state as kod_state, /*Состояние*//*number*/
ur_kazn.dat_otv as dat_otv, /*Дата исполнения*//*date*/
ur_kazn.dat_otz as dat_otz, /*Дата отзыва*//*date*/
qube.ur_opl_kazn1 as ur_opl_kazn, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Основная реализация*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
ur_kazn.ogr_v as ogr_v, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*Гос. пошлина*//*number*/
ur_kazn.astrent_v as astrent_v, /*Астрент*//*number*/
ur_kazn.sud_izd_v as sud_izd_v, /*Судебные издержки*//*number*/
qube.dolg_kazn1 as dolg_kazn, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Основная реализация*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
qube.dolg_kazn_tek_ogr1 as dolg_kazn_tek_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp_doc1 as dolg_resh_tek_gp_doc, /*Гос. пошлина*//*number*/
qube.dolg_kazn_tek_astr1 as dolg_kazn_tek_astr, /*Астрент*//*number*/
qube.dolg_kazn_tek_sud_izd1 as dolg_kazn_tek_sud_izd, /*Судебные издержки*//*number*/
ur_kazn.prim as prim, /*Примечание*//*string*/
ur_kazn.kod_scan as kod_scan, /*number*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_kazn.is_not_new as is_not_new, /*number*/
kod_dog_kazn_x_n.name as kod_dog_kazn_x_n, /*Казначейство*//*string*/
kod_state_x_n.name as kod_state_x_n, /*Состояние*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_kazn.is_new as is_new, /*number*/
ur_kazn.kod_folders as kod_folders/*number*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum(qube.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_gp_doc1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum(qube.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  as ur_opl_kazn1, /*Дата выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( nvl( ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  ,0)  -nvl( ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_kazn_hand_opl1 ,0) )  ,0) )  as dolg_kazn1, /*Признано по юр. документу*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( nvl( qube.ur_hist_mat_dec_ogr1 ,0)  -nvl( qube.ur_kazn_ogr_v1 ,0) )  as dolg_kazn_tek_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf3)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp_doc1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0)  -nvl( qube.ur_kazn_astrent_v1 ,0) )  as dolg_kazn_tek_astr1, /*Начислено астрент*//*number*/
sum( nvl( qube.ur_hist_mat_dec_sud_izd1 ,0)  -nvl( qube.ur_kazn_sud_izd_v1 ,0) )  as dolg_kazn_tek_sud_izd1, /*Судебные издержки*//*number*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_kazn as kod_kazn, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
qube.ur_kazn_astrent_v1 as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
qube.ur_kazn_hand_opl1 as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_ogr_v1 as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_kazn_sud_izd_v1 as ur_kazn_sud_izd_v1/*Удовлетворено судебные издержки*//*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_kazn_astrent_v1)  as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
sum(un.ur_kazn_hand_opl1)  as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_ogr_v1)  as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
sum(un.ur_kazn_sud_izd_v1)  as ur_kazn_sud_izd_v1, /*Удовлетворено судебные издержки*//*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_kazn.astrent_v as ur_kazn_astrent_v1, /*Удовлетворено астрент*//*number*/
ur_kazn.hand_opl as ur_kazn_hand_opl1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.ogr_v as ur_kazn_ogr_v1, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
ur_kazn.sud_izd_v as ur_kazn_sud_izd_v1, /*Удовлетворено судебные издержки*//*number*/
null as peni_period_ym1/*string*/

from (
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
 nvl( a.ogr_v ,0)  +nvl( a.sud_izd_v ,0)  +nvl( a.astrent_v ,0)  as hand_opl/*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/

from (select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn
--\ur_kazn
where
ur_kazn.kod_kazn is not null )
--\
union all
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_kazn.kod_kazn is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf3 as sr_opl_opl_sf3, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf3)  as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_kazn as kod_kazn, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf3/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = kod_dogplat.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_kazn.kod_kazn is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_kazn, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
null as kod_isp, 
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_ogr1, /*number*/
null as ur_hist_mat_dec_sud_izd1, /*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_kazn as kod_kazn, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_kazn as kod_kazn, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn as kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_dp_kazn
select a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
a.kod_kazn as kod_kazn, /*number*/
a.kod_dogplat as kod_dogplat/*number*/

from ur_dp_kazn
a
--\ur_dp_kazn
)
kod_dp_kazn_a_d on kod_dp_kazn_a_d.kod_dogplat = ur_dogplat_a_d.kod_dogplat--\ur_dp_kazn
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn/*number*//*key*/

from (select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on kod_dp_kazn_a_d.kod_kazn = ur_kazn.kod_kazn--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
kod_dp_kazn_a_d.kod_kazn, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_kazn, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_kazn as kod_kazn, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as sr_opl_opl_sf3, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_ogr1 as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_sud_izd1 as ur_hist_mat_dec_sud_izd1, /*Судебные издержки*//*number*/
null as ur_kazn_astrent_v1, /*number*/
null as ur_kazn_hand_opl1, /*number*/
null as ur_kazn_ogr_v1, /*number*/
null as ur_kazn_sud_izd_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_kazn as kod_kazn, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_ogr1)  as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_sud_izd1)  as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_kazn as kod_kazn, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.ogr as ur_hist_mat_dec_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.sud_izd as ur_hist_mat_dec_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
ur_kazn.kod_kazn as kod_kazn/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
kod_folders_isp_a_d on kod_folders_isp_a_d.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_folders = kod_folders_isp_a_d.kod_folders--\ur_kazn
where
ur_kazn.kod_kazn is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp, /*number*//*key*/
ur_kazn.kod_kazn/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_kazn/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_kazn/*number*//*key*/
)
qube
--\
left outer join
(
--ur_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_state as kod_state, /*number*/
a.num_reg as num_reg, /*Номер документа в казначействе*//*string*/
a.dat_otv as dat_otv, /*Дата исполнения*//*date*/
a.prim as prim, /*Примечание*//*string*/
a.dat_doc as dat_doc, /*Дата документа в казначействе*//*date*/
a.kod_dog_kazn as kod_dog_kazn, /*number*/
a.dat_podachi as dat_podachi, /*Дата передачи в казначейство*//*date*/
a.dat_otz as dat_otz, /*Дата отзыва из казначейства*//*date*/
a.kod_scan as kod_scan, /**//*number*/
a.ogr_v as ogr_v, /*Удовлетворено расх. за введ. огр. реж. энергопотр.*//*number*/
a.sud_izd_v as sud_izd_v, /*Удовлетворено судебные издержки*//*number*/
a.astrent_v as astrent_v, /*Удовлетворено астрент*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders,a.kod_state as kod_state,a.num_reg as num_reg,a.dat_otv as dat_otv,a.prim as prim,a.dat_doc as dat_doc,a.kod_dog_kazn as kod_dog_kazn,a.dat_podachi as dat_podachi,a.dat_otz as dat_otz,a.kod_scan as kod_scan,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v,0 as is_new,1 as is_not_new  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders,t.n3 as kod_state,t.s1 as num_reg,t.d3 as dat_otv,t.s2 as prim,t.d1 as dat_doc,t.n2 as kod_dog_kazn,t.d2 as dat_podachi,t.d4 as dat_otz,t.n7 as kod_scan,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
a
--\(select a.kod_kazn as kod_kazn,a.kod_folders as kod_folders,a.kod_state as kod_state,a.num_reg as num_reg,a.dat_otv as dat_otv,a.prim as prim,a.dat_doc as dat_doc,a.kod_dog_kazn as kod_dog_kazn,a.dat_podachi as dat_podachi,a.dat_otz as dat_otz,a.kod_scan as kod_scan,a.ogr_v as ogr_v,a.sud_izd_v as sud_izd_v,a.astrent_v as astrent_v,0 as is_new,1 as is_not_new  from ur_kazn a where not exists (select * from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and a.kod_kazn=t.f2 ) and   a.kod_kazn in :kod_kazn_prm   union all  select t.n1 as kod_kazn,t.n8 as kod_folders,t.n3 as kod_state,t.s1 as num_reg,t.d3 as dat_otv,t.s2 as prim,t.d1 as dat_doc,t.n2 as kod_dog_kazn,t.d2 as dat_podachi,t.d4 as dat_otz,t.n7 as kod_scan,t.n4 as ogr_v,t.n6 as sud_izd_v,t.n5 as astrent_v,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_kazn' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kazn_prm )
)
ur_kazn on ur_kazn.kod_kazn = qube.kod_kazn--\ur_kazn
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_kazn.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_kazn.kod_state = kod_state_x_n.kod_state--\us_state
left outer join
(
--ks_kazn
select a.kod_kazn as kod_kazn, /*number*//*key*/
a.name as name/*Казначейство*//*string*/

from ks_kazn
a
--\ks_kazn
)
kod_dog_kazn_x_n on ur_kazn.kod_dog_kazn = kod_dog_kazn_x_n.kod_kazn--\ks_kazn
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="f10" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="is_customer10_flag" key="val" is-ms-upd="0" is-top="1">
      <select-text>
--
select f10.val as val/*number*/

from (
--is_customer10_flag
select  case  when (a.customer_id = 10)  then 1 else 0 end  as val/*number*/

from (
--rs_rep_sets
select a.customer_id as customer_id/**//*number*/

from rs_rep_sets
a
--\rs_rep_sets
)
a
--\rs_rep_sets
)
f10
--\is_customer10_flag
--\
</select-text>
      <columns>
        <column name="val" table="f10" type="number" title="" parname="f10" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="is_customer10_flag" as="f10">
          <columns>
            <column name="val" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>