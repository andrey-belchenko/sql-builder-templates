<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_list_te" title="Претензионно-исковая работа" folder="ur_reports" security-id="asuse_ur_pir" with-behavior="0" is-report="1" timestamp="24.12.2024 04:29:48" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_list_te.xml" elid="1975" ord="1975" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Условия поиска" id="53987091">
      <field id="53291429" name="kod_abon_type" controlType="UIList" title="Тип абонента" type="number" elid="564" ord="564" leaf="0" lvl="2" pelid="" column-editable="0">
        <listquery>
          <query name="kr_payer_abon_type" />
        </listquery>
        <defaultquery>
          <query name="abon_type_current" />
        </defaultquery>
      </field>
      <field id="37464980" name="dep" controlType="UIList" title="Отделение" type="number" elid="547" ord="547" leaf="0" lvl="2" pelid="" column-editable="kr_dep_is_multi">
        <listquery>
          <query name="kr_dep" />
        </listquery>
        <defaultquery>
          <query name="kr_dep_current" />
        </defaultquery>
      </field>
      <field id="59669202" name="prizn_arch_folder" controlType="UIList" title="Статус папки" type="number" elid="525" ord="525" leaf="0" lvl="2" pelid="">
        <listquery>
          <query name="prizn_arch_folder" />
        </listquery>
        <defaultquery>
          <query name="prizn_arch_folder_act" />
        </defaultquery>
      </field>
      <field id="30518183" controlType="UIText" type="string" elid="390" ord="390" leaf="1" lvl="2" pelid="" name="kodp" title="Код абонента" hint="LIKE" />
      <field id="43285956" controlType="UIText" type="string" elid="390" ord="390" leaf="1" lvl="2" pelid="" name="inn" title="ИНН" edit-mask="d" max-length="12" hint="LIKE" visible="0" />
      <field id="29893764" controlType="UIText" type="string" elid="390" ord="390" leaf="1" lvl="2" pelid="" title="Номер дела" name="num_delo" hint="LIKE" />
      <field id="17684773" controlType="UIText" type="string" elid="390" ord="390" leaf="1" lvl="2" pelid="" title="Номер исполнительного листа" name="num_il" hint="LIKE" />
    </fieldgroup>
    <grid table="a" show-toolbar="1" allow-select-move-columns="1" id="91391">
      <toolbar id="63533417">
        <uicommand object="a" name="create_form_main_el" button-type="custom-add-form" title="Создать карточку" icon="AddForm_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="377" ord="377" leaf="1" lvl="2" pelid="" id="65987101" />
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="365" ord="365" leaf="1" lvl="2" pelid="" title="" id="21116605" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="364" ord="364" leaf="1" lvl="2" pelid="" title="" id="60474451" />
      </toolbar>
      <columns id="24129220">
        <field table="a" name="ur_pretenz_count" title="Пр." controlType="UIText" format="N0" edit-mask="N0" rows-limit="100" id="35956943" />
        <field table="a" name="ur_mat_count" title="Мат." controlType="UIText" format="N0" edit-mask="N0" rows-limit="100" id="59504677" />
        <field table="a" name="ur_isp_count" title="Исп." controlType="UIText" format="N0" edit-mask="N0" rows-limit="100" id="32064255" />
        <field table="a" name="ur_folders_ndog_ext" title="Номер договора" controlType="UIText" rows-limit="100" id="5630592" />
        <field table="a" name="name" title="Наименование абонента" controlType="UIText" rows-limit="100" id="46356090" />
        <field table="a" name="ur_mat_period_min" title="Период задолженности с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="5568742" />
        <field table="a" name="ur_mat_period_max" title="Период задолженности по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="7693576" />
        <field table="a" name="peni_period_str_full" title="Период пени" controlType="UIText" rows-limit="100" id="21882749" />
        <field table="a" name="info_reminder" title="Напоминание" controlType="UIText" rows-limit="100" id="43460414" />
        <field table="a" name="ur_pretenz_dat_doc" title="Дата направления претензии" controlType="UIDate" rows-limit="100" id="59162747" />
        <field table="a" name="ur_pretenz_pio_date_direct" title="Дата поступления в ПИО" controlType="UIDate" rows-limit="100" id="21142757" />
        <field table="a" name="ur_mat_dat_doc_max" title="Дата подачи в суд" controlType="UIDate" rows-limit="100" id="45227806" />
        <field table="a" name="ur_mat_num_delo" title="Номер дела" controlType="UIText" rows-limit="100" id="6007416" />
        <field table="a" name="ur_mat_type_rassm_name" title="Порядок рассмотрения" controlType="UIText" rows-limit="100" id="23142052" />
        <field table="a" name="ur_mat_date_rassm_approx" title="Срок рассмотрения" controlType="UIDate" rows-limit="100" id="64161170" />
        <field table="a" name="ur_hist_mat_dec_dat_resh" title="Дата принятия решения" controlType="UIDate" rows-limit="100" id="47630660" />
        <field table="a" name="qube_ur_mat_dat_resh_vld" title="Дата принятия решения" controlType="UIText" rows-limit="100" id="32239792" />
        <field table="a" name="ur_hist_mat_post_name" title="Судебный акт" controlType="UIText" rows-limit="100" id="38086152" />
        <field table="a" name="ur_hist_mat_result_name" title="Результат рассмотрения" controlType="UIText" rows-limit="100" id="39618598" />
        <field table="a" name="ur_hist_mat_dec_dat_entry" title="Дата вст. реш. в зак. силу" controlType="UIDate" rows-limit="100" id="27972044" />
        <field table="a" name="ur_isp_dat_doc" title="Дата выдачи ИД" controlType="UIDate" rows-limit="100" id="44235330" />
        <field table="a" name="ur_dp_pr_sch_gp" title="Счет на оплату ГП" controlType="UICheck" rows-limit="100" id="54600608" />
        <field table="a" name="ur_dp_pr_sch_peni" title="Счет на оплату процентов (пени)" controlType="UICheck" rows-limit="100" id="66097442" />
        <field table="a" name="ur_mat_pr_sch_gp_vld" title="Дата вст. реш. в зак. силу" controlType="UIText" rows-limit="100" id="17930675" />
        <field table="a" name="ur_mat_pr_sch_peni_vld" title="Дата вст. реш. в зак. силу" controlType="UIText" rows-limit="100" id="34011723" />
        <field table="a" name="dat_create" title="Дата создания папки" controlType="UIDate" rows-limit="100" id="63419342" />
        <field table="a" name="dat_finish" title="Дата сброса папки в архив" controlType="UIDate" rows-limit="100" id="57432903" />
        <field table="a" name="is_active" title="Статус папки" controlType="UICombo" rows-limit="100" id="10918218" />
        <field table="a" name="font_color" title="Цвет текста" controlType="UIText" rows-limit="100" id="2857079" />
        <field table="a" name="sname" title="Отделение" controlType="UIText" rows-limit="100" id="25365566" />
        <field table="a" name="fio" title="Юрист" controlType="UIText" rows-limit="100" id="34269266" />
        <field table="a" name="nump" title="Код абонента" controlType="UIText" rows-limit="100" id="42770857" />
        <field table="a" name="vvod" title="Способ учета задолженности" controlType="UIText" rows-limit="100" id="41265432" />
      </columns>
      <menu id="49773958">
        <uicommand object="a" name="form_ur_folders_main" title="Открыть карточку по ведению ПИР" id="14136833" />
      </menu>
      <events id="52379879">
        <useaction object="a" name="form_ur_folders_main_el" event-name="double-click" id="27466383" />
      </events>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="number" name="kod_abon_type" parname="kod_abon_type" title="Тип абонента" ColumnEditable="0" />
      <field type="number" name="dep" parname="dep" title="Отделение" ColumnEditable="kr_dep_is_multi" />
      <field type="number" name="prizn_arch_folder" parname="prizn_arch_folder" title="Статус папки" />
      <field type="string" name="kodp" parname="kodp" title="Код абонента" />
      <field type="string" name="inn" parname="inn" title="ИНН" ClientVisible="0" />
      <field type="string" name="num_delo" parname="num_delo" title="Номер дела" />
      <field type="string" name="num_il" parname="num_il" title="Номер исполнительного листа" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" column-editable="0" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select qube.ur_pretenz_count1 as ur_pretenz_count, /*Пр.*//*number*/
qube.ur_mat_count1 as ur_mat_count, /*Мат.*//*number*/
qube.ur_isp_count1 as ur_isp_count, /*Исп.*//*number*/
qube.ur_folders_ndog_ext1 as ur_folders_ndog_ext, /*Номер договора*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
qube.ur_mat_period_min1 as ur_mat_period_min, /*Период задолженности с*//*number*/
qube.ur_mat_period_max1 as ur_mat_period_max, /*Период задолженности по*//*number*/
qube.peni_period_str_full1 as peni_period_str_full, /*Период пени*//*string*/
a.info_reminder as info_reminder, /*Напоминание*//*string*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc, /*Дата направления претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct, /*Дата поступления в ПИО*//*date*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max, /*Дата подачи в суд*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo, /*Номер дела*//*string*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name, /*Порядок рассмотрения*//*string*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx, /*Срок рассмотрения*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата принятия решения*//*date*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld, /*string*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name, /*Результат рассмотрения*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc, /*Дата выдачи ИД*//*date*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp, /*Счет на оплату ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni, /*Счет на оплату процентов (пени)*//*number*/
qube.ur_mat_pr_sch_gp_vld1 as ur_mat_pr_sch_gp_vld, /*string*/
qube.ur_mat_pr_sch_peni_vld1 as ur_mat_pr_sch_peni_vld, /*string*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
a.font_color as font_color, /*Цвет текста*//*string*/
kod_podr.sname as sname, /*Отделение*//*string*/
kod_emp.fio as fio, /*Юрист*//*string*/
kodp.nump as nump, /*Код абонента*//*string*/
vvod.name as vvod, /*Способ учета задолженности*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select ovr1.kod_folders as kod_folders, /*number*/
sum(ovr1.ur_pretenz_count1)  as ur_pretenz_count1, /*Количество претензий в папке*//*number*/
sum(ovr1.ur_mat_count1)  as ur_mat_count1, /*Мат.*//*number*/
sum(ovr1.ur_isp_count1)  as ur_isp_count1, /*Исп.*//*number*/
stragg_dist(ovr1.ur_folders_ndog_ext1)  as ur_folders_ndog_ext1, /*string*/
min(ovr1.ur_mat_period_min1)  as ur_mat_period_min1, /*Оборот*//*number*/
max(ovr1.ur_mat_period_max1)  as ur_mat_period_max1, /*Оборот*//*number*/
max(ovr1.peni_period_str_full1)  as peni_period_str_full1, /*Оборот*//*string*/
min(ovr1.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1, /*Дата направления претензии*//*date*/
min(ovr1.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1, /*Дата поступления в ПИО*//*date*/
max(ovr1.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
stragg(ovr1.ur_mat_num_delo1)  as ur_mat_num_delo1, /*Номер дела*//*string*/
stragg_dist(ovr1.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1, /*Порядок рассмотрения*//*string*/
min(ovr1.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1, /*Срок рассмотрения*//*date*/
max(ovr1.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(ovr1.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1, /*string*/
stragg_dist(ovr1.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
stragg_dist(ovr1.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
max(ovr1.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(ovr1.ur_isp_dat_doc1)  as ur_isp_dat_doc1, /*Дата выдачи ИД*//*date*/
min(ovr1.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1, /*Счет на оплату ГП*//*number*/
min(ovr1.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1, /*Счет на оплату процентов (пени)*//*number*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr2 is null )  and (( nvl( ovr1.expr3 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на ГП' end )  as ur_mat_pr_sch_gp_vld1, /*string*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr4 is null )  and (( nvl( ovr1.expr5 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на проценты(пени)' end )  as ur_mat_pr_sch_peni_vld1, /*string*/
max(ovr1.ur_folders_del_vld1)  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0)  as ur_pretenz_count1, /*Количество претензий в папке*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*Мат.*//*number*/
qube.ur_isp_count1 as ur_isp_count1, /*Исп.*//*number*/
 case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_ndog1 else qube.kr_dogovor_ndog_active1 end  as ur_folders_ndog_ext1, /*string*/
 nullif(least (  nvl( nullif( qube.ur_dp_ym_min_mat1 ,0), 99999999999999999999999999999999999999)  , nvl(nullif( qube.ur_mat_period_zadol_s_vvod1 ,0), 99999999999999999999999999999999999999)  ), 99999999999999999999999999999999999999)  as ur_mat_period_min1, /*Оборот*//*number*/
 nullif(greatest (  nvl( qube.ur_dp_ym_max_mat1 , -99999999999999999999999999999999999999)  , nvl( qube.ur_mat_period_zadol_po_vvod1 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999)  as ur_mat_period_max1, /*Оборот*//*number*/
 nvl( ( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  , ( vg_period.ym_enum_str_to_ym_ranges_str( qube.mat_peni_period_ym1 ) )  )  as peni_period_str_full1, /*Оборот*//*string*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата направления претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1, /*Дата поступления в ПИО*//*date*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*Порядок рассмотрения*//*string*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Срок рассмотрения*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи ИД*//*date*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Счет на оплату ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Счет на оплату процентов (пени)*//*number*/
 case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end  as ur_folders_del_vld1, /*Валидация удаления папки*//*string*/
 max( qube.ur_hist_mat_dec_dat_entry2 )  over(  partition by kod_mat.kod_mat )  as expr1, 
 max( qube.ur_dp_pr_sch_gp2 )  over(  partition by kod_mat.kod_mat )  as expr2, 
 sum( qube.ur_hist_mat_dec_gp_otv1 )  over(  partition by kod_mat.kod_mat )  as expr3, 
 max( qube.ur_dp_pr_sch_peni2 )  over(  partition by kod_mat.kod_mat )  as expr4, 
 sum( qube.ur_hist_mat_dec_peni1 )  over(  partition by kod_mat.kod_mat )  as expr5

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_gp2 as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_pr_sch_peni2 as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_folders_ndog1 as ur_folders_ndog1, /*Номер договора*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_entry2 as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_isp_count1 as ur_isp_count1, /*number*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1, /*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1, /*number*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*string*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as kod_mat, 
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_dp_pr_sch_gp1, /*number*/
null as ur_dp_pr_sch_gp2, /*number*/
null as ur_dp_pr_sch_peni1, /*number*/
null as ur_dp_pr_sch_peni2, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
qube.ur_folders_ndog1 as ur_folders_ndog1, /*Номер договора*//*string*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_entry2, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_gp_otv1, /*number*/
null as ur_hist_mat_dec_peni1, /*number*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_isp_count1 as ur_isp_count1, /*number*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1, /*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1, /*number*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*string*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dogovor_ndog_active1)  as kr_dogovor_ndog_active1, 
max(un.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1, /*string*/
max(un.ur_folders_ndog1)  as ur_folders_ndog1, /*Номер договора*//*string*/
stragg_dist(un.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
stragg_dist(un.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
sum(un.ur_isp_count1)  as ur_isp_count1, /*number*/
max(un.ur_isp_dat_doc1)  as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
max(un.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
min(un.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
stragg(un.ur_mat_num_delo1)  as ur_mat_num_delo1, /*Номер дела*//*string*/
max(un.ur_mat_period_zadol_po_vvod1)  as ur_mat_period_zadol_po_vvod1, /*number*/
min(un.ur_mat_period_zadol_s_vvod1)  as ur_mat_period_zadol_s_vvod1, /*number*/
stragg_dist(un.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1, /*string*/
stragg(un.mat_peni_period_ym1)  as mat_peni_period_ym1, /*Период*//*string*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1, /*number*/
min(un.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
min(un.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1, /*date*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.ndog_active as kr_dogovor_ndog_active1, 
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh8.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d_psh1
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh2 on kod_dogplat_a_d_psh1.kod_folders = a_psh2.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh5 on ur_mat_psh5.kod_folders = a_psh2.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh6 on ur_hist_mat_psh6.kod_mat = ur_mat_psh5.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh8 on ur_isp_cnd1_psh8.kod_hist_mat = ur_hist_mat_psh6.kod_hist_mat--\ur_isp
where
(kod_dogplat_a_d_psh1.kod_dog = kr_dogovor_a_d.kod_dog)  and ( lower( ur_isp_cnd1_psh8.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh24.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d_psh15
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh16 on kod_dogplat_a_d_psh15.kod_folders = a_psh16.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh24 on ur_mat1_cnd1_psh24.kod_folders = a_psh16.kod_folders--\ur_mat
where
(kod_dogplat_a_d_psh15.kod_dog = kr_dogovor_a_d.kod_dog)  and ( lower( ur_mat1_cnd1_psh24.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
 case  when (a.pr_active != 1)  then a.ndog end  as ndog_active

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select qube_ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
qube_ur_mat_a_d.dat_resh_vld as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--qube_ur_mat
select kod_mat_pp.kod_folders as kod_folders, /*number*/
 case  when ((qube.ur_hist_mat_dec_dat_resh1 is null )  and (( sysdate )  &gt; ( add_months( qube.ur_hist_mat_dat_pst_k_rsm1 , 2 ) ) ) )  then '[inf]Не вынесено решение. Прошло более 2-х месяцев с момента принятия к рассмотрению' end  as dat_resh_vld/*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
min(qube.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1/*Дата прин. суд. акта (не решение)*//*date*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
min(un.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select dims.kod_mat_pp as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--
select kod_mat_pp.kod_mat as kod_mat_pp/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d1 on ur_mat_a_d1.kod_folders = a.kod_folders--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = ur_mat_a_d1.kod_mat--\ur_mat_pp
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh288.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh285
--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh286 on ur_hist_mat_psh286.kod_mat = ur_mat_psh285.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh288 on ur_isp_cnd1_psh288.kod_hist_mat = ur_hist_mat_psh286.kod_hist_mat--\ur_isp
where
(ur_mat_psh285.kod_folders = a.kod_folders)  and ( lower( ur_isp_cnd1_psh288.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh289.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh289
--\ur_mat
where
( lower( ur_mat1_cnd1_psh289.num_delo ) like lower( :num_delo  ) )  and (ur_mat1_cnd1_psh289.kod_folders = a.kod_folders) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  group by
kod_mat_pp.kod_mat/*number*//*key*/
)
dims
--\
)
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
ur_hist_mat_a_d.dat_post_k_rsm as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_mat as kod_mat_pp, /*number*/
 case  when (( lower( kod_result.name ) )  like '%к рассмотрению%')  then a.dat_post end  as dat_post_k_rsm/*Дата прин. суд. акта (не решение)*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat1_a_d1.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh297.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1_psh290
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh291 on kod_mat1_a_d1_psh290.kod_folders = a_psh291.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh294 on ur_mat_psh294.kod_folders = a_psh291.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh295 on ur_hist_mat_psh295.kod_mat = ur_mat_psh294.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh297 on ur_isp_cnd1_psh297.kod_hist_mat = ur_hist_mat_psh295.kod_hist_mat--\ur_isp
where
(ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1_psh290.kod_mat)  and ( lower( ur_isp_cnd1_psh297.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh309.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1_psh300
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh301 on kod_mat1_a_d1_psh300.kod_folders = a_psh301.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh309 on ur_mat1_cnd1_psh309.kod_folders = a_psh301.kod_folders--\ur_mat
where
(ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1_psh300.kod_mat)  and ( lower( ur_mat1_cnd1_psh309.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  } )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat_pp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh317.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_psh310
--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh311 on kod_mat_pp_psh310.kod_folders = a_psh311.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh314 on ur_mat_psh314.kod_folders = a_psh311.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh315 on ur_hist_mat_psh315.kod_mat = ur_mat_psh314.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh317 on ur_isp_cnd1_psh317.kod_hist_mat = ur_hist_mat_psh315.kod_hist_mat--\ur_isp
where
(ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_psh310.kod_mat)  and ( lower( ur_isp_cnd1_psh317.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh329.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_psh320
--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh321 on kod_mat_pp_psh320.kod_folders = a_psh321.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh329 on ur_mat1_cnd1_psh329.kod_folders = a_psh321.kod_folders--\ur_mat
where
(ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_psh320.kod_mat)  and ( lower( ur_mat1_cnd1_psh329.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  } )
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat_pp.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh336.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh330
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh333 on ur_mat_psh333.kod_folders = a_psh330.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh334 on ur_hist_mat_psh334.kod_mat = ur_mat_psh333.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh336 on ur_isp_cnd1_psh336.kod_hist_mat = ur_hist_mat_psh334.kod_hist_mat--\ur_isp
where
(kod_mat_pp.kod_folders = a_psh330.kod_folders)  and ( lower( ur_isp_cnd1_psh336.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh347.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh339
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh347 on ur_mat1_cnd1_psh347.kod_folders = a_psh339.kod_folders--\ur_mat
where
(kod_mat_pp.kod_folders = a_psh339.kod_folders)  and ( lower( ur_mat1_cnd1_psh347.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  } )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_ur_mat_a_d
--\qube_ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on qube_ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh32.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh29
--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh30 on ur_hist_mat_psh30.kod_mat = ur_mat_psh29.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh32 on ur_isp_cnd1_psh32.kod_hist_mat = ur_hist_mat_psh30.kod_hist_mat--\ur_isp
where
(ur_mat_psh29.kod_folders = a.kod_folders)  and ( lower( ur_isp_cnd1_psh32.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh33.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh33
--\ur_mat
where
( lower( ur_mat1_cnd1_psh33.num_delo ) like lower( :num_delo  ) )  and (ur_mat1_cnd1_psh33.kod_folders = a.kod_folders) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
a.ndog as ur_folders_ndog1, /*Номер договора*//*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
kod_dog.ndog as ndog, /*Номер договора*//*string*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh37.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh34
--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh35 on ur_hist_mat_psh35.kod_mat = ur_mat_psh34.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh37 on ur_isp_cnd1_psh37.kod_hist_mat = ur_hist_mat_psh35.kod_hist_mat--\ur_isp
where
(ur_mat_psh34.kod_folders = a.kod_folders)  and ( lower( ur_isp_cnd1_psh37.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh38.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh38
--\ur_mat
where
( lower( ur_mat1_cnd1_psh38.num_delo ) like lower( :num_delo  ) )  and (ur_mat1_cnd1_psh38.kod_folders = a.kod_folders) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
ur_hist_mat_a_d.post_name as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
ur_hist_mat_a_d.result_name as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
result_kod_post.name as post_name, /*Судебный акт*//*string*/
kod_result.name as result_name/*Результат рассмотрения*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post on kod_result.kod_post = result_kod_post.kod_post--\us_post
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat1_a_d1.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh46.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1_psh39
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh40 on kod_mat1_a_d1_psh39.kod_folders = a_psh40.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh43 on ur_mat_psh43.kod_folders = a_psh40.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh44 on ur_hist_mat_psh44.kod_mat = ur_mat_psh43.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh46 on ur_isp_cnd1_psh46.kod_hist_mat = ur_hist_mat_psh44.kod_hist_mat--\ur_isp
where
(ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1_psh39.kod_mat)  and ( lower( ur_isp_cnd1_psh46.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh62.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1_psh53
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh54 on kod_mat1_a_d1_psh53.kod_folders = a_psh54.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh62 on ur_mat1_cnd1_psh62.kod_folders = a_psh54.kod_folders--\ur_mat
where
(ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1_psh53.kod_mat)  and ( lower( ur_mat1_cnd1_psh62.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
ur_isp_a_d.cnt as ur_isp_count1, /*number*/
ur_isp_a_d.dat_doc as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_isp_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh73.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh67
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh70 on ur_mat_psh70.kod_folders = a_psh67.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh71 on ur_hist_mat_psh71.kod_mat = ur_mat_psh70.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh73 on ur_isp_cnd1_psh73.kod_hist_mat = ur_hist_mat_psh71.kod_hist_mat--\ur_isp
where
(ur_isp_a_d.kod_folders = a_psh67.kod_folders)  and ( lower( ur_isp_cnd1_psh73.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh88.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh80
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh88 on ur_mat1_cnd1_psh88.kod_folders = a_psh80.kod_folders--\ur_mat
where
(ur_isp_a_d.kod_folders = a_psh80.kod_folders)  and ( lower( ur_mat1_cnd1_psh88.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
ur_mat_a_d.dat_doc as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
ur_mat_a_d.date_rassm_approx as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
ur_mat_a_d.num_delo as ur_mat_num_delo1, /*Номер дела*//*string*/
ur_mat_a_d.period_zadol_po_vvod as ur_mat_period_zadol_po_vvod1, /*number*/
ur_mat_a_d.period_zadol_s_vvod as ur_mat_period_zadol_s_vvod1, /*number*/
ur_mat_a_d.type_rassm_name as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.period_zadol_s_vvod as period_zadol_s_vvod, /*number*/
a.period_zadol_po_vvod as period_zadol_po_vvod, /*number*/
1 as cnt, /*number*/
 case  when ((( nvl( a.type_rassm , 2 ) )  = 1)  and (a.dat_doc is not null ) )  then (( add_months( a.dat_doc , 2 ) )  + ( 7 ) )  when ((a.type_rassm = 3)  and (a.dat_prin is not null ) )  then (a.dat_prin + ( 15 ) )  end  as date_rassm_approx, /*Примерный срок рассмотрения*//*date*/
type_rassm.name as type_rassm_name/*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--vr_type_rassm
select u.kod_type_rassm as kod_type_rassm, /*number*//*key*/
u.name as name/*string*/

from (
(
(
--
select 1 as kod_type_rassm, /*number*//*key*/
'Упрощенное производство' as name/*string*/

from dual

--\dual
)
--\
union all
(
--
select 2, /*number*//*key*/
'Общий порядок'/*string*/

from dual

--\dual
)
--\
union all
(
--
select 3, /*number*//*key*/
'Приказное производство'/*string*/

from dual

--\dual
)
--\
)
--\
)
u
--\
)
type_rassm on type_rassm.kod_type_rassm = a.type_rassm--\vr_type_rassm
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh99.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh93
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh96 on ur_mat_psh96.kod_folders = a_psh93.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh97 on ur_hist_mat_psh97.kod_mat = ur_mat_psh96.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh99 on ur_isp_cnd1_psh99.kod_hist_mat = ur_hist_mat_psh97.kod_hist_mat--\ur_isp
where
(ur_mat_a_d.kod_folders = a_psh93.kod_folders)  and ( lower( ur_isp_cnd1_psh99.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh114.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh106
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh114 on ur_mat1_cnd1_psh114.kod_folders = a_psh106.kod_folders--\ur_mat
where
(ur_mat_a_d.kod_folders = a_psh106.kod_folders)  and ( lower( ur_mat1_cnd1_psh114.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select kod_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
ur_mat_peni_period_a_d.name as mat_peni_period_ym1, /*Период*//*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_mat_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_mat_peni_period
a
--\ur_mat_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_mat_peni_period_a_d
--\ur_mat_peni_period
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d on ur_mat_peni_period_a_d.kod_mat = kod_mat_a_d.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh126.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d_psh119
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh120 on kod_mat_a_d_psh119.kod_folders = a_psh120.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh123 on ur_mat_psh123.kod_folders = a_psh120.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh124 on ur_hist_mat_psh124.kod_mat = ur_mat_psh123.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh126 on ur_isp_cnd1_psh126.kod_hist_mat = ur_hist_mat_psh124.kod_hist_mat--\ur_isp
where
(ur_mat_peni_period_a_d.kod_mat = kod_mat_a_d_psh119.kod_mat)  and ( lower( ur_isp_cnd1_psh126.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh142.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d_psh133
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh134 on kod_mat_a_d_psh133.kod_folders = a_psh134.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh142 on ur_mat1_cnd1_psh142.kod_folders = a_psh134.kod_folders--\ur_mat
where
(ur_mat_peni_period_a_d.kod_mat = kod_mat_a_d_psh133.kod_mat)  and ( lower( ur_mat1_cnd1_psh142.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh153.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh147
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh150 on ur_mat_psh150.kod_folders = a_psh147.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh151 on ur_hist_mat_psh151.kod_mat = ur_mat_psh150.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh153 on ur_isp_cnd1_psh153.kod_hist_mat = ur_hist_mat_psh151.kod_hist_mat--\ur_isp
where
(ur_pret_a_d.kod_folders = a_psh147.kod_folders)  and ( lower( ur_isp_cnd1_psh153.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh168.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh160
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh168 on ur_mat1_cnd1_psh168.kod_folders = a_psh160.kod_folders--\ur_mat
where
(ur_pret_a_d.kod_folders = a_psh160.kod_folders)  and ( lower( ur_mat1_cnd1_psh168.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1, /*number*/
ur_pretenz_a_d.dat_doc as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
ur_pretenz_a_d.pio_date as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_doc as dat_doc, /*Дата претензии*//*date*/
a.pio_date as pio_date, /*date*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh179.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh173
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh176 on ur_mat_psh176.kod_folders = a_psh173.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh177 on ur_hist_mat_psh177.kod_mat = ur_mat_psh176.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh179 on ur_isp_cnd1_psh179.kod_hist_mat = ur_hist_mat_psh177.kod_hist_mat--\ur_isp
where
(ur_pretenz_a_d.kod_folders = a_psh173.kod_folders)  and ( lower( ur_isp_cnd1_psh179.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh194.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh186
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh194 on ur_mat1_cnd1_psh194.kod_folders = a_psh186.kod_folders--\ur_mat
where
(ur_pretenz_a_d.kod_folders = a_psh186.kod_folders)  and ( lower( ur_mat1_cnd1_psh194.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d1 on kod_sf_a_d1.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d1 on ur_dogplat_a_d1.kod_sf = kod_sf_a_d1.kod_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_dogplat_a_d1.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat_a_d1.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh207.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d1_psh199
--\sr_facvip
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d1 on ur_dogplat_a_d1.kod_sf = kod_sf_a_d1_psh199.kod_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1_psh200 on ur_dogplat_a_d1.kod_mat = kod_mat_a_d1_psh200.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh201 on kod_mat_a_d1_psh200.kod_folders = a_psh201.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh204 on ur_mat_psh204.kod_folders = a_psh201.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh205 on ur_hist_mat_psh205.kod_mat = ur_mat_psh204.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh207 on ur_isp_cnd1_psh207.kod_hist_mat = ur_hist_mat_psh205.kod_hist_mat--\ur_isp
where
(kod_sf_a_d1_psh199.kod_sf = vr_peni_period_a_d.kod_sf)  and ( lower( ur_isp_cnd1_psh207.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh224.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d1_psh214
--\sr_facvip
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d1 on ur_dogplat_a_d1.kod_sf = kod_sf_a_d1_psh214.kod_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1_psh215 on ur_dogplat_a_d1.kod_mat = kod_mat_a_d1_psh215.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh216 on kod_mat_a_d1_psh215.kod_folders = a_psh216.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh224 on ur_mat1_cnd1_psh224.kod_folders = a_psh216.kod_folders--\ur_mat
where
(kod_sf_a_d1_psh214.kod_sf = vr_peni_period_a_d.kod_sf)  and ( lower( ur_mat1_cnd1_psh224.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
null as kr_dogovor_ndog_active1, /**/
null as mat_peni_period_ym1, /*string*/
null as peni_period_ym1, /*string*/
null as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_gp2 as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_pr_sch_peni2 as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_folders_ndog1, /*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_entry2 as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1, /*% за польз. чуж. ден. ср.*//*number*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1/*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
min(un.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
min(un.ur_dp_pr_sch_gp2)  as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
min(un.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
min(un.ur_dp_pr_sch_peni2)  as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_entry2)  as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(un.ur_hist_mat_dec_gp_otv1)  as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_dec_peni1)  as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.kod_mat as kod_mat, /*number*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
ur_dogplat_a_d.ym_max_mat as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
ur_dogplat_a_d.ym_min_mat as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_entry2, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_gp_otv1, /*number*/
null as ur_hist_mat_dec_peni1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.vid_real = 9)  then 1 end  as pr_sch_gp, /*Признак наличия счета на ГП*//*number*/
 case  when ((a.vid_real = 7) )  then 1 end  as pr_sch_peni, /*Признак наличия счета на проценты(пени)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat, /*Период начисления с (для материалов дела)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh235.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh229
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh232 on ur_mat_psh232.kod_folders = a_psh229.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh233 on ur_hist_mat_psh233.kod_mat = ur_mat_psh232.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh235 on ur_isp_cnd1_psh235.kod_hist_mat = ur_hist_mat_psh233.kod_hist_mat--\ur_isp
where
(ur_dogplat_a_d.kod_folders = a_psh229.kod_folders)  and ( lower( ur_isp_cnd1_psh235.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh250.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh242
--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh250 on ur_mat1_cnd1_psh250.kod_folders = a_psh242.kod_folders--\ur_mat
where
(ur_dogplat_a_d.kod_folders = a_psh242.kod_folders)  and ( lower( ur_mat1_cnd1_psh250.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_hist_mat_a_d.kod_mat as kod_mat, /*number*/
null as ur_dp_pr_sch_gp1, /*number*/
null as ur_dp_pr_sch_gp2, /*number*/
null as ur_dp_pr_sch_peni1, /*number*/
null as ur_dp_pr_sch_peni2, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.gp_otv as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec_a_d.peni as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.peni as peni, /*% за польз. чуж. ден. ср.*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from ur_folders
a
--\ur_folders
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat_a_d on ur_hist_mat_dec_a_d.kod_hist_mat = kod_hist_mat_a_d.kod_hist_mat--\ur_hist_mat
where
( 1=1 )  and (a.kod_sdp = 1)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( exists (
--
select (ur_isp_cnd1_psh262.num_reg)  as num_reg/*Номер исп. листа*//*string*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d_psh255
--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh256 on kod_mat_pp_a_d_psh255.kod_folders = a_psh256.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_psh259 on ur_mat_psh259.kod_folders = a_psh256.kod_folders--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_psh260 on ur_hist_mat_psh260.kod_mat = ur_mat_psh259.kod_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_cnd1_psh262 on ur_isp_cnd1_psh262.kod_hist_mat = ur_hist_mat_psh260.kod_hist_mat--\ur_isp
where
(ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d_psh255.kod_mat)  and ( lower( ur_isp_cnd1_psh262.num_reg ) like lower( :num_il  ) ) )
--\
)  }  {  and ( exists (
--
select (ur_mat1_cnd1_psh278.num_delo)  as num_delo/*Номер дела*//*string*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d_psh269
--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
a_psh270 on kod_mat_pp_a_d_psh269.kod_folders = a_psh270.kod_folders--\ur_folders
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat1_cnd1_psh278 on ur_mat1_cnd1_psh278.kod_folders = a_psh270.kod_folders--\ur_mat
where
(ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d_psh269.kod_mat)  and ( lower( ur_mat1_cnd1_psh278.num_delo ) like lower( :num_delo  ) ) )
--\
)  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_mat.kod_mat = qube.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
)
ovr1
--\
 group by
ovr1.kod_folders/*number*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.vvod as vvod, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
 case  when (ur_mat.mat_reminder1 is not null )  then '102,51,99' when (ur_mat.mat_reminder2 is not null )  then '139,0,0' end  as font_color, /*Цвет текста*//*string*/
ur_mat.mat_reminder1 || ur_mat.mat_reminder2 as info_reminder, /*Напоминание*//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--
select ur_mat.kod_folders as kod_folders, /*number*//*key*/
max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--uv_mat_reminders
select a.kod_mat as kod_mat, /*number*//*key*/
 case  when ((a.dat_doc &lt; ( add_months( sysdate , -1 ) ) )  and (( nvl( qube.ur_hist_mat_count1 ,0) )  = 0) )  then 'История не заполнена. ' end  as mat_reminder1, /*Напоминание 1*//*string*/
 case  when (( nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)!=0 )  and (qube.ur_hist_mat_dec_dat_entry1 is null )  and (qube.ur_hist_mat_dec_dat_resh1 &lt; (sysdate - 40) )  and (( nvl( qube.qube_mat_pp_cld_inf_cnt_nd1 , 0 ) )  = 0) )  then 'Не введена дата вступления решения в законную силу. ' end  as mat_reminder2/*Напоминание 2*//*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--qube_mat_pp_cld_inf
select kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
 nvl( (1)  ,0)  -nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)  as cnt_nd/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp.kod_mat--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on qube_mat_pp_cld_inf_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt, /*number*/
a.kod_mat as kod_mat_pp/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_dec_a_d.kod_mat = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select a.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a
--\ur_mat_pp
where
a.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on a.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
kod_mat_reminder on a.kod_mat = kod_mat_reminder.kod_mat--\uv_mat_reminders
)
ur_mat
--\ur_mat
 group by
ur_mat.kod_folders/*number*//*key*/
)
ur_mat on ur_mat.kod_folders = a.kod_folders--\
)
a on a.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on a.kod_emp = kod_emp.kod_emp--\kr_employee
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod on a.vvod = vvod.kod--\ur_folders_vvod
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="ur_pretenz_count" table="a" type="number" title="Пр." is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_count1 as ur_pretenz_count, /*Пр.*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
nullif(sum( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  as ur_pretenz_count1/*Количество претензий в папке*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_count" table="a" type="number" title="Мат." is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_count1 as ur_mat_count, /*Мат.*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum(qube.ur_mat_count1)  as ur_mat_count1/*Мат.*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_count" table="a" type="number" title="Исп." is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_count1 as ur_isp_count, /*Исп.*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
sum(qube.ur_isp_count1)  as ur_isp_count1/*Исп.*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_isp_count1 as ur_isp_count1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_isp_count1 as ur_isp_count1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_isp_count1)  as ur_isp_count1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_isp_count1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_isp_a_d.cnt as ur_isp_count1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_isp_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_folders_ndog_ext" table="a" type="string" title="Номер договора" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_ndog_ext1 as ur_folders_ndog_ext, /*Номер договора*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
stragg_dist( case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_ndog1 else qube.kr_dogovor_ndog_active1 end )  as ur_folders_ndog_ext1/*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.ur_folders_ndog1 as ur_folders_ndog1/*Номер договора*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.ur_folders_ndog1 as ur_folders_ndog1/*Номер договора*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dogovor_ndog_active1)  as kr_dogovor_ndog_active1, 
max(un.ur_folders_ndog1)  as ur_folders_ndog1/*Номер договора*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.ndog_active as kr_dogovor_ndog_active1, 
null as ur_folders_ndog1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
 case  when (a.pr_active != 1)  then a.ndog end  as ndog_active

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
a.ndog as ur_folders_ndog1/*Номер договора*//*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_dog.ndog as ndog/*Номер договора*//*string*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name" table="kodp" type="string" title="Наименование абонента" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.name as name, /*Наименование абонента*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_period_min" table="a" type="number" title="Период задолженности с" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_period_min1 as ur_mat_period_min, /*Период задолженности с*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min( nullif(least (  nvl( nullif( qube.ur_dp_ym_min_mat1 ,0), 99999999999999999999999999999999999999)  , nvl(nullif( qube.ur_mat_period_zadol_s_vvod1 ,0), 99999999999999999999999999999999999999)  ), 99999999999999999999999999999999999999) )  as ur_mat_period_min1/*Оборот*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
min(un.ur_mat_period_zadol_s_vvod1)  as ur_mat_period_zadol_s_vvod1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.ym_min_mat as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_mat_period_zadol_s_vvod1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat/*Период начисления с (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_mat_period_zadol_s_vvod1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_ym_min_mat1, /*number*/
ur_mat_a_d.period_zadol_s_vvod as ur_mat_period_zadol_s_vvod1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.period_zadol_s_vvod as period_zadol_s_vvod/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_period_max" table="a" type="number" title="Период задолженности по" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_period_max1 as ur_mat_period_max, /*Период задолженности по*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( nullif(greatest (  nvl( qube.ur_dp_ym_max_mat1 , -99999999999999999999999999999999999999)  , nvl( qube.ur_mat_period_zadol_po_vvod1 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999) )  as ur_mat_period_max1/*Оборот*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
max(un.ur_mat_period_zadol_po_vvod1)  as ur_mat_period_zadol_po_vvod1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.ym_max_mat as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
null as ur_mat_period_zadol_po_vvod1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_mat_period_zadol_po_vvod1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_ym_max_mat1, /*number*/
ur_mat_a_d.period_zadol_po_vvod as ur_mat_period_zadol_po_vvod1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.period_zadol_po_vvod as period_zadol_po_vvod/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str_full" table="a" type="string" title="Период пени" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str_full1 as peni_period_str_full, /*Период пени*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( nvl( ( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  , ( vg_period.ym_enum_str_to_ym_ranges_str( qube.mat_peni_period_ym1 ) )  ) )  as peni_period_str_full1/*Оборот*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg(un.mat_peni_period_ym1)  as mat_peni_period_ym1, /*Период*//*string*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as mat_peni_period_ym1, /*string*/
null as peni_period_ym1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_peni_period_a_d.name as mat_peni_period_ym1, /*Период*//*string*/
null as peni_period_ym1/*string*/

from (
--ur_mat_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_mat_peni_period
a
--\ur_mat_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_mat_peni_period_a_d
--\ur_mat_peni_period
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d on ur_mat_peni_period_a_d.kod_mat = kod_mat_a_d.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
null as mat_peni_period_ym1, /*string*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d1 on kod_sf_a_d1.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d1 on ur_dogplat_a_d1.kod_sf = kod_sf_a_d1.kod_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_dogplat_a_d1.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_a_d1.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="info_reminder" table="a" type="string" title="Напоминание" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.info_reminder as info_reminder, /*Напоминание*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
ur_mat.mat_reminder1 || ur_mat.mat_reminder2 as info_reminder/*Напоминание*//*string*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--
select ur_mat.kod_folders as kod_folders, /*number*//*key*/
max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--uv_mat_reminders
select a.kod_mat as kod_mat, /*number*/
 case  when ((a.dat_doc &lt; ( add_months( sysdate , -1 ) ) )  and (( nvl( qube.ur_hist_mat_count1 ,0) )  = 0) )  then 'История не заполнена. ' end  as mat_reminder1, /*Напоминание 1*//*string*/
 case  when (( nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)!=0 )  and (qube.ur_hist_mat_dec_dat_entry1 is null )  and (qube.ur_hist_mat_dec_dat_resh1 &lt; (sysdate - 40) )  and (( nvl( qube.qube_mat_pp_cld_inf_cnt_nd1 , 0 ) )  = 0) )  then 'Не введена дата вступления решения в законную силу. ' end  as mat_reminder2/*Напоминание 2*//*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--qube_mat_pp_cld_inf
select kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
 nvl( (1)  ,0)  -nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)  as cnt_nd/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp.kod_mat--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on qube_mat_pp_cld_inf_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt, /*number*/
a.kod_mat as kod_mat_pp/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_dec_a_d.kod_mat = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select a.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a
--\ur_mat_pp
where
a.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on a.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
kod_mat_reminder on a.kod_mat = kod_mat_reminder.kod_mat--\uv_mat_reminders
)
ur_mat
--\ur_mat
 group by
ur_mat.kod_folders/*number*//*key*/
)
ur_mat on ur_mat.kod_folders = a.kod_folders--\
)
a
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_pretenz_dat_doc" table="a" type="date" title="Дата направления претензии" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc, /*Дата направления претензии*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1/*Дата направления претензии*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1/*Дата претензии*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1/*Дата претензии*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1/*Дата претензии*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_pretenz_dat_doc1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_pretenz_a_d.dat_doc as ur_pretenz_dat_doc1/*Дата претензии*//*date*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_doc as dat_doc/*Дата претензии*//*date*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_pretenz_pio_date_direct" table="a" type="date" title="Дата поступления в ПИО" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct, /*Дата поступления в ПИО*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1/*Дата поступления в ПИО*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1/*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_pretenz_pio_date_direct1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_pretenz_a_d.pio_date as ur_pretenz_pio_date_direct1/*date*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.pio_date as pio_date/*date*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_dat_doc_max" table="a" type="date" title="Дата подачи в суд" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max, /*Дата подачи в суд*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1/*Дата подачи в суд*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1/*Дата подачи в суд*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1/*Дата подачи в суд*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1/*Дата подачи в суд*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_dat_doc_max1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.dat_doc as ur_mat_dat_doc_max1/*Дата подачи в суд*//*date*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_num_delo" table="a" type="string" title="Номер дела" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_num_delo1 as ur_mat_num_delo, /*Номер дела*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
stragg(qube.ur_mat_num_delo1)  as ur_mat_num_delo1/*Номер дела*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1/*Номер дела*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1/*Номер дела*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg(un.ur_mat_num_delo1)  as ur_mat_num_delo1/*Номер дела*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_num_delo1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.num_delo as ur_mat_num_delo1/*Номер дела*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo/*Номер дела*//*string*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_type_rassm_name" table="a" type="string" title="Порядок рассмотрения" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name, /*Порядок рассмотрения*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(qube.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1/*Порядок рассмотрения*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1/*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1/*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1/*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_type_rassm_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.type_rassm_name as ur_mat_type_rassm_name1/*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
type_rassm.name as type_rassm_name/*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--vr_type_rassm
select u.kod_type_rassm as kod_type_rassm, /*number*//*key*/
u.name as name/*string*/

from (
(
(
--
select 1 as kod_type_rassm, /*number*//*key*/
'Упрощенное производство' as name/*string*/

from dual

--\dual
)
--\
union all
(
--
select 2, /*number*//*key*/
'Общий порядок'/*string*/

from dual

--\dual
)
--\
union all
(
--
select 3, /*number*//*key*/
'Приказное производство'/*string*/

from dual

--\dual
)
--\
)
--\
)
u
--\
)
type_rassm on type_rassm.kod_type_rassm = a.type_rassm--\vr_type_rassm
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_date_rassm_approx" table="a" type="date" title="Срок рассмотрения" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx, /*Срок рассмотрения*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1/*Срок рассмотрения*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1/*Примерный срок рассмотрения*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1/*Примерный срок рассмотрения*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1/*Примерный срок рассмотрения*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_date_rassm_approx1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.date_rassm_approx as ur_mat_date_rassm_approx1/*Примерный срок рассмотрения*//*date*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
 case  when ((( nvl( a.type_rassm , 2 ) )  = 1)  and (a.dat_doc is not null ) )  then (( add_months( a.dat_doc , 2 ) )  + ( 7 ) )  when ((a.type_rassm = 3)  and (a.dat_prin is not null ) )  then (a.dat_prin + ( 15 ) )  end  as date_rassm_approx/*Примерный срок рассмотрения*//*date*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_dec_dat_resh" table="a" type="date" title="Дата принятия решения" is-user-editable="1" ClientValid="resh_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата принятия решения*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="qube_ur_mat_dat_resh_vld" table="a" type="string" title="Дата принятия решения" parname="resh_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld, /*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1/*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1/*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1/*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1/*string*/

from (
(
(
--
select qube_ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
qube_ur_mat_a_d.dat_resh_vld as qube_ur_mat_dat_resh_vld1/*string*/

from (
--qube_ur_mat
select kod_mat_pp.kod_folders as kod_folders, /*number*/
 case  when ((qube.ur_hist_mat_dec_dat_resh1 is null )  and (( sysdate )  &gt; ( add_months( qube.ur_hist_mat_dat_pst_k_rsm1 , 2 ) ) ) )  then '[inf]Не вынесено решение. Прошло более 2-х месяцев с момента принятия к рассмотрению' end  as dat_resh_vld/*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
min(qube.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1/*Дата прин. суд. акта (не решение)*//*date*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
min(un.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
ur_hist_mat_a_d.dat_post_k_rsm as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*/
 case  when (( lower( kod_result.name ) )  like '%к рассмотрению%')  then a.dat_post end  as dat_post_k_rsm/*Дата прин. суд. акта (не решение)*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat_a_d
--\ur_hist_mat
)
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
)
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_ur_mat_a_d
--\qube_ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on qube_ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as qube_ur_mat_dat_resh_vld1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_post_name" table="a" type="string" title="Судебный акт" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name, /*Судебный акт*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(qube.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1/*Судебный акт*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1/*Судебный акт*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1/*Судебный акт*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1/*Судебный акт*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_post_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_a_d.post_name as ur_hist_mat_post_name1/*Судебный акт*//*string*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
result_kod_post.name as post_name/*Судебный акт*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post on kod_result.kod_post = result_kod_post.kod_post--\us_post
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat1_a_d1.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_result_name" table="a" type="string" title="Результат рассмотрения" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name, /*Результат рассмотрения*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(qube.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1/*Результат рассмотрения*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1/*Результат рассмотрения*//*string*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1/*Результат рассмотрения*//*string*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1/*Результат рассмотрения*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_result_name1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_a_d.result_name as ur_hist_mat_result_name1/*Результат рассмотрения*//*string*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
kod_result.name as result_name/*Результат рассмотрения*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat1_a_d1.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_dec_dat_entry" table="a" type="date" title="Дата вст. реш. в зак. силу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1/*Дата вст. реш. в зак. силу*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1/*Дата вст. реш. в зак. силу*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1/*Дата вст. реш. в зак. силу*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1/*Дата вст. реш. в зак. силу*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_hist_mat_dec_dat_entry1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1/*Дата вст. реш. в зак. силу*//*date*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_entry as dat_entry_dec/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_isp_dat_doc" table="a" type="date" title="Дата выдачи ИД" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_isp_dat_doc1 as ur_isp_dat_doc, /*Дата выдачи ИД*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max(qube.ur_isp_dat_doc1)  as ur_isp_dat_doc1/*Дата выдачи ИД*//*date*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1/*Дата выдачи исп. листа*//*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1/*Дата выдачи исп. листа*//*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
max(un.ur_isp_dat_doc1)  as ur_isp_dat_doc1/*Дата выдачи исп. листа*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_isp_dat_doc1/*date*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_isp_a_d.dat_doc as ur_isp_dat_doc1/*Дата выдачи исп. листа*//*date*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_isp_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_pr_sch_gp" table="a" type="number" title="Счет на оплату ГП" is-user-editable="1" ClientValid="ur_mat_pr_sch_gp_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp, /*Счет на оплату ГП*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1/*Счет на оплату ГП*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1/*Признак наличия счета на ГП*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1/*Признак наличия счета на ГП*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1/*Признак наличия счета на ГП*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp1/*Признак наличия счета на ГП*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.vid_real = 9)  then 1 end  as pr_sch_gp/*Признак наличия счета на ГП*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_pr_sch_gp1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_pr_sch_peni" table="a" type="number" title="Счет на оплату процентов (пени)" is-user-editable="1" ClientValid="ur_mat_pr_sch_peni_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni, /*Счет на оплату процентов (пени)*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
min(qube.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1/*Счет на оплату процентов (пени)*//*number*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1/*Признак наличия счета на проценты(пени)*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1/*Признак наличия счета на проценты(пени)*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
min(un.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1/*Признак наличия счета на проценты(пени)*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni1/*Признак наличия счета на проценты(пени)*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
 case  when ((a.vid_real = 7) )  then 1 end  as pr_sch_peni/*Признак наличия счета на проценты(пени)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_dp_pr_sch_peni1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_pr_sch_gp_vld" table="a" type="string" title="Дата вст. реш. в зак. силу" parname="ur_mat_pr_sch_gp_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_pr_sch_gp_vld1 as ur_mat_pr_sch_gp_vld, /*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select ovr1.kod_folders as kod_folders, /*number*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr2 is null )  and (( nvl( ovr1.expr3 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на ГП' end )  as ur_mat_pr_sch_gp_vld1/*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
 max( qube.ur_hist_mat_dec_dat_entry1 )  over(  partition by kod_mat.kod_mat )  as expr1, 
 max( qube.ur_dp_pr_sch_gp1 )  over(  partition by kod_mat.kod_mat )  as expr2, 
 sum( qube.ur_hist_mat_dec_gp_otv1 )  over(  partition by kod_mat.kod_mat )  as expr3

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1/*Гос. пошлина, взысканная с ответчика*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1/*Гос. пошлина, взысканная с ответчика*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
min(un.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
sum(un.ur_hist_mat_dec_gp_otv1)  as ur_hist_mat_dec_gp_otv1/*Гос. пошлина, взысканная с ответчика*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.kod_mat as kod_mat, /*number*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_gp_otv1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.vid_real = 9)  then 1 end  as pr_sch_gp/*Признак наличия счета на ГП*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_hist_mat_a_d.kod_mat as kod_mat, /*number*/
null as ur_dp_pr_sch_gp1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.gp_otv as ur_hist_mat_dec_gp_otv1/*Гос. пошлина, взысканная с ответчика*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_entry as dat_entry_dec/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat_a_d on ur_hist_mat_dec_a_d.kod_hist_mat = kod_hist_mat_a_d.kod_hist_mat--\ur_hist_mat
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as kod_mat, 
null as ur_dp_pr_sch_gp1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_gp_otv1/*number*/

from (
--
select un.kod_folders as kod_folders/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_mat.kod_mat = qube.kod_mat--\ur_mat
)
ovr1
--\
 group by
ovr1.kod_folders/*number*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_mat_pr_sch_peni_vld" table="a" type="string" title="Дата вст. реш. в зак. силу" parname="ur_mat_pr_sch_peni_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_mat_pr_sch_peni_vld1 as ur_mat_pr_sch_peni_vld, /*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select ovr1.kod_folders as kod_folders, /*number*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr2 is null )  and (( nvl( ovr1.expr3 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на проценты(пени)' end )  as ur_mat_pr_sch_peni_vld1/*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
 max( qube.ur_hist_mat_dec_dat_entry1 )  over(  partition by kod_mat.kod_mat )  as expr1, 
 max( qube.ur_dp_pr_sch_peni1 )  over(  partition by kod_mat.kod_mat )  as expr2, 
 sum( qube.ur_hist_mat_dec_peni1 )  over(  partition by kod_mat.kod_mat )  as expr3

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
min(un.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
sum(un.ur_hist_mat_dec_peni1)  as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.kod_mat as kod_mat, /*number*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_peni1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
 case  when ((a.vid_real = 7) )  then 1 end  as pr_sch_peni/*Признак наличия счета на проценты(пени)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_hist_mat_a_d.kod_mat as kod_mat, /*number*/
null as ur_dp_pr_sch_peni1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.peni as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.peni as peni, /*% за польз. чуж. ден. ср.*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_entry as dat_entry_dec/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat_a_d on ur_hist_mat_dec_a_d.kod_hist_mat = kod_hist_mat_a_d.kod_hist_mat--\ur_hist_mat
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as kod_mat, 
null as ur_dp_pr_sch_peni1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_peni1/*number*/

from (
--
select un.kod_folders as kod_folders/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_mat.kod_mat = qube.kod_mat--\ur_mat
)
ovr1
--\
 group by
ovr1.kod_folders/*number*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_create" table="a" type="date" title="Дата создания папки" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" ClientFontColor="fnt_clr" is-updateable="1" is-updateable-ext="1" update-target="dat_create" temp-col-name="d1" />
        <column name="dat_finish" table="a" type="date" title="Дата сброса папки в архив" Visible="is_not_new" ColumnEditable="1" is-user-editable="1" ClientFontColor="fnt_clr" is-updateable="1" is-updateable-ext="1" update-target="dat_finish" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="is_active" table="a" />
            <dependant name="is_active_x_n" table="a" />
          </dependants>
        </column>
        <column name="is_active" table="a" type="number" title="Статус папки" is-user-editable="1" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="font_color" table="a" type="string" title="Цвет текста" parname="fnt_clr" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.font_color as font_color, /*Цвет текста*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 case  when (ur_mat.mat_reminder1 is not null )  then '102,51,99' when (ur_mat.mat_reminder2 is not null )  then '139,0,0' end  as font_color/*Цвет текста*//*string*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--
select ur_mat.kod_folders as kod_folders, /*number*//*key*/
max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--uv_mat_reminders
select a.kod_mat as kod_mat, /*number*/
 case  when ((a.dat_doc &lt; ( add_months( sysdate , -1 ) ) )  and (( nvl( qube.ur_hist_mat_count1 ,0) )  = 0) )  then 'История не заполнена. ' end  as mat_reminder1, /*Напоминание 1*//*string*/
 case  when (( nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)!=0 )  and (qube.ur_hist_mat_dec_dat_entry1 is null )  and (qube.ur_hist_mat_dec_dat_resh1 &lt; (sysdate - 40) )  and (( nvl( qube.qube_mat_pp_cld_inf_cnt_nd1 , 0 ) )  = 0) )  then 'Не введена дата вступления решения в законную силу. ' end  as mat_reminder2/*Напоминание 2*//*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--qube_mat_pp_cld_inf
select kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
 nvl( (1)  ,0)  -nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)  as cnt_nd/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp.kod_mat--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on qube_mat_pp_cld_inf_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt, /*number*/
a.kod_mat as kod_mat_pp/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_dec_a_d.kod_mat = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select a.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a
--\ur_mat_pp
where
a.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on a.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
kod_mat_reminder on a.kod_mat = kod_mat_reminder.kod_mat--\uv_mat_reminders
)
ur_mat
--\ur_mat
 group by
ur_mat.kod_folders/*number*//*key*/
)
ur_mat on ur_mat.kod_folders = a.kod_folders--\
)
a
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="sname" table="kod_podr" type="string" title="Отделение" ColumnVisible="0" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fio" table="kod_emp" type="string" title="Юрист" ColumnVisible="0" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp.fio as fio, /*Юрист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from (select a.kod_folders as kod_folders,a.kod_emp as kod_emp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_emp as kod_emp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on a.kod_emp = kod_emp.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="nump" table="kodp" type="string" title="Код абонента" ColumnVisible="0" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.nump as nump, /*Код абонента*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod" table="vvod" type="string" title="Способ учета задолженности" ClientFontColor="fnt_clr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod.name as vvod, /*Способ учета задолженности*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod on a.vvod = vvod.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_active_x_n" table="a.is_active" type="string" title="Статус папки" text-source-for="is_active" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active/*Статус папки*//*number*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="a" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on a.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="a" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(dat_create 
,dat_finish 
,kod_folders 
) 
 values  
(r.dat_create 
,r.dat_finish 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,d1 
,d2 
,n1 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.dat_create 
,r.dat_finish 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.vvod 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,d1 
,d2 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,s1 
,d3 
,n7 
,n8 
,n9 
,n10 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.dat_create 
,r.dat_finish 
,r.kod_folders 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.vvod 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(dat_create 
,dat_finish 
,kod_folders 
) 
= 
 ( select  
:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="a">
          <columns>
            <column name="ur_pretenz_count" type="number" format="N0" edit-mask="N0" title="Пр." />
            <column name="ur_mat_count" type="number" format="N0" edit-mask="N0" title="Мат." />
            <column name="ur_isp_count" type="number" format="N0" edit-mask="N0" title="Исп." />
            <column name="ur_folders_ndog_ext" type="string" title="Номер договора" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="ur_mat_period_min" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_mat_period_max" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="peni_period_str_full" type="string" title="Период пени" />
            <column name="info_reminder" type="string" title="Напоминание" />
            <column name="ur_pretenz_dat_doc" type="date" title="Дата направления претензии" />
            <column name="ur_pretenz_pio_date_direct" type="date" title="Дата поступления в ПИО" />
            <column name="ur_mat_dat_doc_max" type="date" title="Дата подачи в суд" />
            <column name="ur_mat_num_delo" type="string" title="Номер дела" />
            <column name="ur_mat_type_rassm_name" type="string" title="Порядок рассмотрения" />
            <column name="ur_mat_date_rassm_approx" type="date" title="Срок рассмотрения" />
            <column name="ur_hist_mat_dec_dat_resh" type="date" title="Дата принятия решения" />
            <column name="qube_ur_mat_dat_resh_vld" type="string" invisible-in-column-chooser="1" title="Дата принятия решения" visible="0" />
            <column name="ur_hist_mat_post_name" type="string" title="Судебный акт" />
            <column name="ur_hist_mat_result_name" type="string" title="Результат рассмотрения" />
            <column name="ur_hist_mat_dec_dat_entry" type="date" title="Дата вст. реш. в зак. силу" />
            <column name="ur_isp_dat_doc" type="date" title="Дата выдачи ИД" />
            <column name="ur_dp_pr_sch_gp" type="number" title="Счет на оплату ГП" />
            <column name="ur_dp_pr_sch_peni" type="number" title="Счет на оплату процентов (пени)" />
            <column name="ur_mat_pr_sch_gp_vld" type="string" invisible-in-column-chooser="1" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="ur_mat_pr_sch_peni_vld" type="string" invisible-in-column-chooser="1" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="dat_create" type="date" title="Дата создания папки" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="font_color" type="string" invisible-in-column-chooser="1" title="Цвет текста" visible="0" />
            <column name="sname" type="string" title="Отделение" visible="0" />
            <column name="fio" type="string" title="Юрист" visible="0" />
            <column name="nump" type="string" title="Код абонента" visible="0" />
            <column name="vvod" type="string" title="Способ учета задолженности" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="ur_pretenz_count" type="number" format="N0" edit-mask="N0" title="Пр." />
            <column name="ur_mat_count" type="number" format="N0" edit-mask="N0" title="Мат." />
            <column name="ur_isp_count" type="number" format="N0" edit-mask="N0" title="Исп." />
            <column name="ur_folders_ndog_ext" type="string" title="Номер договора" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="ur_mat_period_min" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_mat_period_max" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="peni_period_str_full" type="string" title="Период пени" />
            <column name="info_reminder" type="string" title="Напоминание" />
            <column name="ur_pretenz_dat_doc" type="date" title="Дата направления претензии" />
            <column name="ur_pretenz_pio_date_direct" type="date" title="Дата поступления в ПИО" />
            <column name="ur_mat_dat_doc_max" type="date" title="Дата подачи в суд" />
            <column name="ur_mat_num_delo" type="string" title="Номер дела" />
            <column name="ur_mat_type_rassm_name" type="string" title="Порядок рассмотрения" />
            <column name="ur_mat_date_rassm_approx" type="date" title="Срок рассмотрения" />
            <column name="ur_hist_mat_dec_dat_resh" type="date" title="Дата принятия решения" />
            <column name="qube_ur_mat_dat_resh_vld" type="string" invisible-in-column-chooser="1" title="Дата принятия решения" visible="0" />
            <column name="ur_hist_mat_post_name" type="string" title="Судебный акт" />
            <column name="ur_hist_mat_result_name" type="string" title="Результат рассмотрения" />
            <column name="ur_hist_mat_dec_dat_entry" type="date" title="Дата вст. реш. в зак. силу" />
            <column name="ur_isp_dat_doc" type="date" title="Дата выдачи ИД" />
            <column name="ur_dp_pr_sch_gp" type="number" title="Счет на оплату ГП" />
            <column name="ur_dp_pr_sch_peni" type="number" title="Счет на оплату процентов (пени)" />
            <column name="ur_mat_pr_sch_gp_vld" type="string" invisible-in-column-chooser="1" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="ur_mat_pr_sch_peni_vld" type="string" invisible-in-column-chooser="1" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="dat_create" type="date" title="Дата создания папки" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="font_color" type="string" invisible-in-column-chooser="1" title="Цвет текста" visible="0" />
            <column name="sname" type="string" title="Отделение" visible="0" />
            <column name="fio" type="string" title="Юрист" visible="0" />
            <column name="nump" type="string" title="Код абонента" visible="0" />
            <column name="vvod" type="string" title="Способ учета задолженности" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select qube.ur_pretenz_count1 as ur_pretenz_count, /*Пр.*//*number*/
qube.ur_mat_count1 as ur_mat_count, /*Мат.*//*number*/
qube.ur_isp_count1 as ur_isp_count, /*Исп.*//*number*/
qube.ur_folders_ndog_ext1 as ur_folders_ndog_ext, /*Номер договора*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
qube.ur_mat_period_min1 as ur_mat_period_min, /*Период задолженности с*//*number*/
qube.ur_mat_period_max1 as ur_mat_period_max, /*Период задолженности по*//*number*/
qube.peni_period_str_full1 as peni_period_str_full, /*Период пени*//*string*/
a.info_reminder as info_reminder, /*Напоминание*//*string*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc, /*Дата направления претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct, /*Дата поступления в ПИО*//*date*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max, /*Дата подачи в суд*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo, /*Номер дела*//*string*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name, /*Порядок рассмотрения*//*string*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx, /*Срок рассмотрения*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата принятия решения*//*date*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld, /*string*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name, /*Результат рассмотрения*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc, /*Дата выдачи ИД*//*date*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp, /*Счет на оплату ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni, /*Счет на оплату процентов (пени)*//*number*/
qube.ur_mat_pr_sch_gp_vld1 as ur_mat_pr_sch_gp_vld, /*string*/
qube.ur_mat_pr_sch_peni_vld1 as ur_mat_pr_sch_peni_vld, /*string*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
a.font_color as font_color, /*Цвет текста*//*string*/
kod_podr.sname as sname, /*Отделение*//*string*/
kod_emp.fio as fio, /*Юрист*//*string*/
kodp.nump as nump, /*Код абонента*//*string*/
vvod.name as vvod, /*Способ учета задолженности*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select ovr1.kod_folders as kod_folders, /*number*/
sum(ovr1.ur_pretenz_count1)  as ur_pretenz_count1, /*Количество претензий в папке*//*number*/
sum(ovr1.ur_mat_count1)  as ur_mat_count1, /*Мат.*//*number*/
sum(ovr1.ur_isp_count1)  as ur_isp_count1, /*Исп.*//*number*/
stragg_dist(ovr1.ur_folders_ndog_ext1)  as ur_folders_ndog_ext1, /*string*/
min(ovr1.ur_mat_period_min1)  as ur_mat_period_min1, /*Оборот*//*number*/
max(ovr1.ur_mat_period_max1)  as ur_mat_period_max1, /*Оборот*//*number*/
max(ovr1.peni_period_str_full1)  as peni_period_str_full1, /*Оборот*//*string*/
min(ovr1.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1, /*Дата направления претензии*//*date*/
min(ovr1.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1, /*Дата поступления в ПИО*//*date*/
max(ovr1.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
stragg(ovr1.ur_mat_num_delo1)  as ur_mat_num_delo1, /*Номер дела*//*string*/
stragg_dist(ovr1.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1, /*Порядок рассмотрения*//*string*/
min(ovr1.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1, /*Срок рассмотрения*//*date*/
max(ovr1.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(ovr1.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1, /*string*/
stragg_dist(ovr1.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
stragg_dist(ovr1.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
max(ovr1.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(ovr1.ur_isp_dat_doc1)  as ur_isp_dat_doc1, /*Дата выдачи ИД*//*date*/
min(ovr1.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1, /*Счет на оплату ГП*//*number*/
min(ovr1.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1, /*Счет на оплату процентов (пени)*//*number*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr2 is null )  and (( nvl( ovr1.expr3 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на ГП' end )  as ur_mat_pr_sch_gp_vld1, /*string*/
max( case  when ((ovr1.expr1 &lt;= ( sysdate ) )  and (ovr1.expr4 is null )  and (( nvl( ovr1.expr5 ,0) )  &gt; 0) )  then '[inf]Реш. вступило в зак. силу, необходимо сформировать счет на проценты(пени)' end )  as ur_mat_pr_sch_peni_vld1, /*string*/
max(ovr1.ur_folders_del_vld1)  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0)  as ur_pretenz_count1, /*Количество претензий в папке*//*number*/
qube.ur_mat_count1 as ur_mat_count1, /*Мат.*//*number*/
qube.ur_isp_count1 as ur_isp_count1, /*Исп.*//*number*/
 case  when (kod_folders.kod_dog is not null )  then qube.ur_folders_ndog1 else qube.kr_dogovor_ndog_active1 end  as ur_folders_ndog_ext1, /*string*/
 nullif(least (  nvl( nullif( qube.ur_dp_ym_min_mat1 ,0), 99999999999999999999999999999999999999)  , nvl(nullif( qube.ur_mat_period_zadol_s_vvod1 ,0), 99999999999999999999999999999999999999)  ), 99999999999999999999999999999999999999)  as ur_mat_period_min1, /*Оборот*//*number*/
 nullif(greatest (  nvl( qube.ur_dp_ym_max_mat1 , -99999999999999999999999999999999999999)  , nvl( qube.ur_mat_period_zadol_po_vvod1 , -99999999999999999999999999999999999999)  ), -99999999999999999999999999999999999999)  as ur_mat_period_max1, /*Оборот*//*number*/
 nvl( ( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  , ( vg_period.ym_enum_str_to_ym_ranges_str( qube.mat_peni_period_ym1 ) )  )  as peni_period_str_full1, /*Оборот*//*string*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата направления претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1, /*Дата поступления в ПИО*//*date*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*Порядок рассмотрения*//*string*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Срок рассмотрения*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи ИД*//*date*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Счет на оплату ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Счет на оплату процентов (пени)*//*number*/
 case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end  as ur_folders_del_vld1, /*Валидация удаления папки*//*string*/
 max( qube.ur_hist_mat_dec_dat_entry2 )  over(  partition by kod_mat.kod_mat )  as expr1, 
 max( qube.ur_dp_pr_sch_gp2 )  over(  partition by kod_mat.kod_mat )  as expr2, 
 sum( qube.ur_hist_mat_dec_gp_otv1 )  over(  partition by kod_mat.kod_mat )  as expr3, 
 max( qube.ur_dp_pr_sch_peni2 )  over(  partition by kod_mat.kod_mat )  as expr4, 
 sum( qube.ur_hist_mat_dec_peni1 )  over(  partition by kod_mat.kod_mat )  as expr5

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_gp2 as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_pr_sch_peni2 as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_folders_ndog1 as ur_folders_ndog1, /*Номер договора*//*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_entry2 as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_isp_count1 as ur_isp_count1, /*number*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1, /*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1, /*number*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*string*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
null as kod_mat, 
qube.kr_dogovor_ndog_active1 as kr_dogovor_ndog_active1, 
qube.mat_peni_period_ym1 as mat_peni_period_ym1, /*Период*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.qube_ur_mat_dat_resh_vld1 as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_dp_pr_sch_gp1, /*number*/
null as ur_dp_pr_sch_gp2, /*number*/
null as ur_dp_pr_sch_peni1, /*number*/
null as ur_dp_pr_sch_peni2, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
qube.ur_folders_ndog1 as ur_folders_ndog1, /*Номер договора*//*string*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_entry2, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_gp_otv1, /*number*/
null as ur_hist_mat_dec_peni1, /*number*/
qube.ur_hist_mat_post_name1 as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
qube.ur_hist_mat_result_name1 as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
qube.ur_isp_count1 as ur_isp_count1, /*number*/
qube.ur_isp_dat_doc1 as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_mat_dat_doc_max1 as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
qube.ur_mat_date_rassm_approx1 as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
qube.ur_mat_num_delo1 as ur_mat_num_delo1, /*Номер дела*//*string*/
qube.ur_mat_period_zadol_po_vvod1 as ur_mat_period_zadol_po_vvod1, /*number*/
qube.ur_mat_period_zadol_s_vvod1 as ur_mat_period_zadol_s_vvod1, /*number*/
qube.ur_mat_type_rassm_name1 as ur_mat_type_rassm_name1, /*string*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1, /*number*/
qube.ur_pretenz_dat_doc1 as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
qube.ur_pretenz_pio_date_direct1 as ur_pretenz_pio_date_direct1/*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
stragg_dist(un.kr_dogovor_ndog_active1)  as kr_dogovor_ndog_active1, 
max(un.qube_ur_mat_dat_resh_vld1)  as qube_ur_mat_dat_resh_vld1, /*string*/
max(un.ur_folders_ndog1)  as ur_folders_ndog1, /*Номер договора*//*string*/
stragg_dist(un.ur_hist_mat_post_name1)  as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
stragg_dist(un.ur_hist_mat_result_name1)  as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
sum(un.ur_isp_count1)  as ur_isp_count1, /*number*/
max(un.ur_isp_dat_doc1)  as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
max(un.ur_mat_dat_doc_max1)  as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
min(un.ur_mat_date_rassm_approx1)  as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
stragg(un.ur_mat_num_delo1)  as ur_mat_num_delo1, /*Номер дела*//*string*/
max(un.ur_mat_period_zadol_po_vvod1)  as ur_mat_period_zadol_po_vvod1, /*number*/
min(un.ur_mat_period_zadol_s_vvod1)  as ur_mat_period_zadol_s_vvod1, /*number*/
stragg_dist(un.ur_mat_type_rassm_name1)  as ur_mat_type_rassm_name1, /*string*/
stragg(un.mat_peni_period_ym1)  as mat_peni_period_ym1, /*Период*//*string*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1, /*number*/
min(un.ur_pretenz_dat_doc1)  as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
min(un.ur_pretenz_pio_date_direct1)  as ur_pretenz_pio_date_direct1, /*date*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
kr_dogovor.ndog_active as kr_dogovor_ndog_active1, 
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_folders as kod_folders/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
 case  when (a.pr_active != 1)  then a.ndog end  as ndog_active

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select qube_ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
qube_ur_mat_a_d.dat_resh_vld as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--qube_ur_mat
select kod_mat_pp.kod_folders as kod_folders, /*number*/
 case  when ((qube.ur_hist_mat_dec_dat_resh1 is null )  and (( sysdate )  &gt; ( add_months( qube.ur_hist_mat_dat_pst_k_rsm1 , 2 ) ) ) )  then '[inf]Не вынесено решение. Прошло более 2-х месяцев с момента принятия к рассмотрению' end  as dat_resh_vld/*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
min(qube.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1/*Дата прин. суд. акта (не решение)*//*date*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dat_pst_k_rsm1 as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
min(un.ur_hist_mat_dat_pst_k_rsm1)  as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
ur_hist_mat_a_d.dat_post_k_rsm as ur_hist_mat_dat_pst_k_rsm1, /*Дата прин. суд. акта (не решение)*//*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp, /*number*/
 case  when (( lower( kod_result.name ) )  like '%к рассмотрению%')  then a.dat_post end  as dat_post_k_rsm/*Дата прин. суд. акта (не решение)*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat_a_d
--\ur_hist_mat
)
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
)
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dat_pst_k_rsm1, /*date*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
)
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_ur_mat_a_d
--\qube_ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on qube_ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
a.ndog as ur_folders_ndog1, /*Номер договора*//*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_dog.ndog as ndog/*Номер договора*//*string*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on a.kod_dog = kod_dog.kod_dog--\kr_dogovor
)
a
--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select a.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
ur_hist_mat_a_d.post_name as ur_hist_mat_post_name1, /*Судебный акт*//*string*/
ur_hist_mat_a_d.result_name as ur_hist_mat_result_name1, /*Результат рассмотрения*//*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
result_kod_post.name as post_name, /*Судебный акт*//*string*/
kod_result.name as result_name/*Результат рассмотрения*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post on kod_result.kod_post = result_kod_post.kod_post--\us_post
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_hist_mat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat1_a_d1.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
ur_isp_a_d.cnt as ur_isp_count1, /*number*/
ur_isp_a_d.dat_doc as ur_isp_dat_doc1, /*Дата выдачи исп. листа*//*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_isp_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
ur_mat_a_d.dat_doc as ur_mat_dat_doc_max1, /*Дата подачи в суд*//*date*/
ur_mat_a_d.date_rassm_approx as ur_mat_date_rassm_approx1, /*Примерный срок рассмотрения*//*date*/
ur_mat_a_d.num_delo as ur_mat_num_delo1, /*Номер дела*//*string*/
ur_mat_a_d.period_zadol_po_vvod as ur_mat_period_zadol_po_vvod1, /*number*/
ur_mat_a_d.period_zadol_s_vvod as ur_mat_period_zadol_s_vvod1, /*number*/
ur_mat_a_d.type_rassm_name as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.period_zadol_s_vvod as period_zadol_s_vvod, /*number*/
a.period_zadol_po_vvod as period_zadol_po_vvod, /*number*/
1 as cnt, /*number*/
 case  when ((( nvl( a.type_rassm , 2 ) )  = 1)  and (a.dat_doc is not null ) )  then (( add_months( a.dat_doc , 2 ) )  + ( 7 ) )  when ((a.type_rassm = 3)  and (a.dat_prin is not null ) )  then (a.dat_prin + ( 15 ) )  end  as date_rassm_approx, /*Примерный срок рассмотрения*//*date*/
type_rassm.name as type_rassm_name/*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--vr_type_rassm
select u.kod_type_rassm as kod_type_rassm, /*number*//*key*/
u.name as name/*string*/

from (
(
(
--
select 1 as kod_type_rassm, /*number*//*key*/
'Упрощенное производство' as name/*string*/

from dual

--\dual
)
--\
union all
(
--
select 2, /*number*//*key*/
'Общий порядок'/*string*/

from dual

--\dual
)
--\
union all
(
--
select 3, /*number*//*key*/
'Приказное производство'/*string*/

from dual

--\dual
)
--\
)
--\
)
u
--\
)
type_rassm on type_rassm.kod_type_rassm = a.type_rassm--\vr_type_rassm
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
ur_mat_peni_period_a_d.name as mat_peni_period_ym1, /*Период*//*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_mat_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_mat_peni_period
a
--\ur_mat_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_mat_peni_period_a_d
--\ur_mat_peni_period
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d on ur_mat_peni_period_a_d.kod_mat = kod_mat_a_d.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pret_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1, /*number*/
ur_pretenz_a_d.dat_doc as ur_pretenz_dat_doc1, /*Дата претензии*//*date*/
ur_pretenz_a_d.pio_date as ur_pretenz_pio_date_direct1, /*date*/
null as peni_period_ym1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_doc as dat_doc, /*Дата претензии*//*date*/
a.pio_date as pio_date, /*date*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_pretenz_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
null as kr_dogovor_ndog_active1, /**/
null as qube_ur_mat_dat_resh_vld1, /*string*/
null as ur_folders_ndog1, /*string*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as mat_peni_period_ym1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1, /*date*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d1 on kod_sf_a_d1.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d1 on ur_dogplat_a_d1.kod_sf = kod_sf_a_d1.kod_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_dogplat_a_d1.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_a_d1.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
null as kr_dogovor_ndog_active1, /**/
null as mat_peni_period_ym1, /*string*/
null as peni_period_ym1, /*string*/
null as qube_ur_mat_dat_resh_vld1, /*string*/
qube.ur_dp_pr_sch_gp1 as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_gp2 as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
qube.ur_dp_pr_sch_peni1 as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_pr_sch_peni2 as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_folders_ndog1, /*string*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_entry2 as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_gp_otv1 as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_dec_peni1 as ur_hist_mat_dec_peni1, /*% за польз. чуж. ден. ср.*//*number*/
null as ur_hist_mat_post_name1, /*string*/
null as ur_hist_mat_result_name1, /*string*/
null as ur_isp_count1, /*number*/
null as ur_isp_dat_doc1, /*date*/
null as ur_mat_count1, /*number*/
null as ur_mat_dat_doc_max1, /*date*/
null as ur_mat_date_rassm_approx1, /*date*/
null as ur_mat_num_delo1, /*string*/
null as ur_mat_period_zadol_po_vvod1, /*number*/
null as ur_mat_period_zadol_s_vvod1, /*number*/
null as ur_mat_type_rassm_name1, /*string*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1, /*number*/
null as ur_pretenz_dat_doc1, /*date*/
null as ur_pretenz_pio_date_direct1/*date*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
min(un.ur_dp_pr_sch_gp1)  as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
min(un.ur_dp_pr_sch_gp2)  as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
min(un.ur_dp_pr_sch_peni1)  as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
min(un.ur_dp_pr_sch_peni2)  as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_entry2)  as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(un.ur_hist_mat_dec_gp_otv1)  as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_dec_peni1)  as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_dogplat_a_d.kod_mat as kod_mat, /*number*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp1, /*Признак наличия счета на ГП*//*number*/
ur_dogplat_a_d.pr_sch_gp as ur_dp_pr_sch_gp2, /*Признак наличия счета на ГП*//*number*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni1, /*Признак наличия счета на проценты(пени)*//*number*/
ur_dogplat_a_d.pr_sch_peni as ur_dp_pr_sch_peni2, /*Признак наличия счета на проценты(пени)*//*number*/
ur_dogplat_a_d.ym_max_mat as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
ur_dogplat_a_d.ym_min_mat as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_entry2, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_gp_otv1, /*number*/
null as ur_hist_mat_dec_peni1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
 case  when (a.vid_real = 9)  then 1 end  as pr_sch_gp, /*Признак наличия счета на ГП*//*number*/
 case  when ((a.vid_real = 7) )  then 1 end  as pr_sch_peni, /*Признак наличия счета на проценты(пени)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat, /*Период начисления с (для материалов дела)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on ur_dogplat_a_d.kod_folders = a.kod_folders--\ur_folders
where
a.kod_folders is not null )
--\
union all
(
--
select kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
kod_hist_mat_a_d.kod_mat as kod_mat, /*number*/
null as ur_dp_pr_sch_gp1, /*number*/
null as ur_dp_pr_sch_gp2, /*number*/
null as ur_dp_pr_sch_peni1, /*number*/
null as ur_dp_pr_sch_peni2, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry2, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.gp_otv as ur_hist_mat_dec_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec_a_d.peni as ur_hist_mat_dec_peni1/*% за польз. чуж. ден. ср.*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.peni as peni, /*% за польз. чуж. ден. ср.*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
a on kod_mat_pp_a_d.kod_folders = a.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat_a_d on ur_hist_mat_dec_a_d.kod_hist_mat = kod_hist_mat_a_d.kod_hist_mat--\ur_hist_mat
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_mat.kod_mat = qube.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_dog as kod_dog  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n15 as kod_dog  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
)
ovr1
--\
 group by
ovr1.kod_folders/*number*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.vvod as vvod, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
 case  when (ur_mat.mat_reminder1 is not null )  then '102,51,99' when (ur_mat.mat_reminder2 is not null )  then '139,0,0' end  as font_color, /*Цвет текста*//*string*/
ur_mat.mat_reminder1 || ur_mat.mat_reminder2 as info_reminder, /*Напоминание*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.dat_create as dat_create,a.vvod as vvod,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.d1 as dat_create,t.n10 as vvod,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.dat_create as dat_create,a.vvod as vvod,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.d1 as dat_create,t.n10 as vvod,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--
select ur_mat.kod_folders as kod_folders, /*number*//*key*/
max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--uv_mat_reminders
select a.kod_mat as kod_mat, /*number*/
 case  when ((a.dat_doc &lt; ( add_months( sysdate , -1 ) ) )  and (( nvl( qube.ur_hist_mat_count1 ,0) )  = 0) )  then 'История не заполнена. ' end  as mat_reminder1, /*Напоминание 1*//*string*/
 case  when (( nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)!=0 )  and (qube.ur_hist_mat_dec_dat_entry1 is null )  and (qube.ur_hist_mat_dec_dat_resh1 &lt; (sysdate - 40) )  and (( nvl( qube.qube_mat_pp_cld_inf_cnt_nd1 , 0 ) )  = 0) )  then 'Не введена дата вступления решения в законную силу. ' end  as mat_reminder2/*Напоминание 2*//*string*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--qube_mat_pp_cld_inf
select kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
 nvl( (1)  ,0)  -nvl( qube.ur_hist_mat_dec_pr_resh1 ,0)  as cnt_nd/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--
select un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
(
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp.kod_mat--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
union all
(
--
select kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp
--\ur_mat_pp
where
kod_mat_pp.kod_parent is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_parent as kod_parent, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp on kod_mat_pp.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on qube_mat_pp_cld_inf_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt, /*number*/
a.kod_mat as kod_mat_pp/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_a_d.kod_mat_pp = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
 case  when (kod_result.kod_post = 2)  then 1 else 0 end  as pr_resh/*Судебный акт - решение*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on ur_hist_mat_dec_a_d.kod_mat = a.kod_mat--\ur_mat_pp
where
a.kod_mat is not null )
--\
union all
(
--
select a.kod_mat as kod_mat_pp, /*number*//*key*/
null as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_dec_dat_entry1, /*date*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_pr_resh1/*number*/

from (
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a
--\ur_mat_pp
where
a.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat_pp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat_pp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
a on a.kod_mat = qube.kod_mat_pp--\ur_mat_pp
)
kod_mat_reminder on a.kod_mat = kod_mat_reminder.kod_mat--\uv_mat_reminders
)
ur_mat
--\ur_mat
 group by
ur_mat.kod_folders/*number*//*key*/
)
ur_mat on ur_mat.kod_folders = a.kod_folders--\
)
a on a.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on a.kod_emp = kod_emp.kod_emp--\kr_employee
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod on a.vvod = vvod.kod--\ur_folders_vvod
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>