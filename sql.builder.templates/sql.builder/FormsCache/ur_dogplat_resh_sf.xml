<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_dogplat_resh_sf" title="Ввод признаных сумм" show-toolbar="1" with-behavior="0" timestamp="28.12.2023 14:44:22" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms.xml" elid="198" ord="198" leaf="0" lvl="2" pelid="">
    <field table="ur_hist_mat" name="kod_result" title="Результат рассмотрения" controlType="UICombo" rows-limit="0" id="55128159" />
    <field table="ur_hist_mat" name="dat_post" title="Дата прин. суд. акта" controlType="UIDate" rows-limit="100" id="54962698" />
    <grid table="ur_dogplat" show-toolbar="1" id="13606566">
      <toolbar id="50221722">
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="364" ord="364" leaf="1" lvl="2" pelid="" title="" id="39831965" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="30719394" />
        <uicommand button-type="grid-refresh" column-visible="0" name="grid-refresh" control-name="ButtonRefresh" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="366" ord="366" leaf="1" lvl="2" pelid="" title="" id="17515197" />
        <uicommand button-type="grid-delete" column-visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="367" ord="367" leaf="1" lvl="2" pelid="" title="" id="55890228" />
        <uicommand object="ur_dogplat" name="set_sum_v" title="Признан полностью" id="28017732" />
        <uicommand title="Сохранить и закрыть" action-type="save-and-close" id="8544809" />
      </toolbar>
      <columns id="14184982">
        <field table="ur_dogplat" name="kod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="44505570" />
        <field table="ur_dogplat" name="kod_sdp" title="" controlType="UICombo" rows-limit="100" id="59441406" />
        <field table="ur_dogplat" name="kod_sf" title="" controlType="UICombo" rows-limit="100" id="4057885" />
        <field table="ur_dogplat" name="num_sf" title="Номер документа начисления" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="57202924" />
        <field table="ur_dogplat" name="dat_sf" title="Дата документа начисления" controlType="UIDate" rows-limit="100" id="24395690" />
        <field table="ur_dogplat" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="25478649" />
        <field table="ur_dogplat" name="summa" title="Выставленно по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="31478300" />
        <field table="ur_dogplat" name="ur_opl_do_resh" title="Оплата до вынес. реш. суда" controlType="UIText" edit-mask="N2" rows-limit="100" id="40171251" />
        <field table="ur_dogplat" name="sum_v" title="Признано по юр. документу" controlType="UIText" edit-mask="N2" rows-limit="100" id="34813741" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="p_kod" type="number">
      <const>74</const>
    </param>
    <param name="p_kod_sdp" type="number">
      <const>4</const>
    </param>
    <param name="kod_hist_mat" type="number" />
  </params>
  <dataset>
    <params>
      <param name="p_kod" type="number">
        <const>74</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const>4</const>
      </param>
      <param name="kod_hist_mat" type="number" />
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_dogplat_has_changes" parname="ur_dogplat_has_changes" />
      <field type="string" name="ur_hist_mat_has_changes" parname="ur_hist_mat_has_changes" />
    </fields>
    <table name="ur_dogplat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.kod_sf as kod_sf, /*number*/
kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
ur_dogplat.vid_real as vid_real, /*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
qube.ur_opl_do_resh1 as ur_opl_do_resh, /*Оплата до вынес. реш. суда*//*number*/
ur_dogplat.sum_v as sum_v, /*Признано по юр. документу*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( kod_hist_mat_dec.dat_post ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_do_resh1/*Оплата до вынес. реш. суда*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat
--\ur_dogplat
where
(ur_dogplat.kod = :p_kod )  and (ur_dogplat.kod_sdp = :p_kod_sdp )  and (ur_dogplat.kod_dogplat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_sf as kod_sf, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on ur_dogplat.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</select-text>
      <columns>
        <column name="kod" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod" is-updateable="1" is-updateable-ext="1" update-target="kod" temp-col-name="n2" />
        <column name="kod_sdp" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod_sdp" is-updateable="1" is-updateable-ext="1" update-target="kod_sdp" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_sdp_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="kod_sf" table="ur_dogplat" type="number" title="" ColumnVisible="0" ClientDefault="p_kod_sdp" is-updateable="1" is-updateable-ext="1" update-target="kod_sf" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on ur_dogplat.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="num_sf" table="ur_dogplat" />
            <dependant name="dat_sf" table="ur_dogplat" />
            <dependant name="kod_sf_x_n" table="ur_dogplat" />
            <dependant name="is_doc" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="num_sf" table="kod_sf" type="number" title="Номер документа начисления" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on ur_dogplat.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_sf" table="kod_sf" type="date" title="Дата документа начисления" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on ur_dogplat.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real" table="ur_dogplat" type="number" title="Вид реализации" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vid_real" temp-col-name="n6">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_real" as="vid_real" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_real" into="n1">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид реализации" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select>
                <from>
from <query name="sk_vid_real" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_real">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид реализации" comment="полное наименование- уже не печатается в назначение платежа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" type="string" title="Вид реализации(аббр)" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" used="1">sk_vid_real
a
--\sk_vid_real
</table></from>)
a
--\sk_vid_real
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> ) like lower( </text><const><text>:vid_real_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид реализации" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_real_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_real" as="vid_real" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид реализации" />
                    <column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" />
                  </select>
                  <from>
                    <query name="sk_vid_real" as="a" title="Вид реализации" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="vid_real_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_real_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_real_filter" type="string">
                  <const>:vid_real_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="vid_real_x_n" table="ur_dogplat" />
          </dependants>
        </column>
        <column name="summa" table="ur_dogplat" type="number" title="Выставленно по юр. документу" EditableInvert="1" Editable="is_doc" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="summa" temp-col-name="n7" />
        <column name="ur_opl_do_resh" table="ur_dogplat" type="number" title="Оплата до вынес. реш. суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_resh1 as ur_opl_do_resh, /*Оплата до вынес. реш. суда*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_do_resh1/*Оплата до вынес. реш. суда*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_mpv_1 on kod_hist_mat_dec_mpv_1.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on ( coalesce( kod_hist_mat_dec.kod_hist_mat , kod_hist_mat_dec_mpv_1.kod_hist_mat ) )  = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="sum_v" table="ur_dogplat" type="number" title="Признано по юр. документу" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sum_v" temp-col-name="n9" />
        <column name="kod_sdp_x_n" table="ur_dogplat.kod_sdp" type="string" title="" text-source-for="kod_sdp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sdp as kod_sdp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n3 as kod_sdp  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sf_x_n" table="ur_dogplat.kod_sf" type="number" title="" text-source-for="kod_sf" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="ur_dogplat.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.vid_real as vid_real  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n6 as vid_real  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_doc" table="ur_dogplat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_deb as kod_deb,a.kod_izv as kod_izv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n8 as kod_deb,t.n10 as kod_izv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_dogplat" type="number" title="" is-user-editable="1" />
        <column name="kod_dogplat" table="ur_dogplat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod 
,kod_sdp 
,kod_sf 
,vid_real 
,summa 
,sum_v 
,kod_dogplat 
) 
 values  
(r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_dogplat' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n3 
,n4 
,n6 
,n7 
,n9 
,n1 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
); 
end loop; 
else 
for r in  
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
,a.kod_deb 
,a.dat_form 
,a.u_m 
,a.d_m 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.ym 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n3 
,n4 
,n6 
,n7 
,n9 
,n1 
,n8 
,d1 
,s1 
,d2 
,n10 
,d3 
,n11 
,n12 
,n5 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('ur_dogplat' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod 
,r.kod_sdp 
,r.kod_sf 
,r.vid_real 
,r.summa 
,r.sum_v 
,r.kod_dogplat 
,r.kod_deb 
,r.dat_form 
,r.u_m 
,r.d_m 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.ym 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_dogplat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod 
,kod_sdp 
,kod_sf 
,vid_real 
,summa 
,sum_v 
,kod_dogplat 
) 
= 
 ( select  
:kod as kod 
,:kod_sdp as kod_sdp 
,:kod_sf as kod_sf 
,:vid_real as vid_real 
,:summa as summa 
,:sum_v as sum_v 
,:kod_dogplat as kod_dogplat 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="ur_dogplat">
          <columns>
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="ur_opl_do_resh" type="number" title="Оплата до вынес. реш. суда" />
            <column name="sum_v" type="number" title="Признано по юр. документу" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="kod_sf_x_n" type="number" title="" visible="0" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod" type="number" title="" visible="0" />
            <column name="kod_sdp_x_n" type="string" title="" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf_x_n" type="number" title="" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="summa" type="number" title="Выставленно по юр. документу" />
            <column name="ur_opl_do_resh" type="number" title="Оплата до вынес. реш. суда" />
            <column name="sum_v" type="number" title="Признано по юр. документу" />
            <column name="is_doc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_dogplat.kod as kod, /*number*/
ur_dogplat.kod_sdp as kod_sdp, /*number*/
ur_dogplat.kod_sf as kod_sf, /*number*/
kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
ur_dogplat.vid_real as vid_real, /*number*/
ur_dogplat.summa as summa, /*Выставленно по юр. документу*//*number*/
qube.ur_opl_do_resh1 as ur_opl_do_resh, /*Оплата до вынес. реш. суда*//*number*/
ur_dogplat.sum_v as sum_v, /*Признано по юр. документу*//*number*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
kod_sf_x_n.num_sf as kod_sf_x_n, /*Номер документа начисления*//*number*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
ur_dogplat.is_doc as is_doc, /*number*/
ur_dogplat.is_new as is_new, /*number*/
ur_dogplat.is_not_new as is_not_new, /*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_do_resh1/*Оплата до вынес. реш. суда*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_mpv_1 on kod_hist_mat_dec_mpv_1.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on ( coalesce( kod_hist_mat_dec.kod_hist_mat , kod_hist_mat_dec_mpv_1.kod_hist_mat ) )  = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod as kod, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_sf as kod_sf, /*number*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.vid_real as vid_real, /**//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 coalesce( a.kod_sf , a.kod_deb , a.kod_izv )  as is_doc, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.kod_sf as kod_sf,a.summa as summa,a.vid_real as vid_real,a.sum_v as sum_v,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.n4 as kod_sf,t.n7 as summa,t.n6 as vid_real,t.n9 as sum_v,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod as kod,a.kod_sdp as kod_sdp,a.kod_sf as kod_sf,a.summa as summa,a.vid_real as vid_real,a.sum_v as sum_v,a.kod_deb as kod_deb,a.kod_izv as kod_izv,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n2 as kod,t.n3 as kod_sdp,t.n4 as kod_sf,t.n7 as summa,t.n6 as vid_real,t.n9 as sum_v,t.n8 as kod_deb,t.n10 as kod_izv,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on ur_dogplat.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_x_n on ur_dogplat.kod_sf = kod_sf_x_n.kod_sf--\sr_facvip
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on ur_dogplat.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on ur_dogplat.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_hist_mat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_hist_mat" key="kod_hist_mat" is-ms-upd="1" is-top="1" key-dimension="kod_hist_mat">
      <select-text>
--
select ur_hist_mat.kod_result as kod_result, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat
--\ur_hist_mat
where
(ur_hist_mat.kod_hist_mat = :kod_hist_mat )  and (ur_hist_mat.kod_hist_mat is not null ) )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
(ur_hist_mat.kod_hist_mat = :kod_hist_mat )  and (ur_hist_mat.kod_hist_mat is not null )  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result.kod_post as result_kod_post, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
--\
</select-text>
      <columns>
        <column name="kod_result" table="ur_hist_mat" type="number" title="Результат рассмотрения" is-user-editable="1" ColumnMandatory="1" Valid="qube.kod_result_vld" is-updateable="1" is-updateable-ext="1" update-target="kod_result" temp-col-name="n1">
          <sel-list-compiled>
            <root>
              <query name="us_result_list" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_result.xml" haskeys="1" noname="1" path="." used="1">
                <select>--us_result_list
select <column table="a" column="kod_result" as="kod_result" key="1" fixed="1" used="1" type="number" sourcetable="./a" sourcecolumn="kod_result" into="n1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="name" title="Результат рассмотрения" as="name" key="0" used="1" type="string" sourcetable="./a" sourcecolumn="name" into="s1">a.name as name/*Результат рассмотрения*//*string*/
</column></select>
                <from>
from <query name="us_result" as="a" path="./a" haskeys="1" used="1">(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="name" type="string" title="Результат рассмотрения" vid="1" as="name" key="0" sourcetable="./a" sourcecolumn="name" used="1">a.name as name/*Результат рассмотрения*//*string*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from>)
a
--\us_result
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="=" pth="" optional="1" type="bool">(<column table="a" column="kod_post">a.kod_post</column><text txtype="func"> = </text><const><text>:kod_post </text></const>) </call><text txtype="func"> } </text></call></where>--\us_result_list
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="us_result_list" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_result.xml" elid="2646" ord="2646" leaf="0" lvl="2" pelid="" haskeys="1">
              <queries>
                <query name="us_result_list" as="a">
                  <withparams>
                    <useparam name="kod_post" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_post" type="number" column="result_kod_post">
                  <const>:kod_post </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="kod_post" type="number" column="result_kod_post" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_dogplat">
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_resh1 as ur_opl_do_resh, /*Оплата до вынес. реш. суда*//*number*/
ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
sum( case  when (kod_opl.dat_uch &lt; ( nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  ,  DATE'8999-12-31'  ) ) )  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( ( coalesce( kod_hist_mat_dec.dat_post , kod_hist_mat_dec_mpv_1.dat_post ) )  , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  as ur_opl_do_resh1/*Оплата до вынес. реш. суда*//*number*/

from (
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_mat as kod_mat,a.kod_deb_sf as kod_deb_sf  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n18 as kod_mat,t.n26 as kod_deb_sf  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
where
ur_dogplat.kod_dogplat is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
ur_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat/*number*//*key*/

from (
(
(
--
select ur_dogplat.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat
--\ur_dogplat
where
ur_dogplat.kod_dogplat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_mpv_1 on kod_hist_mat_dec_mpv_1.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on ( coalesce( kod_hist_mat_dec.kod_hist_mat , kod_hist_mat_dec_mpv_1.kod_hist_mat ) )  = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from (select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.dat_form as dat_form,a.prizn_konv as prizn_konv  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.d1 as dat_form,t.n14 as prizn_konv  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_dogplat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat/*number*//*key*/

from (select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat  from rr_temp t where t.skod ='ur_dogplat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
ur_dogplat on ur_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
kod_result.kod_post as result_kod_post/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_opl_do_resh" table="ur_dogplat" />
            <dependant name="kod_result_x_n" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
            <dependant name="result_kod_post" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="dat_post" table="ur_hist_mat" type="date" title="Дата прин. суд. акта" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_post" temp-col-name="d1" />
        <column name="kod_result_x_n" table="ur_hist_mat.kod_result" type="string" title="Результат рассмотрения" text-source-for="kod_result" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_result_vld" table="ur_hist_mat" type="string" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="result_kod_post" table="ur_hist_mat" type="number" title="Судебный акт" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="kod_hist_mat" table="ur_hist_mat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_hist_mat" temp-col-name="n2" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_result as kod_result 
,:dat_post as dat_post 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into ur_hist_mat 
(kod_result 
,dat_post 
,kod_hist_mat 
) 
 values  
(r.kod_result 
,r.dat_post 
,r.kod_hist_mat 
) 
 returning  
kod_hist_mat into :kod_hist_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_hist_mat where kod_hist_mat=:kod_hist_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_hist_mat' 
and 
names=:form_id 
and 
f2=:kod_hist_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_result as kod_result 
,:dat_post as dat_post 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,n2 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_result 
,r.dat_post 
,r.kod_hist_mat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_result as kod_result 
,:dat_post as dat_post 
,:kod_hist_mat as kod_hist_mat 
,a.kod_mat 
,a.dat_rassm 
,a.gp_es 
,a.prim 
,a.u_m 
,a.d_m 
,a.kod_zased 
,a.gp_otv 
,a.ukaz 
,a.kod_stage 
,a.kod_busin 
,a.dat_mor 
,a.kod_hist_mat_new 
,a.sud_izd 
,a.astrent 
,a.dat_vz 
,a.proc 
,a.kodp 
,a.opl_peni 
,a.opl_proc 
,a.opl_astrent 
,a.opl_osnreal 
,a.opl_gpotv 
,a.ogr 
,a.data_prinyat 
,a.snum_z 
,a.fio_court 
,a.kod_post 
,a.osnreal 
,a.shtraf 
,a.peni 
,a.manual_sums 
,a.gp_ret 
,a.opl_ogr 
,a.dat_entry 
,a.dat_srok 
,a.proc_calc 
,a.kod_vid_proc 
,a.proc_const 
,a.opl_sud_izd 
,a.kod_scan 
,a.dat_mor_out 
,a.dat_send_il 
,a.opl_ogr_dat 
,a.opl_sud_izd_dat 
,a.dat_send_zv 
,a.dat_receipt_post 
,a.dat_send_petition_il 
,a.gosposhlina 
,a.dat_um_mor_dolg 
,a.sum_um_mor_dolg 
,a.kod_osn_um_mor_dolg 
,a.comment_um_mor_dolg 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
 
from ur_hist_mat a  where kod_hist_mat=:kod_hist_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,n2 
,n3 
,d2 
,n4 
,s1 
,s2 
,d3 
,n5 
,n6 
,s3 
,n7 
,n8 
,d4 
,n9 
,n10 
,n11 
,d5 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,d6 
,s4 
,s5 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
,d7 
,d8 
,n27 
,n28 
,n29 
,n30 
,n31 
,d9 
,d10 
,d11 
,d12 
,d13 
,d14 
,d15 
,n32 
,d16 
,n33 
,n34 
,s6 
,n35 
,n36 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_result 
,r.dat_post 
,r.kod_hist_mat 
,r.kod_mat 
,r.dat_rassm 
,r.gp_es 
,r.prim 
,r.u_m 
,r.d_m 
,r.kod_zased 
,r.gp_otv 
,r.ukaz 
,r.kod_stage 
,r.kod_busin 
,r.dat_mor 
,r.kod_hist_mat_new 
,r.sud_izd 
,r.astrent 
,r.dat_vz 
,r.proc 
,r.kodp 
,r.opl_peni 
,r.opl_proc 
,r.opl_astrent 
,r.opl_osnreal 
,r.opl_gpotv 
,r.ogr 
,r.data_prinyat 
,r.snum_z 
,r.fio_court 
,r.kod_post 
,r.osnreal 
,r.shtraf 
,r.peni 
,r.manual_sums 
,r.gp_ret 
,r.opl_ogr 
,r.dat_entry 
,r.dat_srok 
,r.proc_calc 
,r.kod_vid_proc 
,r.proc_const 
,r.opl_sud_izd 
,r.kod_scan 
,r.dat_mor_out 
,r.dat_send_il 
,r.opl_ogr_dat 
,r.opl_sud_izd_dat 
,r.dat_send_zv 
,r.dat_receipt_post 
,r.dat_send_petition_il 
,r.gosposhlina 
,r.dat_um_mor_dolg 
,r.sum_um_mor_dolg 
,r.kod_osn_um_mor_dolg 
,r.comment_um_mor_dolg 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_hist_mat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_hist_mat set  
(kod_result 
,dat_post 
,kod_hist_mat 
) 
= 
 ( select  
:kod_result as kod_result 
,:dat_post as dat_post 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
where 
kod_hist_mat=:kod_hist_mat 
;
end;
</update-text>
      <scheme>
        <table name="ur_hist_mat" as="ur_hist_mat">
          <columns>
            <column name="kod_result" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_post" type="date" title="Дата прин. суд. акта" />
            <column name="kod_result_x_n" type="string" title="Результат рассмотрения" />
            <column name="kod_result_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="result_kod_post" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_hist_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_hist_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_hist_mat.kod_result as kod_result, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
kod_result.kod_post as result_kod_post, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.dat_post as dat_post,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.d1 as dat_post,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,a.dat_post as dat_post,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.d1 as dat_post,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>