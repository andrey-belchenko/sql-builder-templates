<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="vr_kor_saldo" title="Корректировка сальдо" timestamp="28.12.2023 14:57:12" is-report="1" folder="rep_avans" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\forms\vr_kor_saldo.xml" elid="286" ord="286" leaf="0" lvl="2" pelid="">
    <grid table="vr_kor_saldo" show-toolbar="1" id="61617235">
      <columns id="29019098">
        <field table="vr_kor_saldo" name="kod_dog" title="Договор" width="208" controlType="UICombo" rows-limit="100" id="23927954" />
        <field table="vr_kor_saldo" name="dep" title="Отделение" controlType="UICombo" rows-limit="100" id="63775222" />
        <field table="vr_kor_saldo" name="dat_otch" title="Дата отчета" controlType="UIDate" rows-limit="100" id="34670748" />
        <field table="vr_kor_saldo" name="dat_vozn" title="Дата возникновения" controlType="UIDate" rows-limit="100" id="66483982" />
        <field table="vr_kor_saldo" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="4882557" />
        <field table="vr_kor_saldo" name="val" title="Значение" controlType="UIText" format="{0:C2}" edit-mask="{0:C2}" rows-limit="100" id="2294361" />
        <field table="vr_kor_saldo" name="u_m" title="Пользователь" width="237" controlType="UIText" rows-limit="100" id="57278226" />
        <field table="vr_kor_saldo" name="d_m" title="Дата редактирования" controlType="UIDate" rows-limit="100" id="56790552" />
      </columns>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="vr_kor_saldo_has_changes" parname="vr_kor_saldo_has_changes" />
    </fields>
    <table name="vr_kor_saldo" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_kor_saldo" key="kod_kor_saldo" is-ms-upd="1" is-top="1">
      <select-text>
--
select vr_kor_saldo.kod_dog as kod_dog, /*Договор*//*number*/
kod_dog.dep as dep, /*number*/
vr_kor_saldo.dat_otch as dat_otch, /*Дата отчета*//*date*/
vr_kor_saldo.dat_vozn as dat_vozn, /*Дата возникновения*//*date*/
vr_kor_saldo.vid_real as vid_real, /*Вид реализации*//*number*/
vr_kor_saldo.val as val, /*Значение*//*number*/
vr_kor_saldo.u_m as u_m, /*Пользователь*//*string*/
vr_kor_saldo.d_m as d_m, /*Дата редактирования*//*date*/
kod_dog_x_n.name as kod_dog_x_n, /*Договор*//*string*/
dep_x_n.name as dep_x_n, /*Отделение*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_kor_saldo.is_new as is_new, /*number*/
vr_kor_saldo.is_not_new as is_not_new, /*number*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog, /*Договор*//*number*/
a.dat_otch as dat_otch, /*Дата отчета*//*date*/
a.dat_vozn as dat_vozn, /*Дата возникновения*//*date*/
a.val as val, /*Значение*//*number*/
a.u_m as u_m, /*Пользователь*//*string*/
a.d_m as d_m, /*Дата редактирования*//*date*/
a.vid_real as vid_real, /*Вид реализации*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_kor_saldo
a
--\vr_kor_saldo
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on vr_kor_saldo.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_x_n on vr_kor_saldo.kod_dog = kod_dog_x_n.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.dep as dep/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on vr_kor_saldo.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on kod_dog.dep = dep_x_n.kodp--\kr_org
where
( 1=1 )  {  and (kod_dog.dep in :glbl_dep)  } --\
</select-text>
      <columns>
        <column name="kod_dog" table="vr_kor_saldo" type="number" title="Договор" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dog" temp-col-name="n1">
          <sel-list-compiled>
            <root>
              <query class="1" timestamp="25.03.2016 12:13:38" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_dogovor.xml" elid="2287" ord="2287" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_dog" as="kod_dog" title="" key="1" used="1" type="number" agg="max" sourcetable="./a/a/a" sourcecolumn="kod_dog" into="n1">a.kod_dog as kod_dog, /**//*number*//*key*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="stragg_dist" sourcetable="./a/a/a" sourcecolumn="ndog" into="s1">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="dep_name" as="dep_name" title="Отделение" key="0" used="1" type="string" sourcetable="./a/a/dep" sourcecolumn="name" into="s2">a.dep_name as dep_name, /*Отделение*//*string*/
</column><column table="a" column="nump" as="nump" title="Код абонента" key="0" used="1" type="string" sourcetable="./a/a/kodp" sourcecolumn="nump" into="s3">a.nump as nump, /*Код абонента*//*string*/
</column><column table="a" column="payer_name" as="payer_name" title="Наименование абонента" key="0" used="1" type="string" agg="list" sourcetable="./a/a/kodp" sourcecolumn="name" into="s4">a.payer_name as payer_name/*Наименование абонента*//*string*/
</column></select>
                <from>
from <query name="kr_dogovor_list_cur_dep" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kr_dogovor_list_cur_dep
select <column table="a" column="kod_dog" as="kod_dog" key="1" fixed="1" used="1" type="number" agg="max" sourcetable="./a/a/a" sourcecolumn="kod_dog">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" as="ndog" key="0" used="1" type="string" title="Номер договора" agg="stragg_dist" sourcetable="./a/a/a" sourcecolumn="ndog">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="dep" column="name" as="dep_name" title="Отделение" key="0" used="1" type="string" sourcetable="./a/a/dep" sourcecolumn="name">dep.name as dep_name, /*Отделение*//*string*/
</column><column table="kodp" column="nump" as="nump" key="0" used="1" type="string" title="Код абонента" sourcetable="./a/a/kodp" sourcecolumn="nump">kodp.nump as nump, /*Код абонента*//*string*/
</column><column table="kodp" column="name" as="payer_name" key="0" used="1" type="string" title="Наименование абонента" agg="list" sourcetable="./a/a/kodp" sourcecolumn="name">kodp.name as payer_name/*Наименование абонента*//*string*/
</column></select><from>
from <query name="kr_dogovor" as="a" path="./a/a/a" haskeys="1" used="1">(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/a" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (для договоров услуг - сторона1 - кому платят )" vid="1" as="kodp" reference="kr_payer" refcol="kodp" key="0" sourcetable="./a/a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/a" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="dep" type="number" title="" vid="1" as="dep" key="0" sourcetable="./a/a/a" sourcecolumn="dep" used="1">a.dep as dep/**//*number*/
</column></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from>)
a
--\kr_dogovor
</query><query name="kr_org" as="dep" join="left outer" path="./a/a/dep" haskeys="1" used="1">left outer join
(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a/dep" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/a/dep" sourcecolumn="name" used="1">a.name as name/*Отделение*//*string*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from><call function="=" type="bool">)
dep on <column table="a" column="dep">a.dep</column><text txtype="func"> = </text><column table="dep" column="kodp">dep.kodp</column></call>--\kr_org
</query><query name="kr_payer" as="kodp" join="left outer" path="./a/a/kodp" haskeys="1" used="1">left outer join
(
<select>--kr_payer
select <column table="a" column="kodp" type="number" title="" comment="уник. код абонента" fact="kr_payer_kodp" agg="max" as="kodp" key="1" fixed="1" sourcetable="./a/a/kodp" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="nump" type="string" title="Код абонента" comment="номер абонента" vid="1" is-name="1" as="nump" key="0" sourcetable="./a/a/kodp" sourcecolumn="nump" used="1">a.nump as nump, /*Код абонента*//*string*/
</column><column table="a" column="name" type="string" title="Наименование абонента" comment="наименование" vid="1" is-name="1" is-fact="1" agg="list" as="name" fact="kr_payer_name" key="0" sourcetable="./a/a/kodp" sourcecolumn="name" used="1">a.name as name/*Наименование абонента*//*string*/
</column></select><from>
from <table name="kr_payer" as="a" title="Абонент" used="1">kr_payer
a
--\kr_payer
</table></from><call function="=" type="bool">)
kodp on <column table="a" column="kodp">a.kodp</column><text txtype="func"> = </text><column table="kodp" column="kodp">kodp.kodp</column></call>--\kr_payer
</query></from><where>where
<call function="=" pth="" type="bool"><text txtype="func"> { </text><column table="a" column="dep" optional="1">a.dep</column><text txtype="func"> } </text><text txtype="func"> = </text><const><text>:glbl_dep</text></const></call></where>)
a
--\kr_dogovor_list_cur_dep
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_dog" as="kod_dog" title="" key="1" thissrc="kod_dog">a.kod_dog</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_dog" as="kod_dog" title="" key="1" thissrc="kod_dog">a.kod_dog</column><text txtype="func"> ) like lower( </text><const><text>:kod_dog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dep_name" as="dep_name" title="Отделение" thissrc="dep_name">a.dep_name</column><text txtype="func"> ) like lower( </text><const><text>:dep_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nump" as="nump" title="Код абонента" thissrc="nump">a.nump</column><text txtype="func"> ) like lower( </text><const><text>:nump_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="payer_name" as="payer_name" title="Наименование абонента" thissrc="payer_name">a.payer_name</column><text txtype="func"> ) like lower( </text><const><text>:payer_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" timestamp="25.03.2016 12:13:38" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_dogovor.xml" elid="2287" ord="2287" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" timestamp="25.03.2016 12:13:38" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_dogovor.xml" elid="2287" ord="2287" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_dog_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="dep_name_filter" type="string" />
                    <param name="nump_filter" type="string" />
                    <param name="payer_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_dog" as="kod_dog" title="" key="1" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="dep_name" as="dep_name" title="Отделение" />
                    <column table="a" column="nump" as="nump" title="Код абонента" />
                    <column table="a" column="payer_name" as="payer_name" title="Наименование абонента" />
                  </select>
                  <from>
                    <query name="kr_dogovor_list_cur_dep" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_dog" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_dog" />
                        <useparam name="kod_dog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dep_name" />
                        <useparam name="dep_name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nump" />
                        <useparam name="nump_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="payer_name" />
                        <useparam name="payer_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_dog_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="dep_name_filter" />
                    <useparam name="nump_filter" />
                    <useparam name="payer_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_dog_filter" type="string">
                  <const>:kod_dog_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="dep_name_filter" type="string">
                  <const>:dep_name_filter </const>
                </param>
                <param name="nump_filter" type="string">
                  <const>:nump_filter </const>
                </param>
                <param name="payer_name_filter" type="string">
                  <const>:payer_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_kor_saldo">
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog.dep as dep, /*number*/
kod_dog_x_n.name as kod_dog_x_n, /*Договор*//*string*/
dep_x_n.name as dep_x_n, /*Отделение*//*string*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog/*Договор*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_x_n on vr_kor_saldo.kod_dog = kod_dog_x_n.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.dep as dep/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on vr_kor_saldo.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on kod_dog.dep = dep_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dep" table="vr_kor_saldo" />
            <dependant name="kod_dog_x_n" table="vr_kor_saldo" />
            <dependant name="dep_x_n" table="vr_kor_saldo" />
          </dependants>
        </column>
        <column name="dep" table="kod_dog" type="number" title="Отделение" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog.dep as dep, /*number*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog/*Договор*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.dep as dep/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on vr_kor_saldo.kod_dog = kod_dog.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_otch" table="vr_kor_saldo" type="date" title="Дата отчета" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_otch" temp-col-name="d1" />
        <column name="dat_vozn" table="vr_kor_saldo" type="date" title="Дата возникновения" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_vozn" temp-col-name="d2" />
        <column name="vid_real" table="vr_kor_saldo" type="number" title="Вид реализации" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vid_real" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="vid_real" as="vid_real" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="vid_real" into="n1">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид реализации" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select>
                <from>
from <query name="sk_vid_real" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="vid_real">a.vid_real as vid_real, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид реализации" comment="полное наименование- уже не печатается в назначение платежа" as="name" key="0" used="1" sourcetable="./a/a" sourcecolumn="name">a.name as name, /*Вид реализации*//*string*/
</column><column table="a" column="abbr" type="string" title="Вид реализации(аббр)" as="abbr" key="0" used="1" sourcetable="./a/a" sourcecolumn="abbr">a.abbr as abbr/*Вид реализации(аббр)*//*string*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" used="1">sk_vid_real
a
--\sk_vid_real
</table></from>)
a
--\sk_vid_real
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="vid_real" as="vid_real" title="" key="1" thissrc="vid_real">a.vid_real</column><text txtype="func"> ) like lower( </text><const><text>:vid_real_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид реализации" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид реализации" timestamp="15.03.2016 19:08:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sk_vid_real.xml" elid="2894" ord="2894" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="vid_real_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="vid_real" as="vid_real" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид реализации" />
                    <column table="a" column="abbr" as="abbr" title="Вид реализации(аббр)" />
                  </select>
                  <from>
                    <query name="sk_vid_real" as="a" title="Вид реализации" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="vid_real" />
                        <useparam name="vid_real_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="vid_real_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="vid_real_filter" type="string">
                  <const>:vid_real_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_kor_saldo">
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.vid_real as vid_real/*Вид реализации*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.vid_real as vid_real  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n2 as vid_real  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.vid_real as vid_real  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n2 as vid_real  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on vr_kor_saldo.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="vid_real_x_n" table="vr_kor_saldo" />
          </dependants>
        </column>
        <column name="val" table="vr_kor_saldo" type="number" title="Значение" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="val" temp-col-name="n3" />
        <column name="u_m" table="vr_kor_saldo" type="string" title="Пользователь" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="u_m" temp-col-name="s1" />
        <column name="d_m" table="vr_kor_saldo" type="date" title="Дата редактирования" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="d_m" temp-col-name="d3" />
        <column name="kod_dog_x_n" table="vr_kor_saldo.kod_dog" type="string" title="Договор" text-source-for="kod_dog" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_dog_x_n.name as kod_dog_x_n, /*Договор*//*string*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog/*Договор*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_x_n on vr_kor_saldo.kod_dog = kod_dog_x_n.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dep_x_n" table="kod_dog.dep" type="string" title="Отделение" text-source-for="dep" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dep_x_n.name as dep_x_n, /*Отделение*//*string*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog/*Договор*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.dep as dep/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on vr_kor_saldo.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on kod_dog.dep = dep_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="vr_kor_saldo.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_kor_saldo_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_kor_saldo_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.vid_real as vid_real/*Вид реализации*//*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.vid_real as vid_real  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n2 as vid_real  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.vid_real as vid_real  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n2 as vid_real  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on vr_kor_saldo.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="vr_kor_saldo" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_kor_saldo" type="number" title="" is-user-editable="1" />
        <column name="kod_kor_saldo" table="vr_kor_saldo" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_kor_saldo" temp-col-name="n4" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_dog as kod_dog 
,:dat_otch as dat_otch 
,:dat_vozn as dat_vozn 
,:vid_real as vid_real 
,:val as val 
,:u_m as u_m 
,:d_m as d_m 
,:kod_kor_saldo as kod_kor_saldo 
 
from dual ) 
 
loop 
insert into vr_kor_saldo 
(kod_dog 
,dat_otch 
,dat_vozn 
,vid_real 
,val 
,u_m 
,d_m 
,kod_kor_saldo 
) 
 values  
(r.kod_dog 
,r.dat_otch 
,r.dat_vozn 
,r.vid_real 
,r.val 
,r.u_m 
,r.d_m 
,r.kod_kor_saldo 
) 
 returning  
kod_kor_saldo into :kod_kor_saldo; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_kor_saldo where kod_kor_saldo=:kod_kor_saldo</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_kor_saldo' 
and 
names=:form_id 
and 
f2=:kod_kor_saldo; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_dog as kod_dog 
,:dat_otch as dat_otch 
,:dat_vozn as dat_vozn 
,:vid_real as vid_real 
,:val as val 
,:u_m as u_m 
,:d_m as d_m 
,:kod_kor_saldo as kod_kor_saldo 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,d2 
,n2 
,n3 
,s1 
,d3 
,n4 
) 
 values  
('vr_kor_saldo' 
,:form_id 
,:kod_kor_saldo 
,:row_state_id 
,r.kod_dog 
,r.dat_otch 
,r.dat_vozn 
,r.vid_real 
,r.val 
,r.u_m 
,r.d_m 
,r.kod_kor_saldo 
); 
end loop; 
else 
for r in  
 ( select  
:kod_dog as kod_dog 
,:dat_otch as dat_otch 
,:dat_vozn as dat_vozn 
,:vid_real as vid_real 
,:val as val 
,:u_m as u_m 
,:d_m as d_m 
,:kod_kor_saldo as kod_kor_saldo 
 
from vr_kor_saldo a  where kod_kor_saldo=:kod_kor_saldo) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,d1 
,d2 
,n2 
,n3 
,s1 
,d3 
,n4 
) 
 values  
('vr_kor_saldo' 
,:form_id 
,:kod_kor_saldo 
,:row_state_id 
,r.kod_dog 
,r.dat_otch 
,r.dat_vozn 
,r.vid_real 
,r.val 
,r.u_m 
,r.d_m 
,r.kod_kor_saldo 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_kor_saldo' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_kor_saldo set  
(kod_dog 
,dat_otch 
,dat_vozn 
,vid_real 
,val 
,u_m 
,d_m 
,kod_kor_saldo 
) 
= 
 ( select  
:kod_dog as kod_dog 
,:dat_otch as dat_otch 
,:dat_vozn as dat_vozn 
,:vid_real as vid_real 
,:val as val 
,:u_m as u_m 
,:d_m as d_m 
,:kod_kor_saldo as kod_kor_saldo 
 
from dual ) 
 
where 
kod_kor_saldo=:kod_kor_saldo 
;
end;
</update-text>
      <scheme>
        <table name="vr_kor_saldo" as="vr_kor_saldo">
          <columns>
            <column name="kod_dog" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dep" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otch" type="date" title="Дата отчета" />
            <column name="dat_vozn" type="date" title="Дата возникновения" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="val" type="number" format="{0:C2}" edit-mask="{0:C2}" title="Значение" />
            <column name="u_m" type="string" title="Пользователь" />
            <column name="d_m" type="date" title="Дата редактирования" />
            <column name="kod_dog_x_n" type="string" title="Договор" />
            <column name="dep_x_n" type="string" title="Отделение" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_kor_saldo" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_dog_x_n" type="string" title="Договор" />
            <column name="kod_dog" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dep_x_n" type="string" title="Отделение" />
            <column name="dep" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otch" type="date" title="Дата отчета" />
            <column name="dat_vozn" type="date" title="Дата возникновения" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="val" type="number" format="{0:C2}" edit-mask="{0:C2}" title="Значение" />
            <column name="u_m" type="string" title="Пользователь" />
            <column name="d_m" type="date" title="Дата редактирования" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_kor_saldo" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_kor_saldo_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_kor_saldo_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select vr_kor_saldo.kod_dog as kod_dog, /*Договор*//*number*/
kod_dog.dep as dep, /*number*/
vr_kor_saldo.dat_otch as dat_otch, /*Дата отчета*//*date*/
vr_kor_saldo.dat_vozn as dat_vozn, /*Дата возникновения*//*date*/
vr_kor_saldo.vid_real as vid_real, /*Вид реализации*//*number*/
vr_kor_saldo.val as val, /*Значение*//*number*/
vr_kor_saldo.u_m as u_m, /*Пользователь*//*string*/
vr_kor_saldo.d_m as d_m, /*Дата редактирования*//*date*/
kod_dog_x_n.name as kod_dog_x_n, /*Договор*//*string*/
dep_x_n.name as dep_x_n, /*Отделение*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_kor_saldo.is_new as is_new, /*number*/
vr_kor_saldo.is_not_new as is_not_new, /*number*/
vr_kor_saldo.kod_kor_saldo as kod_kor_saldo/*number*//*key*/

from (
--vr_kor_saldo
select a.kod_kor_saldo as kod_kor_saldo, /*number*//*key*/
a.kod_dog as kod_dog, /*Договор*//*number*/
a.dat_otch as dat_otch, /*Дата отчета*//*date*/
a.dat_vozn as dat_vozn, /*Дата возникновения*//*date*/
a.val as val, /*Значение*//*number*/
a.u_m as u_m, /*Пользователь*//*string*/
a.d_m as d_m, /*Дата редактирования*//*date*/
a.vid_real as vid_real, /*Вид реализации*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog,a.dat_otch as dat_otch,a.dat_vozn as dat_vozn,a.val as val,a.u_m as u_m,a.d_m as d_m,a.vid_real as vid_real,0 as is_new,1 as is_not_new  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog,t.d1 as dat_otch,t.d2 as dat_vozn,t.n3 as val,t.s1 as u_m,t.d3 as d_m,t.n2 as vid_real,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
a
--\(select a.kod_kor_saldo as kod_kor_saldo,a.kod_dog as kod_dog,a.dat_otch as dat_otch,a.dat_vozn as dat_vozn,a.val as val,a.u_m as u_m,a.d_m as d_m,a.vid_real as vid_real,0 as is_new,1 as is_not_new  from vr_kor_saldo a where not exists (select * from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and a.kod_kor_saldo=t.f2 ) and   a.kod_kor_saldo in :kod_kor_saldo_prm   union all  select t.n4 as kod_kor_saldo,t.n1 as kod_dog,t.d1 as dat_otch,t.d2 as dat_vozn,t.n3 as val,t.s1 as u_m,t.d3 as d_m,t.n2 as vid_real,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_kor_saldo' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_kor_saldo_prm )
)
vr_kor_saldo
--\vr_kor_saldo
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on vr_kor_saldo.vid_real = vid_real_x_n.vid_real--\sk_vid_real
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog_x_n on vr_kor_saldo.kod_dog = kod_dog_x_n.kod_dog--\kr_dogovor
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.dep as dep/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kod_dog on vr_kor_saldo.kod_dog = kod_dog.kod_dog--\kr_dogovor
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on kod_dog.dep = dep_x_n.kodp--\kr_org
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>