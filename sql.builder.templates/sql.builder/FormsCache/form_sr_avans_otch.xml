<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="form_sr_avans_otch" title="Авансы для отчетов" timestamp="26.02.2018 19:54:53" with-behavior="0" file="sql.builder.templates\sql.builder\projects\43125\all\forms.xml">
    <fieldgroup title="Условия" id="63429393">
      <field id="12655505" name="dep" controlType="UIList" title="Отделение" type="number" column-mandatory="1">
        <listquery>
          <query name="kr_dep" />
        </listquery>
        <defaultquery>
          <query name="kr_dep_current" />
        </defaultquery>
      </field>
      <fieldgroup title="Отчетный период" uncollapsible="1" id="34218320">
        <field id="32626834" controlType="UICombo" type="number" title="С" name="ym_s" column-mandatory="1">
          <listquery>
            <query name="43125-yms" />
          </listquery>
          <defaultquery>
            <query name="spr_time_ym_cur" />
          </defaultquery>
        </field>
        <field id="58921422" controlType="UICombo" type="number" name="ym_po" title="По" column-mandatory="1">
          <listquery>
            <query name="43125-yms" />
          </listquery>
          <defaultquery>
            <query name="spr_time_ym_cur" />
          </defaultquery>
        </field>
      </fieldgroup>
    </fieldgroup>
    <fieldgroup title="Данные" uncollapsible="1" id="32093906">
      <grid table="sr_avans_otch" show-toolbar="1" id="3695814">
        <toolbar id="45325374">
          <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="35750416" />
          <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="65264848" />
          <uicommand button-type="grid-delete" column-visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="51237008" />
          <uicommand button-type="grid-save" column-visible="0" name="grid-save" control-name="ButtonCommit" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="23964016" />
          <uicommand title="Расчёт" action-type="custom" visible="kod_av" visible-invert="1" editable="dep" id="20939147">
            <useaction name="sg_avans.sp_rasch_avans_otch" editable="can_create_sf" width-perc="50" title="Создать счет" id="2138782">
              <useparam name="dep" id="4638912" />
              <useparam name="ym_s" id="7424456" />
              <useparam name="ym_po" id="65665084" />
            </useaction>
            <useaction name="43125_mview_refresh" id="29136339" />
            <useaction action-type="refresh-table" object="sr_avans_otch" id="36066855" />
            <useaction action-type="refresh-table" object="a" id="12395779" />
          </uicommand>
          <uicommand title="Перерасчёт" action-type="custom" visible="kod_av" prompt="Вы уверены, что хотите пересчитать авансы по выбранным условиям?" editable="dep" id="60659554">
            <useaction name="sg_avans.sp_rasch_avans_otch" editable="can_create_sf" width-perc="50" title="Создать счет" id="13733927">
              <useparam name="dep" id="2737529" />
              <useparam name="ym_s" id="56079966" />
              <useparam name="ym_po" id="40570516" />
            </useaction>
            <useaction name="43125_mview_refresh" id="14046946" />
            <useaction action-type="refresh-table" object="sr_avans_otch" id="28132827" />
            <useaction action-type="refresh-table" object="a" id="58017697" />
          </uicommand>
        </toolbar>
        <columns id="28416982">
          <field table="sr_avans_otch" name="kod_av" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="26375952" />
          <field table="sr_avans_otch" name="sname" title="Отделение" controlType="UIText" rows-limit="100" id="22990452" />
          <field table="sr_avans_otch" name="ym" title="Отчётный период" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="4544087" />
          <field table="sr_avans_otch" name="ndog" title="Номер договора" controlType="UIText" rows-limit="100" id="18284013" />
          <field table="sr_avans_otch" name="nump" title="Код абонента" controlType="UIText" rows-limit="100" id="26624900" />
          <field table="sr_avans_otch" name="name" title="Наименование абонента" controlType="UIText" rows-limit="100" id="12836376" />
          <field table="sr_avans_otch" name="avans" title="Сумма аванса" controlType="UIText" format="N2" edit-mask="N2" rows-limit="100" id="7286293" />
          <field table="sr_avans_otch" name="rym" title="Под период" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="55513634" />
          <field table="sr_avans_otch" name="period" title="Период" controlType="UIText" rows-limit="100" id="13789763" />
          <field table="sr_avans_otch" name="av_name" title="Вид аванса" controlType="UIText" rows-limit="100" id="45796685" />
          <field table="sr_avans_otch" name="perc" title="Процент аванса" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="5662843" />
          <field table="sr_avans_otch" name="dat_priem" title="Дата приёмки" controlType="UIDate" rows-limit="100" id="26513111" />
          <field table="sr_avans_otch" name="day" title="День выставления" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="21059791" />
        </columns>
      </grid>
    </fieldgroup>
    <fieldgroup title="Сводная информация" id="13828291">
      <field table="a" name="yms_closed_text" title="Кол-во закрытых периодов" controlType="UIText" rows-limit="100" id="34939636" />
      <field table="a" name="yms_with_data_text" title="Кол-во расчитанных периодов" controlType="UIText" rows-limit="100" id="27020394" />
      <field table="a" name="yms_without_data_text" title="Кол-во нерасчитанных периодов" controlType="UIText" rows-limit="100" id="9252889" />
    </fieldgroup>
  </form>
  <dataset>
    <fields>
      <field type="number" name="dep" parname="dep" title="Отделение" ColumnMandatory="1" />
      <field type="number" name="ym_s" parname="ym_s" title="С" ColumnMandatory="1" />
      <field type="number" name="ym_po" parname="ym_po" title="По" ColumnMandatory="1" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="sr_avans_otch_has_changes" parname="sr_avans_otch_has_changes" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="sr_avans_otch" auto-refresh="1" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multiselect-column="" multiselect-target="" update-target="sr_avans_otch" key="kod_av" is-ms-upd="1" is-top="1" key-dimension="sr_avans_otch">
      <select-text>
--
select sr_avans_otch.kod_av as kod_av, /*number*//*key*/
kr_org.sname as sname, /*Отделение*//*string*/
sr_avans_otch.ym as ym, /*Отчётный период*//*number*/
kr_dogovor.ndog as ndog, /*Номер договора*//*string*/
kr_payer.nump as nump, /*Код абонента*//*string*/
kr_payer.name as name, /*Наименование абонента*//*string*/
sr_avans_otch.avans as avans, /*Сумма аванса*//*number*/
sr_avans_otch.rym as rym, /*Под период*//*number*/
sr_avans_otch.period as period, /*Период*//*string*/
sk_vid_avans.name as av_name, /*Вид аванса*//*string*/
sr_avans_otch.perc as perc, /*Процент аванса*//*number*/
sr_avans_otch.dat_priem as dat_priem, /*Дата приёмки*//*date*/
sr_avans_otch.day as day, /*День выставления*//*number*/
sr_avans_otch.is_new as is_new, /*number*/
sr_avans_otch.is_not_new as is_not_new/*number*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.avans as avans, /**//*number*/
a.ym as ym, /**//*number*/
a.rym as rym, /**//*number*/
a.dat_priem as dat_priem, /**//*date*/
a.day as day, /**//*number*/
a.period as period, /**//*string*/
a.vid_avans as vid_avans, /**//*number*/
a.perc as perc, /**//*number*/
a.dep as dep, /**//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_avans_otch
a
--\sr_avans_otch
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dep
select a.kodp as kodp, /*number*//*key*/
kodp.name as name, /*Отделение*//*string*/
kodp.sname as sname/*Аббревиатура*//*string*/

from (
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )a
--\kr_dep
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name, /*Отделение*//*string*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kodp on a.kodp = kodp.kodp--\kr_org
)
kr_org on sr_avans_otch.dep = kr_org.kodp--\kr_dep
left outer join
(
--sk_vid_avans
select a.vid_avans as vid_avans, /**//*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_vid_avans
a
--\sk_vid_avans
)
sk_vid_avans on sr_avans_otch.vid_avans = sk_vid_avans.vid_avans--\sk_vid_avans
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on sr_avans_otch.kod_dog = kr_dogovor.kod_dog--\kr_dogovor
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kr_payer on kr_dogovor.kodp = kr_payer.kodp--\kr_payer
where
(sr_avans_otch.dep in :dep )  and (sr_avans_otch.ym &gt;= :ym_s )  and (sr_avans_otch.ym &lt;= :ym_po ) 
order by sname, ym desc, ndog, rym--\
</select-text>
      <columns>
        <column name="kod_av" table="sr_avans_otch" type="number" title="" parname="kod_av" ColumnVisible="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_av" temp-col-name="n1" />
        <column name="sname" table="kr_org" type="string" title="Отделение" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_av_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_av_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kr_org.sname as sname, /*Отделение*//*string*/
sr_avans_otch.kod_av as kod_av/*number*//*key*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.dep as dep/**//*number*/

from (select a.kod_av as kod_av,a.dep as dep  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n14 as dep  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.dep as dep  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n14 as dep  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dep
select a.kodp as kodp, /*number*//*key*/
kodp.name as name, /*Отделение*//*string*/
kodp.sname as sname/*Аббревиатура*//*string*/

from (
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )a
--\kr_dep
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name, /*Отделение*//*string*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kodp on a.kodp = kodp.kodp--\kr_org
)
kr_org on sr_avans_otch.dep = kr_org.kodp--\kr_dep
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ym" table="sr_avans_otch" type="number" title="Отчётный период" ColumnEditable="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n2" />
        <column name="ndog" table="kr_dogovor" type="string" title="Номер договора" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_av_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_av_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kr_dogovor.ndog as ndog, /*Номер договора*//*string*/
sr_avans_otch.kod_av as kod_av/*number*//*key*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on sr_avans_otch.kod_dog = kr_dogovor.kod_dog--\kr_dogovor
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="nump" table="kr_payer" type="string" title="Код абонента" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_av_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_av_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kr_payer.nump as nump, /*Код абонента*//*string*/
sr_avans_otch.kod_av as kod_av/*number*//*key*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on sr_avans_otch.kod_dog = kr_dogovor.kod_dog--\kr_dogovor
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kr_payer on kr_dogovor.kodp = kr_payer.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name" table="kr_payer" type="string" title="Наименование абонента" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_av_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_av_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kr_payer.name as name, /*Наименование абонента*//*string*/
sr_avans_otch.kod_av as kod_av/*number*//*key*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.kod_dog as kod_dog/*number*/

from (select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.kod_dog as kod_dog  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp/**//*number*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on sr_avans_otch.kod_dog = kr_dogovor.kod_dog--\kr_dogovor
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kr_payer on kr_dogovor.kodp = kr_payer.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="avans" table="sr_avans_otch" type="number" title="Сумма аванса" ColumnEditable="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="avans" temp-col-name="n3" />
        <column name="rym" table="sr_avans_otch" type="number" title="Под период" ColumnEditable="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="rym" temp-col-name="n4" />
        <column name="period" table="sr_avans_otch" type="string" title="Период" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="period" temp-col-name="s1" />
        <column name="av_name" table="sk_vid_avans" type="string" title="Вид аванса" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_av_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_av_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select sk_vid_avans.name as av_name, /*Вид аванса*//*string*/
sr_avans_otch.kod_av as kod_av/*number*//*key*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.vid_avans as vid_avans/**//*number*/

from (select a.kod_av as kod_av,a.vid_avans as vid_avans  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n10 as vid_avans  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.vid_avans as vid_avans  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n10 as vid_avans  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--sk_vid_avans
select a.vid_avans as vid_avans, /**//*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_vid_avans
a
--\sk_vid_avans
)
sk_vid_avans on sr_avans_otch.vid_avans = sk_vid_avans.vid_avans--\sk_vid_avans
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="perc" table="sr_avans_otch" type="number" title="Процент аванса" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="perc" temp-col-name="n5" />
        <column name="dat_priem" table="sr_avans_otch" type="date" title="Дата приёмки" ColumnEditable="0" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_priem" temp-col-name="d1" />
        <column name="day" table="sr_avans_otch" type="number" title="День выставления" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="day" temp-col-name="n6" />
        <column name="is_new" table="sr_avans_otch" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="sr_avans_otch" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_av as kod_av 
,:ym as ym 
,:avans as avans 
,:rym as rym 
,:period as period 
,:perc as perc 
,:dat_priem as dat_priem 
,:day as day 
 
from dual ) 
 
loop 
insert into sr_avans_otch 
(kod_av 
,ym 
,avans 
,rym 
,period 
,perc 
,dat_priem 
,day 
) 
 values  
(r.kod_av 
,r.ym 
,r.avans 
,r.rym 
,r.period 
,r.perc 
,r.dat_priem 
,r.day 
) 
 returning  
kod_av into :kod_av; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_avans_otch where kod_av=:kod_av</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='sr_avans_otch' 
and 
names=:form_id 
and 
f2=:kod_av; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_av as kod_av 
,:ym as ym 
,:avans as avans 
,:rym as rym 
,:period as period 
,:perc as perc 
,:dat_priem as dat_priem 
,:day as day 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,s1 
,n5 
,d1 
,n6 
) 
 values  
('sr_avans_otch' 
,:form_id 
,:kod_av 
,:row_state_id 
,r.kod_av 
,r.ym 
,r.avans 
,r.rym 
,r.period 
,r.perc 
,r.dat_priem 
,r.day 
); 
end loop; 
else 
for r in  
 ( select  
:kod_av as kod_av 
,:ym as ym 
,:avans as avans 
,:rym as rym 
,:period as period 
,:perc as perc 
,:dat_priem as dat_priem 
,:day as day 
,a.kod_dog 
,a.tep_el 
,a.kodp 
,a.prim 
,a.vid_avans 
,a.pr_avans_umen 
,a.pr_uch_av 
,a.period_sf 
,a.period_first_date 
,a.u_m 
,a.d_m 
,a.t_m 
,a.round_av 
,a.dep 
 
from sr_avans_otch a  where kod_av=:kod_av) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,s1 
,n5 
,d1 
,n6 
,n7 
,n8 
,n9 
,s2 
,n10 
,n11 
,n12 
,s3 
,d2 
,s4 
,d3 
,s5 
,n13 
,n14 
) 
 values  
('sr_avans_otch' 
,:form_id 
,:kod_av 
,:row_state_id 
,r.kod_av 
,r.ym 
,r.avans 
,r.rym 
,r.period 
,r.perc 
,r.dat_priem 
,r.day 
,r.kod_dog 
,r.tep_el 
,r.kodp 
,r.prim 
,r.vid_avans 
,r.pr_avans_umen 
,r.pr_uch_av 
,r.period_sf 
,r.period_first_date 
,r.u_m 
,r.d_m 
,r.t_m 
,r.round_av 
,r.dep 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='sr_avans_otch' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_avans_otch set  
(kod_av 
,ym 
,avans 
,rym 
,period 
,perc 
,dat_priem 
,day 
) 
= 
 ( select  
:kod_av as kod_av 
,:ym as ym 
,:avans as avans 
,:rym as rym 
,:period as period 
,:perc as perc 
,:dat_priem as dat_priem 
,:day as day 
 
from dual ) 
 
where 
kod_av=:kod_av 
;
end;
</update-text>
      <scheme>
        <table name="sr_avans_otch" as="sr_avans_otch">
          <columns>
            <column name="kod_av" type="number" title="" visible="0" />
            <column name="sname" type="string" title="Отделение" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчётный период" />
            <column name="ndog" type="string" title="Номер договора" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="avans" type="number" format="N2" edit-mask="N2" title="Сумма аванса" />
            <column name="rym" type="number" format="F2" edit-mask="F2" title="Под период" />
            <column name="period" type="string" title="Период" />
            <column name="av_name" type="string" title="Вид аванса" />
            <column name="perc" type="number" format="F0" edit-mask="F0" title="Процент аванса" />
            <column name="dat_priem" type="date" title="Дата приёмки" />
            <column name="day" type="number" format="F0" edit-mask="F0" title="День выставления" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_av" type="number" title="" visible="0" />
            <column name="sname" type="string" title="Отделение" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчётный период" />
            <column name="ndog" type="string" title="Номер договора" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="avans" type="number" format="N2" edit-mask="N2" title="Сумма аванса" />
            <column name="rym" type="number" format="F2" edit-mask="F2" title="Под период" />
            <column name="period" type="string" title="Период" />
            <column name="av_name" type="string" title="Вид аванса" />
            <column name="perc" type="number" format="F0" edit-mask="F0" title="Процент аванса" />
            <column name="dat_priem" type="date" title="Дата приёмки" />
            <column name="day" type="number" format="F0" edit-mask="F0" title="День выставления" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_av_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_av_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select sr_avans_otch.kod_av as kod_av, /*number*//*key*/
kr_org.sname as sname, /*Отделение*//*string*/
sr_avans_otch.ym as ym, /*Отчётный период*//*number*/
kr_dogovor.ndog as ndog, /*Номер договора*//*string*/
kr_payer.nump as nump, /*Код абонента*//*string*/
kr_payer.name as name, /*Наименование абонента*//*string*/
sr_avans_otch.avans as avans, /*Сумма аванса*//*number*/
sr_avans_otch.rym as rym, /*Под период*//*number*/
sr_avans_otch.period as period, /*Период*//*string*/
sk_vid_avans.name as av_name, /*Вид аванса*//*string*/
sr_avans_otch.perc as perc, /*Процент аванса*//*number*/
sr_avans_otch.dat_priem as dat_priem, /*Дата приёмки*//*date*/
sr_avans_otch.day as day, /*День выставления*//*number*/
sr_avans_otch.is_new as is_new, /*number*/
sr_avans_otch.is_not_new as is_not_new/*number*/

from (
--sr_avans_otch
select a.kod_av as kod_av, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.avans as avans, /**//*number*/
a.ym as ym, /**//*number*/
a.rym as rym, /**//*number*/
a.dat_priem as dat_priem, /**//*date*/
a.day as day, /**//*number*/
a.period as period, /**//*string*/
a.vid_avans as vid_avans, /**//*number*/
a.perc as perc, /**//*number*/
a.dep as dep, /**//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_av as kod_av,a.kod_dog as kod_dog,a.avans as avans,a.ym as ym,a.rym as rym,a.dat_priem as dat_priem,a.day as day,a.period as period,a.vid_avans as vid_avans,a.perc as perc,a.dep as dep,0 as is_new,1 as is_not_new  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog,t.n3 as avans,t.n2 as ym,t.n4 as rym,t.d1 as dat_priem,t.n6 as day,t.s1 as period,t.n10 as vid_avans,t.n5 as perc,t.n14 as dep,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
a
--\(select a.kod_av as kod_av,a.kod_dog as kod_dog,a.avans as avans,a.ym as ym,a.rym as rym,a.dat_priem as dat_priem,a.day as day,a.period as period,a.vid_avans as vid_avans,a.perc as perc,a.dep as dep,0 as is_new,1 as is_not_new  from sr_avans_otch a where not exists (select * from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and a.kod_av=t.f2 ) and   a.kod_av in :kod_av_prm   union all  select t.n1 as kod_av,t.n7 as kod_dog,t.n3 as avans,t.n2 as ym,t.n4 as rym,t.d1 as dat_priem,t.n6 as day,t.s1 as period,t.n10 as vid_avans,t.n5 as perc,t.n14 as dep,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='sr_avans_otch' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_av_prm )
)
sr_avans_otch
--\sr_avans_otch
left outer join
(
--kr_dep
select a.kodp as kodp, /*number*//*key*/
kodp.name as name, /*Отделение*//*string*/
kodp.sname as sname/*Аббревиатура*//*string*/

from (
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )a
--\kr_dep
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name, /*Отделение*//*string*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kodp on a.kodp = kodp.kodp--\kr_org
)
kr_org on sr_avans_otch.dep = kr_org.kodp--\kr_dep
left outer join
(
--sk_vid_avans
select a.vid_avans as vid_avans, /**//*number*//*key*/
a.name as name/*Наименование*//*string*/

from sk_vid_avans
a
--\sk_vid_avans
)
sk_vid_avans on sr_avans_otch.vid_avans = sk_vid_avans.vid_avans--\sk_vid_avans
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.ndog as ndog/*Номер договора*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on sr_avans_otch.kod_dog = kr_dogovor.kod_dog--\kr_dogovor
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kr_payer on kr_dogovor.kodp = kr_payer.kodp--\kr_payer

order by sname, ym desc, ndog, rym--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="a" auto-refresh="1" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multiselect-column="" multiselect-target="" update-target="43125-deps-yms" key="yms_closed_text" is-ms-upd="1" is-top="1">
      <select-text>
--
select a.yms_closed_text as yms_closed_text, /*Кол-во закрытых периодов*//*string*//*key*/
a.yms_with_data_text as yms_with_data_text, /*Кол-во расчитанных периодов*//*string*/
a.yms_without_data_text as yms_without_data_text/*Кол-во нерасчитанных периодов*//*string*/

from (
--43125-deps-yms
select a.yms_closed_text as yms_closed_text, /*string*//*key*/
a.yms_with_data_text as yms_with_data_text, /*string*/
a.yms_without_data_text as yms_without_data_text/*string*/

from (
      select listagg(case when yms_closed_count &gt; 0 then dep_name||': '||to_char(yms_closed_count) end,'; ') within group(order by dep_name) yms_closed_text,
      listagg(case when yms_with_data_count &gt; 0 then dep_name||': '||to_char(yms_with_data_count) end,'; ') within group(order by dep_name) yms_with_data_text,
      listagg(case when yms_without_data_count &gt; 0 then dep_name||': '||to_char(yms_without_data_count) end,'; ') within group(order by dep_name) yms_without_data_text 
      from
      (
      select dep,
      dep_name,
      count(case when is_closed = 1 then ym end) yms_closed_count,
      count(case when is_closed = 0 and has_data = 1 then ym end) yms_with_data_count,
      count(case when is_closed = 0 and has_data = 0 then ym end) yms_without_data_count
      from
      (
      select deps.dep,
      deps.dep_name,
      yms.ym,
      case when avans.dep is not null then 1 else 0 end has_data, 
      case when calcs.dep is not null then 1 else 0 end is_closed
      from 
      (
      select ym
      from
      (
      select to_number(to_char(dat_day,'YYYYMM'))/100 ym
      from vv_day
      )
      where ym between :ym_s and :ym_po 
      group by ym
      ) yms
      cross join 
      (   
      select kodp dep,
      sname dep_name  
      from kr_org 
      where kod_ecls = 4 and kod_separator = 2
      and kodp in :dep 
      ) deps
      left join 
      (
      select dep,
      ym
      from sr_avans_otch
      group by dep, ym
      ) avans 
      on avans.dep = deps.dep and avans.ym = yms.ym
      left join 
      (
      select podr dep,
      ym
      from kr_calc
      where pr_close = 1
      ) calcs 
      on calcs.dep = deps.dep and calcs.ym = yms.ym
      ) 
      group by dep, dep_name
      )
    )a
--\43125-deps-yms-view
)
a
--\43125-deps-yms
--\
</select-text>
      <columns>
        <column name="yms_closed_text" table="a" type="string" title="Кол-во закрытых периодов" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="yms_closed_text" temp-col-name="s1" />
        <column name="yms_with_data_text" table="a" type="string" title="Кол-во расчитанных периодов" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="yms_with_data_text" temp-col-name="s2" />
        <column name="yms_without_data_text" table="a" type="string" title="Кол-во нерасчитанных периодов" ColumnEditable="0" is-updateable="1" is-updateable-ext="1" update-target="yms_without_data_text" temp-col-name="s3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:yms_closed_text as yms_closed_text 
,:yms_with_data_text as yms_with_data_text 
,:yms_without_data_text as yms_without_data_text 
 
from dual ) 
 
loop 
insert into 43125-deps-yms 
(yms_closed_text 
,yms_with_data_text 
,yms_without_data_text 
) 
 values  
(r.yms_closed_text 
,r.yms_with_data_text 
,r.yms_without_data_text 
) 
 returning  
yms_closed_text into :yms_closed_text; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from 43125-deps-yms where yms_closed_text=:yms_closed_text</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:yms_closed_text; 
if :row_state_id=1  then 
for r in  
 ( select  
:yms_closed_text as yms_closed_text 
,:yms_with_data_text as yms_with_data_text 
,:yms_without_data_text as yms_without_data_text 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,s2 
,s3 
) 
 values  
('a' 
,:form_id 
,:yms_closed_text 
,:row_state_id 
,r.yms_closed_text 
,r.yms_with_data_text 
,r.yms_without_data_text 
); 
end loop; 
else 
for r in  
 ( select  
:yms_closed_text as yms_closed_text 
,:yms_with_data_text as yms_with_data_text 
,:yms_without_data_text as yms_without_data_text 
 
from 43125-deps-yms a  where yms_closed_text=:yms_closed_text) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,s2 
,s3 
) 
 values  
('a' 
,:form_id 
,:yms_closed_text 
,:row_state_id 
,r.yms_closed_text 
,r.yms_with_data_text 
,r.yms_without_data_text 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update 43125-deps-yms set  
(yms_closed_text 
,yms_with_data_text 
,yms_without_data_text 
) 
= 
 ( select  
:yms_closed_text as yms_closed_text 
,:yms_with_data_text as yms_with_data_text 
,:yms_without_data_text as yms_without_data_text 
 
from dual ) 
 
where 
yms_closed_text=:yms_closed_text 
;
end;
</update-text>
      <scheme>
        <table name="43125-deps-yms" as="a">
          <columns>
            <column name="yms_closed_text" type="string" title="Кол-во закрытых периодов" />
            <column name="yms_with_data_text" type="string" title="Кол-во расчитанных периодов" />
            <column name="yms_without_data_text" type="string" title="Кол-во нерасчитанных периодов" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="dep" type="number" column="" />
            <param name="ym_s" type="number" column="" />
            <param name="ym_po" type="number" column="" />
            <param name="yms_closed_text_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="dep" type="number" column="" />
              <param name="ym_s" type="number" column="" />
              <param name="ym_po" type="number" column="" />
              <param name="yms_closed_text_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select a.yms_closed_text as yms_closed_text, /*Кол-во закрытых периодов*//*string*//*key*/
a.yms_with_data_text as yms_with_data_text, /*Кол-во расчитанных периодов*//*string*/
a.yms_without_data_text as yms_without_data_text/*Кол-во нерасчитанных периодов*//*string*/

from (
--43125-deps-yms
select a.yms_closed_text as yms_closed_text, /*string*//*key*/
a.yms_with_data_text as yms_with_data_text, /*string*/
a.yms_without_data_text as yms_without_data_text/*string*/

from (
      select listagg(case when yms_closed_count &gt; 0 then dep_name||': '||to_char(yms_closed_count) end,'; ') within group(order by dep_name) yms_closed_text,
      listagg(case when yms_with_data_count &gt; 0 then dep_name||': '||to_char(yms_with_data_count) end,'; ') within group(order by dep_name) yms_with_data_text,
      listagg(case when yms_without_data_count &gt; 0 then dep_name||': '||to_char(yms_without_data_count) end,'; ') within group(order by dep_name) yms_without_data_text 
      from
      (
      select dep,
      dep_name,
      count(case when is_closed = 1 then ym end) yms_closed_count,
      count(case when is_closed = 0 and has_data = 1 then ym end) yms_with_data_count,
      count(case when is_closed = 0 and has_data = 0 then ym end) yms_without_data_count
      from
      (
      select deps.dep,
      deps.dep_name,
      yms.ym,
      case when avans.dep is not null then 1 else 0 end has_data, 
      case when calcs.dep is not null then 1 else 0 end is_closed
      from 
      (
      select ym
      from
      (
      select to_number(to_char(dat_day,'YYYYMM'))/100 ym
      from vv_day
      )
      where ym between :ym_s and :ym_po 
      group by ym
      ) yms
      cross join 
      (   
      select kodp dep,
      sname dep_name  
      from kr_org 
      where kod_ecls = 4 and kod_separator = 2
      and kodp in :dep 
      ) deps
      left join 
      (
      select dep,
      ym
      from sr_avans_otch
      group by dep, ym
      ) avans 
      on avans.dep = deps.dep and avans.ym = yms.ym
      left join 
      (
      select podr dep,
      ym
      from kr_calc
      where pr_close = 1
      ) calcs 
      on calcs.dep = deps.dep and calcs.ym = yms.ym
      ) 
      group by dep, dep_name
      )
    )a
--\(select a.yms_closed_text as yms_closed_text,a.yms_with_data_text as yms_with_data_text,a.yms_without_data_text as yms_without_data_text  from 43125-deps-yms-view a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.yms_closed_text=t.f2 ) and   a.yms_closed_text in :yms_closed_text_prm   union all  select t.s1 as yms_closed_text,t.s2 as yms_with_data_text,t.s3 as yms_without_data_text  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :yms_closed_text_prm )
)
a
--\43125-deps-yms
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>