<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_isp_main" title="Исполнительное производство [:a.kodp]" security-id="asuse_ur_isp" with-behavior="0" timestamp="28.12.2023 14:52:12" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_folders_isp_main.xml" elid="248" ord="248" leaf="0" lvl="2" pelid="">
    <field table="a" name="kod_isp" title="Исполнительный лист" controlType="UICombo" rows-limit="100" id="26836732">
      <buttons id="43610850">
        <uicommand action-type="dynamic-form-for-select" call="ur_isp_list" title="Выбор исполнительного листа" id="37542790" />
      </buttons>
    </field>
    <field table="a" name="is_el" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="21128418">
      <call function="if" as="is_el" table="a" type="number" parname="is_el" column-visible="0" id="54991022">
        <call function="=" id="27422790">
          <field table="a" name="rs_esys_kod_esys" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="826891" />
          <const id="41035970">1</const>
        </call>
        <const id="44121735">1</const>
        <const id="56750585">0</const>
      </call>
    </field>
    <uicommand action-type="dynamic-form" call="ur_folders_main" title="Карточка ПИР" width-fixed="1" editable="cur_kod_isp" visible="is_el" visible-invert="1" id="52287456">
      <useparam name="kod_folders_pp" id="28843065" />
    </uicommand>
    <uicommand action-type="dynamic-form" call="ur_folders_main_el" title="Карточка ПИР" width-fixed="1" editable="cur_kod_isp" visible="is_el" id="41269648">
      <useparam name="kod_folders_pp" id="19771747" />
    </uicommand>
    <field table="a" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="39807717" />
    <uicommand name="open_form_finance" width-fixed="1" editable="kodp" title="Лицевая карта" id="7640314">
      <useparam name="dep" id="16511166" />
      <useparam name="kodp" id="2676566" />
    </uicommand>
    <field table="a" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="2283496" />
    <tabcontainer id="65878385">
      <fieldgroup title="Папка" show-toolbar="1" id="65925500">
        <toolbar id="29636005">
          <uicommand button-type="custom-refresh" editable="ur_folders_is_not_new" action-type="refresh-form" name="custom-refresh" icon="Refresh_24" title="Обновить" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="377" ord="377" leaf="1" lvl="2" pelid="" id="39000818" />
          <uicommand button-type="custom-commit" editable="a_has_changes" action-type="custom" name="custom-commit" icon="Commit_24" title="Сохранить" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="378" ord="378" leaf="1" lvl="2" pelid="" id="55005984">
            <useaction action-type="save" id="53777448" />
            <useaction name="arbitrage_save_folder_category" id="3570258">
              <useparam name="kodp" id="31632504" />
              <useparam name="kod_category" id="65910022" />
            </useaction>
          </uicommand>
        </toolbar>
        <field table="a" name="dat_function" title="Дата вступления в силу акта" controlType="UIDate" rows-limit="100" id="27204436" />
        <field table="a" name="dat_srok" title="Срок отсрочки / рассрочки" controlType="UIDate" rows-limit="100" id="47373712" />
        <field table="a" name="kod_podr" title="Отделение" controlType="UICombo" rows-limit="100" id="62989394" />
        <field table="a" name="kod_emp" title="Юрист" controlType="UICombo" rows-limit="100" id="38244393" />
        <field table="a" name="dat_create" title="Дата начала исполнительного производства" controlType="UIDate" rows-limit="100" id="54318898" />
        <field table="a" name="ur_hist_mat_dec_dat_resh" title="Дата вынесения решения суда" controlType="UIDate" rows-limit="100" id="43337883" />
        <field table="a" name="ur_dp_priz_hnd" title="Задолженность по решению суда" controlType="UIText" edit-mask="N2" rows-limit="100" id="635939" />
        <field table="a" name="ur_opl_do_il_hnd" title="Оплата до выдачи ИЛ" controlType="UIText" edit-mask="N2" rows-limit="100" id="41522582" />
        <field table="a" name="dolg_on_il_hnd" title="Задолженность на дату выдачи исп. листа" controlType="UIText" edit-mask="N2" rows-limit="100" id="1729620" />
        <field table="a" name="ur_opl_posl_il_hnd" title="Оплата по исп. листу" controlType="UIText" edit-mask="N2" rows-limit="100" id="26666699" />
        <field table="a" name="dolg_resh_tek_hnd" title="Остаток долга по исп. листу" controlType="UIText" edit-mask="N2" rows-limit="100" id="13265399" />
        <field table="a" name="kr_dogovor_name_group_cust" title="Группа потребления " controlType="UIText" rows-limit="100" id="17087720" />
        <field table="a" name="kod_category" title="Категория потребителя" controlType="UICombo" rows-limit="100" id="16568379" />
        <field table="a" name="dat_finish" title="Дата сброса папки в архив" controlType="UIDate" rows-limit="100" id="34134430" />
        <field table="a" name="num_doc" title="Документ (основание для сброса папки в архив)" controlType="UIText" rows-limit="100" id="52157263" />
        <field table="a" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="11104157" />
        <field table="a" name="kod_esys10_other_visible" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="53065829">
          <call function="if" as="kod_esys10_other_visible" table="a" type="number" parname="kod_esys10_other_visible" column-visible="0" id="30366591">
            <call function="and" id="55303025">
              <call function="=1" id="37788631">
                <field table="a" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="33794845" />
              </call>
              <call function="=" id="21302733">
                <field table="a" name="rs_esys_kod_esys" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="56640390" />
                <const id="54848752">1</const>
              </call>
            </call>
            <const id="45379173">1</const>
            <const id="56285973">0</const>
          </call>
        </field>
      </fieldgroup>
      <fieldgroup visible="ur_folders_is_not_new" title="Работа судебного пристава" id="20402649">
        <useform object="a" name="form_ur_folders_isp_rsp" call="ur_folders_rsp" id="52299359">
          <useparam name="a.kod_folders" />
        </useform>
      </fieldgroup>
      <fieldgroup visible="ur_folders_is_not_new" title="Финансово-имущественная характеристика" id="72283">
        <useform object="a" name="form_ur_folders_isp_har_fi" call="ur_folders_har_fi" id="7598593">
          <useparam name="a.kod_folders" />
        </useform>
      </fieldgroup>
      <fieldgroup visible="ur_folders_is_not_new" title="Инкассо" id="1716663">
        <useform object="a" name="form_ur_folders_isp_inkasso" call="ur_folders_inkasso" id="3831004">
          <useparam name="a.kod_folders" />
        </useform>
      </fieldgroup>
      <fieldgroup visible="ur_folders_is_not_new" title="Казначейство" id="57377243">
        <useform object="a" name="form_ur_folders_isp_kazn" call="ur_folders_kazn" id="23874279">
          <useparam name="a.kod_folders" />
        </useform>
      </fieldgroup>
      <fieldgroup visible="kod_esys10_other_visible" title="Иная работа" id="44293957">
        <useform object="a" name="form_ur_folders_isp_other" call="ur_folders_other" id="21095014">
          <useparam name="a.kod_folders" />
        </useform>
      </fieldgroup>
    </tabcontainer>
    <field table="a" name="kod_vi" title="" controlType="UICombo" rows-limit="100" id="1893508" />
    <field table="a" name="kod_sdp" title="" controlType="UICombo" rows-limit="100" id="17265077" />
    <field table="a" name="tep_el" title="" controlType="UICombo" rows-limit="100" id="45002758" />
    <field table="a" name="kod_folders_pp" title="Папка" controlType="UICombo" rows-limit="100" id="46758198" />
  </form>
  <params>
    <param name="kod_folders" type="number">
      <const>234</const>
    </param>
    <param name="kod_isp" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const>234</const>
      </param>
      <param name="kod_isp" type="number" />
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_folders" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders_isp">
      <select-text>
--
select a.kod_isp as kod_isp, /**//*number*/
 case  when (qube.rs_esys_kod_esys1 = 1)  then 1 else 0 end  as is_el, /*number*/
a.kodp as kodp, /**//*number*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
kod_isp.dat_srok as dat_srok, /*Срок отсрочки / рассрочки*//*date*/
a.kod_podr as kod_podr, /*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата начала исполнительного производства*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd1 as ur_dp_priz_hnd, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd1 as ur_opl_do_il_hnd, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Остаток долга по исп. листу*//*number*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust, /*Группа потребления *//*string*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
a.is_not_new as is_not_new, /*number*/
 case  when (( nvl( a.is_not_new ,0)=1 )  and (qube.rs_esys_kod_esys1 = 1) )  then 1 else 0 end  as kod_esys10_other_visible, /*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.tep_el as tep_el, /*number*/
kod_isp.kod_folders as kod_folders_pp, /*number*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Исполнительный лист*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
kod_category_x_n.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
kod_vi_x_n.name as kod_vi_x_n, /*Наименование*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
tep_el_x_n.name as tep_el_x_n, /*Наименование*//*string*/
qube.ur_fld_isp_kod_isp_vld1 as ur_fld_isp_kod_isp_vld, /*string*/
a.kodp_new_val as kodp_new_val, /*number*/
a.is_new as is_new, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  as ur_dp_priz_hnd1, /*Признанная сумма  с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  as ur_opl_do_il_hnd1, /*Оплата до выдачи исп листа учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
min(qube.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Группа потребления *//*string*/
max( case  when (qube.ur_folders_isp_othr_count1 &gt; 1)  then 'По выбранному исп. листу уже есть папка исполнительного производства' end )  as ur_fld_isp_kod_isp_vld1/*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
min(un.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_folders_isp_othr_count1)  as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
rs_esys.kod_esys as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null ) )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from ur_folders
a
--\ur_folders
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from ur_folders
a
--\ur_folders
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
(a.kod_folders = :kod_folders )  and (a.kod_folders is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.kod_isp as kod_isp, /*number*/
a.tep_el as tep_el, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
a.kod_podr as kod_podr, /*number*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--kk_tep_el
select a.tep_el as tep_el, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kk_tep_el
a
--\kk_tep_el
)
tep_el_x_n on a.tep_el = tep_el_x_n.tep_el--\kk_tep_el
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on a.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--uk_vi
select a.kod_vi as kod_vi, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from uk_vi
a
--\uk_vi
)
kod_vi_x_n on a.kod_vi = kod_vi_x_n.kod_vi--\uk_vi
left outer join
(
--us_category
select а.kod_category as kod_category, /*number*//*key*/
а.name || ' ' || а.abbr as sp_col_name/**//*string*/

from us_category
а
--\us_category
)
kod_category_x_n on a.kod_category = kod_category_x_n.kod_category--\us_category
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on a.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on a.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on a.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok/*Дата отсрочки исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</select-text>
      <columns>
        <column name="kod_isp" table="a" type="number" title="Исполнительный лист" parname="cur_kod_isp" EditableInvert="1" ClientEditable="ur_folders_is_not_new" is-user-editable="1" ClientDefault="kod_isp" ColumnMandatory="1" Valid="qube.ur_fld_isp_kod_isp_vld" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_isp" as="kod_isp" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_isp" into="n1">a.kod_isp as kod_isp, /**//*number*//*key*/
</column><column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="num_reg" into="s1">a.num_reg as num_reg, /*Номер исп. листа*//*string*/
</column><column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" key="0" used="1" type="date" agg="max" sourcetable="./a/a" sourcecolumn="dat_doc" into="d1">a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_post" into="d2">a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
</column><column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_function" into="d3">a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
</column><column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_srok" into="d4">a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
</column><column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_emp" reference="kr_employee" refcol="kod_emp" into="n2">a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
</column><column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." key="0" used="1" type="string" sourcetable="./a/kod_emp" sourcecolumn="fio" into="s2">kod_emp.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
</column><column table="a" column="prim" as="prim" title="Примечание" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="prim" into="s3">a.prim as prim, /*Примечание*//*string*/
</column><column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_arh" into="d5">a.dat_arh as dat_arh, /*Дата архивации*//*date*/
</column><column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_post_upr" into="d6">a.dat_post_upr as dat_post_upr, /*Дата поступления исп.листа в управление*//*date*/
</column><column table="a" column="full_name" as="full_name" title="Исполнительный лист" key="0" used="1" type="string" agg="max" into="s4">a.full_name as full_name, /*Исполнительный лист*//*string*/
</column><column table="a" column="info" as="info" title="Исполнительный лист" key="0" used="1" type="string" agg="max" into="s5">a.info as info, /*Исполнительный лист*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус исп. листа" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус исп. листа*//*number*/
</column><column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" key="0" used="1" type="date" agg="max" sourcetable="./a/a" sourcecolumn="dat_doc" into="d7">a.dat_doc1 as dat_doc1, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " key="0" used="1" type="string" agg="max" into="s6">a.dat_doc_vld as dat_doc_vld, /* *//*string*/
</column><column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" into="n4">a.kod_status_opl as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</column><column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" into="n5">a.dolg_on_il_hnd as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" key="0" used="1" type="number" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch" into="n6">a.ur_opl_posl_il_hnd as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select>
                <from>
from <query name="ur_isp" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" sourcetable="./a/a" sourcecolumn="num_reg" used="1">a.num_reg as num_reg, /*Номер исп. листа*//*string*/
</column><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" sourcetable="./a/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_post" type="date" title="Дата поступления исп.листа в отделение" comment="дата поступл.исп.листа в отделение" as="dat_post" key="0" sourcetable="./a/a" sourcecolumn="dat_post" used="1">a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
</column><column table="a" column="dat_function" type="date" title="Дата вступления в силу акта" comment="дата начала срока действия исп.листа" column-mandatory="1" as="dat_function" key="0" sourcetable="./a/a" sourcecolumn="dat_function" used="1">a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
</column><column table="a" column="dat_srok" type="date" title="Дата отсрочки исп. листа" comment="срок предоставления отсрочки / рассрочки по исп. листу" as="dat_srok" key="0" sourcetable="./a/a" sourcecolumn="dat_srok" used="1">a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
</column><column table="a" column="kod_emp" type="number" comment="юрист" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." column-mandatory="1" as="kod_emp" reference="kr_employee" refcol="kod_emp" key="0" sourcetable="./a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
</column><column table="a" column="prim" type="string" title="Примечание" comment="примечание" controlType="UITextEx" as="prim" key="0" sourcetable="./a/a" sourcecolumn="prim" used="1">a.prim as prim, /*Примечание*//*string*/
</column><column table="a" column="dat_arh" type="date" title="Дата архивации" comment="Дата архивации" as="dat_arh" key="0" sourcetable="./a/a" sourcecolumn="dat_arh" used="1">a.dat_arh as dat_arh, /*Дата архивации*//*date*/
</column><column table="a" column="dat_post_upr" type="date" title="Дата поступления исп.листа в управление" comment="дата поступл.исп.листа в управление" as="dat_post_upr" key="0" sourcetable="./a/a" sourcecolumn="dat_post_upr" used="1">a.dat_post_upr as dat_post_upr, /*Дата поступления исп.листа в управление*//*date*/
</column><call function="||" as="full_name" title="Исполнительный лист" key="0" pth="" type="string" used="1" agg="max"><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" thissrc="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as full_name, /*Исполнительный лист*//*string*/
</call><call function="||" as="info" title="Исполнительный лист" agg="max" key="0" pth="" type="string" used="1"><const><text>'ИЛ № '</text></const><text txtype="func"> || </text><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" thissrc="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as info, /*Исполнительный лист*//*string*/
</call><call function="true if null" as="is_active" title="Статус исп. листа" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_arh" type="date" title="Дата архивации" comment="Дата архивации" as="dat_arh" key="0" thissrc="dat_arh">a.dat_arh</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус исп. листа*//*number*/
</call><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc1" key="0" thissrc="dat_doc" sourcetable="./a/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc1, /*Дата выдачи исп. листа*//*date*/
</column><call function="if" type="string" as="dat_doc_vld" agg="max" title=" " key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="is not null" pth="" type="bool">(<column table="kod_hist_mat_dec" column="dat_entry">kod_hist_mat_dec.dat_entry</column><text txtype="func"> is not null </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="gt" pth="" type="bool">(<call function="sysdate" pth="" type="date">(<text txtype="func"> sysdate </text>) </call><text txtype="func"> &gt; </text><call function="date add days" pth="" type="date">(<column table="kod_hist_mat_dec" column="dat_entry">kod_hist_mat_dec.dat_entry</column><text txtype="func"> + ( </text><const><text>14</text></const><text txtype="func"> ) </text>) </call>) </call>) </call><text txtype="func"> then </text><const><text>'[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу'</text></const><text txtype="func"> end </text> as dat_doc_vld, /* *//*string*/
</call><column table="kod_isp_q" column="kod_status_opl" as="kod_status_opl" key="0" used="1" type="number" title="Статус оплаты ИЛ" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">kod_isp_q.kod_status_opl as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</column><column table="kod_isp_q" column="dolg_on_il_hnd" as="dolg_on_il_hnd" key="0" is-fact-use="1" used="1" type="number" title="Долг на дату выдачи ИЛ с учетом ручных сумм" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">kod_isp_q.dolg_on_il_hnd as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column table="kod_isp_q" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" key="0" is-fact-use="1" used="1" type="number" title="Оплата по исп листу с учетом ручных сумм" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">kod_isp_q.ur_opl_posl_il_hnd as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" used="1">ur_isp
a
--\ur_isp
</table><query name="ur_hist_mat_dec" dimension="kod_hist_mat" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry" key="0" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="a" column="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp_qube" as="kod_isp_q" join="left outer" path="./a/a/kod_isp_q" used="1">left outer join
(
<select>--ur_isp_qube
select <column table="kod_isp" column="kod_isp" as="kod_isp" keypath=".kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><call function="case" as="kod_status_opl" title="Статус оплаты ИЛ" type="number" pth="" used="1" key="0" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="gt" pth="" type="bool">(<column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" thissrc="dolg_on_il_hnd" table="qube">nvl(qube.dolg_on_il_hnd1,0) </column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>0</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="gt" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> &lt; </text><column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" thissrc="dolg_on_il_hnd" table="qube">nvl(qube.dolg_on_il_hnd1,0) </column>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>2</text></const></call><text txtype="func"> end </text> as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</call><column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" table="qube" used="1" key="0" type="number" title="Долг на дату выдачи ИЛ с учетом ручных сумм" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">nvl(qube.dolg_on_il_hnd1,0)  as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" table="qube" used="1" key="0" type="number" title="Оплата по исп листу с учетом ручных сумм" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">nvl(qube.ur_opl_posl_il_hnd1,0)  as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select><from>
from <query haskeys="1" as="qube" path="./a/a/kod_isp_q/qube" used="1">(
<select>--
select <column table="qube" column="kod_isp" group="1" as="kod_isp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*//*key*/
</column><call as="dolg_on_il_hnd1" function="+nvl" title="Долг на дату выдачи ИЛ с учетом ручных сумм" key="0" group="sum" pth="" type="number" used="1" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">sum(<text txtype="func"> nvl( </text><call function="if" as="dolg_on_il" title="Задолженность на дату выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> then </text><call function="-nvl" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="ur_dp_sum_v1">qube.ur_dp_sum_v1</column><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><call function="if" as="ur_opl_do_il" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &lt; </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column><text txtype="func"> , </text><call function="doomsday" pth="0" type="date"><text txtype="func"> DATE'8999-12-31' </text></call><text txtype="func"> ) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="+nvl" as="ur_opl_posl_resh" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="sr_opl_kred_ur1">qube.sr_opl_kred_ur1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_deb_posl_resh" title="Оплата после вынес. реш. суда" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column>) </call><text txtype="func"> then </text><call function="if" as="ur_opl" title="Оплата по юр. документу" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="or" pth="1" type="bool">(<call function="=1" pth="1" type="bool">(<text txtype="func"> nvl( </text><column table="kod_dogplat" column="prizn_konv" title="вроде как признак счета сформированного в арбитраже">kod_dogplat.prizn_konv</column><text txtype="func"> ,0)=1 </text>) </call><text txtype="func"> or </text><call function="gt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt; </text><call function="earliest" pth="" type="date">(<text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><column table="kod_dogplat" column="dat_form">kod_dogplat.dat_form</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="()" as="fin_ul_fl_opl" pth="">(<column table="qube" column="sr_opl_opl_sf1">qube.sr_opl_opl_sf1</column>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call as="ur_hand_dolg_on_il" function="if" type="number" title="Оплата ручных сумм до выдачи исп листа" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="is null" pth="" type="bool">(<column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is null </text>) </call><text txtype="func"> then </text><column table="qube" column="ur_hist_mat_dec_hand_ost1">qube.ur_hist_mat_dec_hand_ost1</column><text txtype="func"> else </text><column table="qube" column="ur_hist_mat_dec_hand_sum1">qube.ur_hist_mat_dec_hand_sum1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="-nvl" as="dolg_on_il_astr" title="Долг по астренту" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="fin_ul_nach_astr1">qube.fin_ul_nach_astr1</column><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><call function="if" as="ur_opl_do_il_astr" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="lt" pth="" type="bool">(<column table="kod_opl_astr" column="dat_opl">kod_opl_astr.dat_opl</column><text txtype="func"> &lt; </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column><text txtype="func"> , </text><call function="doomsday" pth="0" type="date"><text txtype="func"> DATE'8999-12-31' </text></call><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> then </text><column table="qube" column="fin_ul_opl_astr1">qube.fin_ul_opl_astr1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> ,0) </text>)  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</call><call as="ur_opl_posl_il_hnd1" function="+nvl" title="Оплата по исп листу с учетом ручных сумм" key="0" group="sum" pth="" type="number" used="1" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">sum(<text txtype="func"> nvl( </text><call function="if" as="ur_opl_posl_il" type="number" title="Оплата по исп. листу" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column>) </call><text txtype="func"> then </text><call function="+nvl" as="ur_opl_posl_resh" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="sr_opl_kred_ur1">qube.sr_opl_kred_ur1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_deb_posl_resh" title="Оплата после вынес. реш. суда" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column>) </call><text txtype="func"> then </text><call function="if" as="ur_opl" title="Оплата по юр. документу" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="or" pth="1" type="bool">(<call function="=1" pth="1" type="bool">(<text txtype="func"> nvl( </text><column table="kod_dogplat" column="prizn_konv" title="вроде как признак счета сформированного в арбитраже">kod_dogplat.prizn_konv</column><text txtype="func"> ,0)=1 </text>) </call><text txtype="func"> or </text><call function="gt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt; </text><call function="earliest" pth="" type="date">(<text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><column table="kod_dogplat" column="dat_form">kod_dogplat.dat_form</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="()" as="fin_ul_fl_opl" pth="">(<column table="qube" column="sr_opl_opl_sf1">qube.sr_opl_opl_sf1</column>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="qube" column="ur_hist_mat_dec_hand_opl1">qube.ur_hist_mat_dec_hand_opl1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_posl_il_astr" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl_astr" column="dat_opl">kod_opl_astr.dat_opl</column><text txtype="func"> &gt;= </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column>) </call><text txtype="func"> then </text><column table="qube" column="fin_ul_opl_astr1">qube.fin_ul_opl_astr1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>)  as ur_opl_posl_il_hnd1/*Оплата по исп листу с учетом ручных сумм*//*number*/
</call></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">qube.kod_opl_astr as kod_opl_astr, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><column table="qube" column="kod_dogplat" as="kod_dogplat" keypath=".kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">qube.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="qube" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="qube" column="fin_ul_nach_astr1" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><column table="qube" column="fin_ul_opl_astr1" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
</column><column table="qube" column="sr_opl_kred_ur1" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
</column><column table="qube" column="sr_opl_opl_sf1" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
</column><column table="qube" column="ur_dp_sum_v1" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_opl1" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_ost1" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_sum1" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><const as="kod_opl" used="1" key="0"><text>null</text> as kod_opl, 
</const><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><column table="qube" column="fin_ul_nach_astr1" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><column table="qube" column="ur_dp_sum_v1" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_opl1" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_ost1" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_sum1" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="fin_ul_nach_astr1" group="sum" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><column table="un" column="ur_dp_sum_v1" group="sum" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_opl1" group="sum" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_ost1" group="sum" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_sum1" group="sum" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_facras_astr" column="nachisl_astr" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_facras_astr_a_d" column="kod_ras" as="kod_ras_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras">sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="sr_facras_astr" dimension="kod_ras_astr" as="sr_facras_astr_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" haskeys="1" used="1">(
<select>--sr_facras_astr
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras_astr" key="1" fixed="1" thissrc="kod_ras" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras_astr" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_astr_a_d
--\sr_facras_astr
</query><query name="sr_facvip_astr" dimension="kod_sf_astr" as="kod_sf_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_astr
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf_astr" key="1" fixed="1" thissrc="kod_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf_astr" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_astr_a_d on <column table="sr_facras_astr_a_d" column="kod_sf">sr_facras_astr_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_facvip_astr
</query><query name="sr_penni_astr" dimension="kod_pen_astr" as="kod_pen_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_penni_astr
select <call function="nvl" as="kod_sf_astr" pth="" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" reference="sr_facvip" refcol="kod_sf"><text txtype="func"> nvl( </text><column table="kod_sf" column="kod_sf_first">kod_sf.kod_sf_first</column><text txtype="func"> , </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column><text txtype="func"> ) </text> as kod_sf_astr, /*number*/
</call><column table="a" column="kod_delo" as="kod_delo" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" reference="ur_mat" refcol="kod_mat">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <query name="sr_penni" as="a" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" haskeys="1" used="1">(
<select>--sr_penni
select <column table="a" column="kod_pen" type="number" as="kod_pen" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_pen" used="1">a.kod_pen as kod_pen, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" comment="счета фактур" as="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_delo" type="number" comment="код дела ur_mat.kod_mat, по которому отбираются документы для расчета пени в режиме арбитраж" as="kod_delo" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" used="1">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <table name="sr_penni" as="a" used="1">sr_penni
a
--\sr_penni
</table></from>)
a
--\sr_penni
</query><query name="sr_facvip" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" used="1">a.kod_sf_first as kod_sf_first/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_delo">a.kod_delo</column><text txtype="func"> is not null </text></call></where><call function="=" type="bool">)
kod_pen_astr_a_d on <column table="kod_pen_astr_a_d" column="kod_sf_astr">kod_pen_astr_a_d.kod_sf_astr</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_penni_astr
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_pen_astr_a_d" column="kod_delo">kod_pen_astr_a_d.kod_delo</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_facras_astr_a_d" column="kod_ras" as="kod_ras_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras">sr_facras_astr_a_d.kod_ras, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_facras_astr" dimension="kod_ras_astr" as="sr_facras_astr" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" haskeys="1" used="1">left outer join
(
<select>--sr_facras_astr
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras_astr" key="1" fixed="1" thissrc="kod_ras" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras_astr, /*number*//*key*/
</column><column table="a" column="nachisl" type="number" title="Начислено астрент" fact="sr_facras_nachisl" agg="sum" as="nachisl_astr" key="0" thissrc="nachisl" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl" used="1">a.nachisl as nachisl_astr/*Начислено астрент*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras_astr" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
sr_facras_astr on <column table="sr_facras_astr" column="kod_ras">sr_facras_astr.kod_ras</column><text txtype="func"> = </text><column table="dims" column="kod_ras_prm">dims.kod_ras_prm</column></call>--\sr_facras_astr
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><column table="ur_dogplat" column="sum_v" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_dogplat_a_d" column="kod_dogplat" as="kod_dogplat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat">ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="ur_dogplat" dimension="kod_dogplat" as="ur_dogplat_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" haskeys="1" used="1">(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from>)
ur_dogplat_a_d
--\ur_dogplat
</query><query name="ur_mat" as="kod_mat1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1_a_d1 on <column table="ur_dogplat_a_d" column="kod_mat">ur_dogplat_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="ur_dogplat_a_d" column="kod_dogplat" as="kod_dogplat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat">ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_dogplat" dimension="kod_dogplat" as="ur_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="sum_v" type="number" fact="ur_dp_sum_v" title="Признано по юр. документу" agg="sum" as="sum_v" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" used="1">a.sum_v as sum_v/*Признано по юр. документу*//*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
ur_dogplat on <column table="ur_dogplat" column="kod_dogplat">ur_dogplat.kod_dogplat</column><text txtype="func"> = </text><column table="dims" column="kod_dogplat_prm">dims.kod_dogplat_prm</column></call>--\ur_dogplat
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><column table="ur_hist_mat_dec" column="hand_opl" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="ur_hist_mat_dec" column="hand_ost" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="ur_hist_mat_dec" column="hand_sum" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="ur_hist_mat_dec_a_d" column="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="+nvl" as="hand_sum" agg="sum" key="0" pth="" type="number" used="1" title="Расходы за введение ограничения режима энергопотребления"><text txtype="func"> nvl( </text><column table="a" column="ogr" type="number" title="Расходы за введение ограничения режима энергопотребления" comment="расходы за введение ограничения режима электропотребления" as="ogr" fact="ur_hist_mat_dec_ogr" agg="sum" key="0" thissrc="ogr">a.ogr</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="sud_izd" type="number" comment="судебные издержки" title="Судебные издержки" exists="decision" as="sud_izd" fact="ur_hist_mat_dec_sud_izd" agg="sum" key="0" thissrc="sud_izd">a.sud_izd</column><text txtype="func"> ,0) </text> as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
</call><call function="+nvl" as="hand_opl" agg="sum" key="0" pth="" type="number" used="1" title="Оплачено: расходы за введение ограничения режима энергопотребления"><text txtype="func"> nvl( </text><column table="a" column="opl_ogr" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" comment="вручную: оплата расходов за ограничение электропотребления " as="opl_ogr" fact="ur_hist_mat_dec_opl_ogr" agg="sum" key="0" thissrc="opl_ogr">a.opl_ogr</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opl_sud_izd" type="number" title="Оплачено: Судебные издержки" comment="оплата судебных издержек" exists="decision" as="opl_sud_izd" fact="ur_hist_mat_dec_opl_sud_izd" agg="sum" key="0" thissrc="opl_sud_izd">a.opl_sud_izd</column><text txtype="func"> ,0) </text> as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</call><call function="+nvl" as="hand_ost" agg="sum" key="0" pth="" type="number" used="1"><text txtype="func"> nvl( </text><call function="-" as="ost_ogr" title="Остаток задолж. расх. за введ. огр. реж. энергопотр." agg="sum" key="0" pth="" type="number" thissrc="ost_ogr">(<column table="a" column="ogr" nvl="0">nvl(a.ogr,0) </column><text txtype="func"> - </text><column table="a" column="opl_ogr" nvl="0">nvl(a.opl_ogr,0) </column>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="-" as="ost_sud_izd" title="Остаток задолж. суд. издерж." agg="sum" key="0" pth="" type="number" thissrc="ost_sud_izd">(<column table="a" nvl="0" column="sud_izd">nvl(a.sud_izd,0) </column><text txtype="func"> - </text><column table="a" column="opl_sud_izd" nvl="0">nvl(a.opl_sud_izd,0) </column>) </call><text txtype="func"> ,0) </text> as hand_ost/*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
ur_hist_mat_dec on <column table="ur_hist_mat_dec" column="kod_hist_mat">ur_hist_mat_dec.kod_hist_mat</column><text txtype="func"> = </text><column table="dims" column="kod_hist_mat_prm">dims.kod_hist_mat_prm</column></call>--\ur_hist_mat_dec
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><const as="kod_opl" used="1" key="0"><text>null</text> as kod_opl, 
</const><column table="qube" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">qube.kod_opl_astr as kod_opl_astr, /*number*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><column table="qube" column="fin_ul_opl_astr1" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
</column><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl_astr" group="1" as="kod_opl_astr" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
</column><column table="un" column="fin_ul_opl_astr1" group="sum" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="dims" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">dims.kod_opl_astr as kod_opl_astr, /*number*/
</column><column table="sr_opl_astr" column="opl_astr" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="kod_opl_astr" column="kod_opl" as="kod_opl_astr" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
</column><column table="kod_opl_astr" column="kod_opl" as="kod_opl_prm" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="sr_opl_astr" dimension="kod_opl_astr" as="kod_opl_astr" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" haskeys="1" used="1">(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from>)
kod_opl_astr
--\sr_opl_astr
</query><query name="sr_facvip_astr" dimension="kod_sf_astr" as="kod_sf_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_astr
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf_astr" key="1" fixed="1" thissrc="kod_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf_astr" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_astr_a_d on <column table="kod_opl_astr" column="kod_sf">kod_opl_astr.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_facvip_astr
</query><query name="sr_penni_astr" dimension="kod_pen_astr" as="kod_pen_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_penni_astr
select <call function="nvl" as="kod_sf_astr" pth="" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" reference="sr_facvip" refcol="kod_sf"><text txtype="func"> nvl( </text><column table="kod_sf" column="kod_sf_first">kod_sf.kod_sf_first</column><text txtype="func"> , </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column><text txtype="func"> ) </text> as kod_sf_astr, /*number*/
</call><column table="a" column="kod_delo" as="kod_delo" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" reference="ur_mat" refcol="kod_mat">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <query name="sr_penni" as="a" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" haskeys="1" used="1">(
<select>--sr_penni
select <column table="a" column="kod_pen" type="number" as="kod_pen" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_pen" used="1">a.kod_pen as kod_pen, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" comment="счета фактур" as="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_delo" type="number" comment="код дела ur_mat.kod_mat, по которому отбираются документы для расчета пени в режиме арбитраж" as="kod_delo" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" used="1">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <table name="sr_penni" as="a" used="1">sr_penni
a
--\sr_penni
</table></from>)
a
--\sr_penni
</query><query name="sr_facvip" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" used="1">a.kod_sf_first as kod_sf_first/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_delo">a.kod_delo</column><text txtype="func"> is not null </text></call></where><call function="=" type="bool">)
kod_pen_astr_a_d on <column table="kod_pen_astr_a_d" column="kod_sf_astr">kod_pen_astr_a_d.kod_sf_astr</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_penni_astr
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_pen_astr_a_d" column="kod_delo">kod_pen_astr_a_d.kod_delo</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="kod_opl_astr" column="kod_opl" as="kod_opl_astr" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_astr" dimension="kod_opl_astr" as="sr_opl_astr" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_astr" haskeys="1" used="1">left outer join
(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_astr" agg="sum" title="Оплачено астрент" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_astr/*Оплачено астрент*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
sr_opl_astr on <column table="sr_opl_astr" column="kod_opl">sr_opl_astr.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_astr
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl_astr" group="1" as="kod_opl_astr" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">un.kod_opl_astr/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><column table="qube" column="sr_opl_kred_ur1" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
</column><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">un.kod_opl as kod_opl, /*number*//*key*/
</column><column table="un" column="sr_opl_kred_ur1" group="sum" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="dims" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">dims.kod_opl as kod_opl, /*number*/
</column><column table="sr_opl_kred_ur" column="opl_kred_ur" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/
</column></select><from>
from <query name="sr_opl_kred_ur" dimension="kod_opl_kred_ur" as="sr_opl_kred_ur_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" haskeys="1" used="1">(
<select>--sr_opl_kred_ur
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_link" type="number" as="kod_link" reference="sr_opl_bank" refcol="kod_link" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_link" used="1">a.kod_link as kod_link/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_kred_ur" used="1">sr_opl
a
--\sr_opl
</table><query name="sr_opl_bank" dimension="1" as="kod_link" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" dimension="1" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link on <column table="a" column="kod_link">a.kod_link</column><text txtype="func"> = </text><column table="kod_link" column="kod_link">kod_link.kod_link</column></call>--\sr_opl_bank
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>5</text></const><text txtype="func"> , </text><const><text>6</text></const>) </call>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="kod_link" column="kod_mat">kod_link.kod_mat</column><text txtype="func"> is not null </text>) </call></call></where>)
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
</query><query name="sr_opl_bank" as="kod_link1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link1_a_d1 on <column table="sr_opl_kred_ur_a_d" column="kod_link">sr_opl_kred_ur_a_d.kod_link</column><text txtype="func"> = </text><column table="kod_link1_a_d1" column="kod_link">kod_link1_a_d1.kod_link</column></call>--\sr_opl_bank
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_link1_a_d1" column="kod_mat">kod_link1_a_d1.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_kred_ur" dimension="kod_opl_kred_ur" as="sr_opl_kred_ur" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur" haskeys="1" used="1">left outer join
(
<select>--sr_opl_kred_ur
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_kred_ur" agg="sum" title="Оплата (кредит)" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_kred_ur/*Оплата (кредит)*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_kred_ur" used="1">sr_opl
a
--\sr_opl
</table><query name="sr_opl_bank" dimension="1" as="kod_link" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" dimension="1" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link on <column table="a" column="kod_link">a.kod_link</column><text txtype="func"> = </text><column table="kod_link" column="kod_link">kod_link.kod_link</column></call>--\sr_opl_bank
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>5</text></const><text txtype="func"> , </text><const><text>6</text></const>) </call>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="kod_link" column="kod_mat">kod_link.kod_mat</column><text txtype="func"> is not null </text>) </call></call></where><call function="=" type="bool">)
sr_opl_kred_ur on <column table="sr_opl_kred_ur" column="kod_opl">sr_opl_kred_ur.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_kred_ur
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">un.kod_opl/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <column table="qube" column="kod_dogplat" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">qube.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="qube" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><column table="qube" column="sr_opl_opl_sf1" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
</column><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_dogplat" group="1" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">un.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="un" column="kod_hist_mat_dec" group="1" as="kod_hist_mat_dec" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
</column><column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">un.kod_opl as kod_opl, /*number*//*key*/
</column><column table="un" column="sr_opl_opl_sf1" group="sum" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_dogplat" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">dims.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="dims" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="dims" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*/
</column><column table="dims" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">dims.kod_opl as kod_opl, /*number*/
</column><column table="sr_opl_sf" column="opl_sf" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_dogplat" column="kod_dogplat" as="kod_dogplat" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="kod_hist_mat_dec" column="kod_hist_mat" as="kod_hist_mat_dec" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/
</column></select><from>
from <query name="sr_opl_sf" dimension="kod_opl_sf" as="sr_opl_sf_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" haskeys="1" used="1">(
<select>--sr_opl_sf
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_sf" used="1">sr_opl
a
--\sr_opl
</table></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call></call></where>)
sr_opl_sf_a_d
--\sr_opl_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_a_d on <column table="sr_opl_sf_a_d" column="kod_sf">sr_opl_sf_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_a_d" column="kod_sf">kod_sf_a_d.kod_sf</column></call>--\sr_facvip
</query><query name="vv_all_deb_sf" as="vv_all_deb_sf_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
vv_all_deb_sf_a_d1 on <column table="vv_all_deb_sf_a_d1" column="kod_sf">vv_all_deb_sf_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_a_d" column="kod_sf">kod_sf_a_d.kod_sf</column></call>--\vv_all_deb_sf
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat on <column table="kod_dogplat" column="kod_deb_sf">kod_dogplat.kod_deb_sf</column><text txtype="func"> = </text><column table="vv_all_deb_sf_a_d1" column="kod_deb_sf">vv_all_deb_sf_a_d1.kod_deb_sf</column></call>--\ur_dogplat
</query><query name="ur_mat" as="kod_mat1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1_a_d1 on <column table="kod_dogplat" column="kod_mat">kod_dogplat.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="kod_hist_mat_dec" column="kod_mat">kod_hist_mat_dec.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl, /*number*//*key*/
</column><column table="kod_dogplat" column="kod_dogplat" as="kod_dogplat" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">kod_dogplat.kod_dogplat, /*number*//*key*/
</column><column table="kod_hist_mat_dec" column="kod_hist_mat" as="kod_hist_mat_dec" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_sf" dimension="kod_opl_sf" as="sr_opl_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_sf" haskeys="1" used="1">left outer join
(
<select>--sr_opl_sf
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_sf" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_sf" agg="sum" title="Оплата начислений" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_sf/*Оплата начислений*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_sf" used="1">sr_opl
a
--\sr_opl
</table></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call></call></where><call function="=" type="bool">)
sr_opl_sf on <column table="sr_opl_sf" column="kod_opl">sr_opl_sf.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_sf
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_dogplat" group="1" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">un.kod_dogplat, /*number*//*key*/
</column><column table="un" column="kod_hist_mat_dec" group="1" as="kod_hist_mat_dec" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">un.kod_hist_mat_dec, /*number*//*key*/
</column><column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">un.kod_opl/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" link-mp-point="1" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="dat_post" type="date" title="Дата прин. суд. акта" column-mandatory="1" comment="Дата принятия судебного акта" as="dat_post" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="dat_post" used="1">a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column><text txtype="func"> = </text><column table="qube" column="kod_hist_mat_dec">qube.kod_hist_mat_dec</column></call>--\ur_hist_mat_dec
</query><query name="ur_dogplat" dimension="kod_dogplat" link-mp-point="1" as="kod_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/kod_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="dat_form" type="date" title="Дата расч. задолж." editable="is_doc" editable-invert="1" as="dat_form" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="dat_form" used="1">a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
</column><column table="a" column="prizn_konv" type="number" title="" comment="Бельченко: не знаю для чего создавалась будет признаком автоматического счета" is-fact="1" agg="max" as="prizn_konv" fact="ur_dogplat_prizn_konv" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="prizn_konv" used="1">a.prizn_konv as prizn_konv/**//*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat on <column table="kod_dogplat" column="kod_dogplat">kod_dogplat.kod_dogplat</column><text txtype="func"> = </text><column table="qube" column="kod_dogplat">qube.kod_dogplat</column></call>--\ur_dogplat
</query><query name="sr_opl" dimension="kod_opl" link-mp-point="1" as="kod_opl" join="left outer" path="./a/a/kod_isp_q/qube/kod_opl" haskeys="1" used="1">left outer join
(
<select>--sr_opl
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="dat_uch" type="date" title="" as="dat_uch" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch" used="1">a.dat_uch as dat_uch/**//*date*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
kod_opl on <column table="kod_opl" column="kod_opl">kod_opl.kod_opl</column><text txtype="func"> = </text><column table="qube" column="kod_opl">qube.kod_opl</column></call>--\sr_opl
</query><query name="sr_opl_astr" dimension="kod_opl_astr" link-mp-point="1" as="kod_opl_astr" join="left outer" path="./a/a/kod_isp_q/qube/kod_opl_astr" haskeys="1" used="1">left outer join
(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="dat_opl" type="date" title="Дата платежного документа" as="dat_opl" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_opl_astr" sourcecolumn="dat_opl" used="1">a.dat_opl as dat_opl/*Дата платежного документа*//*date*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
kod_opl_astr on <column table="kod_opl_astr" column="kod_opl">kod_opl_astr.kod_opl</column><text txtype="func"> = </text><column table="qube" column="kod_opl_astr">qube.kod_opl_astr</column></call>--\sr_opl_astr
</query><query name="ur_isp" dimension="kod_isp" link-mp-point="1" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_isp" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> = </text><column table="qube" column="kod_isp">qube.kod_isp</column></call>--\ur_isp
</query></from><group> group by
<column table="qube" column="kod_isp" group="1" as="kod_isp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_isp" dimension="kod_isp" link-mp-point="1" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> = </text><column table="qube" column="kod_isp">qube.kod_isp</column></call>--\ur_isp
</query></from><call function="=" type="bool">)
kod_isp_q on <column table="a" column="kod_isp">a.kod_isp</column><text txtype="func"> = </text><column table="kod_isp_q" column="kod_isp">kod_isp_q.kod_isp</column></call>--\ur_isp_qube
</query></from>)
a
--\ur_isp
</query><query name="kr_employee" as="kod_emp" join="left outer" path="./a/kod_emp" haskeys="1" used="1">left outer join
(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/kod_emp" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/kod_emp" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from><call function="=" type="bool">)
kod_emp on <column table="a" column="kod_emp">a.kod_emp</column><text txtype="func"> = </text><column table="kod_emp" column="kod_emp">kod_emp.kod_emp</column></call>--\kr_employee
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_isp" as="kod_isp" title="" key="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_isp" as="kod_isp" title="" key="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> ) like lower( </text><const><text>:kod_isp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" thissrc="num_reg">a.num_reg</column><text txtype="func"> ) like lower( </text><const><text>:num_reg_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" thissrc="dat_post">a.dat_post</column><text txtype="func"> ) like lower( </text><const><text>:dat_post_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" thissrc="dat_function">a.dat_function</column><text txtype="func"> ) like lower( </text><const><text>:dat_function_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" thissrc="dat_srok">a.dat_srok</column><text txtype="func"> ) like lower( </text><const><text>:dat_srok_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." thissrc="kod_emp_x_n">kod_emp.fio</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="prim" as="prim" title="Примечание" thissrc="prim">a.prim</column><text txtype="func"> ) like lower( </text><const><text>:prim_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" thissrc="dat_arh">a.dat_arh</column><text txtype="func"> ) like lower( </text><const><text>:dat_arh_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" thissrc="dat_post_upr">a.dat_post_upr</column><text txtype="func"> ) like lower( </text><const><text>:dat_post_upr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="full_name" as="full_name" title="Исполнительный лист" thissrc="full_name">a.full_name</column><text txtype="func"> ) like lower( </text><const><text>:full_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info" as="info" title="Исполнительный лист" thissrc="info">a.info</column><text txtype="func"> ) like lower( </text><const><text>:info_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус исп. листа" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" thissrc="dat_doc1">a.dat_doc1</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc1_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " thissrc="dat_doc_vld">a.dat_doc_vld</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc_vld_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" thissrc="kod_status_opl">a.kod_status_opl</column><text txtype="func"> ) like lower( </text><const><text>:kod_status_opl_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" thissrc="dolg_on_il_hnd">a.dolg_on_il_hnd</column><text txtype="func"> ) like lower( </text><const><text>:dolg_on_il_hnd_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" thissrc="ur_opl_posl_il_hnd">a.ur_opl_posl_il_hnd</column><text txtype="func"> ) like lower( </text><const><text>:ur_opl_posl_il_hnd_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_isp_filter" type="string" />
                    <param name="num_reg_filter" type="string" />
                    <param name="dat_doc_filter" type="string" />
                    <param name="dat_post_filter" type="string" />
                    <param name="dat_function_filter" type="string" />
                    <param name="dat_srok_filter" type="string" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="kod_emp_x_n_filter" type="string" />
                    <param name="prim_filter" type="string" />
                    <param name="dat_arh_filter" type="string" />
                    <param name="dat_post_upr_filter" type="string" />
                    <param name="full_name_filter" type="string" />
                    <param name="info_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="dat_doc1_filter" type="string" />
                    <param name="dat_doc_vld_filter" type="string" />
                    <param name="kod_status_opl_filter" type="string" />
                    <param name="dolg_on_il_hnd_filter" type="string" />
                    <param name="ur_opl_posl_il_hnd_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_isp" as="kod_isp" title="" key="1" />
                    <column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" />
                    <column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" />
                    <column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" />
                    <column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" />
                    <column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" />
                    <column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
                    <column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
                    <column table="a" column="prim" as="prim" title="Примечание" />
                    <column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" />
                    <column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" />
                    <column table="a" column="full_name" as="full_name" title="Исполнительный лист" />
                    <column table="a" column="info" as="info" title="Исполнительный лист" />
                    <column table="a" column="is_active" as="is_active" title="Статус исп. листа" />
                    <column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" />
                    <column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " />
                    <column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" />
                    <column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" />
                    <column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" />
                  </select>
                  <from>
                    <query name="ur_isp" as="a" title="Исполнительный лист">
                      <link name="kod_emp" as="kod_emp" table="kr_employee" child="ur_isp" field="kod_emp" parent="kr_employee" back="ur_isp" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="kod_isp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_reg" />
                        <useparam name="num_reg_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc" />
                        <useparam name="dat_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_post" />
                        <useparam name="dat_post_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_function" />
                        <useparam name="dat_function_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_srok" />
                        <useparam name="dat_srok_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp_x_n" />
                        <useparam name="kod_emp_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="prim" />
                        <useparam name="prim_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_arh" />
                        <useparam name="dat_arh_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_post_upr" />
                        <useparam name="dat_post_upr_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="full_name" />
                        <useparam name="full_name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info" />
                        <useparam name="info_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc1" />
                        <useparam name="dat_doc1_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc_vld" />
                        <useparam name="dat_doc_vld_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_status_opl" />
                        <useparam name="kod_status_opl_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dolg_on_il_hnd" />
                        <useparam name="dolg_on_il_hnd_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ur_opl_posl_il_hnd" />
                        <useparam name="ur_opl_posl_il_hnd_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_isp_filter" />
                    <useparam name="num_reg_filter" />
                    <useparam name="dat_doc_filter" />
                    <useparam name="dat_post_filter" />
                    <useparam name="dat_function_filter" />
                    <useparam name="dat_srok_filter" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="kod_emp_x_n_filter" />
                    <useparam name="prim_filter" />
                    <useparam name="dat_arh_filter" />
                    <useparam name="dat_post_upr_filter" />
                    <useparam name="full_name_filter" />
                    <useparam name="info_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="dat_doc1_filter" />
                    <useparam name="dat_doc_vld_filter" />
                    <useparam name="kod_status_opl_filter" />
                    <useparam name="dolg_on_il_hnd_filter" />
                    <useparam name="ur_opl_posl_il_hnd_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_isp_filter" type="string">
                  <const>:kod_isp_filter </const>
                </param>
                <param name="num_reg_filter" type="string">
                  <const>:num_reg_filter </const>
                </param>
                <param name="dat_doc_filter" type="string">
                  <const>:dat_doc_filter </const>
                </param>
                <param name="dat_post_filter" type="string">
                  <const>:dat_post_filter </const>
                </param>
                <param name="dat_function_filter" type="string">
                  <const>:dat_function_filter </const>
                </param>
                <param name="dat_srok_filter" type="string">
                  <const>:dat_srok_filter </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="kod_emp_x_n_filter" type="string">
                  <const>:kod_emp_x_n_filter </const>
                </param>
                <param name="prim_filter" type="string">
                  <const>:prim_filter </const>
                </param>
                <param name="dat_arh_filter" type="string">
                  <const>:dat_arh_filter </const>
                </param>
                <param name="dat_post_upr_filter" type="string">
                  <const>:dat_post_upr_filter </const>
                </param>
                <param name="full_name_filter" type="string">
                  <const>:full_name_filter </const>
                </param>
                <param name="info_filter" type="string">
                  <const>:info_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="dat_doc1_filter" type="string">
                  <const>:dat_doc1_filter </const>
                </param>
                <param name="dat_doc_vld_filter" type="string">
                  <const>:dat_doc_vld_filter </const>
                </param>
                <param name="kod_status_opl_filter" type="string">
                  <const>:kod_status_opl_filter </const>
                </param>
                <param name="dolg_on_il_hnd_filter" type="string">
                  <const>:dolg_on_il_hnd_filter </const>
                </param>
                <param name="ur_opl_posl_il_hnd_filter" type="string">
                  <const>:ur_opl_posl_il_hnd_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
kod_isp.dat_srok as dat_srok, /*Срок отсрочки / рассрочки*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd1 as ur_dp_priz_hnd, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd1 as ur_opl_do_il_hnd, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Остаток долга по исп. листу*//*number*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust, /*Группа потребления *//*string*/
kod_isp.kod_folders as kod_folders_pp, /*number*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Исполнительный лист*//*string*/
qube.ur_fld_isp_kod_isp_vld1 as ur_fld_isp_kod_isp_vld, /*string*/
a.kodp_new_val as kodp_new_val, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  as ur_dp_priz_hnd1, /*Признанная сумма  с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  as ur_opl_do_il_hnd1, /*Оплата до выдачи исп листа учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
min(qube.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Группа потребления *//*string*/
max( case  when (qube.ur_folders_isp_othr_count1 &gt; 1)  then 'По выбранному исп. листу уже есть папка исполнительного производства' end )  as ur_fld_isp_kod_isp_vld1/*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
min(un.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_folders_isp_othr_count1)  as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from ( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
kod_isp.kodp as kodp_new_val, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on a.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok/*Дата отсрочки исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kr_dog_name" table="a" />
            <dependant name="dat_function" table="a" />
            <dependant name="dat_srok" table="a" />
            <dependant name="ur_hist_mat_dec_dat_resh" table="a" />
            <dependant name="ur_dp_priz_hnd" table="a" />
            <dependant name="ur_opl_do_il_hnd" table="a" />
            <dependant name="dolg_on_il_hnd" table="a" />
            <dependant name="ur_opl_posl_il_hnd" table="a" />
            <dependant name="dolg_resh_tek_hnd" table="a" />
            <dependant name="kr_dogovor_name_group_cust" table="a" />
            <dependant name="kod_folders_pp" table="a" />
            <dependant name="kod_isp_x_n" table="a" />
            <dependant name="ur_fld_isp_kod_isp_vld" table="a" />
            <dependant name="ur_fld_isp_kod_isp_vld" table="a" />
            <dependant name="kodp_new_val" table="a" />
          </dependants>
        </column>
        <column name="is_el" table="a" type="number" title="" parname="is_el" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select  case  when (qube.rs_esys_kod_esys1 = 1)  then 1 else 0 end  as is_el, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
rs_esys.kod_esys as rs_esys_kod_esys1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
a.kod_folders is not null  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as rs_esys_kod_esys1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp" table="a" type="number" title="Абонент" parname="kodp" ColumnEditable="0" ColumnMandatory="1" NewVal="kodp_new_val" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
a.kodp_new_val as kodp_new_val, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on a.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="a" />
            <dependant name="kodp_new_val" table="a" />
          </dependants>
        </column>
        <column name="kr_dog_name" table="a" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_function" table="kod_isp" type="date" title="Дата вступления в силу акта" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_function as dat_function/*Дата вступления в силу акта*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_srok" table="kod_isp" type="date" title="Срок отсрочки / рассрочки" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.dat_srok as dat_srok, /*Срок отсрочки / рассрочки*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_srok as dat_srok/*Дата отсрочки исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr" table="a" type="number" title="Отделение" parname="dep" ColumnEditable="kr_dep_is_multi" is-user-editable="1" ColumnDefault="kr_dep_current" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_podr" temp-col-name="n11">
          <sel-list-compiled>
            <root>
              <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="name">name</column>
                </order>
                <select>--a
select <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" used="1" into="n1">a.kodp as kodp, /*number*//*key*/
</column><column table="kodp" column="name" title="Отделение" as="name" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="name" into="s1">kodp.name as name, /*Отделение*//*string*/
</column><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="sname" into="s2">kodp.sname as sname, /*Аббревиатура*//*string*/
</column><const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0" used="1" into="n2"><text>1</text> as cnt/*number*/
</const></select>
                <from>
from <table name="kr_dep" as="a" view="1" used="1"><text>(
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )</text>a
--\kr_dep
</table><query name="kr_org" as="kodp" join="left outer" path="./a/kodp" haskeys="1" used="1">left outer join
(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/kodp" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/kodp" sourcecolumn="name" used="1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="sname" type="string" title="" as="sname" key="0" sourcetable="./a/kodp" sourcecolumn="sname" used="1">a.sname as sname/**//*string*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from><call function="=" type="bool">)
kodp on <column table="a" column="kodp">a.kodp</column><text txtype="func"> = </text><column table="kodp" column="kodp">kodp.kodp</column></call>--\kr_org
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="name" title="Отделение" as="name" key="0" thissrc="name">kodp.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" thissrc="sname">kodp.sname</column><text txtype="func"> ) like lower( </text><const><text>:sname_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by name</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" as="a">
              <queries>
                <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="sname_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" />
                    <column table="kodp" column="name" title="Отделение" as="name" key="0" />
                    <column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" />
                    <const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0">1</const>
                  </select>
                  <from>
                    <table name="kr_dep" as="a" view="1">
                      <dlink name="kr_dogovor" dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор" />
                      <dlink name="sv_opl_bank_dep" as="sv_opl_bank_dep" table="sv_opl_bank_dep" child="sv_opl_bank_dep" field="dep" parent="kr_dep" back="sv_opl_bank_dep">
                        <link name="kod_link" dimension="1" as="kod_link" table="sr_opl_bank" child="sv_opl_bank_dep" field="kod_link" parent="sr_opl_bank" back="sv_opl_bank_dep" />
                      </dlink>
                      <dlink name="kr_dogovor" dimension="1" is-final-dimension="1" is-private-dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор">
                        <dimlink name="kod_dep" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kodp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                      <dlink name="ur_folders" dimension="1" is-final-dimension="1" is-private-dimension="1" as="ur_folders" table="ur_folders" child="ur_folders" field="kod_dep" parent="kr_dep" back="ur_folders" title="Папка">
                        <dimlink name="kod_mat_pp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_dec" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_folders_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_inkasso" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_kazn" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                    </table>
                    <query name="kr_org" as="kodp" join="left outer" dname="kr_dep">
                      <call function="=">
                        <column table="a" column="kodp" />
                        <column table="kodp" column="kodp" />
                      </call>
                    </query>
                    <query name="kr_calc_dep_max" join="left outer" as="kr_calc_dep_max" dname="kr_dep">
                      <call function="=">
                        <column table="this" column="kodp" />
                        <column table="kr_calc_dep_max" column="dep" />
                      </call>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="sname" />
                        <useparam name="sname_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="name" />
                  </order>
                  <order>
                    <column column="name" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="sname_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="sname_filter" type="string">
                  <const>:sname_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on a.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_podr_x_n" table="a" />
          </dependants>
        </column>
        <column name="kod_emp" table="a" type="number" title="Юрист" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_emp" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="fio">fio</column>
                </order>
                <select>--a
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp" into="n1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" as="fio" key="0" used="1" type="string" title="Юрист" sourcetable="./a/a/a" sourcecolumn="fio" into="s1">a.fio as fio/*Юрист*//*string*/
</column></select>
                <from>
from <query name="kr_employee_urists" as="a" path="./a/a" order="fio" haskeys="1" used="1">(
<order notext="1"><column column="fio">fio</column></order><select>--kr_employee_urists
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" title="Юрист" vid="1" as="fio" key="0" used="1" type="string" sourcetable="./a/a/a" sourcecolumn="fio">a.fio as fio/*Юрист*//*string*/
</column></select><from>
from <query name="kr_employee" as="a" path="./a/a/a" haskeys="1" used="1">(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (организации)" as="kodp" key="0" sourcetable="./a/a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*/
</column><column table="a" column="kod_dolzhfun" type="number" comment="код должностной функции" as="kod_dolzhfun" reference="kk_dolzhfun" refcol="kod_dolzhfun" key="0" sourcetable="./a/a/a" sourcecolumn="kod_dolzhfun" used="1">a.kod_dolzhfun as kod_dolzhfun, /*number*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/a/a" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from>)
a
--\kr_employee
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kodp">a.kodp</column><text txtype="func"> in </text><query path="./a/a" used="1">(
<select>--
select <column table="b" column="kodp" as="kodp" fixed="1" key="1" keypath=".kodp" used="1" type="number" sourcetable="./a/a/b/a" sourcecolumn="kodp">b.kodp as kodp/*number*//*key*/
</column></select><from>
from <query name="kr_org_branch3" as="b" path="./a/a/b" used="1">(
<select>--kr_org_branch3
select <column table="a" column="kodp" as="kodp" type="number" title="" key="1" fixed="1" used="1" sourcetable="./a/a/b/a" sourcecolumn="kodp">a.kodp as kodp/**//*number*//*key*/
</column></select><from>
from <query name="kr_org" as="a" path="./a/a/b/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a/b/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="kr_org" refcol="kodp" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_separator" type="number" as="kod_separator" reference="kk_orgseparator" refcol="kod_separator" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_separator" used="1">a.kod_separator as kod_separator, /*number*/
</column><column table="a" column="kod_ecls" type="number" as="kod_ecls" reference="kk_cls" refcol="kod_ecls" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_ecls" used="1">a.kod_ecls as kod_ecls/*number*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from><connect>connect by nocycle
<call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kodp" prior="1">prior a.kodp</column><text txtype="func"> = </text><column table="a" column="kod_parent">a.kod_parent</column>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="not" pth="" optional="1" type="bool">(<text txtype="func"> not </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column column="kod_separator" table="a">a.kod_separator</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="case" pth="">(<text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="not in" pth="" type="bool">(<column column="kodp" table="a">a.kodp</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text txtype="const"> :dep </text></const>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>0</text></const></call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><const><text>1</text></const>) </call>) </call>) </call><text txtype="func"> } </text></call></connect><start>
start with <call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kod_separator">a.kod_separator</column><text txtype="func"> = </text><const><text>1</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_ecls">a.kod_ecls</column><text txtype="func"> = </text><const><text>4</text></const>) </call></call></start>)
b
--\kr_org_branch3
</query></from>)
--\
</query>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_dolzhfun">a.kod_dolzhfun</column><text txtype="func"> = </text><const><text>-1</text></const>) </call></call></where><order>
order by fio</order>)
a
--\kr_employee_urists
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="fio" as="fio" thissrc="fio">a.fio</column><text txtype="func"> ) like lower( </text><const><text>:fio_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by fio</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="dep" type="number" column="kod_podr">
                      <!--<const>(102276621)</const>-->
                    </param>
                    <param name="pk_prm" type="array" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="fio_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_emp" key="1" as="kod_emp" />
                    <column table="a" column="fio" as="fio" />
                  </select>
                  <from>
                    <query name="kr_employee_urists" as="a">
                      <withparams>
                        <call function="array">
                          <useparam name="dep" />
                        </call>
                      </withparams>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="fio" />
                        <useparam name="fio_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="fio" />
                  </order>
                  <withparams>
                    <useparam name="dep" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="fio_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="dep" type="number" column="kod_podr">
                  <!--<const>(102276621)</const>-->
                  <const>:dep </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="fio_filter" type="string">
                  <const>:fio_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="dep" type="number" column="kod_podr">
                <!--<const>(102276621)</const>-->
              </param>
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_emp_x_n" table="a" />
          </dependants>
        </column>
        <column name="dat_create" table="a" type="date" title="Дата начала исполнительного производства" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_create" temp-col-name="d1" />
        <column name="ur_hist_mat_dec_dat_resh" table="a" type="date" title="Дата вынесения решения суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата вынесения решения суда*//*date*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_hnd" table="a" type="number" title="Задолженность по решению суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_hnd1 as ur_dp_priz_hnd, /*Задолженность по решению суда*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  as ur_dp_priz_hnd1/*Признанная сумма  с учетом ручных сумм*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum/*Расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_do_il_hnd" table="a" type="number" title="Оплата до выдачи ИЛ" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_il_hnd1 as ur_opl_do_il_hnd, /*Оплата до выдачи ИЛ*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  as ur_opl_do_il_hnd1/*Оплата до выдачи исп листа учетом ручных сумм*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_hnd" table="a" type="number" title="Задолженность на дату выдачи исп. листа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Задолженность на дату выдачи исп. листа*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1/*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_hnd" table="a" type="number" title="Оплата по исп. листу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Оплата по исп. листу*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1/*Оплата по исп листу с учетом ручных сумм*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_hnd" table="a" type="number" title="Остаток долга по исп. листу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Остаток долга по исп. листу*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr1 ,0) )  ,0) )  as dolg_resh_tek_hnd1/*Долг по решению  с учетом ручных сумм*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_astr_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr_a_d
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_opl_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_astr_a_d.kod_opl, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_astr_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr_a_d
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_opl_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_astr_a_d.kod_opl, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kr_dogovor_name_group_cust" table="kodp" type="string" title="Группа потребления " is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust, /*Группа потребления *//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(qube.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1/*Группа потребления *//*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1/*Наименование*//*string*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1/*Наименование*//*string*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(un.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1/*Наименование*//*string*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1/*Наименование*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1/*Наименование*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dogovor_name_group_cust1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_category" table="a" type="number" title="Категория потребителя" parname="kod_category" ColumnVisible="rs_esys_is_1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_category" temp-col-name="n14">
          <sel-list-compiled>
            <root>
              <query title="Категория потребителей (юристы)" class="1" timestamp="02.11.2022 14:14:28" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_category.xml" elid="3009" ord="3009" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_category" as="kod_category" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" into="n1">a.kod_category as kod_category, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /**//*string*/
</column><column table="a" column="abbr" as="abbr" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="abbr" into="s2">a.abbr as abbr/**//*string*/
</column></select>
                <from>
from <query name="us_category" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" used="1" sourcetable="./a/a" sourcecolumn="kod_category">а.kod_category as kod_category, /*number*//*key*/
</column><column table="а" column="name" type="string" is-name="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">а.name as name, /*string*/
</column><column table="а" column="abbr" type="string" is-name="1" as="abbr" used="1" sourcetable="./a/a" sourcecolumn="abbr" key="0">а.abbr as abbr/*string*/
</column></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from>)
a
--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_category" as="kod_category" title="" key="1" thissrc="kod_category">a.kod_category</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="" key="1" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="abbr" as="abbr" title="" thissrc="abbr">a.abbr</column><text txtype="func"> ) like lower( </text><const><text>:abbr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Категория потребителей (юристы)" class="1" timestamp="02.11.2022 14:14:28" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_category.xml" elid="3009" ord="3009" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Категория потребителей (юристы)" class="1" timestamp="02.11.2022 14:14:28" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_category.xml" elid="3009" ord="3009" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_category_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="abbr_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_category" as="kod_category" title="" key="1" />
                    <column table="a" column="name" as="name" title="" />
                    <column table="a" column="abbr" as="abbr" title="" />
                  </select>
                  <from>
                    <query name="us_category" as="a" title="Категория потребителей (юристы)" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="abbr" />
                        <useparam name="abbr_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_category_filter" />
                    <useparam name="name_filter" />
                    <useparam name="abbr_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="abbr_filter" type="string">
                  <const>:abbr_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_category_x_n.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_category as kod_category,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n14 as kod_category,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_category as kod_category,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n14 as kod_category,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--us_category
select а.kod_category as kod_category, /*number*//*key*/
а.name || ' ' || а.abbr as sp_col_name/**//*string*/

from us_category
а
--\us_category
)
kod_category_x_n on a.kod_category = kod_category_x_n.kod_category--\us_category
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_category_x_n" table="a" />
          </dependants>
        </column>
        <column name="dat_finish" table="a" type="date" title="Дата сброса папки в архив" Visible="is_not_new" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_finish" temp-col-name="d3" />
        <column name="num_doc" table="a" type="string" title="Документ (основание для сброса папки в архив)" Visible="is_not_new" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_doc" temp-col-name="s2" />
        <column name="is_not_new" table="a" type="number" title="" parname="ur_folders_is_not_new" ColumnVisible="0">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select  case  when (( nvl( a.is_not_new ,0)=1 )  and (qube.rs_esys_kod_esys1 = 1) )  then 1 else 0 end  as kod_esys10_other_visible, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
rs_esys.kod_esys as rs_esys_kod_esys1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
a.kod_folders is not null  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as rs_esys_kod_esys1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_esys10_other_visible" table="a" />
          </dependants>
        </column>
        <column name="kod_esys10_other_visible" table="a" type="number" title="" parname="kod_esys10_other_visible" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select  case  when (( nvl( a.is_not_new ,0)=1 )  and (qube.rs_esys_kod_esys1 = 1) )  then 1 else 0 end  as kod_esys10_other_visible, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
rs_esys.kod_esys as rs_esys_kod_esys1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
a.kod_folders is not null  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as rs_esys_kod_esys1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_vi" table="a" type="number" title="" ColumnVisible="0" ColumnDefault="uk_vi_ish_kod" is-updateable="1" is-updateable-ext="1" update-target="kod_vi" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_vi_x_n.name as kod_vi_x_n, /*Наименование*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_vi as kod_vi, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n4 as kod_vi,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n4 as kod_vi,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--uk_vi
select a.kod_vi as kod_vi, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from uk_vi
a
--\uk_vi
)
kod_vi_x_n on a.kod_vi = kod_vi_x_n.kod_vi--\uk_vi
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_vi_x_n" table="a" />
          </dependants>
        </column>
        <column name="kod_sdp" table="a" type="number" title="" ColumnVisible="0" ColumnDefault="uk_sdp_isp_kod" is-updateable="1" is-updateable-ext="1" update-target="kod_sdp" temp-col-name="n5">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select  case  when (qube.rs_esys_kod_esys1 = 1)  then 1 else 0 end  as is_el, /*number*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
kod_isp.dat_srok as dat_srok, /*Срок отсрочки / рассрочки*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd1 as ur_dp_priz_hnd, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd1 as ur_opl_do_il_hnd, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Остаток долга по исп. листу*//*number*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust, /*Группа потребления *//*string*/
 case  when (( nvl( a.is_not_new ,0)=1 )  and (qube.rs_esys_kod_esys1 = 1) )  then 1 else 0 end  as kod_esys10_other_visible, /*number*/
kod_isp.kod_folders as kod_folders_pp, /*number*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Исполнительный лист*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
kod_category_x_n.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
kod_vi_x_n.name as kod_vi_x_n, /*Наименование*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
tep_el_x_n.name as tep_el_x_n, /*Наименование*//*string*/
qube.ur_fld_isp_kod_isp_vld1 as ur_fld_isp_kod_isp_vld, /*string*/
a.kodp_new_val as kodp_new_val, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  as ur_dp_priz_hnd1, /*Признанная сумма  с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  as ur_opl_do_il_hnd1, /*Оплата до выдачи исп листа учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
min(qube.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Группа потребления *//*string*/
max( case  when (qube.ur_folders_isp_othr_count1 &gt; 1)  then 'По выбранному исп. листу уже есть папка исполнительного производства' end )  as ur_fld_isp_kod_isp_vld1/*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
min(un.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_folders_isp_othr_count1)  as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
rs_esys.kod_esys as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
a.kod_folders is not null  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from ( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.tep_el as tep_el, /**//*number*/
a.kod_podr as kod_podr, /*number*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp,a.tep_el as tep_el,a.kod_podr as kod_podr,a.kod_category as kod_category,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.n4 as kod_vi,t.n5 as kod_sdp,t.n8 as kod_isp,t.n9 as tep_el,t.n11 as kod_podr,t.n14 as kod_category,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp,a.tep_el as tep_el,a.kod_podr as kod_podr,a.kod_category as kod_category,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.n4 as kod_vi,t.n5 as kod_sdp,t.n8 as kod_isp,t.n9 as tep_el,t.n11 as kod_podr,t.n14 as kod_category,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--kk_tep_el
select a.tep_el as tep_el, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kk_tep_el
a
--\kk_tep_el
)
tep_el_x_n on a.tep_el = tep_el_x_n.tep_el--\kk_tep_el
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on a.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--uk_vi
select a.kod_vi as kod_vi, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from uk_vi
a
--\uk_vi
)
kod_vi_x_n on a.kod_vi = kod_vi_x_n.kod_vi--\uk_vi
left outer join
(
--us_category
select а.kod_category as kod_category, /*number*//*key*/
а.name || ' ' || а.abbr as sp_col_name/**//*string*/

from us_category
а
--\us_category
)
kod_category_x_n on a.kod_category = kod_category_x_n.kod_category--\us_category
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on a.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on a.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on a.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok/*Дата отсрочки исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="is_el" table="a" />
            <dependant name="kr_dog_name" table="a" />
            <dependant name="kr_dog_name" table="a" />
            <dependant name="dat_function" table="a" />
            <dependant name="dat_srok" table="a" />
            <dependant name="ur_hist_mat_dec_dat_resh" table="a" />
            <dependant name="ur_dp_priz_hnd" table="a" />
            <dependant name="ur_dp_priz_hnd" table="a" />
            <dependant name="ur_opl_do_il_hnd" table="a" />
            <dependant name="ur_opl_do_il_hnd" table="a" />
            <dependant name="dolg_on_il_hnd" table="a" />
            <dependant name="dolg_on_il_hnd" table="a" />
            <dependant name="ur_opl_posl_il_hnd" table="a" />
            <dependant name="ur_opl_posl_il_hnd" table="a" />
            <dependant name="dolg_resh_tek_hnd" table="a" />
            <dependant name="dolg_resh_tek_hnd" table="a" />
            <dependant name="kr_dogovor_name_group_cust" table="a" />
            <dependant name="kr_dogovor_name_group_cust" table="a" />
            <dependant name="kod_esys10_other_visible" table="a" />
            <dependant name="kod_folders_pp" table="a" />
            <dependant name="kod_isp_x_n" table="a" />
            <dependant name="kodp_x_n" table="a" />
            <dependant name="kod_podr_x_n" table="a" />
            <dependant name="kod_emp_x_n" table="a" />
            <dependant name="kod_category_x_n" table="a" />
            <dependant name="kod_vi_x_n" table="a" />
            <dependant name="kod_sdp_x_n" table="a" />
            <dependant name="tep_el_x_n" table="a" />
            <dependant name="ur_fld_isp_kod_isp_vld" table="a" />
            <dependant name="kodp_new_val" table="a" />
          </dependants>
        </column>
        <column name="tep_el" table="a" type="number" title="" ColumnVisible="0" ColumnDefault="rs_esys_tepel" is-updateable="1" is-updateable-ext="1" update-target="tep_el" temp-col-name="n9">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select tep_el_x_n.name as tep_el_x_n, /*Наименование*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.tep_el as tep_el, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.tep_el as tep_el,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n9 as tep_el,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.tep_el as tep_el,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n9 as tep_el,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kk_tep_el
select a.tep_el as tep_el, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kk_tep_el
a
--\kk_tep_el
)
tep_el_x_n on a.tep_el = tep_el_x_n.tep_el--\kk_tep_el
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="tep_el_x_n" table="a" />
          </dependants>
        </column>
        <column name="kod_folders_pp" table="kod_isp" type="number" title="Папка" parname="kod_folders_pp" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.kod_folders as kod_folders_pp, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_isp_x_n" table="a.kod_isp" type="string" title="Исполнительный лист" text-source-for="kod_isp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp_x_n.full_name as kod_isp_x_n, /*Исполнительный лист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on a.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="a.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on a.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr_x_n" table="a.kod_podr" type="string" title="Отделение" text-source-for="kod_podr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on a.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="a.kod_emp" type="string" title="Юрист" text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_category_x_n" table="a.kod_category" type="string" title="Категория потребителя" text-source-for="kod_category" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_category_x_n.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_category as kod_category,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n14 as kod_category,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_category as kod_category,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n14 as kod_category,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--us_category
select а.kod_category as kod_category, /*number*//*key*/
а.name || ' ' || а.abbr as sp_col_name/**//*string*/

from us_category
а
--\us_category
)
kod_category_x_n on a.kod_category = kod_category_x_n.kod_category--\us_category
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_vi_x_n" table="a.kod_vi" type="string" title="Договор" text-source-for="kod_vi" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_vi_x_n.name as kod_vi_x_n, /*Наименование*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_vi as kod_vi, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n4 as kod_vi,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n4 as kod_vi,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--uk_vi
select a.kod_vi as kod_vi, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from uk_vi
a
--\uk_vi
)
kod_vi_x_n on a.kod_vi = kod_vi_x_n.kod_vi--\uk_vi
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sdp_x_n" table="a.kod_sdp" type="string" title="Договор" text-source-for="kod_sdp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on a.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="tep_el_x_n" table="a.tep_el" type="string" title="Договор" text-source-for="tep_el" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select tep_el_x_n.name as tep_el_x_n, /*Наименование*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.tep_el as tep_el, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.tep_el as tep_el,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n9 as tep_el,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.tep_el as tep_el,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n9 as tep_el,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kk_tep_el
select a.tep_el as tep_el, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kk_tep_el
a
--\kk_tep_el
)
tep_el_x_n on a.tep_el = tep_el_x_n.tep_el--\kk_tep_el
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_fld_isp_kod_isp_vld" table="a" type="string" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_fld_isp_kod_isp_vld1 as ur_fld_isp_kod_isp_vld, /*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max( case  when (qube.ur_folders_isp_othr_count1 &gt; 1)  then 'По выбранному исп. листу уже есть папка исполнительного производства' end )  as ur_fld_isp_kod_isp_vld1/*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.ur_folders_isp_othr_count1)  as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_folders_isp_othr_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from ( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_new_val" table="a" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.kodp_new_val as kodp_new_val, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
kod_isp.kodp as kodp_new_val, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a
--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="a" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kodp as kodp 
,:kod_podr as kod_podr 
,:kod_emp as kod_emp 
,:dat_create as dat_create 
,:kod_category as kod_category 
,:dat_finish as dat_finish 
,:num_doc as num_doc 
,:kod_vi as kod_vi 
,:kod_sdp as kod_sdp 
,:tep_el as tep_el 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_isp 
,kodp 
,kod_podr 
,kod_emp 
,dat_create 
,kod_category 
,dat_finish 
,num_doc 
,kod_vi 
,kod_sdp 
,tep_el 
,kod_folders 
) 
 values  
(r.kod_isp 
,r.kodp 
,r.kod_podr 
,r.kod_emp 
,r.dat_create 
,r.kod_category 
,r.dat_finish 
,r.num_doc 
,r.kod_vi 
,r.kod_sdp 
,r.tep_el 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kodp as kodp 
,:kod_podr as kod_podr 
,:kod_emp as kod_emp 
,:dat_create as dat_create 
,:kod_category as kod_category 
,:dat_finish as dat_finish 
,:num_doc as num_doc 
,:kod_vi as kod_vi 
,:kod_sdp as kod_sdp 
,:tep_el as tep_el 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n8 
,n2 
,n11 
,n3 
,d1 
,n14 
,d3 
,s2 
,n4 
,n5 
,n9 
,n1 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_isp 
,r.kodp 
,r.kod_podr 
,r.kod_emp 
,r.dat_create 
,r.kod_category 
,r.dat_finish 
,r.num_doc 
,r.kod_vi 
,r.kod_sdp 
,r.tep_el 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kodp as kodp 
,:kod_podr as kod_podr 
,:kod_emp as kod_emp 
,:dat_create as dat_create 
,:kod_category as kod_category 
,:dat_finish as dat_finish 
,:num_doc as num_doc 
,:kod_vi as kod_vi 
,:kod_sdp as kod_sdp 
,:tep_el as tep_el 
,:kod_folders as kod_folders 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.vvod 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n8 
,n2 
,n11 
,n3 
,d1 
,n14 
,d3 
,s2 
,n4 
,n5 
,n9 
,n1 
,n6 
,s1 
,d2 
,n7 
,n10 
,n12 
,n13 
,s3 
,s4 
,n15 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_isp 
,r.kodp 
,r.kod_podr 
,r.kod_emp 
,r.dat_create 
,r.kod_category 
,r.dat_finish 
,r.num_doc 
,r.kod_vi 
,r.kod_sdp 
,r.tep_el 
,r.kod_folders 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.vvod 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_isp 
,kodp 
,kod_podr 
,kod_emp 
,dat_create 
,kod_category 
,dat_finish 
,num_doc 
,kod_vi 
,kod_sdp 
,tep_el 
,kod_folders 
) 
= 
 ( select  
:kod_isp as kod_isp 
,:kodp as kodp 
,:kod_podr as kod_podr 
,:kod_emp as kod_emp 
,:dat_create as dat_create 
,:kod_category as kod_category 
,:dat_finish as dat_finish 
,:num_doc as num_doc 
,:kod_vi as kod_vi 
,:kod_sdp as kod_sdp 
,:tep_el as tep_el 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_isp" as="a">
          <columns>
            <column name="kod_isp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_el" type="number" title="" visible="0" />
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="dat_function" type="date" title="Дата вступления в силу акта" />
            <column name="dat_srok" type="date" title="Срок отсрочки / рассрочки" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_create" type="date" title="Дата начала исполнительного производства" />
            <column name="ur_hist_mat_dec_dat_resh" type="date" title="Дата вынесения решения суда" />
            <column name="ur_dp_priz_hnd" type="number" title="Задолженность по решению суда" />
            <column name="ur_opl_do_il_hnd" type="number" title="Оплата до выдачи ИЛ" />
            <column name="dolg_on_il_hnd" type="number" title="Задолженность на дату выдачи исп. листа" />
            <column name="ur_opl_posl_il_hnd" type="number" title="Оплата по исп. листу" />
            <column name="dolg_resh_tek_hnd" type="number" title="Остаток долга по исп. листу" />
            <column name="kr_dogovor_name_group_cust" type="string" title="Группа потребления " />
            <column name="kod_category" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="num_doc" type="string" title="Документ (основание для сброса папки в архив)" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="kod_esys10_other_visible" type="number" title="" visible="0" />
            <column name="kod_vi" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="tep_el" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders_pp" type="number" title="Папка" visible="0" />
            <column name="kod_isp_x_n" type="string" title="Исполнительный лист" />
            <column name="kodp_x_n" type="string" title="Абонент" />
            <column name="kod_podr_x_n" type="string" title="Отделение" />
            <column name="kod_emp_x_n" type="string" title="Юрист" />
            <column name="kod_category_x_n" type="string" title="Категория потребителя" />
            <column name="kod_vi_x_n" type="string" title="Договор" visible="0" />
            <column name="kod_sdp_x_n" type="string" title="Договор" visible="0" />
            <column name="tep_el_x_n" type="string" title="Договор" visible="0" />
            <column name="ur_fld_isp_kod_isp_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select a.kod_isp as kod_isp, /**//*number*/
 case  when (qube.rs_esys_kod_esys1 = 1)  then 1 else 0 end  as is_el, /*number*/
a.kodp as kodp, /**//*number*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
kod_isp.dat_srok as dat_srok, /*Срок отсрочки / рассрочки*//*date*/
a.kod_podr as kod_podr, /*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата начала исполнительного производства*//*date*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd1 as ur_dp_priz_hnd, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd1 as ur_opl_do_il_hnd, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Остаток долга по исп. листу*//*number*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust, /*Группа потребления *//*string*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
a.is_not_new as is_not_new, /*number*/
 case  when (( nvl( a.is_not_new ,0)=1 )  and (qube.rs_esys_kod_esys1 = 1) )  then 1 else 0 end  as kod_esys10_other_visible, /*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.tep_el as tep_el, /*number*/
kod_isp.kod_folders as kod_folders_pp, /*number*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Исполнительный лист*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
kod_category_x_n.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
kod_vi_x_n.name as kod_vi_x_n, /*Наименование*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
tep_el_x_n.name as tep_el_x_n, /*Наименование*//*string*/
qube.ur_fld_isp_kod_isp_vld1 as ur_fld_isp_kod_isp_vld, /*string*/
a.kodp_new_val as kodp_new_val, /*number*/
a.is_new as is_new, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  as ur_dp_priz_hnd1, /*Признанная сумма  с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  as ur_opl_do_il_hnd1, /*Оплата до выдачи исп листа учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
min(qube.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Группа потребления *//*string*/
max( case  when (qube.ur_folders_isp_othr_count1 &gt; 1)  then 'По выбранному исп. листу уже есть папка исполнительного производства' end )  as ur_fld_isp_kod_isp_vld1/*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.kr_dogovor_name_group_cust1 as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
qube.rs_esys_kod_esys1 as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_folders_isp_othr_count1 as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
min(un.kr_dogovor_name_group_cust1)  as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
max(un.rs_esys_kod_esys1)  as rs_esys_kod_esys1, /*number*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_folders_isp_othr_count1)  as ur_folders_isp_othr_count1/*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
kr_dogovor.name_group_cust as kr_dogovor_name_group_cust1, /*Наименование*//*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name, /*Договор*//*string*/
 case  when (a.pr_active != 1)  then kod_group_cust.name end  as name_group_cust/*Наименование*//*string*/

from kr_dogovor
a
--\kr_dogovor
left outer join
(
--kr_dogovor_dop
select a.kod_dog as kod_dog, /*number*//*key*/
a.kod_group_cust as kod_group_cust/*number*/

from kr_dogovor_dop
a
--\kr_dogovor_dop
)
kod_dog_dop on a.kod_dog = kod_dog_dop.kod_dog--\kr_dogovor_dop
left outer join
(
--ks_group_cust
select a.kod_group_cust as kod_group_cust, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kv_group_cust
a
--\kv_group_cust
)
kod_group_cust on kod_dog_dop.kod_group_cust = kod_group_cust.kod_group_cust--\ks_group_cust
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
rs_esys.kod_esys as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select rs_esys_a_d.kod_esys as kod_esys_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys_a_d
--\rs_esys
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on  1=1 --\ur_folders_isp
where
a.kod_folders is not null  group by
rs_esys_a_d.kod_esys, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys on rs_esys.kod_esys = dims.kod_esys_prm--\rs_esys
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from ( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n8 as kod_isp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_folders_isp_othr.cnt as ur_folders_isp_othr_count1/*number*/

from (
--
select ur_folders_isp_othr_a_d.kod_folders as kod_folders_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr_a_d
--\ur_folders_isp_othr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d1 on ur_folders_isp_othr_a_d.kod_isp = kod_isp_a_d1.kod_isp--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d1.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_folders_isp_othr_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_folders_isp_othr
select a.kod_folders as kod_folders, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
ur_folders_isp_othr on ur_folders_isp_othr.kod_folders = dims.kod_folders_prm--\ur_folders_isp_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3 )
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
union all
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ))
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as kr_dogovor_name_group_cust1, /*string*/
null as rs_esys_kod_esys1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_folders_isp_othr_count1, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.kod_isp as kod_isp, /*number*/
a.tep_el as tep_el, /**//*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
a.kod_podr as kod_podr, /*number*/
a.kod_category as kod_category, /*Категория потребителя*//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp,a.dat_create as dat_create,a.kod_isp as kod_isp,a.tep_el as tep_el,a.dat_finish as dat_finish,a.num_doc as num_doc,a.kod_podr as kod_podr,a.kod_category as kod_category,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.n4 as kod_vi,t.n5 as kod_sdp,t.d1 as dat_create,t.n8 as kod_isp,t.n9 as tep_el,t.d3 as dat_finish,t.s2 as num_doc,t.n11 as kod_podr,t.n14 as kod_category,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.kod_vi as kod_vi,a.kod_sdp as kod_sdp,a.dat_create as dat_create,a.kod_isp as kod_isp,a.tep_el as tep_el,a.dat_finish as dat_finish,a.num_doc as num_doc,a.kod_podr as kod_podr,a.kod_category as kod_category,0 as is_new,1 as is_not_new  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.n4 as kod_vi,t.n5 as kod_sdp,t.d1 as dat_create,t.n8 as kod_isp,t.n9 as tep_el,t.d3 as dat_finish,t.s2 as num_doc,t.n11 as kod_podr,t.n14 as kod_category,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--kk_tep_el
select a.tep_el as tep_el, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from kk_tep_el
a
--\kk_tep_el
)
tep_el_x_n on a.tep_el = tep_el_x_n.tep_el--\kk_tep_el
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on a.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--uk_vi
select a.kod_vi as kod_vi, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from uk_vi
a
--\uk_vi
)
kod_vi_x_n on a.kod_vi = kod_vi_x_n.kod_vi--\uk_vi
left outer join
(
--us_category
select а.kod_category as kod_category, /*number*//*key*/
а.name || ' ' || а.abbr as sp_col_name/**//*string*/

from us_category
а
--\us_category
)
kod_category_x_n on a.kod_category = kod_category_x_n.kod_category--\us_category
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on a.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on a.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on a.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok/*Дата отсрочки исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>