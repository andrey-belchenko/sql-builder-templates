<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="vr_packages" timestamp="28.12.2023 14:57:19" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_ipr\scheme\extension\vr_packages.xml" elid="289" ord="289" leaf="0" lvl="2" pelid="">
    <splitcontainer id="29716571">
      <fieldgroup title="Пакеты" id="57289160">
        <grid table="vr_packages" id="20074002">
          <columns id="4177369">
            <field table="vr_packages" name="kod_package" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="16976624" />
            <field table="vr_packages" name="title" title="" controlType="UIText" rows-limit="100" id="14910105" />
            <field table="vr_packages" name="puser" title="Если заполнено - настройка видна только этому пользователю" controlType="UIText" rows-limit="100" id="26877955" />
            <field table="vr_packages" name="kod_menu" title="" controlType="UICombo" rows-limit="100" id="13688158" />
          </columns>
        </grid>
      </fieldgroup>
      <fieldgroup title="Отчёты" id="11956534">
        <grid table="vr_package_reports" id="35679334">
          <columns id="57652419">
            <field table="vr_package_reports" name="kod_package_report" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="16426648" />
            <field table="vr_package_reports" name="kod_package" title="Настройки пакетов отчётов в sql.builder" controlType="UICombo" rows-limit="100" id="46875124" />
            <field table="vr_package_reports" name="repname" title="Идентификатор отчёта" controlType="UIText" rows-limit="100" id="60311794" />
            <field table="vr_package_reports" name="template" title="Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel" controlType="UIText" rows-limit="100" id="50502098" />
          </columns>
        </grid>
      </fieldgroup>
    </splitcontainer>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="vr_packages_has_changes" parname="vr_packages_has_changes" />
      <field type="string" name="vr_package_reports_has_changes" parname="vr_package_reports_has_changes" />
    </fields>
    <table name="vr_packages" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_packages" key="kod_package" is-ms-upd="1" is-top="1">
      <select-text>
--
select vr_packages.kod_package as kod_package, /*number*//*key*/
vr_packages.title as title, /*string*/
vr_packages.puser as puser, /*Если заполнено - настройка видна только этому пользователю*//*string*/
vr_packages.kod_menu as kod_menu, /*number*/
kod_menu_x_n.kod_menu as kod_menu_x_n, /*number*/
vr_packages.is_new as is_new, /*number*/
vr_packages.is_not_new as is_not_new/*number*/

from (
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.title as title, /*string*/
a.puser as puser, /*Если заполнено - настройка видна только этому пользователю*//*string*/
a.kod_menu as kod_menu, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_packages
a
--\vr_packages
)
vr_packages
--\vr_packages
left outer join
(
--rk_menu
select a.kod_menu as kod_menu/*number*//*key*/

from rk_menu
a
--\rk_menu
)
kod_menu_x_n on vr_packages.kod_menu = kod_menu_x_n.kod_menu--\rk_menu
--\
</select-text>
      <columns>
        <column name="kod_package" table="vr_packages" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_package" temp-col-name="n1" />
        <column name="title" table="vr_packages" type="string" title="" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="title" temp-col-name="s1" />
        <column name="puser" table="vr_packages" type="string" title="Если заполнено - настройка видна только этому пользователю" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="puser" temp-col-name="s2" />
        <column name="kod_menu" table="vr_packages" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_menu" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\rk_menu.xml" elid="2874" ord="2874" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_menu" as="kod_menu" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_menu" into="n1">a.kod_menu as kod_menu, /**//*number*//*key*/
</column><column table="a" column="kod_area" as="kod_area" title="" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_area" reference="rk_area" refcol="kod_area" into="n2">a.kod_area as kod_area, /**//*number*/
</column><column table="kod_area" column="name" as="kod_area_x_n" title="" key="0" used="1" type="string" sourcetable="./a/kod_area" sourcecolumn="name" into="s1">kod_area.name as kod_area_x_n, /**//*string*/
</column><column table="a" column="menu" as="menu" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="menu" into="s2">a.menu as menu, /**//*string*/
</column><column table="a" column="nomer" as="nomer" title="" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="nomer" into="n3">a.nomer as nomer, /**//*number*/
</column><column table="a" column="description" as="description" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="description" into="s3">a.description as description, /**//*string*/
</column><column table="a" column="class_name" as="class_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="class_name" into="s4">a.class_name as class_name, /**//*string*/
</column><column table="a" column="u_m" as="u_m" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="u_m" into="s5">a.u_m as u_m, /**//*string*/
</column><column table="a" column="d_m" as="d_m" title="" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="d_m" into="d1">a.d_m as d_m, /**//*date*/
</column><column table="a" column="t_m" as="t_m" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="t_m" into="s6">a.t_m as t_m, /**//*string*/
</column><column table="a" column="kod_parent" as="kod_parent" title="" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_parent" reference="rk_menu" refcol="kod_menu" into="n4">a.kod_parent as kod_parent, /**//*number*/
</column><column table="kod_parent" column="kod_menu" as="kod_parent_x_n" title="" key="0" used="1" type="number" sourcetable="./a/kod_parent" sourcecolumn="kod_menu" into="n5">kod_parent.kod_menu as kod_parent_x_n/**//*number*/
</column></select>
                <from>
from <query name="rk_menu" as="a" path="./a/a" haskeys="1" used="1">(
<select>--rk_menu
select <column table="a" column="kod_menu" type="number" as="kod_menu" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_menu" used="1">a.kod_menu as kod_menu, /*number*//*key*/
</column><column table="a" column="kod_area" type="number" comment="0 - Единые , публичные&#xD;&#xA;1 - Электричество договор&#xD;&#xA;2- тепло договор&#xD;&#xA;3- пар договор&#xD;&#xA;4 -быт&#xD;&#xA;5- эл схема&#xD;&#xA;6- тепл.схема&#xD;&#xA;7 - расчеты &#xD;&#xA;8- деньги" as="kod_area" reference="rk_area" refcol="kod_area" key="0" sourcetable="./a/a" sourcecolumn="kod_area" used="1">a.kod_area as kod_area, /*number*/
</column><column table="a" column="menu" type="string" title="" as="menu" key="0" sourcetable="./a/a" sourcecolumn="menu" used="1">a.menu as menu, /**//*string*/
</column><column table="a" column="nomer" type="number" title="" as="nomer" key="0" sourcetable="./a/a" sourcecolumn="nomer" used="1">a.nomer as nomer, /**//*number*/
</column><column table="a" column="description" type="string" title="" comment="краткое описание для чего нужен" as="description" key="0" sourcetable="./a/a" sourcecolumn="description" used="1">a.description as description, /**//*string*/
</column><column table="a" column="class_name" type="string" title="" comment="переехало в RK_CLASS. Тут для совместимости со старой версией ribbon" as="class_name" key="0" sourcetable="./a/a" sourcecolumn="class_name" used="1">a.class_name as class_name, /**//*string*/
</column><column table="a" column="u_m" type="string" title="" as="u_m" key="0" sourcetable="./a/a" sourcecolumn="u_m" used="1">a.u_m as u_m, /**//*string*/
</column><column table="a" column="d_m" type="date" title="" as="d_m" key="0" sourcetable="./a/a" sourcecolumn="d_m" used="1">a.d_m as d_m, /**//*date*/
</column><column table="a" column="t_m" type="string" title="" as="t_m" key="0" sourcetable="./a/a" sourcecolumn="t_m" used="1">a.t_m as t_m, /**//*string*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="rk_menu" refcol="kod_menu" key="0" sourcetable="./a/a" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent/*number*/
</column></select><from>
from <table name="rk_menu" as="a" used="1">rk_menu
a
--\rk_menu
</table></from>)
a
--\rk_menu
</query><query name="rk_menu" as="kod_parent" join="left outer" path="./a/kod_parent" haskeys="1" used="1">left outer join
(
<select>--rk_menu
select <column table="a" column="kod_menu" type="number" as="kod_menu" key="1" fixed="1" sourcetable="./a/kod_parent" sourcecolumn="kod_menu" used="1">a.kod_menu as kod_menu/*number*//*key*/
</column></select><from>
from <table name="rk_menu" as="a" used="1">rk_menu
a
--\rk_menu
</table></from><call function="=" type="bool">)
kod_parent on <column table="a" column="kod_parent">a.kod_parent</column><text txtype="func"> = </text><column table="kod_parent" column="kod_menu">kod_parent.kod_menu</column></call>--\rk_menu
</query><query name="rk_area" as="kod_area" join="left outer" path="./a/kod_area" haskeys="1" used="1">left outer join
(
<select>--rk_area
select <column table="a" column="kod_area" type="number" comment="0 - Абоненты и Договора&#xD;&#xA;1 - Электричество договор&#xD;&#xA;2- тепло договор&#xD;&#xA;3- пар договор&#xD;&#xA;4 -быт&#xD;&#xA;5- эл схема&#xD;&#xA;6- тепл.схема&#xD;&#xA;7 - расчеты эл.&#xD;&#xA;8 - расчеты тепло&#xD;&#xA;9 -расчеты пар&#xD;&#xA;10- деньги&#xD;&#xA;11 - отчеты&#xD;&#xA;12 - настройки" as="kod_area" key="1" fixed="1" sourcetable="./a/kod_area" sourcecolumn="kod_area" used="1">a.kod_area as kod_area, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Наименование" comment="0 - Единые , публичные&#xD;&#xA;1 - Электричество договор&#xD;&#xA;2- тепло договор&#xD;&#xA;3- пар договор&#xD;&#xA;4 -быт&#xD;&#xA;5- эл схема&#xD;&#xA;6- тепл.схема&#xD;&#xA;7 - расчеты &#xD;&#xA;8- деньги &#xD;&#xA;&#xD;&#xA;" as="name" key="0" sourcetable="./a/kod_area" sourcecolumn="name" used="1">a.name as name/*Наименование*//*string*/
</column></select><from>
from <table name="rk_area" as="a" used="1">rk_area
a
--\rk_area
</table></from><call function="=" type="bool">)
kod_area on <column table="a" column="kod_area">a.kod_area</column><text txtype="func"> = </text><column table="kod_area" column="kod_area">kod_area.kod_area</column></call>--\rk_area
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_menu" as="kod_menu" title="" key="1" thissrc="kod_menu">a.kod_menu</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_menu" as="kod_menu" title="" key="1" thissrc="kod_menu">a.kod_menu</column><text txtype="func"> ) like lower( </text><const><text>:kod_menu_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_area" as="kod_area" title="" thissrc="kod_area">a.kod_area</column><text txtype="func"> ) like lower( </text><const><text>:kod_area_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_area" column="name" as="kod_area_x_n" title="" thissrc="kod_area_x_n">kod_area.name</column><text txtype="func"> ) like lower( </text><const><text>:kod_area_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="menu" as="menu" title="" thissrc="menu">a.menu</column><text txtype="func"> ) like lower( </text><const><text>:menu_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nomer" as="nomer" title="" thissrc="nomer">a.nomer</column><text txtype="func"> ) like lower( </text><const><text>:nomer_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="description" as="description" title="" thissrc="description">a.description</column><text txtype="func"> ) like lower( </text><const><text>:description_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="class_name" as="class_name" title="" thissrc="class_name">a.class_name</column><text txtype="func"> ) like lower( </text><const><text>:class_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="u_m" as="u_m" title="" thissrc="u_m">a.u_m</column><text txtype="func"> ) like lower( </text><const><text>:u_m_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="d_m" as="d_m" title="" thissrc="d_m">a.d_m</column><text txtype="func"> ) like lower( </text><const><text>:d_m_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="t_m" as="t_m" title="" thissrc="t_m">a.t_m</column><text txtype="func"> ) like lower( </text><const><text>:t_m_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_parent" as="kod_parent" title="" thissrc="kod_parent">a.kod_parent</column><text txtype="func"> ) like lower( </text><const><text>:kod_parent_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_parent" column="kod_menu" as="kod_parent_x_n" title="" thissrc="kod_parent_x_n">kod_parent.kod_menu</column><text txtype="func"> ) like lower( </text><const><text>:kod_parent_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\rk_menu.xml" elid="2874" ord="2874" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\rk_menu.xml" elid="2874" ord="2874" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_menu_filter" type="string" />
                    <param name="kod_area_filter" type="string" />
                    <param name="kod_area_x_n_filter" type="string" />
                    <param name="menu_filter" type="string" />
                    <param name="nomer_filter" type="string" />
                    <param name="description_filter" type="string" />
                    <param name="class_name_filter" type="string" />
                    <param name="u_m_filter" type="string" />
                    <param name="d_m_filter" type="string" />
                    <param name="t_m_filter" type="string" />
                    <param name="kod_parent_filter" type="string" />
                    <param name="kod_parent_x_n_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_menu" as="kod_menu" title="" key="1" />
                    <column table="a" column="kod_area" as="kod_area" title="" />
                    <column table="kod_area" column="name" as="kod_area_x_n" title="" />
                    <column table="a" column="menu" as="menu" title="" />
                    <column table="a" column="nomer" as="nomer" title="" />
                    <column table="a" column="description" as="description" title="" />
                    <column table="a" column="class_name" as="class_name" title="" />
                    <column table="a" column="u_m" as="u_m" title="" />
                    <column table="a" column="d_m" as="d_m" title="" />
                    <column table="a" column="t_m" as="t_m" title="" />
                    <column table="a" column="kod_parent" as="kod_parent" title="" />
                    <column table="kod_parent" column="kod_menu" as="kod_parent_x_n" title="" />
                  </select>
                  <from>
                    <query name="rk_menu" as="a">
                      <link name="kod_area" as="kod_area" table="rk_area" child="rk_menu" field="kod_area" parent="rk_area" back="rk_menu" />
                      <link name="kod_parent" as="kod_parent" table="rk_menu" child="rk_menu" field="kod_parent" parent="rk_menu" back="rk_menu" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_menu" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_menu" />
                        <useparam name="kod_menu_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_area" />
                        <useparam name="kod_area_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_area_x_n" />
                        <useparam name="kod_area_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="menu" />
                        <useparam name="menu_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nomer" />
                        <useparam name="nomer_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="description" />
                        <useparam name="description_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="class_name" />
                        <useparam name="class_name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="u_m" />
                        <useparam name="u_m_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="d_m" />
                        <useparam name="d_m_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="t_m" />
                        <useparam name="t_m_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_parent" />
                        <useparam name="kod_parent_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_parent_x_n" />
                        <useparam name="kod_parent_x_n_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_menu_filter" />
                    <useparam name="kod_area_filter" />
                    <useparam name="kod_area_x_n_filter" />
                    <useparam name="menu_filter" />
                    <useparam name="nomer_filter" />
                    <useparam name="description_filter" />
                    <useparam name="class_name_filter" />
                    <useparam name="u_m_filter" />
                    <useparam name="d_m_filter" />
                    <useparam name="t_m_filter" />
                    <useparam name="kod_parent_filter" />
                    <useparam name="kod_parent_x_n_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_menu_filter" type="string">
                  <const>:kod_menu_filter </const>
                </param>
                <param name="kod_area_filter" type="string">
                  <const>:kod_area_filter </const>
                </param>
                <param name="kod_area_x_n_filter" type="string">
                  <const>:kod_area_x_n_filter </const>
                </param>
                <param name="menu_filter" type="string">
                  <const>:menu_filter </const>
                </param>
                <param name="nomer_filter" type="string">
                  <const>:nomer_filter </const>
                </param>
                <param name="description_filter" type="string">
                  <const>:description_filter </const>
                </param>
                <param name="class_name_filter" type="string">
                  <const>:class_name_filter </const>
                </param>
                <param name="u_m_filter" type="string">
                  <const>:u_m_filter </const>
                </param>
                <param name="d_m_filter" type="string">
                  <const>:d_m_filter </const>
                </param>
                <param name="t_m_filter" type="string">
                  <const>:t_m_filter </const>
                </param>
                <param name="kod_parent_filter" type="string">
                  <const>:kod_parent_filter </const>
                </param>
                <param name="kod_parent_x_n_filter" type="string">
                  <const>:kod_parent_x_n_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_packages">
              <params>
                <param name="kod_package_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_package_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_menu_x_n.kod_menu as kod_menu_x_n, /*number*/
vr_packages.kod_package as kod_package/*number*//*key*/

from (
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.kod_menu as kod_menu/*number*/

from (select a.kod_package as kod_package,a.kod_menu as kod_menu  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.n2 as kod_menu  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
a
--\(select a.kod_package as kod_package,a.kod_menu as kod_menu  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.n2 as kod_menu  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
)
vr_packages
--\vr_packages
left outer join
(
--rk_menu
select a.kod_menu as kod_menu/*number*//*key*/

from rk_menu
a
--\rk_menu
)
kod_menu_x_n on vr_packages.kod_menu = kod_menu_x_n.kod_menu--\rk_menu
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_menu_x_n" table="vr_packages" />
          </dependants>
        </column>
        <column name="kod_menu_x_n" table="vr_packages.kod_menu" type="number" title="" text-source-for="kod_menu" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_package_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_package_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_menu_x_n.kod_menu as kod_menu_x_n, /*number*/
vr_packages.kod_package as kod_package/*number*//*key*/

from (
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.kod_menu as kod_menu/*number*/

from (select a.kod_package as kod_package,a.kod_menu as kod_menu  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.n2 as kod_menu  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
a
--\(select a.kod_package as kod_package,a.kod_menu as kod_menu  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.n2 as kod_menu  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
)
vr_packages
--\vr_packages
left outer join
(
--rk_menu
select a.kod_menu as kod_menu/*number*//*key*/

from rk_menu
a
--\rk_menu
)
kod_menu_x_n on vr_packages.kod_menu = kod_menu_x_n.kod_menu--\rk_menu
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="vr_packages" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_packages" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_package as kod_package 
,:title as title 
,:puser as puser 
,:kod_menu as kod_menu 
 
from dual ) 
 
loop 
insert into vr_packages 
(kod_package 
,title 
,puser 
,kod_menu 
) 
 values  
(r.kod_package 
,r.title 
,r.puser 
,r.kod_menu 
) 
 returning  
kod_package into :kod_package; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_packages where kod_package=:kod_package</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_packages' 
and 
names=:form_id 
and 
f2=:kod_package; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_package as kod_package 
,:title as title 
,:puser as puser 
,:kod_menu as kod_menu 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,s2 
,n2 
) 
 values  
('vr_packages' 
,:form_id 
,:kod_package 
,:row_state_id 
,r.kod_package 
,r.title 
,r.puser 
,r.kod_menu 
); 
end loop; 
else 
for r in  
 ( select  
:kod_package as kod_package 
,:title as title 
,:puser as puser 
,:kod_menu as kod_menu 
,a.u_m 
,a.d_m 
,a.t_m 
 
from vr_packages a  where kod_package=:kod_package) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,s1 
,s2 
,n2 
,s3 
,d1 
,s4 
) 
 values  
('vr_packages' 
,:form_id 
,:kod_package 
,:row_state_id 
,r.kod_package 
,r.title 
,r.puser 
,r.kod_menu 
,r.u_m 
,r.d_m 
,r.t_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_packages' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_packages set  
(kod_package 
,title 
,puser 
,kod_menu 
) 
= 
 ( select  
:kod_package as kod_package 
,:title as title 
,:puser as puser 
,:kod_menu as kod_menu 
 
from dual ) 
 
where 
kod_package=:kod_package 
;
end;
</update-text>
      <scheme>
        <table name="vr_packages" as="vr_packages">
          <columns>
            <column name="kod_package" type="number" title="" />
            <column name="title" type="string" title="" />
            <column name="puser" type="string" title="Если заполнено - настройка видна только этому пользователю" />
            <column name="kod_menu" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_menu_x_n" type="number" title="" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_package" type="number" title="" />
            <column name="title" type="string" title="" />
            <column name="puser" type="string" title="Если заполнено - настройка видна только этому пользователю" />
            <column name="kod_menu_x_n" type="number" title="" />
            <column name="kod_menu" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_package_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_package_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select vr_packages.kod_package as kod_package, /*number*//*key*/
vr_packages.title as title, /*string*/
vr_packages.puser as puser, /*Если заполнено - настройка видна только этому пользователю*//*string*/
vr_packages.kod_menu as kod_menu, /*number*/
kod_menu_x_n.kod_menu as kod_menu_x_n, /*number*/
vr_packages.is_new as is_new, /*number*/
vr_packages.is_not_new as is_not_new/*number*/

from (
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.title as title, /*string*/
a.puser as puser, /*Если заполнено - настройка видна только этому пользователю*//*string*/
a.kod_menu as kod_menu, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_package as kod_package,a.title as title,a.puser as puser,a.kod_menu as kod_menu,0 as is_new,1 as is_not_new  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.s1 as title,t.s2 as puser,t.n2 as kod_menu,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
a
--\(select a.kod_package as kod_package,a.title as title,a.puser as puser,a.kod_menu as kod_menu,0 as is_new,1 as is_not_new  from vr_packages a where not exists (select * from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and a.kod_package=t.f2 ) and   a.kod_package in :kod_package_prm   union all  select t.n1 as kod_package,t.s1 as title,t.s2 as puser,t.n2 as kod_menu,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_packages' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_prm )
)
vr_packages
--\vr_packages
left outer join
(
--rk_menu
select a.kod_menu as kod_menu/*number*//*key*/

from rk_menu
a
--\rk_menu
)
kod_menu_x_n on vr_packages.kod_menu = kod_menu_x_n.kod_menu--\rk_menu
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="vr_package_reports" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_package_reports" key="kod_package_report" parent-table="vr_packages" parent-key="kod_package" is-ms-upd="1">
      <select-text>
--
select vr_package_reports.kod_package_report as kod_package_report, /*number*//*key*/
vr_package_reports.kod_package as kod_package, /*number*/
vr_package_reports.repname as repname, /*Идентификатор отчёта*//*string*/
vr_package_reports.template as template, /*Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel*//*string*/
kod_package_x_n.puser as kod_package_x_n, /*Настройки пакетов отчётов в sql.builder*//*string*/
vr_package_reports.is_new as is_new, /*number*/
vr_package_reports.is_not_new as is_not_new/*number*/

from (
--vr_package_reports
select a.kod_package_report as kod_package_report, /*number*//*key*/
a.kod_package as kod_package, /*number*/
a.repname as repname, /*Идентификатор отчёта*//*string*/
a.template as template, /*Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel*//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_package_reports
a
--\vr_package_reports
)
vr_package_reports
--\vr_package_reports
left outer join
(
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/

from vr_packages
a
--\vr_packages
)
kod_package_x_n on vr_package_reports.kod_package = kod_package_x_n.kod_package--\vr_packages
where
vr_package_reports.kod_package = :fk_kod_package --\
</select-text>
      <columns>
        <column name="kod_package_report" table="vr_package_reports" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_package_report" temp-col-name="n1" />
        <column name="kod_package" table="vr_package_reports" type="number" title="Настройки пакетов отчётов в sql.builder" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_package" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query timestamp="09.01.2018 11:39:12" class="1" title="Настройки пакетов отчётов в sql.builder" file="sql.builder.templates\sql.builder\projects\asuse2_ipr\scheme\original\vr_packages.xml" elid="480" ord="480" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_package" as="kod_package" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_package" into="n1">a.kod_package as kod_package, /**//*number*//*key*/
</column><column table="a" column="puser" as="puser" title="Если заполнено - настройка видна только этому пользователю" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="puser" into="s1">a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/
</column></select>
                <from>
from <query name="vr_packages" as="a" path="./a/a" haskeys="1" used="1">(
<select>--vr_packages
select <column column="kod_package" table="a" type="number" key="1" as="kod_package" sourcetable="./a/a" sourcecolumn="kod_package" used="1">a.kod_package as kod_package, /*number*//*key*/
</column><column table="a" column="puser" type="string" data-size="30" title="Если заполнено - настройка видна только этому пользователю" as="puser" key="0" sourcetable="./a/a" sourcecolumn="puser" used="1">a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/
</column></select><from>
from <table name="vr_packages" as="a" title="Настройки пакетов отчётов в sql.builder" used="1">vr_packages
a
--\vr_packages
</table></from>)
a
--\vr_packages
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_package" as="kod_package" title="" key="1" thissrc="kod_package">a.kod_package</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_package" as="kod_package" title="" key="1" thissrc="kod_package">a.kod_package</column><text txtype="func"> ) like lower( </text><const><text>:kod_package_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="puser" as="puser" title="Если заполнено - настройка видна только этому пользователю" thissrc="puser">a.puser</column><text txtype="func"> ) like lower( </text><const><text>:puser_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" timestamp="09.01.2018 11:39:12" class="1" title="Настройки пакетов отчётов в sql.builder" file="sql.builder.templates\sql.builder\projects\asuse2_ipr\scheme\original\vr_packages.xml" elid="480" ord="480" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query timestamp="09.01.2018 11:39:12" class="1" title="Настройки пакетов отчётов в sql.builder" file="sql.builder.templates\sql.builder\projects\asuse2_ipr\scheme\original\vr_packages.xml" elid="480" ord="480" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_package_filter" type="string" />
                    <param name="puser_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_package" as="kod_package" title="" key="1" />
                    <column table="a" column="puser" as="puser" title="Если заполнено - настройка видна только этому пользователю" />
                  </select>
                  <from>
                    <query name="vr_packages" as="a" title="Настройки пакетов отчётов в sql.builder" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_package" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_package" />
                        <useparam name="kod_package_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="puser" />
                        <useparam name="puser_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_package_filter" />
                    <useparam name="puser_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_package_filter" type="string">
                  <const>:kod_package_filter </const>
                </param>
                <param name="puser_filter" type="string">
                  <const>:puser_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_package_reports">
              <params>
                <param name="kod_package_report_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_package_report_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_package_x_n.puser as kod_package_x_n, /*Настройки пакетов отчётов в sql.builder*//*string*/
vr_package_reports.kod_package_report as kod_package_report/*number*//*key*/

from (
--vr_package_reports
select a.kod_package_report as kod_package_report, /*number*//*key*/
a.kod_package as kod_package/*number*/

from (select a.kod_package_report as kod_package_report,a.kod_package as kod_package  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
a
--\(select a.kod_package_report as kod_package_report,a.kod_package as kod_package  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
)
vr_package_reports
--\vr_package_reports
left outer join
(
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/

from vr_packages
a
--\vr_packages
)
kod_package_x_n on vr_package_reports.kod_package = kod_package_x_n.kod_package--\vr_packages
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_package_x_n" table="vr_package_reports" />
          </dependants>
        </column>
        <column name="repname" table="vr_package_reports" type="string" title="Идентификатор отчёта" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="repname" temp-col-name="s1" />
        <column name="template" table="vr_package_reports" type="string" title="Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="template" temp-col-name="s2" />
        <column name="kod_package_x_n" table="vr_package_reports.kod_package" type="string" title="Настройки пакетов отчётов в sql.builder" text-source-for="kod_package" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_package_report_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_package_report_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_package_x_n.puser as kod_package_x_n, /*Настройки пакетов отчётов в sql.builder*//*string*/
vr_package_reports.kod_package_report as kod_package_report/*number*//*key*/

from (
--vr_package_reports
select a.kod_package_report as kod_package_report, /*number*//*key*/
a.kod_package as kod_package/*number*/

from (select a.kod_package_report as kod_package_report,a.kod_package as kod_package  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
a
--\(select a.kod_package_report as kod_package_report,a.kod_package as kod_package  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
)
vr_package_reports
--\vr_package_reports
left outer join
(
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/

from vr_packages
a
--\vr_packages
)
kod_package_x_n on vr_package_reports.kod_package = kod_package_x_n.kod_package--\vr_packages
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="vr_package_reports" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_package_reports" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_package_report as kod_package_report 
,:kod_package as kod_package 
,:repname as repname 
,:template as template 
 
from dual ) 
 
loop 
insert into vr_package_reports 
(kod_package_report 
,kod_package 
,repname 
,template 
) 
 values  
(r.kod_package_report 
,r.kod_package 
,r.repname 
,r.template 
) 
 returning  
kod_package_report into :kod_package_report; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_package_reports where kod_package_report=:kod_package_report</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_package_reports' 
and 
names=:form_id 
and 
f2=:kod_package_report; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_package_report as kod_package_report 
,:kod_package as kod_package 
,:repname as repname 
,:template as template 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,s2 
) 
 values  
('vr_package_reports' 
,:form_id 
,:kod_package_report 
,:row_state_id 
,r.kod_package_report 
,r.kod_package 
,r.repname 
,r.template 
); 
end loop; 
else 
for r in  
 ( select  
:kod_package_report as kod_package_report 
,:kod_package as kod_package 
,:repname as repname 
,:template as template 
,a.u_m 
,a.d_m 
,a.t_m 
 
from vr_package_reports a  where kod_package_report=:kod_package_report) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,s1 
,s2 
,s3 
,d1 
,s4 
) 
 values  
('vr_package_reports' 
,:form_id 
,:kod_package_report 
,:row_state_id 
,r.kod_package_report 
,r.kod_package 
,r.repname 
,r.template 
,r.u_m 
,r.d_m 
,r.t_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_package_reports' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_package_reports set  
(kod_package_report 
,kod_package 
,repname 
,template 
) 
= 
 ( select  
:kod_package_report as kod_package_report 
,:kod_package as kod_package 
,:repname as repname 
,:template as template 
 
from dual ) 
 
where 
kod_package_report=:kod_package_report 
;
end;
</update-text>
      <scheme>
        <table name="vr_package_reports" as="vr_package_reports">
          <columns>
            <column name="kod_package_report" type="number" title="" />
            <column name="kod_package" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="repname" type="string" title="Идентификатор отчёта" />
            <column name="template" type="string" title="Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel" />
            <column name="kod_package_x_n" type="string" title="Настройки пакетов отчётов в sql.builder" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_package_report" type="number" title="" />
            <column name="kod_package_x_n" type="string" title="Настройки пакетов отчётов в sql.builder" />
            <column name="kod_package" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="repname" type="string" title="Идентификатор отчёта" />
            <column name="template" type="string" title="Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_package_report_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_package_report_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select vr_package_reports.kod_package_report as kod_package_report, /*number*//*key*/
vr_package_reports.kod_package as kod_package, /*number*/
vr_package_reports.repname as repname, /*Идентификатор отчёта*//*string*/
vr_package_reports.template as template, /*Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel*//*string*/
kod_package_x_n.puser as kod_package_x_n, /*Настройки пакетов отчётов в sql.builder*//*string*/
vr_package_reports.is_new as is_new, /*number*/
vr_package_reports.is_not_new as is_not_new/*number*/

from (
--vr_package_reports
select a.kod_package_report as kod_package_report, /*number*//*key*/
a.kod_package as kod_package, /*number*/
a.repname as repname, /*Идентификатор отчёта*//*string*/
a.template as template, /*Идентификатор шаблона excel. Если не заполнен используется стандартный экспорт в excel*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_package_report as kod_package_report,a.kod_package as kod_package,a.repname as repname,a.template as template,0 as is_new,1 as is_not_new  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package,t.s1 as repname,t.s2 as template,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
a
--\(select a.kod_package_report as kod_package_report,a.kod_package as kod_package,a.repname as repname,a.template as template,0 as is_new,1 as is_not_new  from vr_package_reports a where not exists (select * from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and a.kod_package_report=t.f2 ) and   a.kod_package_report in :kod_package_report_prm   union all  select t.n1 as kod_package_report,t.n2 as kod_package,t.s1 as repname,t.s2 as template,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_package_reports' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_package_report_prm )
)
vr_package_reports
--\vr_package_reports
left outer join
(
--vr_packages
select a.kod_package as kod_package, /*number*//*key*/
a.puser as puser/*Если заполнено - настройка видна только этому пользователю*//*string*/

from vr_packages
a
--\vr_packages
)
kod_package_x_n on vr_package_reports.kod_package = kod_package_x_n.kod_package--\vr_packages
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>