<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_isp_list_el" title="Исполнительное производство" security-id="asuse_ur_isp" with-behavior="0" timestamp="24.09.2023 02:07:05" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_folders_isp_list_el.xml" elid="245" ord="245" leaf="0" lvl="2" pelid="">
    <field table="f10" name="val" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="52053529" />
    <field table="is_23" name="value" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="59133718" />
    <fieldgroup title="Условия поиска" id="10120965">
      <field id="24534236" name="kod_abon_type" controlType="UIList" title="Тип абонента" type="number" column-editable="0">
        <listquery>
          <query name="kr_payer_abon_type" />
        </listquery>
        <defaultquery>
          <query name="abon_type_current" />
        </defaultquery>
      </field>
      <field id="66379605" name="dep" controlType="UIList" title="Отделение" type="number" column-editable="kr_dep_is_multi">
        <listquery>
          <query name="kr_dep" />
        </listquery>
        <defaultquery>
          <query name="kr_dep_current" />
        </defaultquery>
      </field>
      <field id="37209245" name="prizn_arch_folder" controlType="UIList" title="Статус папки" type="number">
        <listquery>
          <query name="prizn_arch_folder" />
        </listquery>
        <defaultquery>
          <query name="prizn_arch_folder_act" />
        </defaultquery>
      </field>
      <field id="49184037" controlType="UIText" type="string" name="kodp" title="Код абонента" hint="LIKE" />
      <field id="3279623" controlType="UIText" type="string" name="inn" title="ИНН" max-length="12" visible="is_23" hint="LIKE" />
      <field id="246852" controlType="UIText" type="string" title="Номер исполнительного листа" name="num_il" hint="LIKE" />
    </fieldgroup>
    <grid table="a" show-toolbar="1" allow-select-move-columns="1" id="52744590">
      <toolbar id="65396819">
        <uicommand object="a" name="create_form_ur_folders_isp_main_el" button-type="custom-add-form" title="Создать карточку" icon="AddForm_24" file="sql.builder.templates\sql.builder\projects\common\main.xml" id="12306394" />
        <uicommand button-type="grid-copy" column-visible="0" name="grid-copy" control-name="ButtonCoppyRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="34800125" />
        <uicommand button-type="grid-add" column-visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" title="" id="17518990" />
        <menu title="Отчёты" id="16326258">
          <uicommand title="Отчёт о ходе исполнительного производства" action-type="open-express-report" call="45044-1" id="47189975" />
          <uicommand title="Журнал по исполнительному производству (ССП)" action-type="open-express-report" call="45044-2-ssp" id="55740809" />
          <uicommand title="Журнал по исполнительному производству (полный)" action-type="open-express-report" call="45044-2" id="3671804" />
        </menu>
      </toolbar>
      <columns id="25849967">
        <field table="a" name="sname" title="Отделение" controlType="UIText" rows-limit="100" id="64023922" />
        <field table="a" name="kod_emp" title="Юрист" controlType="UICombo" rows-limit="100" id="50708922" />
        <field table="a" name="nump" title="Код абонента" controlType="UIText" rows-limit="100" id="45825354" />
        <field table="a" name="name" title="Наименование абонента" controlType="UIText" rows-limit="100" id="58554038" />
        <field table="a" name="inn" title="ИНН" controlType="UIText" rows-limit="100" id="47744068" />
        <field table="a" name="ur_dp_ym_min_mat" title="Период задолженности с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="62687325" />
        <field table="a" name="ur_dp_ym_max_mat" title="Период задолженности по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="16478185" />
        <field table="a" name="peni_period_str" title="Период пени" controlType="UIText" rows-limit="100" id="50977359" />
        <field table="a" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="62030199" />
        <field table="a" name="num_reg" title="Номер исп. листа" width="150" controlType="UIText" rows-limit="100" id="52699594" />
        <field table="a" name="kod_isp" title="" width="150" controlType="UIText" edit-mask="N2" rows-limit="100" id="42809768" />
        <field table="a" name="dat_doc" title="Дата выдачи исп. листа" controlType="UIDate" rows-limit="100" id="5761063" />
        <field table="a" name="dat_doc_vld" title=" " controlType="UIText" rows-limit="100" id="20671800" />
        <field table="a" name="not_vvod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="9720" />
        <field table="a" name="ur_hist_mat_dec_dat_resh" title="Дата вынесения решения суда" controlType="UIDate" rows-limit="100" id="16339924" />
        <field table="a" name="ur_dp_priz_hnd_plus_vvod" title="Задолженность по решению суда" controlType="UIText" edit-mask="N2" rows-limit="100" id="19888155" />
        <field table="a" name="ur_opl_do_il_hnd_plus_vvod" title="Оплата до выдачи ИЛ" controlType="UIText" edit-mask="N2" rows-limit="100" id="13029888" />
        <field table="a" name="dolg_on_il_hnd_plus_vvod" title="Задолженность на дату выдачи исп. листа" controlType="UIText" edit-mask="N2" rows-limit="100" id="49216767" />
        <field table="a" name="ur_opl_posl_il_hnd_plus_vvod" title="Оплата по исп. листу" controlType="UIText" edit-mask="N2" rows-limit="100" id="51294476">
          <buttons id="37587154">
            <uicommand action-type="dynamic-form" call="ur_isp_opl_view" type="Ellipsis" side="Right" visible="not_vvod" is-ret="0" title="Оплата по исп. листу [:ur_isp.num_reg]" id="45110402">
              <useparam table="ur_dogplat" column="kod_sf" name="kod_isp" id="38746689" />
            </uicommand>
          </buttons>
        </field>
        <field table="a" name="dolg_resh_tek_hnd_plus_vvod" title="Остаток долга по исп. листу" controlType="UIText" edit-mask="N2" rows-limit="100" id="64678306" />
        <field table="a" name="dat_create" title="Дата начала исполнительного производства" controlType="UIDate" rows-limit="100" id="54390746" />
        <field table="a" name="isp_date" title="Дата направления ИД на исполнение" width="100" controlType="UIDate" rows-limit="100" id="28571810" />
        <field table="a" name="isp_place" title="ИД на исполнении в" width="400" controlType="UIText" rows-limit="100" id="46375244" />
        <field table="a" name="dat_finish" title="Дата сброса папки в архив" controlType="UIDate" rows-limit="100" id="43395137" />
        <field table="a" name="is_active" title="Статус папки" controlType="UICombo" rows-limit="100" id="66999912" />
        <field table="a" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="18179882" />
      </columns>
      <menu id="34359966">
        <uicommand object="a" name="form_ur_folders_isp_main_el" title="Открыть карточку исполнительного производства" id="53215697" />
      </menu>
      <events id="45480095">
        <useaction object="a" name="form_ur_folders_isp_main_el" event-name="double-click" id="66581333" />
      </events>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="number" name="kod_abon_type" parname="kod_abon_type" title="Тип абонента" ColumnEditable="0" />
      <field type="number" name="dep" parname="dep" title="Отделение" ColumnEditable="kr_dep_is_multi" />
      <field type="number" name="prizn_arch_folder" parname="prizn_arch_folder" title="Статус папки" />
      <field type="string" name="kodp" parname="kodp" title="Код абонента" />
      <field type="string" name="inn" parname="inn" title="ИНН" ClientVisible="is_23" />
      <field type="string" name="num_il" parname="num_il" title="Номер исполнительного листа" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
      <field type="string" name="f10_has_changes" parname="f10_has_changes" />
      <field type="string" name="is_23_has_changes" parname="is_23_has_changes" />
    </fields>
    <table name="a" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" column-editable="0" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders_isp">
      <select-text>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_emp as kod_emp, /*Юрист*//*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
kodp.inn as inn, /*ИНН*//*string*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat, /*Период задолженности с*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat, /*Период задолженности по*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
kod_isp.kod_isp as kod_isp, /*number*/
kod_isp.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
kod_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
kod_folders.not_vvod as not_vvod, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd_plus_vvod1 as ur_dp_priz_hnd_plus_vvod, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd_plus_vvod1 as ur_opl_do_il_hnd_plus_vvod, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd_plus_vvod1 as dolg_on_il_hnd_plus_vvod, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd_plus_vvod1 as ur_opl_posl_il_hnd_plus_vvod, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd_plus_vvod1 as dolg_resh_tek_hnd_plus_vvod, /*Остаток долга по исп. листу*//*number*/
a.dat_create as dat_create, /*Дата начала исполнительного производства*//*date*/
a.isp_date as isp_date, /*Дата направления ИД на исполнение*//*date*/
a.isp_place as isp_place, /*ИД на исполнении в*//*string*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
kod_folders.vvod as vvod, /*number*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.kod_podr as kod_podr, /*number*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(qube.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период задолженности с*//*number*/
max(qube.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период задолженности по*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  else ( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  end )  ,0) )  as ur_dp_priz_hnd_plus_vvod1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  else ( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  end )  ,0) )  as ur_opl_do_il_hnd_plus_vvod1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  end )  ,0) )  as dolg_on_il_hnd_plus_vvod1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  else ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  end )  ,0) )  as ur_opl_posl_il_hnd_plus_vvod1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  end )  ,0) )  as dolg_resh_tek_hnd_plus_vvod1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null ) )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
sum(un.ur_isp_opl_astrent_vvod1)  as ur_isp_opl_astrent_vvod1, /*number*/
sum(un.ur_isp_opl_gp_vvod1)  as ur_isp_opl_gp_vvod1, /*number*/
sum(un.ur_isp_opl_ogr_vvod1)  as ur_isp_opl_ogr_vvod1, /*number*/
sum(un.ur_isp_opl_osnreal_vvod1)  as ur_isp_opl_osnreal_vvod1, /*number*/
sum(un.ur_isp_opl_peni_vvod1)  as ur_isp_opl_peni_vvod1, /*number*/
sum(un.ur_isp_opl_sud_izd_vvod1)  as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_mat as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
ur_dogplat.ym_min_mat as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_dogplat_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat, /*Период начисления с (для материалов дела)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
ur_isp.opl_astrent_vvod as ur_isp_opl_astrent_vvod1, /*number*/
ur_isp.opl_gp_vvod as ur_isp_opl_gp_vvod1, /*number*/
ur_isp.opl_ogr_vvod as ur_isp_opl_ogr_vvod1, /*number*/
ur_isp.opl_osnreal_vvod as ur_isp_opl_osnreal_vvod1, /*number*/
ur_isp.opl_peni_vvod as ur_isp_opl_peni_vvod1, /*number*/
ur_isp.opl_sud_izd_vvod as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_isp_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = ur_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
ur_isp_a_d.kod_isp, /*number*//*key*/
ur_isp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.opl_sud_izd_vvod as opl_sud_izd_vvod, /*number*/
a.opl_astrent_vvod as opl_astrent_vvod, /*number*/
a.opl_gp_vvod as opl_gp_vvod, /*number*/
a.opl_ogr_vvod as opl_ogr_vvod, /*number*/
a.opl_peni_vvod as opl_peni_vvod, /*number*/
a.opl_osnreal_vvod as opl_osnreal_vvod/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_isp = dims.kod_isp_prm--\ur_isp
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_vi as kod_vi, /*number*/
a.kod_sdp as kod_sdp, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.inn as inn, /*ИНН*//*string*/
kod_dog.kod_abon_type as kod_abon_type

from kr_payer
a
--\kr_payer
left outer join
(
--
select kod_dog.kodp as kodp, /*number*//*key*/
max(kod_dog.kod_abon_type)  as kod_abon_type

from (
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.kodp as kodp, /**//*number*/
 case  when (a.tep_el = 4)  then 1 else 2 end  as kod_abon_type

from kr_dogovor
a
--\kr_dogovor
)
kod_dog
--\kr_dogovor
 group by
kod_dog.kodp/*number*//*key*/
)
kod_dog on kod_dog.kodp = a.kodp--\
)
kodp on a.kodp = kodp.kodp--\kr_payer
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
( 1=1 )  and (a.kod_sdp = 2)  and (a.kod_vi = 1)  {  and (a.is_active in :prizn_arch_folder )  }  {  and ( lower( kodp.nump ) like lower( :kodp  ) )  }  {  and ( lower( kodp.inn ) like lower( :inn  ) )  }  {  and ( lower( kod_isp.num_reg ) like lower( :num_il  ) )  }  {  and (a.kod_podr in :dep )  }  {  and (kodp.kod_abon_type in :kod_abon_type )  }  and (a.kod_folders is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost, /*number*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.kod_isp as kod_isp, /*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_date( a.kod_folders ) )  else NULL end  as isp_date, /*date*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_place( a.kod_folders ) )  else NULL end  as isp_place/*string*/

from ur_folders
a
--\ur_folders
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
kod_esys on  1=1 --\rs_esys
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from ur_isp
a
--\ur_isp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_isp.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on kod_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name, /*Наименование абонента*//*string*/
a.inn as inn/*ИНН*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="sname" table="kod_podr" type="string" title="Отделение" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp" table="a" type="number" title="Юрист" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_emp" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="fio">fio</column>
                </order>
                <select>--a
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp" into="n1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" as="fio" key="0" used="1" type="string" title="Юрист" sourcetable="./a/a/a" sourcecolumn="fio" into="s1">a.fio as fio/*Юрист*//*string*/
</column></select>
                <from>
from <query name="kr_employee_urists" as="a" path="./a/a" order="fio" haskeys="1" used="1">(
<order notext="1"><column column="fio">fio</column></order><select>--kr_employee_urists
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" title="Юрист" vid="1" as="fio" key="0" used="1" type="string" sourcetable="./a/a/a" sourcecolumn="fio">a.fio as fio/*Юрист*//*string*/
</column></select><from>
from <query name="kr_employee" as="a" path="./a/a/a" haskeys="1" used="1">(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (организации)" as="kodp" key="0" sourcetable="./a/a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*/
</column><column table="a" column="kod_dolzhfun" type="number" comment="код должностной функции" as="kod_dolzhfun" reference="kk_dolzhfun" refcol="kod_dolzhfun" key="0" sourcetable="./a/a/a" sourcecolumn="kod_dolzhfun" used="1">a.kod_dolzhfun as kod_dolzhfun, /*number*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/a/a" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from>)
a
--\kr_employee
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kodp">a.kodp</column><text txtype="func"> in </text><query path="./a/a" used="1">(
<select>--
select <column table="b" column="kodp" as="kodp" fixed="1" key="1" keypath=".kodp" used="1" type="number" sourcetable="./a/a/b/a" sourcecolumn="kodp">b.kodp as kodp/*number*//*key*/
</column></select><from>
from <query name="kr_org_branch3" as="b" path="./a/a/b" used="1">(
<select>--kr_org_branch3
select <column table="a" column="kodp" as="kodp" type="number" title="" key="1" fixed="1" used="1" sourcetable="./a/a/b/a" sourcecolumn="kodp">a.kodp as kodp/**//*number*//*key*/
</column></select><from>
from <query name="kr_org" as="a" path="./a/a/b/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a/b/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="kr_org" refcol="kodp" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_separator" type="number" as="kod_separator" reference="kk_orgseparator" refcol="kod_separator" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_separator" used="1">a.kod_separator as kod_separator, /*number*/
</column><column table="a" column="kod_ecls" type="number" as="kod_ecls" reference="kk_cls" refcol="kod_ecls" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_ecls" used="1">a.kod_ecls as kod_ecls/*number*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from><connect>connect by nocycle
<call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kodp" prior="1">prior a.kodp</column><text txtype="func"> = </text><column table="a" column="kod_parent">a.kod_parent</column>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="not" pth="" optional="1" type="bool">(<text txtype="func"> not </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column column="kod_separator" table="a">a.kod_separator</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="case" pth="">(<text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="not in" pth="" type="bool">(<column column="kodp" table="a">a.kodp</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text txtype="const"> :dep </text></const>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>0</text></const></call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><const><text>1</text></const>) </call>) </call>) </call><text txtype="func"> } </text></call></connect><start>
start with <call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kod_separator">a.kod_separator</column><text txtype="func"> = </text><const><text>1</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_ecls">a.kod_ecls</column><text txtype="func"> = </text><const><text>4</text></const>) </call></call></start>)
b
--\kr_org_branch3
</query></from>)
--\
</query>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_dolzhfun">a.kod_dolzhfun</column><text txtype="func"> = </text><const><text>-1</text></const>) </call></call></where><order>
order by fio</order>)
a
--\kr_employee_urists
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="fio" as="fio" thissrc="fio">a.fio</column><text txtype="func"> ) like lower( </text><const><text>:fio_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by fio</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" as="a">
              <queries>
                <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="dep" type="number" column="kod_podr">
                      <!--<const>(102276621)</const>-->
                    </param>
                    <param name="pk_prm" type="array" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="fio_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_emp" key="1" as="kod_emp" />
                    <column table="a" column="fio" as="fio" />
                  </select>
                  <from>
                    <query name="kr_employee_urists" as="a">
                      <withparams>
                        <call function="array">
                          <useparam name="dep" />
                        </call>
                      </withparams>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="fio" />
                        <useparam name="fio_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="fio" />
                  </order>
                  <withparams>
                    <useparam name="dep" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="fio_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="dep" type="number" column="kod_podr">
                  <!--<const>(102276621)</const>-->
                  <const>:dep </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="fio_filter" type="string">
                  <const>:fio_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="dep" type="number" column="kod_podr">
                <!--<const>(102276621)</const>-->
              </param>
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_emp_x_n" table="a" />
          </dependants>
        </column>
        <column name="nump" table="kodp" type="string" title="Код абонента" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.nump as nump, /*Код абонента*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="name" table="kodp" type="string" title="Наименование абонента" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.name as name, /*Наименование абонента*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="inn" table="kodp" type="string" title="ИНН" ClientVisible="is_23" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.inn as inn, /*ИНН*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.inn as inn/*ИНН*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_min_mat" table="a" type="number" title="Период задолженности с" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat, /*Период задолженности с*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(qube.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1/*Период задолженности с*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1/*Период начисления с (для материалов дела)*//*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1/*Период начисления с (для материалов дела)*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1/*Период начисления с (для материалов дела)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_dogplat.ym_min_mat as ur_dp_ym_min_mat1/*Период начисления с (для материалов дела)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat/*Период начисления с (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_dp_ym_min_mat1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_max_mat" table="a" type="number" title="Период задолженности по" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat, /*Период задолженности по*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1/*Период задолженности по*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1/*Период начисления по (для материалов дела)*//*number*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1/*Период начисления по (для материалов дела)*//*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1/*Период начисления по (для материалов дела)*//*number*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_dogplat.ym_max_mat as ur_dp_ym_max_mat1/*Период начисления по (для материалов дела)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_dp_ym_max_mat1/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str" table="a" type="string" title="Период пени" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as peni_period_ym1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kr_dog_name" table="a" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="num_reg" table="kod_isp" type="string" title="Номер исп. листа" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg/*Номер исп. листа*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_isp" table="kod_isp" type="number" title="" parname="kod_isp" ColumnVisible="false" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_doc" table="kod_isp" type="date" title="Дата выдачи исп. листа" ClientValid="dat_doc_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_doc_vld" table="kod_isp" type="string" title=" " parname="dat_doc_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from ur_isp
a
--\ur_isp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="not_vvod" table="kod_folders" type="number" title="" parname="not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.not_vvod as not_vvod, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_isp.kod_folders = kod_folders.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_dec_dat_resh" table="a" type="date" title="Дата вынесения решения суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата вынесения решения суда*//*date*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*//*date*/

from (
(
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as ur_hist_mat_dec_dat_resh1/*date*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1/*Дата принятия решения*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh/*Дата принятия решения*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_hnd_plus_vvod" table="a" type="number" title="Задолженность по решению суда" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_hnd_plus_vvod1 as ur_dp_priz_hnd_plus_vvod, /*Задолженность по решению суда*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  else ( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  end )  ,0) )  as ur_dp_priz_hnd_plus_vvod1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_dogplat_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl/*% за польз. чуж. ден. ср.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_folders, /*key*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_do_il_hnd_plus_vvod" table="a" type="number" title="Оплата до выдачи ИЛ" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_do_il_hnd_plus_vvod1 as ur_opl_do_il_hnd_plus_vvod, /*Оплата до выдачи ИЛ*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  else ( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  end )  ,0) )  as ur_opl_do_il_hnd_plus_vvod1/*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1/*Оплачено: Судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1/*Оплачено: Судебные издержки*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1/*Оплачено: Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1/*Оплачено: Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_hnd_plus_vvod" table="a" type="number" title="Задолженность на дату выдачи исп. листа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_hnd_plus_vvod1 as dolg_on_il_hnd_plus_vvod, /*Задолженность на дату выдачи исп. листа*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  end )  ,0) )  as dolg_on_il_hnd_plus_vvod1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_dogplat_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost, /*number*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_hnd_plus_vvod" table="a" type="number" title="Оплата по исп. листу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_hnd_plus_vvod1 as ur_opl_posl_il_hnd_plus_vvod, /*Оплата по исп. листу*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  else ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  end )  ,0) )  as ur_opl_posl_il_hnd_plus_vvod1/*Дата выдачи исп. листа*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_isp_opl_astrent_vvod1)  as ur_isp_opl_astrent_vvod1, /*number*/
sum(un.ur_isp_opl_gp_vvod1)  as ur_isp_opl_gp_vvod1, /*number*/
sum(un.ur_isp_opl_ogr_vvod1)  as ur_isp_opl_ogr_vvod1, /*number*/
sum(un.ur_isp_opl_osnreal_vvod1)  as ur_isp_opl_osnreal_vvod1, /*number*/
sum(un.ur_isp_opl_peni_vvod1)  as ur_isp_opl_peni_vvod1, /*number*/
sum(un.ur_isp_opl_sud_izd_vvod1)  as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
ur_isp.opl_astrent_vvod as ur_isp_opl_astrent_vvod1, /*number*/
ur_isp.opl_gp_vvod as ur_isp_opl_gp_vvod1, /*number*/
ur_isp.opl_ogr_vvod as ur_isp_opl_ogr_vvod1, /*number*/
ur_isp.opl_osnreal_vvod as ur_isp_opl_osnreal_vvod1, /*number*/
ur_isp.opl_peni_vvod as ur_isp_opl_peni_vvod1, /*number*/
ur_isp.opl_sud_izd_vvod as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_isp_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = ur_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_isp_a_d.kod_isp, /*number*//*key*/
ur_isp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.opl_sud_izd_vvod as opl_sud_izd_vvod, /*number*/
a.opl_astrent_vvod as opl_astrent_vvod, /*number*/
a.opl_gp_vvod as opl_gp_vvod, /*number*/
a.opl_ogr_vvod as opl_ogr_vvod, /*number*/
a.opl_peni_vvod as opl_peni_vvod, /*number*/
a.opl_osnreal_vvod as opl_osnreal_vvod/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_isp = dims.kod_isp_prm--\ur_isp
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_hnd_plus_vvod" table="a" type="number" title="Остаток долга по исп. листу" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_hnd_plus_vvod1 as dolg_resh_tek_hnd_plus_vvod, /*Остаток долга по исп. листу*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr1 ,0) )  ,0) )  end )  ,0) )  as dolg_resh_tek_hnd_plus_vvod1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_opl, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
sum(un.ur_isp_opl_astrent_vvod1)  as ur_isp_opl_astrent_vvod1, /*number*/
sum(un.ur_isp_opl_gp_vvod1)  as ur_isp_opl_gp_vvod1, /*number*/
sum(un.ur_isp_opl_ogr_vvod1)  as ur_isp_opl_ogr_vvod1, /*number*/
sum(un.ur_isp_opl_osnreal_vvod1)  as ur_isp_opl_osnreal_vvod1, /*number*/
sum(un.ur_isp_opl_peni_vvod1)  as ur_isp_opl_peni_vvod1, /*number*/
sum(un.ur_isp_opl_sud_izd_vvod1)  as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select sr_opl_astr_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr_a_d
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_opl_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_astr_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_dogplat_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost, /*number*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
ur_isp.opl_astrent_vvod as ur_isp_opl_astrent_vvod1, /*number*/
ur_isp.opl_gp_vvod as ur_isp_opl_gp_vvod1, /*number*/
ur_isp.opl_ogr_vvod as ur_isp_opl_ogr_vvod1, /*number*/
ur_isp.opl_osnreal_vvod as ur_isp_opl_osnreal_vvod1, /*number*/
ur_isp.opl_peni_vvod as ur_isp_opl_peni_vvod1, /*number*/
ur_isp.opl_sud_izd_vvod as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_isp_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = ur_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_isp_a_d.kod_isp, /*number*//*key*/
ur_isp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.opl_sud_izd_vvod as opl_sud_izd_vvod, /*number*/
a.opl_astrent_vvod as opl_astrent_vvod, /*number*/
a.opl_gp_vvod as opl_gp_vvod, /*number*/
a.opl_ogr_vvod as opl_ogr_vvod, /*number*/
a.opl_peni_vvod as opl_peni_vvod, /*number*/
a.opl_osnreal_vvod as opl_osnreal_vvod/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_isp = dims.kod_isp_prm--\ur_isp
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_opl, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp/*number*//*key*/

from (
(
(
--
select a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_create" table="a" type="date" title="Дата начала исполнительного производства" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_create" temp-col-name="d1" />
        <column name="isp_date" table="a" type="date" title="Дата направления ИД на исполнение" ColumnVisible="rs_esys_is_1" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.isp_date as isp_date, /*Дата направления ИД на исполнение*//*date*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_date( a.kod_folders ) )  else NULL end  as isp_date/*date*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
kod_esys on  1=1 --\rs_esys
where
a.kod_sdp = 2)
a
--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="isp_place" table="a" type="string" title="ИД на исполнении в" ColumnVisible="rs_esys_is_1" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.isp_place as isp_place, /*ИД на исполнении в*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_place( a.kod_folders ) )  else NULL end  as isp_place/*string*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
kod_esys on  1=1 --\rs_esys
where
a.kod_sdp = 2)
a
--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_finish" table="a" type="date" title="Дата сброса папки в архив" Visible="is_not_new" ColumnEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_finish" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="is_active" table="a" />
            <dependant name="is_active_x_n" table="a" />
          </dependants>
        </column>
        <column name="is_active" table="a" type="number" title="Статус папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select a.is_active as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod" table="kod_folders" type="number" title="Способ учета задолженности" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.vvod as vvod, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_isp.kod_folders = kod_folders.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="a.kod_emp" type="string" title="Юрист" text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_emp as kod_emp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n3 as kod_emp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_active_x_n" table="a.is_active" type="string" title="Статус папки" text-source-for="is_active" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.dat_finish as dat_finish,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.d2 as dat_finish,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="kod_folders.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_isp.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on kod_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr" table="a" type="number" title="Отделение" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_podr" temp-col-name="n11">
          <sel-list-compiled>
            <root>
              <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="name">name</column>
                </order>
                <select>--a
select <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" used="1" into="n1">a.kodp as kodp, /*number*//*key*/
</column><column table="kodp" column="name" title="Отделение" as="name" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="name" into="s1">kodp.name as name, /*Отделение*//*string*/
</column><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="sname" into="s2">kodp.sname as sname, /*Аббревиатура*//*string*/
</column><const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0" used="1" into="n2"><text>1</text> as cnt/*number*/
</const></select>
                <from>
from <table name="kr_dep" as="a" view="1" used="1"><text>(
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )</text>a
--\kr_dep
</table><query name="kr_org" as="kodp" join="left outer" path="./a/kodp" haskeys="1" used="1">left outer join
(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/kodp" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/kodp" sourcecolumn="name" used="1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="sname" type="string" title="" as="sname" key="0" sourcetable="./a/kodp" sourcecolumn="sname" used="1">a.sname as sname/**//*string*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from><call function="=" type="bool">)
kodp on <column table="a" column="kodp">a.kodp</column><text txtype="func"> = </text><column table="kodp" column="kodp">kodp.kodp</column></call>--\kr_org
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="name" title="Отделение" as="name" key="0" thissrc="name">kodp.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" thissrc="sname">kodp.sname</column><text txtype="func"> ) like lower( </text><const><text>:sname_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by name</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" as="a">
              <queries>
                <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="sname_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" />
                    <column table="kodp" column="name" title="Отделение" as="name" key="0" />
                    <column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" />
                    <const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0">1</const>
                  </select>
                  <from>
                    <table name="kr_dep" as="a" view="1">
                      <dlink name="kr_dogovor" dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор" />
                      <dlink name="sv_opl_bank_dep" as="sv_opl_bank_dep" table="sv_opl_bank_dep" child="sv_opl_bank_dep" field="dep" parent="kr_dep" back="sv_opl_bank_dep">
                        <link name="kod_link" dimension="1" as="kod_link" table="sr_opl_bank" child="sv_opl_bank_dep" field="kod_link" parent="sr_opl_bank" back="sv_opl_bank_dep" />
                      </dlink>
                      <dlink name="kr_dogovor" dimension="1" is-final-dimension="1" is-private-dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор">
                        <dimlink name="kod_dep" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kodp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                      <dlink name="ur_folders" dimension="1" is-final-dimension="1" is-private-dimension="1" as="ur_folders" table="ur_folders" child="ur_folders" field="kod_dep" parent="kr_dep" back="ur_folders" title="Папка">
                        <dimlink name="kod_mat_pp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_dec" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_folders_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_inkasso" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_kazn" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                    </table>
                    <query name="kr_org" as="kodp" join="left outer" dname="kr_dep">
                      <call function="=">
                        <column table="a" column="kodp" />
                        <column table="kodp" column="kodp" />
                      </call>
                    </query>
                    <query name="kr_calc_dep_max" join="left outer" as="kr_calc_dep_max" dname="kr_dep">
                      <call function="=">
                        <column table="this" column="kodp" />
                        <column table="kr_calc_dep_max" column="dep" />
                      </call>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="sname" />
                        <useparam name="sname_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="name" />
                  </order>
                  <order>
                    <column column="name" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="sname_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="sname_filter" type="string">
                  <const>:sname_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="a">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="sname" table="a" />
          </dependants>
        </column>
        <column name="is_not_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="is_new" table="a" type="number" title="" is-user-editable="1" />
        <column name="kod_folders" table="a" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_emp as kod_emp 
,:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_emp 
,dat_create 
,dat_finish 
,kod_podr 
,kod_folders 
) 
 values  
(r.kod_emp 
,r.dat_create 
,r.dat_finish 
,r.kod_podr 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_emp as kod_emp 
,:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,d2 
,n11 
,n1 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_emp 
,r.dat_create 
,r.dat_finish 
,r.kod_podr 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_emp as kod_emp 
,:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
,a.kodp 
,a.kod_vi 
,a.kod_sdp 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.vvod 
,a.num_doc 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,d2 
,n11 
,n1 
,n2 
,n4 
,n5 
,n6 
,s1 
,d3 
,n7 
,n8 
,n9 
,n10 
,s2 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('a' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kod_emp 
,r.dat_create 
,r.dat_finish 
,r.kod_podr 
,r.kod_folders 
,r.kodp 
,r.kod_vi 
,r.kod_sdp 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.vvod 
,r.num_doc 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_emp 
,dat_create 
,dat_finish 
,kod_podr 
,kod_folders 
) 
= 
 ( select  
:kod_emp as kod_emp 
,:dat_create as dat_create 
,:dat_finish as dat_finish 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_isp" as="a">
          <columns>
            <column name="sname" type="string" title="Отделение" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="inn" type="string" title="ИНН" />
            <column name="ur_dp_ym_min_mat" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_dp_ym_max_mat" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="kod_isp" type="number" title="" />
            <column name="dat_doc" type="date" title="Дата выдачи исп. листа" />
            <column name="dat_doc_vld" type="string" title=" " visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="ur_hist_mat_dec_dat_resh" type="date" title="Дата вынесения решения суда" />
            <column name="ur_dp_priz_hnd_plus_vvod" type="number" title="Задолженность по решению суда" />
            <column name="ur_opl_do_il_hnd_plus_vvod" type="number" title="Оплата до выдачи ИЛ" />
            <column name="dolg_on_il_hnd_plus_vvod" type="number" title="Задолженность на дату выдачи исп. листа" />
            <column name="ur_opl_posl_il_hnd_plus_vvod" type="number" title="Оплата по исп. листу" />
            <column name="dolg_resh_tek_hnd_plus_vvod" type="number" title="Остаток долга по исп. листу" />
            <column name="dat_create" type="date" title="Дата начала исполнительного производства" />
            <column name="isp_date" type="date" title="Дата направления ИД на исполнение" />
            <column name="isp_place" type="string" title="ИД на исполнении в" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp_x_n" type="string" title="Юрист" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="sname" type="string" title="Отделение" />
            <column name="kod_emp_x_n" type="string" title="Юрист" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="nump" type="string" title="Код абонента" />
            <column name="name" type="string" title="Наименование абонента" />
            <column name="inn" type="string" title="ИНН" />
            <column name="ur_dp_ym_min_mat" type="number" format="F2" edit-mask="F2" title="Период задолженности с" />
            <column name="ur_dp_ym_max_mat" type="number" format="F2" edit-mask="F2" title="Период задолженности по" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="kod_isp" type="number" title="" />
            <column name="dat_doc" type="date" title="Дата выдачи исп. листа" />
            <column name="dat_doc_vld" type="string" title=" " visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="ur_hist_mat_dec_dat_resh" type="date" title="Дата вынесения решения суда" />
            <column name="ur_dp_priz_hnd_plus_vvod" type="number" title="Задолженность по решению суда" />
            <column name="ur_opl_do_il_hnd_plus_vvod" type="number" title="Оплата до выдачи ИЛ" />
            <column name="dolg_on_il_hnd_plus_vvod" type="number" title="Задолженность на дату выдачи исп. листа" />
            <column name="ur_opl_posl_il_hnd_plus_vvod" type="number" title="Оплата по исп. листу" />
            <column name="dolg_resh_tek_hnd_plus_vvod" type="number" title="Остаток долга по исп. листу" />
            <column name="dat_create" type="date" title="Дата начала исполнительного производства" />
            <column name="isp_date" type="date" title="Дата направления ИД на исполнение" />
            <column name="isp_place" type="string" title="ИД на исполнении в" />
            <column name="dat_finish" type="date" title="Дата сброса папки в архив" />
            <column name="is_active_x_n" type="string" title="Статус папки" />
            <column name="is_active" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_podr.sname as sname, /*Отделение*//*string*/
a.kod_emp as kod_emp, /*Юрист*//*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as name, /*Наименование абонента*//*string*/
kodp.inn as inn, /*ИНН*//*string*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat, /*Период задолженности с*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat, /*Период задолженности по*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
kod_isp.kod_isp as kod_isp, /*number*/
kod_isp.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
kod_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
kod_folders.not_vvod as not_vvod, /*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh, /*Дата вынесения решения суда*//*date*/
qube.ur_dp_priz_hnd_plus_vvod1 as ur_dp_priz_hnd_plus_vvod, /*Задолженность по решению суда*//*number*/
qube.ur_opl_do_il_hnd_plus_vvod1 as ur_opl_do_il_hnd_plus_vvod, /*Оплата до выдачи ИЛ*//*number*/
qube.dolg_on_il_hnd_plus_vvod1 as dolg_on_il_hnd_plus_vvod, /*Задолженность на дату выдачи исп. листа*//*number*/
qube.ur_opl_posl_il_hnd_plus_vvod1 as ur_opl_posl_il_hnd_plus_vvod, /*Оплата по исп. листу*//*number*/
qube.dolg_resh_tek_hnd_plus_vvod1 as dolg_resh_tek_hnd_plus_vvod, /*Остаток долга по исп. листу*//*number*/
a.dat_create as dat_create, /*Дата начала исполнительного производства*//*date*/
a.isp_date as isp_date, /*Дата направления ИД на исполнение*//*date*/
a.isp_place as isp_place, /*ИД на исполнении в*//*string*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.is_active as is_active, /*Статус папки*//*number*/
kod_folders.vvod as vvod, /*number*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист*//*string*/
is_active_x_n.name_prizn_arch_folder as is_active_x_n, /*Статус папки*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
a.kod_podr as kod_podr, /*number*/
a.is_not_new as is_not_new, /*number*/
a.is_new as is_new, /*number*/
a.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*//*key*/
min(qube.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период задолженности с*//*number*/
max(qube.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период задолженности по*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата вынесения решения суда*//*date*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  else ( nvl( (qube.ur_dp_sum_v1)  ,0)  +nvl( qube.ur_hist_mat_dec_hand_sum1 ,0) )  end )  ,0) )  as ur_dp_priz_hnd_plus_vvod1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  else ( nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_opl1 end )  ,0) )  end )  ,0) )  as ur_opl_do_il_hnd_plus_vvod1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum2 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  end )  ,0) )  as dolg_on_il_hnd_plus_vvod1, /*% за польз. чуж. ден. ср.*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  else ( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl2 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  end )  ,0) )  as ur_opl_posl_il_hnd_plus_vvod1, /*Дата выдачи исп. листа*//*number*/
sum( nvl( ( case  when ( nvl( kod_folders.vvod ,0)=1 )  then ( nvl( ( nvl( ( nvl( qube.ur_hist_mat_osnreal1 ,0)  +nvl( qube.ur_hist_mat_peni1 ,0)  +nvl( qube.ur_hist_mat_ogr1 ,0)  +nvl( qube.ur_hist_mat_gp_otv1 ,0)  +nvl( qube.ur_hist_mat_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_astrent1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_hist_mat_opl_osnreal1 ,0)  +nvl( qube.ur_hist_mat_opl_peni1 ,0)  +nvl( qube.ur_hist_mat_opl_gpotv1 ,0)  +nvl( qube.ur_hist_mat_opl_sud_izd1 ,0)  +nvl( qube.ur_hist_mat_opl_ogr1 ,0)  +nvl( qube.ur_hist_mat_opl_astrent1 ,0) )  ,0) )  ,0)  -nvl( ( nvl( qube.ur_isp_opl_osnreal_vvod1 ,0)  +nvl( qube.ur_isp_opl_peni_vvod1 ,0)  +nvl( qube.ur_isp_opl_ogr_vvod1 ,0)  +nvl( qube.ur_isp_opl_gp_vvod1 ,0)  +nvl( qube.ur_isp_opl_astrent_vvod1 ,0)  +nvl( qube.ur_isp_opl_sud_izd_vvod1 ,0) )  ,0) )  else ( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost2 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  end )  ,0) )  as dolg_resh_tek_hnd_plus_vvod1/*% за польз. чуж. ден. ср.*//*number*/

from (
--
select qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_folders, 
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select a.kod_folders as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1/*string*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a
--\ur_folders_isp
where
a.kod_folders is not null )
--\
union all
(
--
select dims.kod_folders_isp as kod_folders_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
null as kod_isp, 
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_mat1 as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
qube.ur_dp_ym_min_mat1 as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
qube.ur_isp_opl_astrent_vvod1 as ur_isp_opl_astrent_vvod1, /*number*/
qube.ur_isp_opl_gp_vvod1 as ur_isp_opl_gp_vvod1, /*number*/
qube.ur_isp_opl_ogr_vvod1 as ur_isp_opl_ogr_vvod1, /*number*/
qube.ur_isp_opl_osnreal_vvod1 as ur_isp_opl_osnreal_vvod1, /*number*/
qube.ur_isp_opl_peni_vvod1 as ur_isp_opl_peni_vvod1, /*number*/
qube.ur_isp_opl_sud_izd_vvod1 as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_mat1)  as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
min(un.ur_dp_ym_min_mat1)  as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
sum(un.ur_isp_opl_astrent_vvod1)  as ur_isp_opl_astrent_vvod1, /*number*/
sum(un.ur_isp_opl_gp_vvod1)  as ur_isp_opl_gp_vvod1, /*number*/
sum(un.ur_isp_opl_ogr_vvod1)  as ur_isp_opl_ogr_vvod1, /*number*/
sum(un.ur_isp_opl_osnreal_vvod1)  as ur_isp_opl_osnreal_vvod1, /*number*/
sum(un.ur_isp_opl_peni_vvod1)  as ur_isp_opl_peni_vvod1, /*number*/
sum(un.ur_isp_opl_sud_izd_vvod1)  as ur_isp_opl_sud_izd_vvod1/*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_mat as ur_dp_ym_max_mat1, /*Период начисления по (для материалов дела)*//*number*/
ur_dogplat.ym_min_mat as ur_dp_ym_min_mat1, /*Период начисления с (для материалов дела)*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_dogplat_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp_a_d on kod_isp_a_d.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_dogplat_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_mat, /*Период начисления с (для материалов дела)*//*number*/
 case  when (a.kod_mat is not null )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_mat/*Период начисления по (для материалов дела)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
ur_isp.opl_astrent_vvod as ur_isp_opl_astrent_vvod1, /*number*/
ur_isp.opl_gp_vvod as ur_isp_opl_gp_vvod1, /*number*/
ur_isp.opl_ogr_vvod as ur_isp_opl_ogr_vvod1, /*number*/
ur_isp.opl_osnreal_vvod as ur_isp_opl_osnreal_vvod1, /*number*/
ur_isp.opl_peni_vvod as ur_isp_opl_peni_vvod1, /*number*/
ur_isp.opl_sud_izd_vvod as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select ur_isp_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_a_d
--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = ur_isp_a_d.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
ur_isp_a_d.kod_isp, /*number*//*key*/
ur_isp_a_d.kod_folders, /*number*//*key*/
a.kod_folders/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.opl_sud_izd_vvod as opl_sud_izd_vvod, /*number*/
a.opl_astrent_vvod as opl_astrent_vvod, /*number*/
a.opl_gp_vvod as opl_gp_vvod, /*number*/
a.opl_ogr_vvod as opl_ogr_vvod, /*number*/
a.opl_peni_vvod as opl_peni_vvod, /*number*/
a.opl_osnreal_vvod as opl_osnreal_vvod/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_isp = dims.kod_isp_prm--\ur_isp
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
null as ur_hist_mat_astrent1, /*number*/
null as ur_hist_mat_dec_dat_resh1, /*date*/
null as ur_hist_mat_dec_hand_opl2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost2, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_hist_mat_dec_hand_sum2, /*number*/
null as ur_hist_mat_gp_otv1, /*number*/
null as ur_hist_mat_ogr1, /*number*/
null as ur_hist_mat_opl_astrent1, /*number*/
null as ur_hist_mat_opl_gpotv1, /*number*/
null as ur_hist_mat_opl_ogr1, /*number*/
null as ur_hist_mat_opl_osnreal1, /*number*/
null as ur_hist_mat_opl_peni1, /*number*/
null as ur_hist_mat_opl_sud_izd1, /*number*/
null as ur_hist_mat_osnreal1, /*number*/
null as ur_hist_mat_peni1, /*number*/
null as ur_hist_mat_sud_izd1, /*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_folders as kod_folders, /*number*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
kod_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_folders as kod_folders, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
where
a.kod_folders is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_dogplat.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_folders as kod_folders, /*number*/
qube.kod_folders_isp as kod_folders_isp, /*number*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_ym_max_mat1, /*number*/
null as ur_dp_ym_min_mat1, /*number*/
qube.ur_hist_mat_astrent1 as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
qube.ur_hist_mat_dec_hand_opl2 as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost2 as ur_hist_mat_dec_hand_ost2, /*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_sum2 as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_gp_otv1 as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
qube.ur_hist_mat_ogr1 as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_astrent1 as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_gpotv1 as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
qube.ur_hist_mat_opl_ogr1 as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_opl_osnreal1 as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_peni1 as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
qube.ur_hist_mat_opl_sud_izd1 as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
qube.ur_hist_mat_osnreal1 as ur_hist_mat_osnreal1, /*number*/
qube.ur_hist_mat_peni1 as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
qube.ur_hist_mat_sud_izd1 as ur_hist_mat_sud_izd1, /*Судебные издержки*//*number*/
null as ur_isp_opl_astrent_vvod1, /*number*/
null as ur_isp_opl_gp_vvod1, /*number*/
null as ur_isp_opl_ogr_vvod1, /*number*/
null as ur_isp_opl_osnreal_vvod1, /*number*/
null as ur_isp_opl_peni_vvod1, /*number*/
null as ur_isp_opl_sud_izd_vvod1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
un.kod_folders_isp as kod_folders_isp, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_astrent1)  as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
sum(un.ur_hist_mat_dec_hand_opl2)  as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost2)  as ur_hist_mat_dec_hand_ost2, /*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_sum2)  as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_gp_otv1)  as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
sum(un.ur_hist_mat_ogr1)  as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_astrent1)  as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_gpotv1)  as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
sum(un.ur_hist_mat_opl_ogr1)  as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_opl_osnreal1)  as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_peni1)  as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
sum(un.ur_hist_mat_opl_sud_izd1)  as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
sum(un.ur_hist_mat_osnreal1)  as ur_hist_mat_osnreal1, /*number*/
sum(un.ur_hist_mat_peni1)  as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
sum(un.ur_hist_mat_sud_izd1)  as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
(
(
--
select dims.kod_folders as kod_folders, /*number*//*key*/
dims.kod_folders_isp as kod_folders_isp, /*number*/
dims.kod_isp as kod_isp, /*number*/
ur_hist_mat_dec.astrent as ur_hist_mat_astrent1, /*Астрент (ручной ввод)*//*number*/
ur_hist_mat_dec.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl2, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost2, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum2, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.gp_otv_dubl as ur_hist_mat_gp_otv1, /*Гос. пошлина, взысканная с ответчика*//*number*/
ur_hist_mat_dec.ogr_dubl as ur_hist_mat_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_astrent as ur_hist_mat_opl_astrent1, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_gpotv as ur_hist_mat_opl_gpotv1, /*Оплачено ГП*//*number*/
ur_hist_mat_dec.opl_ogr_dubl as ur_hist_mat_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.opl_osnreal as ur_hist_mat_opl_osnreal1, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_peni as ur_hist_mat_opl_peni1, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
ur_hist_mat_dec.opl_sud_izd_dubl as ur_hist_mat_opl_sud_izd1, /*Оплачено: Судебные издержки*//*number*/
ur_hist_mat_dec.osnreal as ur_hist_mat_osnreal1, /*number*/
ur_hist_mat_dec.peni_dubl as ur_hist_mat_peni1, /*% за польз. чуж. ден. ср.*//*number*/
ur_hist_mat_dec.sud_izd_dubl as ur_hist_mat_sud_izd1/*Судебные издержки*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
kod_mat_pp_a_d.kod_folders as kod_folders, /*number*//*key*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
kod_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
where
a.kod_sdp = 2)
a on a.kod_isp = kod_isp.kod_isp--\ur_folders_isp
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on ur_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
where
a.kod_folders is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
kod_mat_pp_a_d.kod_folders, /*number*//*key*/
a.kod_folders, /*number*//*key*/
kod_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.astrent as astrent, /*Астрент (ручной ввод)*//*number*/
a.opl_peni as opl_peni, /*Оплачено пени до выдачи исп листа (ручной ввод)*//*number*/
a.opl_astrent as opl_astrent, /*Оплачено астрент до выдачи исп листа (ручной ввод)*//*number*/
a.opl_osnreal as opl_osnreal, /*Оплачено осн реал до выдачи исп листа (ручной ввод)*//*number*/
a.opl_gpotv as opl_gpotv, /*Оплачено ГП*//*number*/
a.osnreal as osnreal, /**//*number*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
a.dat_post as dat_resh, /*Дата принятия решения*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost, /*number*/
a.gp_otv as gp_otv_dubl, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd_dubl, /*Судебные издержки*//*number*/
a.ogr as ogr_dubl, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.peni as peni_dubl, /*% за польз. чуж. ден. ср.*//*number*/
a.opl_ogr as opl_ogr_dubl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd_dubl/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
)
--\
)
un
--\
 group by
un.kod_folders, /*number*//*key*/
un.kod_folders_isp, /*number*//*key*/
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_folders.kod_folders = qube.kod_folders--\ur_folders
 group by
qube.kod_folders_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_emp as kod_emp, /*number*/
a.dat_create as dat_create, /*Дата создания папки*//*date*/
a.kod_isp as kod_isp, /*number*/
a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
a.kod_podr as kod_podr, /*number*/
 decode ( a.dat_finish ,null,1,0)  as is_active, /*Статус папки*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp, /*number*//*key*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_date( a.kod_folders ) )  else NULL end  as isp_date, /*date*/
 case  when (kod_esys.kod_esys = 1)  then ( ug_isp.get_isp_place( a.kod_folders ) )  else NULL end  as isp_place/*string*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.dat_create as dat_create,a.kod_isp as kod_isp,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.d1 as dat_create,t.n8 as kod_isp,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_emp as kod_emp,a.dat_create as dat_create,a.kod_isp as kod_isp,a.dat_finish as dat_finish,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='a' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n3 as kod_emp,t.d1 as dat_create,t.n8 as kod_isp,t.d2 as dat_finish,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='a' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
kod_esys on  1=1 --\rs_esys
where
a.kod_sdp = 2)
a on a.kod_folders = qube.kod_folders_isp--\ur_folders_isp
left outer join
(
--prizn_arch_folder
select a.kod as kod_prizn_arch_folder, /*number*//*key*/
a.name as name_prizn_arch_folder/*Статус*//*string*/

from (
      select 1 as kod, 'Активный' as name from dual union all
      select 0, 'Архив' from dual
    )a
--\prizn_arch_folder_view
)
is_active_x_n on a.is_active = is_active_x_n.kod_prizn_arch_folder--\prizn_arch_folder
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on a.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from ur_isp
a
--\ur_isp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_isp.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on kod_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.sname as sname/**//*string*/

from kr_org
a
--\kr_org
)
kod_podr on a.kod_podr = kod_podr.kodp--\kr_org
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name, /*Наименование абонента*//*string*/
a.inn as inn/*ИНН*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on a.kodp = kodp.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="f10" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="is_customer10_flag" key="val" is-ms-upd="0" is-top="1">
      <select-text>
--
select f10.val as val/*number*/

from (
--is_customer10_flag
select  case  when (a.customer_id = 10)  then 1 else 0 end  as val/*number*/

from (
--rs_rep_sets
select a.customer_id as customer_id/**//*number*/

from rs_rep_sets
a
--\rs_rep_sets
)
a
--\rs_rep_sets
)
f10
--\is_customer10_flag
--\
</select-text>
      <columns>
        <column name="val" table="f10" type="number" title="" parname="f10" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="is_customer10_flag" as="f10">
          <columns>
            <column name="val" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
    <table name="is_23" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="rs_esys_is_23" key="value" is-ms-upd="0" is-top="1">
      <select-text>
--
select is_23.value as value/*number*/

from (
--rs_esys_is_23
select  decode( rs_esys.kod_esys , 23 , 1 , 0 )  as value/*number*/

from (
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys
--\rs_esys
)
is_23
--\rs_esys_is_23
--\
</select-text>
      <columns>
        <column name="value" table="is_23" type="number" title="" parname="is_23" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="rs_esys_is_23" as="is_23">
          <columns>
            <column name="value" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>