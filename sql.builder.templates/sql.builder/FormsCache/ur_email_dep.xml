<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_email_dep" title="Ответственные по отделениям" timestamp="28.12.2023 14:46:10" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms.xml" elid="212" ord="212" leaf="0" lvl="2" pelid="">
    <fieldgroup title="Ответственные по отделениям" id="18497706">
      <grid table="ur_email_dep" show-toolbar="1" id="5413833">
        <columns id="102147">
          <field table="ur_email_dep" name="kod_email_dep" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="30227061" />
          <field table="ur_email_dep" name="dep" title="Отделение" width="191" controlType="UICombo" rows-limit="100" id="11070553" />
          <field table="ur_email_dep" name="kod_emp" title="ФИО ответственного" width="198" controlType="UICombo" rows-limit="100" id="24158290" />
          <field table="ur_email_dep" name="e_mail" title="e-mail" width="225" controlType="UIText" rows-limit="100" id="48447851" />
        </columns>
      </grid>
    </fieldgroup>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_email_dep_has_changes" parname="ur_email_dep_has_changes" />
    </fields>
    <table name="ur_email_dep" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_email_dep" key="kod_email_dep" is-ms-upd="1" is-top="1">
      <select-text>
--
select ur_email_dep.kod_email_dep as kod_email_dep, /*number*//*key*/
ur_email_dep.dep as dep, /*Отделение*//*number*/
ur_email_dep.kod_emp as kod_emp, /*ФИО ответственного*//*number*/
kod_emp.e_mail as e_mail, /*e-mail*//*string*/
dep_x_n.name as dep_x_n, /*Отделение*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*ФИО ответственного*//*string*/
ur_email_dep.is_new as is_new, /*number*/
ur_email_dep.is_not_new as is_not_new/*number*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.dep as dep, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_email_dep
a
--\ur_email_dep
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_email_dep.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on ur_email_dep.dep = dep_x_n.kodp--\kr_org
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.e_mail as e_mail/**//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on ur_email_dep.kod_emp = kod_emp.kod_emp--\kr_employee
--\
</select-text>
      <columns>
        <column name="kod_email_dep" table="ur_email_dep" type="number" title="" parname="cur_key" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_email_dep" temp-col-name="n1" />
        <column name="dep" table="ur_email_dep" type="number" title="Отделение" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dep" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query order="kod_separator, name" class="1" timestamp="17.05.2017 16:03:40" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="kod_separator">kod_separator</column>
                  <column column="name">name</column>
                </order>
                <select>--a
select <column table="a" column="kodp" type="number" key="1" as="kodp" used="1" sourcetable="./a/a" sourcecolumn="kodp" into="n1">a.kodp as kodp, /*number*//*key*/
</column><column table="a" column="name" title="Отделение" as="name" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="sname" title="Аббревиатура" as="sname" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="sname" into="s2">a.sname as sname, /*Аббревиатура*//*string*/
</column><column table="a" column="kod_separator" as="kod_separator" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_separator" reference="kk_orgseparator" refcol="kod_separator" into="n2">a.kod_separator as kod_separator/*number*/
</column></select>
                <from>
from <query name="kr_org" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="sname" type="string" title="" as="sname" key="0" sourcetable="./a/a" sourcecolumn="sname" used="1">a.sname as sname, /**//*string*/
</column><column table="a" column="kod_separator" type="number" as="kod_separator" reference="kk_orgseparator" refcol="kod_separator" key="0" sourcetable="./a/a" sourcecolumn="kod_separator" used="1">a.kod_separator as kod_separator, /*number*/
</column><column table="a" column="kod_ecls" type="number" as="kod_ecls" reference="kk_cls" refcol="kod_ecls" key="0" sourcetable="./a/a" sourcecolumn="kod_ecls" used="1">a.kod_ecls as kod_ecls/*number*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column table="a" column="kod_ecls">a.kod_ecls</column><text txtype="func"> = </text><const><text>4</text></const>) </call><text txtype="func"> and </text><call function="in" pth="" type="bool">(<column table="a" column="kod_separator">a.kod_separator</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const>) </call>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" type="number" key="1" as="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" type="number" key="1" as="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" title="Отделение" as="name" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="sname" title="Аббревиатура" as="sname" thissrc="sname">a.sname</column><text txtype="func"> ) like lower( </text><const><text>:sname_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_separator" as="kod_separator" thissrc="kod_separator">a.kod_separator</column><text txtype="func"> ) like lower( </text><const><text>:kod_separator_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by kod_separator, name</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="kod_separator, name" class="1" timestamp="17.05.2017 16:03:40" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" as="a">
              <queries>
                <query order="kod_separator, name" class="1" timestamp="17.05.2017 16:03:40" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="sname_filter" type="string" />
                    <param name="kod_separator_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" type="number" key="1" as="kodp" />
                    <column table="a" column="name" title="Отделение" as="name" />
                    <column table="a" column="sname" title="Аббревиатура" as="sname" />
                    <column table="a" column="kod_separator" as="kod_separator" />
                  </select>
                  <from>
                    <query name="kr_org" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="=">
                          <column table="a" column="kod_ecls" />
                          <const>4</const>
                        </call>
                        <call function="in">
                          <column table="a" column="kod_separator" />
                          <call function="array">
                            <const>1</const>
                            <const>2</const>
                          </call>
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="sname" />
                        <useparam name="sname_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_separator" />
                        <useparam name="kod_separator_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="kod_separator" />
                    <column column="name" />
                  </order>
                  <order>
                    <column column="kod_separator" />
                    <column column="name" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="sname_filter" />
                    <useparam name="kod_separator_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="sname_filter" type="string">
                  <const>:sname_filter </const>
                </param>
                <param name="kod_separator_filter" type="string">
                  <const>:kod_separator_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_email_dep">
              <params>
                <param name="kod_email_dep_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_email_dep_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dep_x_n.name as dep_x_n, /*Отделение*//*string*/
ur_email_dep.kod_email_dep as kod_email_dep/*number*//*key*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.dep as dep/*number*/

from (select a.kod_email_dep as kod_email_dep,a.dep as dep  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n2 as dep  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.dep as dep  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n2 as dep  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on ur_email_dep.dep = dep_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dep_x_n" table="ur_email_dep" />
          </dependants>
        </column>
        <column name="kod_emp" table="ur_email_dep" type="number" title="ФИО ответственного" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_emp" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query order="fio" timestamp="17.05.2017 15:45:22" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="fio">fio</column>
                </order>
                <select>--a
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_emp" into="n1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" key="1" as="fio" used="1" type="string" title="ФИО" sourcetable="./a/a" sourcecolumn="fio" into="s1">a.fio as fio, /*ФИО*//*string*//*key*/
</column><column table="kod_namedolzh" column="name" title="Должность" as="name" key="0" used="1" type="string" sourcetable="./a/kod_namedolzh" sourcecolumn="name" into="s2">kod_namedolzh.name as name, /*Должность*//*string*/
</column><column table="ks_user" column="puser" title="Аккаунт" dgroup="max" as="puser" key="0" used="1" type="string" sourcetable="./a/ks_user/ks_user" sourcecolumn="puser" into="s3">ks_user.puser as puser, /*Аккаунт*//*string*/
</column><column table="a" column="e_mail" title="e-mail" as="e_mail" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="e_mail" into="s4">a.e_mail as e_mail/*e-mail*//*string*/
</column></select>
                <from>
from <query name="kr_employee" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="kod_namedolzh" type="number" comment="код должности" as="kod_namedolzh" reference="ks_namedolzh" refcol="kod_namedolzh" key="0" sourcetable="./a/a" sourcecolumn="kod_namedolzh" used="1">a.kod_namedolzh as kod_namedolzh, /*number*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/a" sourcecolumn="fio" used="1">a.fio as fio, /*ФИО*//*string*/
</column><column table="a" column="e_mail" type="string" title="" as="e_mail" key="0" sourcetable="./a/a" sourcecolumn="e_mail" used="1">a.e_mail as e_mail/**//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from>)
a
--\kr_employee
</query><query as="ks_user" join="left outer" path="./a/ks_user" used="1">left outer join
(
<select>--
select <column table="ks_user" column="kod_emp" group="1" as="kod_emp" key="1" used="1" type="number" sourcetable="./a/ks_user/ks_user" sourcecolumn="kod_emp" reference="kr_employee" refcol="kod_emp">ks_user.kod_emp as kod_emp, /*number*//*key*/
</column><column table="ks_user" group="max" column="puser" as="puser" key="0" used="1" type="string" sourcetable="./a/ks_user/ks_user" sourcecolumn="puser">max(ks_user.puser)  as puser/*string*/
</column></select><from>
from <query name="ks_user" as="ks_user" path="./a/ks_user/ks_user" haskeys="1" used="1">(
<select>--ks_user
select <column table="a" column="puser" type="string" title="" as="puser" key="1" fixed="1" sourcetable="./a/ks_user/ks_user" sourcecolumn="puser" used="1">a.puser as puser, /**//*string*//*key*/
</column><column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" reference="kr_employee" refcol="kod_emp" key="0" sourcetable="./a/ks_user/ks_user" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp/*number*/
</column></select><from>
from <table name="ks_user" as="a" used="1">ks_user
a
--\ks_user
</table></from>)
ks_user
--\ks_user
</query></from><group> group by
<column table="ks_user" column="kod_emp" group="1" as="kod_emp" key="1" used="1" type="number" sourcetable="./a/ks_user/ks_user" sourcecolumn="kod_emp" reference="kr_employee" refcol="kod_emp">ks_user.kod_emp/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ks_user on <column table="ks_user" column="kod_emp">ks_user.kod_emp</column><text txtype="func"> = </text><column table="a" column="kod_emp">a.kod_emp</column></call>--\
</query><query name="ks_namedolzh" as="kod_namedolzh" join="left outer" path="./a/kod_namedolzh" haskeys="1" used="1">left outer join
(
<select>--ks_namedolzh
select <column table="a" column="kod_namedolzh" type="number" as="kod_namedolzh" key="1" fixed="1" sourcetable="./a/kod_namedolzh" sourcecolumn="kod_namedolzh" used="1">a.kod_namedolzh as kod_namedolzh, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Наименование" as="name" key="0" sourcetable="./a/kod_namedolzh" sourcecolumn="name" used="1">a.name as name/*Наименование*//*string*/
</column></select><from>
from <table name="ks_namedolzh" as="a" used="1">ks_namedolzh
a
--\ks_namedolzh
</table></from><call function="=" type="bool">)
kod_namedolzh on <column table="a" column="kod_namedolzh">a.kod_namedolzh</column><text txtype="func"> = </text><column table="kod_namedolzh" column="kod_namedolzh">kod_namedolzh.kod_namedolzh</column></call>--\ks_namedolzh
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="in" pth="" type="bool">(<column table="a" column="kod_namedolzh">a.kod_namedolzh</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>29</text></const><text txtype="func"> , </text><const><text>46</text></const>) </call>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="a" column="fio">a.fio</column><text txtype="func"> is not null </text>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="ks_user" column="puser" dgroup="max">ks_user.puser</column><text txtype="func"> is not null </text>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="fio" key="1" as="fio" thissrc="fio">a.fio</column><text txtype="func"> ) like lower( </text><const><text>:fio_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_namedolzh" column="name" title="Должность" as="name" thissrc="name">kod_namedolzh.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="ks_user" column="puser" title="Аккаунт" dgroup="max" as="puser" thissrc="puser">ks_user.puser</column><text txtype="func"> ) like lower( </text><const><text>:puser_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="e_mail" title="e-mail" as="e_mail" thissrc="e_mail">a.e_mail</column><text txtype="func"> ) like lower( </text><const><text>:e_mail_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by fio</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="fio" timestamp="17.05.2017 15:45:22" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" as="a">
              <queries>
                <query order="fio" timestamp="17.05.2017 15:45:22" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="fio_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="puser_filter" type="string" />
                    <param name="e_mail_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_emp" key="1" as="kod_emp" />
                    <column table="a" column="fio" key="1" as="fio" />
                    <column table="kod_namedolzh" column="name" title="Должность" as="name" />
                    <column table="ks_user" column="puser" title="Аккаунт" dgroup="max" as="puser" />
                    <column table="a" column="e_mail" title="e-mail" as="e_mail" />
                  </select>
                  <from>
                    <query name="kr_employee" as="a">
                      <link name="kod_namedolzh" as="kod_namedolzh" table="ks_namedolzh" child="kr_employee" field="kod_namedolzh" parent="ks_namedolzh" back="kr_employee" />
                      <dlink name="ks_user" as="ks_user" table="ks_user" child="ks_user" field="kod_emp" parent="kr_employee" back="ks_user" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="in">
                          <column table="a" column="kod_namedolzh" />
                          <call function="array">
                            <const>29</const>
                            <const>46</const>
                          </call>
                        </call>
                        <call function="is not null">
                          <column table="a" column="fio" />
                        </call>
                        <call function="is not null">
                          <column table="ks_user" column="puser" dgroup="max" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="fio" />
                        <useparam name="fio_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="puser" />
                        <useparam name="puser_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="e_mail" />
                        <useparam name="e_mail_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="fio" />
                  </order>
                  <order>
                    <column column="fio" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="fio_filter" />
                    <useparam name="name_filter" />
                    <useparam name="puser_filter" />
                    <useparam name="e_mail_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="fio_filter" type="string">
                  <const>:fio_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="puser_filter" type="string">
                  <const>:puser_filter </const>
                </param>
                <param name="e_mail_filter" type="string">
                  <const>:e_mail_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_email_dep">
              <params>
                <param name="kod_email_dep_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_email_dep_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp.e_mail as e_mail, /*e-mail*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*ФИО ответственного*//*string*/
ur_email_dep.kod_email_dep as kod_email_dep/*number*//*key*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from (select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_email_dep.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.e_mail as e_mail/**//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on ur_email_dep.kod_emp = kod_emp.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="e_mail" table="ur_email_dep" />
            <dependant name="kod_emp_x_n" table="ur_email_dep" />
          </dependants>
        </column>
        <column name="e_mail" table="kod_emp" type="string" title="e-mail" ColumnEditable="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_email_dep_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_email_dep_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp.e_mail as e_mail, /*e-mail*//*string*/
ur_email_dep.kod_email_dep as kod_email_dep/*number*//*key*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from (select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.e_mail as e_mail/**//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on ur_email_dep.kod_emp = kod_emp.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dep_x_n" table="ur_email_dep.dep" type="string" title="Отделение" text-source-for="dep" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_email_dep_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_email_dep_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dep_x_n.name as dep_x_n, /*Отделение*//*string*/
ur_email_dep.kod_email_dep as kod_email_dep/*number*//*key*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.dep as dep/*number*/

from (select a.kod_email_dep as kod_email_dep,a.dep as dep  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n2 as dep  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.dep as dep  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n2 as dep  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on ur_email_dep.dep = dep_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="ur_email_dep.kod_emp" type="string" title="ФИО ответственного" text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_email_dep_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_email_dep_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*ФИО ответственного*//*string*/
ur_email_dep.kod_email_dep as kod_email_dep/*number*//*key*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.kod_emp as kod_emp/*number*/

from (select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_email_dep.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_email_dep" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_email_dep" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_email_dep as kod_email_dep 
,:dep as dep 
,:kod_emp as kod_emp 
 
from dual ) 
 
loop 
insert into ur_email_dep 
(kod_email_dep 
,dep 
,kod_emp 
) 
 values  
(r.kod_email_dep 
,r.dep 
,r.kod_emp 
) 
 returning  
kod_email_dep into :kod_email_dep; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_email_dep where kod_email_dep=:kod_email_dep</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_email_dep' 
and 
names=:form_id 
and 
f2=:kod_email_dep; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_email_dep as kod_email_dep 
,:dep as dep 
,:kod_emp as kod_emp 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
) 
 values  
('ur_email_dep' 
,:form_id 
,:kod_email_dep 
,:row_state_id 
,r.kod_email_dep 
,r.dep 
,r.kod_emp 
); 
end loop; 
else 
for r in  
 ( select  
:kod_email_dep as kod_email_dep 
,:dep as dep 
,:kod_emp as kod_emp 
,a.u_m 
,a.d_m 
 
from ur_email_dep a  where kod_email_dep=:kod_email_dep) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,s1 
,d1 
) 
 values  
('ur_email_dep' 
,:form_id 
,:kod_email_dep 
,:row_state_id 
,r.kod_email_dep 
,r.dep 
,r.kod_emp 
,r.u_m 
,r.d_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_email_dep' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_email_dep set  
(kod_email_dep 
,dep 
,kod_emp 
) 
= 
 ( select  
:kod_email_dep as kod_email_dep 
,:dep as dep 
,:kod_emp as kod_emp 
 
from dual ) 
 
where 
kod_email_dep=:kod_email_dep 
;
end;
</update-text>
      <scheme>
        <table name="ur_email_dep" as="ur_email_dep">
          <columns>
            <column name="kod_email_dep" type="number" title="" visible="0" />
            <column name="dep" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="e_mail" type="string" title="e-mail" />
            <column name="dep_x_n" type="string" title="Отделение" />
            <column name="kod_emp_x_n" type="string" title="ФИО ответственного" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_email_dep" type="number" title="" visible="0" />
            <column name="dep_x_n" type="string" title="Отделение" />
            <column name="dep" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp_x_n" type="string" title="ФИО ответственного" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="e_mail" type="string" title="e-mail" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_email_dep_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_email_dep_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_email_dep.kod_email_dep as kod_email_dep, /*number*//*key*/
ur_email_dep.dep as dep, /*Отделение*//*number*/
ur_email_dep.kod_emp as kod_emp, /*ФИО ответственного*//*number*/
kod_emp.e_mail as e_mail, /*e-mail*//*string*/
dep_x_n.name as dep_x_n, /*Отделение*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*ФИО ответственного*//*string*/
ur_email_dep.is_new as is_new, /*number*/
ur_email_dep.is_not_new as is_not_new/*number*/

from (
--ur_email_dep
select a.kod_email_dep as kod_email_dep, /*number*//*key*/
a.kod_emp as kod_emp, /*number*/
a.dep as dep, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp,a.dep as dep,0 as is_new,1 as is_not_new  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp,t.n2 as dep,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
a
--\(select a.kod_email_dep as kod_email_dep,a.kod_emp as kod_emp,a.dep as dep,0 as is_new,1 as is_not_new  from ur_email_dep a where not exists (select * from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and a.kod_email_dep=t.f2 ) and   a.kod_email_dep in :kod_email_dep_prm   union all  select t.n1 as kod_email_dep,t.n3 as kod_emp,t.n2 as dep,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_email_dep' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_email_dep_prm )
)
ur_email_dep
--\ur_email_dep
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_email_dep.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
dep_x_n on ur_email_dep.dep = dep_x_n.kodp--\kr_org
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.e_mail as e_mail/**//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp on ur_email_dep.kod_emp = kod_emp.kod_emp--\kr_employee
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>