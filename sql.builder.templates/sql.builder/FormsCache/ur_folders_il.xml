<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_il" title="Исполнительные листы" security-id="asuse_ur_pir_il" with-behavior="0" timestamp="28.12.2023 14:48:30" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_il.xml" elid="236" ord="236" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="1636273" />
    <field table="ur_folders" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="32888193" />
    <field table="ur_folders" name="not_vvod" title="1" controlType="UIText" edit-mask="N2" rows-limit="100" id="41139029" />
    <field table="ur_folders_isp" name="kod_folders_isp" title="2" controlType="UIText" edit-mask="N2" rows-limit="100" id="65178834" />
    <field table="f10" name="val" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="14365294" />
    <grid table="ur_isp" show-toolbar="1" id="27758557">
      <toolbar id="14398681">
        <uicommand action-type="dynamic-form" call="ur_dogplat_doc_view_isk" modal="1" editable="kod_mat" title="Суммы по юр. документу" id="33444131">
          <useparam name="kod_mat" id="19686128" />
          <const id="36731850">6</const>
          <useparam name="kod_folders" id="631021" />
        </uicommand>
        <uicommand action-type="dynamic-form" call="ur_folders_isp_main" title="Карточка исп. произв." visible="kod_folders_isp" id="59263902">
          <useparam name="kod_folders_isp" id="27708491" />
        </uicommand>
        <uicommand action-type="dynamic-form-create" call="ur_folders_isp_main" title="Создать карточку исп. произв." visible="kod_folders_isp" visible-invert="1" editable="ur_isp_is_not_new" id="28291667">
          <const id="53979072">null</const>
          <useparam name="kod_isp" id="42318569" />
        </uicommand>
        <field id="23063362" controlType="UICheck" checked="1" type="number" elid="387" ord="387" leaf="1" lvl="2" pelid="" title="Не показывать архивные" name="no_arh" />
      </toolbar>
      <columns id="54970560">
        <field table="ur_isp" name="kod_isp" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="24932600" />
        <field table="ur_isp" name="dat_entry" title="Дата вст. реш. в зак. силу" controlType="UIDate" rows-limit="100" id="39704320" />
        <field table="ur_isp" name="kr_dog_name" title="Договор" controlType="UIText" rows-limit="100" id="61614015" />
        <field table="ur_isp" name="kod_hist_mat" title="Исковой док-т № арбитражного дела" controlType="UICombo" rows-limit="100" id="8625" />
        <field table="ur_isp" name="kod_mat" title="Материалы переданные в суд" controlType="UICombo" rows-limit="100" id="9142304" />
        <field table="ur_isp" name="dat_function" title="Дата вступления в силу акта" controlType="UIDate" rows-limit="100" id="45147381" />
        <field table="ur_isp" name="num_reg" title="Номер исп. листа" controlType="UIText" rows-limit="100" id="50349484" />
        <field table="ur_isp" name="dat_doc" title="Дата выдачи исп. листа" controlType="UIDate" rows-limit="100" id="33326830" />
        <field table="ur_isp" name="dat_doc_vld" title=" " controlType="UIText" rows-limit="100" id="65309230" />
        <band title="Сумма взимаемая по исп. листу" id="57713737">
          <field table="ur_isp" name="dolg_on_il_hnd" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="41643460" />
          <field table="ur_isp" name="ur_dp_ym_min_priz" title="Период задолж. с" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="35213878" />
          <field table="ur_isp" name="ur_dp_ym_max_priz" title="Период задолж. по" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="64429264" />
          <field table="ur_isp" name="dolg_on_il_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="56306022" />
          <field table="ur_isp" name="dolg_on_il_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="55134672" />
          <field table="ur_isp" name="peni_period_str" title="Период пени" controlType="UIText" rows-limit="100" id="53146419" />
          <field table="ur_isp" name="dolg_on_il_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="38179718" />
          <field table="ur_isp" name="ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="6863629" />
          <field table="ur_isp" name="gp_otv" title="ГП с ответчика" controlType="UIText" edit-mask="N2" rows-limit="100" id="19692000" />
          <field table="ur_isp" name="gp_es" title="ГП с исца" controlType="UIText" edit-mask="N2" rows-limit="100" id="17125732" />
          <field table="ur_isp" name="dolg_on_il_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="50" id="56236496" />
          <field table="ur_isp" name="sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="20273641" />
        </band>
        <field table="ur_isp" name="dat_post" title="Дата поступления исп.листа в отделение" controlType="UIDate" rows-limit="100" id="38929210" />
        <field table="ur_isp" name="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." controlType="UICombo" rows-limit="100" id="31813761" />
        <field table="ur_isp" name="dat_srok" title="Срок отсрочки/рассрочки исп. листа" controlType="UIDate" rows-limit="100" id="3906750" />
        <band title="Оплата по исп. листу" id="49652927">
          <field table="ur_isp" name="ur_opl_posl_il_hnd" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="35316577" />
          <field table="ur_isp" name="ur_opl_posl_il_osn" title="Осн. реал." controlType="UIText" edit-mask="N2" rows-limit="100" id="47896506" />
          <field table="ur_isp" name="ur_opl_posl_il_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="55122952" />
          <field table="ur_isp" name="ur_opl_posl_il_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="20223535" />
          <field table="ur_isp" name="opl_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="33811749" />
          <field table="ur_isp" name="ur_opl_posl_il_gp" title="ГП" controlType="UIText" edit-mask="N2" rows-limit="100" id="18162225" />
          <field table="ur_isp" name="ur_opl_posl_il_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="14954088" />
          <field table="ur_isp" name="opl_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="62993456" />
        </band>
        <band title="Остаток задолженности по исп. листу" id="35523455">
          <field table="ur_isp" name="dolg_resh_tek_hnd" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" id="14359463" />
          <field table="ur_isp" name="dolg_resh_tek_osn" title="Осн. реал." controlType="UIText" edit-mask="N2" rows-limit="100" id="40935963" />
          <field table="ur_isp" name="dolg_resh_tek_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="31638757" />
          <field table="ur_isp" name="dolg_resh_tek_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="21132653" />
          <field table="ur_isp" name="ost_ogr" title="Расх. за введ. огр. реж. энергопотр." controlType="UIText" edit-mask="N2" rows-limit="100" id="37387643" />
          <field table="ur_isp" name="dolg_resh_tek_gp" title="ГП" controlType="UIText" edit-mask="N2" rows-limit="100" id="63625891" />
          <field table="ur_isp" name="fin_ul_dolg_astr" title="Астрент" controlType="UIText" edit-mask="N2" rows-limit="100" id="14225357" />
          <field table="ur_isp" name="ost_sud_izd" title="Судебные издержки" controlType="UIText" edit-mask="N2" rows-limit="100" id="7083593" />
        </band>
        <field table="ur_isp" name="kod_scan" title="Файл" controlType="UIFile" rows-limit="100" id="3694961" />
        <field table="ur_isp" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="44228881" />
        <field table="ur_isp" name="dat_arh" title="Дата архивации" controlType="UIDate" rows-limit="100" id="49652186" />
        <field table="ur_isp" name="work_done" title="Проделанная работа" controlType="UITextEx" rows-limit="100" id="20772443" />
        <field table="ur_isp" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="28393167" />
      </columns>
    </grid>
  </form>
  <params>
    <param name="kod_folders" type="number">
      <const>157</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const>157</const>
      </param>
    </params>
    <fields>
      <field type="number" name="no_arh" parname="no_arh" title="Не показывать архивные" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_isp_has_changes" parname="ur_isp_has_changes" />
      <field type="string" name="ur_folders_isp_has_changes" parname="ur_folders_isp_has_changes" />
      <field type="string" name="f10_has_changes" parname="f10_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*1*//*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders
--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="kodp" table="ur_folders" type="number" title="Абонент" parname="ur_folders_kodp" ColumnVisible="0" ColumnMandatory="1" NewVal="kodp_new_val" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="ur_folders" />
            <dependant name="kodp_new_val" table="ur_folders" />
          </dependants>
        </column>
        <column name="vvod" table="ur_folders" type="number" title="Способ учета задолженности" parname="is_vvod" ColumnVisible="0" ColumnDefault="ur_folders_vvod_default" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vvod" temp-col-name="n10">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*1*//*number*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="not_vvod" table="ur_folders" />
            <dependant name="vvod_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="not_vvod" table="ur_folders" type="number" title="1" parname="is_not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*1*//*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="ur_folders.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="ur_folders.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_new_val" table="ur_folders" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="ur_folders" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kodp 
,vvod 
,kod_folders 
) 
 values  
(r.kodp 
,r.vvod 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n1 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n1 
,n3 
,n4 
,n5 
,d1 
,n6 
,s1 
,d2 
,n7 
,n8 
,n9 
,d3 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_folders 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kodp 
,vvod 
,kod_folders 
) 
= 
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="ur_folders">
          <columns>
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="not_vvod" type="number" title="1" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" visible="0" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" visible="0" />
            <column name="kodp_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select  coalesce( ur_folders.kodp , ur_folders_mpv_1.kodp )  as kodp, /*number*/
 coalesce( ur_folders.vvod , ur_folders_mpv_1.vvod )  as vvod, /*number*/
 coalesce( ur_folders.not_vvod , ur_folders_mpv_1.not_vvod )  as not_vvod, /*1*//*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
 coalesce( ur_folders.kodp_new_val , ur_folders_mpv_1.kodp_new_val )  as kodp_new_val, /*number*/
 coalesce( ur_folders.is_new , ur_folders_mpv_1.is_new )  as is_new, /*number*/
 coalesce( ur_folders.is_not_new , ur_folders_mpv_1.is_not_new )  as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
 coalesce( ur_folders.kod_folders , ur_folders_mpv_1.kod_folders )  as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ( select t.n1 as kod_isp,t.n8 as kodp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp,t.n8 as kodp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders_mpv_1 on ur_folders_mpv_1.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_isp as kod_isp,a.kodp as kodp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp,a.kodp as kodp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ( coalesce( ur_folders.kod_folders , ur_folders_mpv_1.kod_folders ) )  = qube.kod_folders--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ( coalesce( ur_folders.vvod , ur_folders_mpv_1.vvod ) )  = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ( coalesce( ur_folders.kodp , ur_folders_mpv_1.kodp ) )  = kodp_x_n.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_isp" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_isp" key="kod_isp" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_isp">
      <select-text>
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_hist_mat.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_isp.kod_hist_mat as kod_hist_mat, /*Исковой док-т № арбитражного дела*//*number*/
kod_hist_mat.kod_mat as kod_mat, /*number*/
ur_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
ur_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
ur_isp.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
ur_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
kod_hist_mat.ogr as ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
kod_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
kod_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
kod_hist_mat.sud_izd as sud_izd, /*Судебные издержки*//*number*/
ur_isp.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
ur_isp.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
ur_isp.dat_srok as dat_srok, /*Срок отсрочки/рассрочки исп. листа*//*date*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Осн. реал.*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
kod_hist_mat.opl_ogr as opl_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*ГП*//*number*/
qube.ur_opl_posl_il_astr1 as ur_opl_posl_il_astr, /*Астрент*//*number*/
kod_hist_mat.opl_sud_izd as opl_sud_izd, /*Судебные издержки*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Осн. реал.*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
kod_hist_mat.ost_ogr as ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp1 as dolg_resh_tek_gp, /*ГП*//*number*/
qube.fin_ul_dolg_astr1 as fin_ul_dolg_astr, /*Астрент*//*number*/
kod_hist_mat.ost_sud_izd as ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp.kod_scan as kod_scan, /*number*/
ur_isp.prim as prim, /*Примечание*//*string*/
ur_isp.dat_arh as dat_arh, /*Дата архивации*//*date*/
ur_isp.work_done as work_done, /*Проделанная работа*//*string*/
ur_isp.is_not_new as is_not_new, /*number*/
kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Исковой док-т № арбитражного дела*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.isp_kod_hist_mat_vld1 as isp_kod_hist_mat_vld, /*string*/
ur_isp.kod_folders as kod_folders, /*number*/
ur_isp.kod_podr as kod_podr, /*number*/
ur_isp.is_new as is_new/*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  as ur_opl_posl_il_astr1, /*Оплата по. реш. суда до выдачи исп. листа*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp1, /*Текущая задолженность по решению  ГП*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  as fin_ul_dolg_astr1, /*Долг по астренту*//*number*/
max( case  when (qube.ur_isp_for_mat_count1 &gt; 1)  then 'Уже есть исполнительный лист по выбранному делу' end )  as isp_kod_hist_mat_vld1/*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_isp_for_mat_count1)  as ur_isp_for_mat_count1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp
--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null ) )
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from ur_isp
a
--\ur_isp
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur4)  as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_isp
a
--\ur_isp
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
( 1=1 )  {  and ((ur_isp.dat_arh is null )  and ( nvl( :no_arh  ,0)=1 ) )  }  and (ur_isp.kod_folders = :fk_kod_folders )  and (ur_isp.kod_isp is not null )  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from ur_isp
a
--\ur_isp
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.prim as prim, /*Примечание*//*string*/
a.kod_scan as kod_scan, /*number*/
a.dat_arh as dat_arh, /*Дата архивации*//*date*/
a.work_done as work_done, /**//*string*/
kod_folders.kod_podr as kod_podr, /*number*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld, /* *//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_isp
a
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1 on a.kod_hist_mat = kod_hist_mat1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat1.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_isp.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_isp.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_isp.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.opl_sud_izd as opl_sud_izd, /*Оплачено: Судебные издержки*//*number*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0)  as ost_sud_izd/*Остаток задолж. суд. издерж.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on kod_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</select-text>
      <columns>
        <column name="kod_isp" table="ur_isp" type="number" title="" parname="kod_isp" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n1" />
        <column name="dat_entry" table="kod_hist_mat" type="date" title="Дата вст. реш. в зак. силу" parname="dat_entry" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry/*Дата вст. реш. в зак. силу*//*date*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kr_dog_name" table="ur_isp" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_hist_mat" table="ur_isp" type="number" title="Исковой док-т № арбитражного дела" is-user-editable="1" ColumnMandatory="1" Valid="qube.isp_kod_hist_mat_vld" is-updateable="1" is-updateable-ext="1" update-target="kod_hist_mat" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2580" ord="2580" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_hist_mat" into="n1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="name" as="name" key="0" used="1" type="string" title="Решение" agg="max" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" into="s1">a.name as name/*Решение*//*string*/
</column></select>
                <from>
from <query name="ur_hist_mat_dec" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><call function="||" as="name" title="Решение" key="0" pth="" type="string" used="1" agg="max" sourcetable="./a/a/kod_doc" sourcecolumn="abbr"><column table="kod_doc" column="abbr">kod_doc.abbr</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="kod_mat" column="dat_doc">kod_mat.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call><text txtype="func"> || </text><const><text>'  '</text></const><text txtype="func"> || </text><column table="kod_mat" column="num_delo">kod_mat.num_delo</column><text txtype="func"> || </text><const><text>'  '</text></const><text txtype="func"> || </text><column table="kod_result" column="name">kod_result.name</column> as name, /*Решение*//*string*/
</call><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="ur_mat" as="kod_mat1" join="left outer" path="./a/a/kod_mat1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_mat1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_doc" type="number" column-mandatory="1" as="kod_doc" reference="us_doc" refcol="kod_doc" key="0" sourcetable="./a/a/kod_mat1" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc/*number*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1 on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1" column="kod_mat">kod_mat1.kod_mat</column></call>--\ur_mat
</query><query name="us_doc" as="kod_doc" join="left outer" path="./a/a/kod_doc" haskeys="1" used="1">left outer join
(
<select>--us_doc
select <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" sourcetable="./a/a/kod_doc" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc, /*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" vid="1" as="abbr" key="0" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="us_doc" as="a" title="Документ" used="1">us_doc
a
--\us_doc
</table></from><call function="=" type="bool">)
kod_doc on <column table="kod_mat1" column="kod_doc">kod_mat1.kod_doc</column><text txtype="func"> = </text><column table="kod_doc" column="kod_doc">kod_doc.kod_doc</column></call>--\us_doc
</query><query name="ur_mat" dimension="kod_mat" as="kod_mat" join="left outer" path="./a/a/kod_mat" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="num_delo" type="string" title="Номер дела" fact="ur_mat_num_delo" agg="stragg" mandatory="qube.ur_hist_mat_count" as="num_delo" key="0" sourcetable="./a/a/kod_mat" sourcecolumn="num_delo" used="1">a.num_delo as num_delo, /*Номер дела*//*string*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/kod_mat" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat" column="kod_mat">kod_mat.kod_mat</column></call>--\ur_mat
</query><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Результат рассмотрения" vid="1" as="name" key="0" sourcetable="./a/a/kod_result" sourcecolumn="name" used="1">a.name as name, /*Результат рассмотрения*//*string*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_hist_mat_dec
</query><query name="ur_mat" as="kod_mat" join="left outer" path="./a/kod_mat" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/kod_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/kod_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders/*number*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat" column="kod_mat">kod_mat.kod_mat</column></call>--\ur_mat
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="=" pth="" optional="1" type="bool">(<column table="kod_mat" column="kod_folders">kod_mat.kod_folders</column><text txtype="func"> = </text><const><text>:kod_folders </text></const>) </call><text txtype="func"> } </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" thissrc="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" thissrc="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> ) like lower( </text><const><text>:kod_hist_mat_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" key="0" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2580" ord="2580" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2580" ord="2580" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="kod_folders" type="number" column="kod_folders" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_hist_mat_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" />
                    <column table="a" column="name" as="name" key="0" />
                  </select>
                  <from>
                    <query name="ur_hist_mat_dec" as="a" title="Решение по делу">
                      <link name="kod_mat" as="kod_mat" table="ur_mat" child="ur_hist_mat_dec" field="kod_mat" parent="ur_mat" back="ur_hist_mat_dec" title="Материалы переданные в суд" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="=" optional="1">
                          <column table="kod_mat" column="kod_folders" />
                          <useparam name="kod_folders" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_hist_mat" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_hist_mat" />
                        <useparam name="kod_hist_mat_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_folders" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_hist_mat_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_folders" type="number" column="kod_folders">
                  <const>:kod_folders </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_hist_mat_filter" type="string">
                  <const>:kod_hist_mat_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="kod_folders" type="number" column="kod_folders" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_isp">
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
kod_hist_mat.kod_mat as kod_mat, /*number*/
ur_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
kod_hist_mat.ogr as ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
kod_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
kod_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
kod_hist_mat.sud_izd as sud_izd, /*Судебные издержки*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Осн. реал.*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
kod_hist_mat.opl_ogr as opl_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*ГП*//*number*/
qube.ur_opl_posl_il_astr1 as ur_opl_posl_il_astr, /*Астрент*//*number*/
kod_hist_mat.opl_sud_izd as opl_sud_izd, /*Судебные издержки*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Осн. реал.*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
kod_hist_mat.ost_ogr as ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp1 as dolg_resh_tek_gp, /*ГП*//*number*/
qube.fin_ul_dolg_astr1 as fin_ul_dolg_astr, /*Астрент*//*number*/
kod_hist_mat.ost_sud_izd as ost_sud_izd, /*Судебные издержки*//*number*/
kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Исковой док-т № арбитражного дела*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
qube.isp_kod_hist_mat_vld1 as isp_kod_hist_mat_vld, /*string*/
ur_isp.kod_podr as kod_podr, /*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  as ur_opl_posl_il_astr1, /*Оплата по. реш. суда до выдачи исп. листа*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp1, /*Текущая задолженность по решению  ГП*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  as fin_ul_dolg_astr1, /*Долг по астренту*//*number*/
max( case  when (qube.ur_isp_for_mat_count1 &gt; 1)  then 'Уже есть исполнительный лист по выбранному делу' end )  as isp_kod_hist_mat_vld1/*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_isp_for_mat_count1)  as ur_isp_for_mat_count1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur4)  as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat, /*number*/
kod_folders.kod_podr as kod_podr, /*number*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1 on a.kod_hist_mat = kod_hist_mat1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat1.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_isp.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.opl_sud_izd as opl_sud_izd, /*Оплачено: Судебные издержки*//*number*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0)  as ost_sud_izd/*Остаток задолж. суд. издерж.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on kod_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dat_entry" table="ur_isp" />
            <dependant name="kr_dog_name" table="ur_isp" />
            <dependant name="kod_mat" table="ur_isp" />
            <dependant name="dat_doc_vld" table="ur_isp" />
            <dependant name="dolg_on_il_hnd" table="ur_isp" />
            <dependant name="ur_dp_ym_min_priz" table="ur_isp" />
            <dependant name="ur_dp_ym_max_priz" table="ur_isp" />
            <dependant name="dolg_on_il_osn" table="ur_isp" />
            <dependant name="dolg_on_il_peni" table="ur_isp" />
            <dependant name="peni_period_str" table="ur_isp" />
            <dependant name="dolg_on_il_shtr" table="ur_isp" />
            <dependant name="ogr" table="ur_isp" />
            <dependant name="gp_otv" table="ur_isp" />
            <dependant name="gp_es" table="ur_isp" />
            <dependant name="dolg_on_il_astr" table="ur_isp" />
            <dependant name="sud_izd" table="ur_isp" />
            <dependant name="ur_opl_posl_il_hnd" table="ur_isp" />
            <dependant name="ur_opl_posl_il_osn" table="ur_isp" />
            <dependant name="ur_opl_posl_il_peni" table="ur_isp" />
            <dependant name="ur_opl_posl_il_shtr" table="ur_isp" />
            <dependant name="opl_ogr" table="ur_isp" />
            <dependant name="ur_opl_posl_il_gp" table="ur_isp" />
            <dependant name="ur_opl_posl_il_astr" table="ur_isp" />
            <dependant name="opl_sud_izd" table="ur_isp" />
            <dependant name="dolg_resh_tek_hnd" table="ur_isp" />
            <dependant name="dolg_resh_tek_osn" table="ur_isp" />
            <dependant name="dolg_resh_tek_peni" table="ur_isp" />
            <dependant name="dolg_resh_tek_shtr" table="ur_isp" />
            <dependant name="ost_ogr" table="ur_isp" />
            <dependant name="dolg_resh_tek_gp" table="ur_isp" />
            <dependant name="fin_ul_dolg_astr" table="ur_isp" />
            <dependant name="ost_sud_izd" table="ur_isp" />
            <dependant name="kod_hist_mat_x_n" table="ur_isp" />
            <dependant name="kod_mat_x_n" table="ur_isp" />
            <dependant name="isp_kod_hist_mat_vld" table="ur_isp" />
            <dependant name="isp_kod_hist_mat_vld" table="ur_isp" />
            <dependant name="kod_podr" table="ur_isp" />
          </dependants>
        </column>
        <column name="kod_mat" table="kod_hist_mat" type="number" title="Материалы переданные в суд" parname="kod_mat" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.kod_mat as kod_mat, /*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_function" table="ur_isp" type="date" title="Дата вступления в силу акта" is-user-editable="1" ColumnMandatory="1" ClientNewVal="dat_entry" is-updateable="1" is-updateable-ext="1" update-target="dat_function" temp-col-name="d1" />
        <column name="num_reg" table="ur_isp" type="string" title="Номер исп. листа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="num_reg" temp-col-name="s1" />
        <column name="dat_doc" table="ur_isp" type="date" title="Дата выдачи исп. листа" is-user-editable="1" ClientValid="dat_doc_vld" is-updateable="1" is-updateable-ext="1" update-target="dat_doc" temp-col-name="d2">
          <dep-refresh-cmd>
            <root table="ur_isp">
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Осн. реал.*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*ГП*//*number*/
qube.ur_opl_posl_il_astr1 as ur_opl_posl_il_astr, /*Астрент*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  as ur_opl_posl_il_astr1/*Оплата по. реш. суда до выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dat_doc_vld" table="ur_isp" />
            <dependant name="dolg_on_il_hnd" table="ur_isp" />
            <dependant name="dolg_on_il_osn" table="ur_isp" />
            <dependant name="dolg_on_il_peni" table="ur_isp" />
            <dependant name="dolg_on_il_shtr" table="ur_isp" />
            <dependant name="dolg_on_il_astr" table="ur_isp" />
            <dependant name="ur_opl_posl_il_hnd" table="ur_isp" />
            <dependant name="ur_opl_posl_il_osn" table="ur_isp" />
            <dependant name="ur_opl_posl_il_peni" table="ur_isp" />
            <dependant name="ur_opl_posl_il_shtr" table="ur_isp" />
            <dependant name="ur_opl_posl_il_gp" table="ur_isp" />
            <dependant name="ur_opl_posl_il_astr" table="ur_isp" />
          </dependants>
        </column>
        <column name="dat_doc_vld" table="ur_isp" type="string" title=" " parname="dat_doc_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld/* *//*string*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
ur_isp
--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_hnd" table="ur_isp" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1/*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_min_priz" table="ur_isp" type="number" title="Период задолж. с" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период задолж. с*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz/*Период начисления с (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as ur_dp_ym_min_priz1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_ym_max_priz" table="ur_isp" type="number" title="Период задолж. по" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1/*Период задолж. по*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1/*Период начисления по (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as ur_dp_ym_max_priz1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_osn" table="ur_isp" type="number" title="Основная реализация" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1/*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_peni" table="ur_isp" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1/*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str" table="ur_isp" type="string" title="Период пени" ColumnVisible="is_customer10_flag" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_shtr" table="ur_isp" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1/*Задолженность на дату выдачи исп. листа по штрафу*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ogr" table="kod_hist_mat" type="number" title="Расх. за введ. огр. реж. энергопотр." is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.ogr as ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.ogr as ogr/*Расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="gp_otv" table="kod_hist_mat" type="number" title="ГП с ответчика" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.gp_otv as gp_otv/*Гос. пошлина, взысканная с ответчика*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="gp_es" table="kod_hist_mat" type="number" title="ГП с исца" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.gp_es as gp_es/*Гос. пошлина, взысканная с истца*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_on_il_astr" table="ur_isp" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1/*Долг по астренту*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
null as kod_opl_astr, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1/*Начислено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1/*Начислено астрент*//*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="sud_izd" table="kod_hist_mat" type="number" title="Судебные издержки" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.sud_izd as sud_izd, /*Судебные издержки*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.sud_izd as sud_izd/*Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_post" table="ur_isp" type="date" title="Дата поступления исп.листа в отделение" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_post" temp-col-name="d3" />
        <column name="kod_emp" table="ur_isp" type="number" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_emp" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="fio">fio</column>
                </order>
                <select>--a
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp" into="n1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" as="fio" key="0" used="1" type="string" title="Юрист" sourcetable="./a/a/a" sourcecolumn="fio" into="s1">a.fio as fio/*Юрист*//*string*/
</column></select>
                <from>
from <query name="kr_employee_urists" as="a" path="./a/a" order="fio" haskeys="1" used="1">(
<order notext="1"><column column="fio">fio</column></order><select>--kr_employee_urists
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" title="Юрист" vid="1" as="fio" key="0" used="1" type="string" sourcetable="./a/a/a" sourcecolumn="fio">a.fio as fio/*Юрист*//*string*/
</column></select><from>
from <query name="kr_employee" as="a" path="./a/a/a" haskeys="1" used="1">(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (организации)" as="kodp" key="0" sourcetable="./a/a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*/
</column><column table="a" column="kod_dolzhfun" type="number" comment="код должностной функции" as="kod_dolzhfun" reference="kk_dolzhfun" refcol="kod_dolzhfun" key="0" sourcetable="./a/a/a" sourcecolumn="kod_dolzhfun" used="1">a.kod_dolzhfun as kod_dolzhfun, /*number*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/a/a" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from>)
a
--\kr_employee
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kodp">a.kodp</column><text txtype="func"> in </text><query path="./a/a" used="1">(
<select>--
select <column table="b" column="kodp" as="kodp" fixed="1" key="1" keypath=".kodp" used="1" type="number" sourcetable="./a/a/b/a" sourcecolumn="kodp">b.kodp as kodp/*number*//*key*/
</column></select><from>
from <query name="kr_org_branch3" as="b" path="./a/a/b" used="1">(
<select>--kr_org_branch3
select <column table="a" column="kodp" as="kodp" type="number" title="" key="1" fixed="1" used="1" sourcetable="./a/a/b/a" sourcecolumn="kodp">a.kodp as kodp/**//*number*//*key*/
</column></select><from>
from <query name="kr_org" as="a" path="./a/a/b/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a/b/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="kr_org" refcol="kodp" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_separator" type="number" as="kod_separator" reference="kk_orgseparator" refcol="kod_separator" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_separator" used="1">a.kod_separator as kod_separator, /*number*/
</column><column table="a" column="kod_ecls" type="number" as="kod_ecls" reference="kk_cls" refcol="kod_ecls" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_ecls" used="1">a.kod_ecls as kod_ecls/*number*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from><connect>connect by nocycle
<call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kodp" prior="1">prior a.kodp</column><text txtype="func"> = </text><column table="a" column="kod_parent">a.kod_parent</column>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="not" pth="" optional="1" type="bool">(<text txtype="func"> not </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column column="kod_separator" table="a">a.kod_separator</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="case" pth="">(<text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="not in" pth="" type="bool">(<column column="kodp" table="a">a.kodp</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text txtype="const"> :dep </text></const>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>0</text></const></call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><const><text>1</text></const>) </call>) </call>) </call><text txtype="func"> } </text></call></connect><start>
start with <call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kod_separator">a.kod_separator</column><text txtype="func"> = </text><const><text>1</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_ecls">a.kod_ecls</column><text txtype="func"> = </text><const><text>4</text></const>) </call></call></start>)
b
--\kr_org_branch3
</query></from>)
--\
</query>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_dolzhfun">a.kod_dolzhfun</column><text txtype="func"> = </text><const><text>-1</text></const>) </call></call></where><order>
order by fio</order>)
a
--\kr_employee_urists
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="fio" as="fio" thissrc="fio">a.fio</column><text txtype="func"> ) like lower( </text><const><text>:fio_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by fio</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" elid="2309" ord="2309" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="dep" type="number" column="kod_podr">
                      <!--<const>(102276621)</const>-->
                    </param>
                    <param name="pk_prm" type="array" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="fio_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_emp" key="1" as="kod_emp" />
                    <column table="a" column="fio" as="fio" />
                  </select>
                  <from>
                    <query name="kr_employee_urists" as="a">
                      <withparams>
                        <call function="array">
                          <useparam name="dep" />
                        </call>
                      </withparams>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="fio" />
                        <useparam name="fio_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="fio" />
                  </order>
                  <withparams>
                    <useparam name="dep" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="fio_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="dep" type="number" column="kod_podr">
                  <!--<const>(102276621)</const>-->
                  <const>:dep </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="fio_filter" type="string">
                  <const>:fio_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="dep" type="number" column="kod_podr">
                <!--<const>(102276621)</const>-->
              </param>
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_isp">
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_emp as kod_emp/*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/

from (select a.kod_isp as kod_isp,a.kod_emp as kod_emp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_emp as kod_emp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_isp.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_emp_x_n" table="ur_isp" />
          </dependants>
        </column>
        <column name="dat_srok" table="ur_isp" type="date" title="Срок отсрочки/рассрочки исп. листа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_srok" temp-col-name="d4" />
        <column name="ur_opl_posl_il_hnd" table="ur_isp" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Всего*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1/*Оплата по исп листу с учетом ручных сумм*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as ur_hist_mat_dec_hand_opl1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_osn" table="ur_isp" type="number" title="Осн. реал." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Осн. реал.*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1/*Оплата осн. реал. после выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_peni" table="ur_isp" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1/*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_shtr" table="ur_isp" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1/*Оплата штрафа после выд. исп. л.*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="opl_ogr" table="kod_hist_mat" type="number" title="Расх. за введ. огр. реж. энергопотр." is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.opl_ogr as opl_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_gp" table="ur_isp" type="number" title="ГП" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*ГП*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1/*Оплата ГП после выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_opl_posl_il_astr" table="ur_isp" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_opl_posl_il_astr1 as ur_opl_posl_il_astr, /*Астрент*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  as ur_opl_posl_il_astr1/*Оплата по. реш. суда до выдачи исп. листа*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
null as kod_opl_astr, 
null as fin_ul_opl_astr1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="opl_sud_izd" table="kod_hist_mat" type="number" title="Судебные издержки" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.opl_sud_izd as opl_sud_izd, /*Судебные издержки*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.opl_sud_izd as opl_sud_izd/*Оплачено: Судебные издержки*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_hnd" table="ur_isp" type="number" title="Всего" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Всего*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr1 ,0) )  ,0) )  as dolg_resh_tek_hnd1/*Долг по решению  с учетом ручных сумм*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1/*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_astr_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr_a_d
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_opl_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_astr_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_hist_mat_dec_hand_ost1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_osn" table="ur_isp" type="number" title="Осн. реал." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Осн. реал.*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1/*Текущая задолженность по решению осн. реал*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_peni" table="ur_isp" type="number" title="Проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1/*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_shtr" table="ur_isp" type="number" title="Штраф" VisibleInvert="1" ClientVisible="f10" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1/*Текущая задолженность по решению  штраф*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ost_ogr" table="kod_hist_mat" type="number" title="Расх. за введ. огр. реж. энергопотр." is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.ost_ogr as ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr/*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dolg_resh_tek_gp" table="ur_isp" type="number" title="ГП" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.dolg_resh_tek_gp1 as dolg_resh_tek_gp, /*ГП*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp1/*Текущая задолженность по решению  ГП*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.vid_real as vid_real, /*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_a_d on sr_opl_kred_ur_a_d.kod_opl = kod_opl_a_d.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v/*Признано по юр. документу*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
null as sr_opl_kred_ur1, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as vid_real, 
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_isp as kod_isp/*number*//*key*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="fin_ul_dolg_astr" table="ur_isp" type="number" title="Астрент" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.fin_ul_dolg_astr1 as fin_ul_dolg_astr, /*Астрент*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr1 ,0) )  as fin_ul_dolg_astr1/*Долг по астренту*//*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr1/*number*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select sr_opl_astr_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr_a_d
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_opl_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_astr_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ost_sud_izd" table="kod_hist_mat" type="number" title="Судебные издержки" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat.ost_sud_izd as ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0)  as ost_sud_izd/*Остаток задолж. суд. издерж.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan" table="ur_isp" type="number" title="Файл" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_scan" temp-col-name="n4">
          <sel-list-compiled>
            <root>
              <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_scan" as="kod_scan" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_scan" into="n1">a.kod_scan as kod_scan, /**//*number*//*key*/
</column><column table="a" column="file_name" as="file_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="file_name" into="s1">a.file_name as file_name/**//*string*/
</column></select>
                <from>
from <query name="ur_scan_docs" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_scan_docs
select <column table="a" column="kod_scan" type="number" comment="уникальный ключ" as="kod_scan" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_scan" used="1">a.kod_scan as kod_scan, /*number*//*key*/
</column><column table="a" column="file_name" type="string" title="" comment="имя файла" vid="1" spec-column="file-name" as="file_name" key="0" sourcetable="./a/a" sourcecolumn="file_name" used="1">a.file_name as file_name/**//*string*/
</column></select><from>
from <table name="ur_scan_docs" as="a" title="Файл" used="1">ur_scan_docs
a
--\ur_scan_docs
</table></from>)
a
--\ur_scan_docs
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> ) like lower( </text><const><text>:kod_scan_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="file_name" as="file_name" title="" thissrc="file_name">a.file_name</column><text txtype="func"> ) like lower( </text><const><text>:file_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_scan_filter" type="string" />
                    <param name="file_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_scan" as="kod_scan" title="" key="1" />
                    <column table="a" column="file_name" as="file_name" title="" />
                  </select>
                  <from>
                    <query name="ur_scan_docs" as="a" title="Файл" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="kod_scan_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="file_name" />
                        <useparam name="file_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_scan_filter" />
                    <useparam name="file_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_scan_filter" type="string">
                  <const>:kod_scan_filter </const>
                </param>
                <param name="file_name_filter" type="string">
                  <const>:file_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_isp">
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_scan as kod_scan/*number*/

from (select a.kod_isp as kod_isp,a.kod_scan as kod_scan  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n4 as kod_scan  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_scan as kod_scan  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n4 as kod_scan  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_isp.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_scan_x_n" table="ur_isp" />
          </dependants>
        </column>
        <column name="prim" table="ur_isp" type="string" title="Примечание" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s2" />
        <column name="dat_arh" table="ur_isp" type="date" title="Дата архивации" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_arh" temp-col-name="d5" />
        <column name="work_done" table="ur_isp" type="string" title="Проделанная работа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="work_done" temp-col-name="s3" />
        <column name="is_not_new" table="ur_isp" type="number" title="" parname="ur_isp_is_not_new" ColumnVisible="0" />
        <column name="kod_hist_mat_x_n" table="ur_isp.kod_hist_mat" type="string" title="Исковой док-т № арбитражного дела" text-source-for="kod_hist_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Исковой док-т № арбитражного дела*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_isp.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat_x_n" table="kod_hist_mat.kod_mat" type="string" title="Материалы переданные в суд" text-source-for="kod_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on kod_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="ur_isp.kod_emp" type="string" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_emp as kod_emp/*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/

from (select a.kod_isp as kod_isp,a.kod_emp as kod_emp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_emp as kod_emp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n3 as kod_emp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_isp.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan_x_n" table="ur_isp.kod_scan" type="string" title="Файл" text-source-for="kod_scan" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_scan as kod_scan/*number*/

from (select a.kod_isp as kod_isp,a.kod_scan as kod_scan  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n4 as kod_scan  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_scan as kod_scan  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n4 as kod_scan  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_isp.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="isp_kod_hist_mat_vld" table="ur_isp" type="string" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.isp_kod_hist_mat_vld1 as isp_kod_hist_mat_vld, /*string*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
max( case  when (qube.ur_isp_for_mat_count1 &gt; 1)  then 'Уже есть исполнительный лист по выбранному делу' end )  as isp_kod_hist_mat_vld1/*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
(
(
--
select qube.kod_isp as kod_isp, /*number*//*key*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
sum(un.ur_isp_for_mat_count1)  as ur_isp_for_mat_count1/*number*/

from (
(
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as ur_isp_for_mat_count1/*number*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1/*number*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1/*number*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_isp" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n5">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
        <column name="kod_podr" table="ur_isp" type="number" title="" is-user-editable="1" is-refreshed="1">
          <sel-list-compiled>
            <root>
              <query class="1" timestamp="15.09.2017 15:42:31" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_org.xml" elid="2809" ord="2809" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kodp" as="kodp" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kodp" into="n1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Отделение" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="is_filial" as="is_filial" title="Является филиалом" key="0" used="1" type="number" into="n2">a.is_filial as is_filial/*Является филиалом*//*number*/
</column></select>
                <from>
from <query name="kr_org" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name, /*Отделение*//*string*/
</column><call function="true if not null" as="is_filial" title="Является филиалом" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="kod_parent">a.kod_parent</column><text txtype="func"> ,null,0,1) </text> as is_filial/*Является филиалом*//*number*/
</call></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" as="kodp" title="" key="1" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" as="kodp" title="" key="1" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Отделение" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_filial" as="is_filial" title="Является филиалом" thissrc="is_filial">a.is_filial</column><text txtype="func"> ) like lower( </text><const><text>:is_filial_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" timestamp="15.09.2017 15:42:31" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_org.xml" elid="2809" ord="2809" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" timestamp="15.09.2017 15:42:31" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_org.xml" elid="2809" ord="2809" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_filial_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" as="kodp" title="" key="1" />
                    <column table="a" column="name" as="name" title="Отделение" />
                    <column table="a" column="is_filial" as="is_filial" title="Является филиалом" />
                  </select>
                  <from>
                    <query name="kr_org" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_filial" />
                        <useparam name="is_filial_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_filial_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_filial_filter" type="string">
                  <const>:is_filial_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_isp_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_isp_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_isp.kod_podr as kod_podr, /*number*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
kod_folders.kod_podr as kod_podr/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1 on a.kod_hist_mat = kod_hist_mat1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat1.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
)
ur_isp
--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_isp" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:dat_function as dat_function 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:dat_post as dat_post 
,:kod_emp as kod_emp 
,:dat_srok as dat_srok 
,:kod_scan as kod_scan 
,:prim as prim 
,:dat_arh as dat_arh 
,:work_done as work_done 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_isp 
(kod_isp 
,kod_hist_mat 
,dat_function 
,num_reg 
,dat_doc 
,dat_post 
,kod_emp 
,dat_srok 
,kod_scan 
,prim 
,dat_arh 
,work_done 
,kod_folders 
) 
 values  
(r.kod_isp 
,r.kod_hist_mat 
,r.dat_function 
,r.num_reg 
,r.dat_doc 
,r.dat_post 
,r.kod_emp 
,r.dat_srok 
,r.kod_scan 
,r.prim 
,r.dat_arh 
,r.work_done 
,r.kod_folders 
) 
 returning  
kod_isp into :kod_isp; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_isp where kod_isp=:kod_isp</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_isp' 
and 
names=:form_id 
and 
f2=:kod_isp; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:dat_function as dat_function 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:dat_post as dat_post 
,:kod_emp as kod_emp 
,:dat_srok as dat_srok 
,:kod_scan as kod_scan 
,:prim as prim 
,:dat_arh as dat_arh 
,:work_done as work_done 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,d1 
,s1 
,d2 
,d3 
,n3 
,d4 
,n4 
,s2 
,d5 
,s3 
,n5 
) 
 values  
('ur_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.kod_isp 
,r.kod_hist_mat 
,r.dat_function 
,r.num_reg 
,r.dat_doc 
,r.dat_post 
,r.kod_emp 
,r.dat_srok 
,r.kod_scan 
,r.prim 
,r.dat_arh 
,r.work_done 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:dat_function as dat_function 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:dat_post as dat_post 
,:kod_emp as kod_emp 
,:dat_srok as dat_srok 
,:kod_scan as kod_scan 
,:prim as prim 
,:dat_arh as dat_arh 
,:work_done as work_done 
,:kod_folders as kod_folders 
,a.gp_es 
,a.u_m 
,a.d_m 
,a.gp_otv 
,a.kodp 
,a.opl_proc 
,a.opl_gpotv 
,a.ogr 
,a.kod_delo 
,a.osnr 
,a.peni 
,a.shtraf 
,a.dat_present 
,a.sum_present 
,a.kod_isp_type 
,a.kod_info_potr 
,a.opl_ogr 
,a.dat_post_upr 
,a.incoming_number 
,a.number_sz 
,a.date_sz 
,a.opl_sud_izd_vvod 
,a.opl_astrent_vvod 
,a.opl_gp_vvod 
,a.opl_ogr_vvod 
,a.opl_peni_vvod 
,a.opl_osnreal_vvod 
 
from ur_isp a  where kod_isp=:kod_isp) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,d1 
,s1 
,d2 
,d3 
,n3 
,d4 
,n4 
,s2 
,d5 
,s3 
,n5 
,n6 
,s4 
,d6 
,n7 
,n8 
,n9 
,n10 
,n11 
,n12 
,n13 
,n14 
,n15 
,d7 
,n16 
,n17 
,n18 
,n19 
,d8 
,s5 
,s6 
,d9 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
) 
 values  
('ur_isp' 
,:form_id 
,:kod_isp 
,:row_state_id 
,r.kod_isp 
,r.kod_hist_mat 
,r.dat_function 
,r.num_reg 
,r.dat_doc 
,r.dat_post 
,r.kod_emp 
,r.dat_srok 
,r.kod_scan 
,r.prim 
,r.dat_arh 
,r.work_done 
,r.kod_folders 
,r.gp_es 
,r.u_m 
,r.d_m 
,r.gp_otv 
,r.kodp 
,r.opl_proc 
,r.opl_gpotv 
,r.ogr 
,r.kod_delo 
,r.osnr 
,r.peni 
,r.shtraf 
,r.dat_present 
,r.sum_present 
,r.kod_isp_type 
,r.kod_info_potr 
,r.opl_ogr 
,r.dat_post_upr 
,r.incoming_number 
,r.number_sz 
,r.date_sz 
,r.opl_sud_izd_vvod 
,r.opl_astrent_vvod 
,r.opl_gp_vvod 
,r.opl_ogr_vvod 
,r.opl_peni_vvod 
,r.opl_osnreal_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_isp' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_isp set  
(kod_isp 
,kod_hist_mat 
,dat_function 
,num_reg 
,dat_doc 
,dat_post 
,kod_emp 
,dat_srok 
,kod_scan 
,prim 
,dat_arh 
,work_done 
,kod_folders 
) 
= 
 ( select  
:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:dat_function as dat_function 
,:num_reg as num_reg 
,:dat_doc as dat_doc 
,:dat_post as dat_post 
,:kod_emp as kod_emp 
,:dat_srok as dat_srok 
,:kod_scan as kod_scan 
,:prim as prim 
,:dat_arh as dat_arh 
,:work_done as work_done 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_isp=:kod_isp 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_pir_sync_dat_arh">
          <column table="this" column="kod_isp" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_isp" as="ur_isp">
          <columns>
            <column name="kod_isp" type="number" title="" visible="0" />
            <column name="dat_entry" type="date" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_function" type="date" title="Дата вступления в силу акта" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="dat_doc" type="date" title="Дата выдачи исп. листа" />
            <column name="dat_doc_vld" type="string" title=" " visible="0" />
            <column name="dolg_on_il_hnd" type="number" title="Всего" />
            <column name="ur_dp_ym_min_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. с" />
            <column name="ur_dp_ym_max_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. по" />
            <column name="dolg_on_il_osn" type="number" title="Основная реализация" />
            <column name="dolg_on_il_peni" type="number" title="Проценты (пени)" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="dolg_on_il_shtr" type="number" title="Штраф" />
            <column name="ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="gp_otv" type="number" title="ГП с ответчика" />
            <column name="gp_es" type="number" title="ГП с исца" />
            <column name="dolg_on_il_astr" type="number" title="Астрент" />
            <column name="sud_izd" type="number" title="Судебные издержки" />
            <column name="dat_post" type="date" title="Дата поступления исп.листа в отделение" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_srok" type="date" title="Срок отсрочки/рассрочки исп. листа" />
            <column name="ur_opl_posl_il_hnd" type="number" title="Всего" />
            <column name="ur_opl_posl_il_osn" type="number" title="Осн. реал." />
            <column name="ur_opl_posl_il_peni" type="number" title="Проценты (пени)" />
            <column name="ur_opl_posl_il_shtr" type="number" title="Штраф" />
            <column name="opl_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="ur_opl_posl_il_gp" type="number" title="ГП" />
            <column name="ur_opl_posl_il_astr" type="number" title="Астрент" />
            <column name="opl_sud_izd" type="number" title="Судебные издержки" />
            <column name="dolg_resh_tek_hnd" type="number" title="Всего" />
            <column name="dolg_resh_tek_osn" type="number" title="Осн. реал." />
            <column name="dolg_resh_tek_peni" type="number" title="Проценты (пени)" />
            <column name="dolg_resh_tek_shtr" type="number" title="Штраф" />
            <column name="ost_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
            <column name="dolg_resh_tek_gp" type="number" title="ГП" />
            <column name="fin_ul_dolg_astr" type="number" title="Астрент" />
            <column name="ost_sud_izd" type="number" title="Судебные издержки" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="dat_arh" type="date" title="Дата архивации" />
            <column name="work_done" type="string" title="Проделанная работа" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="kod_hist_mat_x_n" type="string" title="Исковой док-т № арбитражного дела" />
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_emp_x_n" type="string" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="isp_kod_hist_mat_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_isp" type="number" title="" visible="0" />
            <column name="dat_entry" type="date" title="Дата вст. реш. в зак. силу" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="kod_hist_mat_x_n" type="string" title="Исковой док-т № арбитражного дела" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_function" type="date" title="Дата вступления в силу акта" />
            <column name="num_reg" type="string" title="Номер исп. листа" />
            <column name="dat_doc" type="date" title="Дата выдачи исп. листа" />
            <column name="dat_doc_vld" type="string" title=" " visible="0" />
            <band title="Сумма взимаемая по исп. листу">
              <column name="dolg_on_il_hnd" type="number" title="Всего" />
              <column name="ur_dp_ym_min_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. с" />
              <column name="ur_dp_ym_max_priz" type="number" format="F2" edit-mask="F2" title="Период задолж. по" />
              <column name="dolg_on_il_osn" type="number" title="Основная реализация" />
              <column name="dolg_on_il_peni" type="number" title="Проценты (пени)" />
              <column name="peni_period_str" type="string" title="Период пени" />
              <column name="dolg_on_il_shtr" type="number" title="Штраф" />
              <column name="ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="gp_otv" type="number" title="ГП с ответчика" />
              <column name="gp_es" type="number" title="ГП с исца" />
              <column name="dolg_on_il_astr" type="number" title="Астрент" />
              <column name="sud_izd" type="number" title="Судебные издержки" />
            </band>
            <column name="dat_post" type="date" title="Дата поступления исп.листа в отделение" />
            <column name="kod_emp_x_n" type="string" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_srok" type="date" title="Срок отсрочки/рассрочки исп. листа" />
            <band title="Оплата по исп. листу">
              <column name="ur_opl_posl_il_hnd" type="number" title="Всего" />
              <column name="ur_opl_posl_il_osn" type="number" title="Осн. реал." />
              <column name="ur_opl_posl_il_peni" type="number" title="Проценты (пени)" />
              <column name="ur_opl_posl_il_shtr" type="number" title="Штраф" />
              <column name="opl_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="ur_opl_posl_il_gp" type="number" title="ГП" />
              <column name="ur_opl_posl_il_astr" type="number" title="Астрент" />
              <column name="opl_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <band title="Остаток задолженности по исп. листу">
              <column name="dolg_resh_tek_hnd" type="number" title="Всего" />
              <column name="dolg_resh_tek_osn" type="number" title="Осн. реал." />
              <column name="dolg_resh_tek_peni" type="number" title="Проценты (пени)" />
              <column name="dolg_resh_tek_shtr" type="number" title="Штраф" />
              <column name="ost_ogr" type="number" title="Расх. за введ. огр. реж. энергопотр." />
              <column name="dolg_resh_tek_gp" type="number" title="ГП" />
              <column name="fin_ul_dolg_astr" type="number" title="Астрент" />
              <column name="ost_sud_izd" type="number" title="Судебные издержки" />
            </band>
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="prim" type="string" title="Примечание" />
            <column name="dat_arh" type="date" title="Дата архивации" />
            <column name="work_done" type="string" title="Проделанная работа" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="isp_kod_hist_mat_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_isp_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_isp_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
kod_hist_mat.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_isp.kod_hist_mat as kod_hist_mat, /*Исковой док-т № арбитражного дела*//*number*/
kod_hist_mat.kod_mat as kod_mat, /*number*/
ur_isp.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
ur_isp.num_reg as num_reg, /*Номер исп. листа*//*string*/
ur_isp.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
ur_isp.dat_doc_vld as dat_doc_vld, /* *//*string*/
qube.dolg_on_il_hnd1 as dolg_on_il_hnd, /*Всего*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz, /*Период задолж. с*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz, /*Период задолж. по*//*number*/
qube.dolg_on_il_osn1 as dolg_on_il_osn, /*Основная реализация*//*number*/
qube.dolg_on_il_peni1 as dolg_on_il_peni, /*Проценты (пени)*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
qube.dolg_on_il_shtr1 as dolg_on_il_shtr, /*Штраф*//*number*/
kod_hist_mat.ogr as ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
kod_hist_mat.gp_otv as gp_otv, /*ГП с ответчика*//*number*/
kod_hist_mat.gp_es as gp_es, /*ГП с исца*//*number*/
qube.dolg_on_il_astr1 as dolg_on_il_astr, /*Астрент*//*number*/
kod_hist_mat.sud_izd as sud_izd, /*Судебные издержки*//*number*/
ur_isp.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
ur_isp.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
ur_isp.dat_srok as dat_srok, /*Срок отсрочки/рассрочки исп. листа*//*date*/
qube.ur_opl_posl_il_hnd1 as ur_opl_posl_il_hnd, /*Всего*//*number*/
qube.ur_opl_posl_il_osn1 as ur_opl_posl_il_osn, /*Осн. реал.*//*number*/
qube.ur_opl_posl_il_peni1 as ur_opl_posl_il_peni, /*Проценты (пени)*//*number*/
qube.ur_opl_posl_il_shtr1 as ur_opl_posl_il_shtr, /*Штраф*//*number*/
kod_hist_mat.opl_ogr as opl_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.ur_opl_posl_il_gp1 as ur_opl_posl_il_gp, /*ГП*//*number*/
qube.ur_opl_posl_il_astr1 as ur_opl_posl_il_astr, /*Астрент*//*number*/
kod_hist_mat.opl_sud_izd as opl_sud_izd, /*Судебные издержки*//*number*/
qube.dolg_resh_tek_hnd1 as dolg_resh_tek_hnd, /*Всего*//*number*/
qube.dolg_resh_tek_osn1 as dolg_resh_tek_osn, /*Осн. реал.*//*number*/
qube.dolg_resh_tek_peni1 as dolg_resh_tek_peni, /*Проценты (пени)*//*number*/
qube.dolg_resh_tek_shtr1 as dolg_resh_tek_shtr, /*Штраф*//*number*/
kod_hist_mat.ost_ogr as ost_ogr, /*Расх. за введ. огр. реж. энергопотр.*//*number*/
qube.dolg_resh_tek_gp1 as dolg_resh_tek_gp, /*ГП*//*number*/
qube.fin_ul_dolg_astr1 as fin_ul_dolg_astr, /*Астрент*//*number*/
kod_hist_mat.ost_sud_izd as ost_sud_izd, /*Судебные издержки*//*number*/
ur_isp.kod_scan as kod_scan, /*number*/
ur_isp.prim as prim, /*Примечание*//*string*/
ur_isp.dat_arh as dat_arh, /*Дата архивации*//*date*/
ur_isp.work_done as work_done, /*Проделанная работа*//*string*/
ur_isp.is_not_new as is_not_new, /*number*/
kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Исковой док-т № арбитражного дела*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.isp_kod_hist_mat_vld1 as isp_kod_hist_mat_vld, /*string*/
ur_isp.kod_folders as kod_folders, /*number*/
ur_isp.kod_podr as kod_podr, /*number*/
ur_isp.is_new as is_new/*number*/

from (
--
select qube.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0) )  end )  ,0)  +nvl( ( case  when (kod_isp.kod_isp is null )  then qube.ur_hist_mat_dec_hand_ost1 else qube.ur_hist_mat_dec_hand_sum1 end )  ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  ,0) )  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
min(qube.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1, /*Период задолж. с*//*number*/
max(qube.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период задолж. по*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_osn1, /*Задолженность на дату выдачи исп. листа осн. реал.*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_peni1, /*Задолженность на дату выдачи исп. листа % за польз. чуж.ден. ср.*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1, /*Период пени*//*string*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( case  when ((kod_opl.dat_uch &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) ) )  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  ,0) )  end )  end )  as dolg_on_il_shtr1, /*Задолженность на дату выдачи исп. листа по штрафу*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( ( case  when (kod_opl_astr.dat_opl &lt; ( nvl( kod_isp.dat_doc ,  DATE'8999-12-31'  ) ) )  then qube.fin_ul_opl_astr1 end )  ,0) )  as dolg_on_il_astr1, /*Долг по астренту*//*number*/
sum( nvl( ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur1 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_opl1 ,0)  +nvl( ( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  ,0) )  as ur_opl_posl_il_hnd1, /*Оплата по исп листу с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_osn1, /*Оплата осн. реал. после выдачи исп. листа*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_peni1, /*Оплата % за польз. чуж.ден. ср. после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_shtr1, /*Оплата штрафа после выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when (kod_opl.dat_uch &gt;= kod_isp.dat_doc)  then ( nvl( qube.sr_opl_kred_ur2 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  end )  end )  as ur_opl_posl_il_gp1, /*Оплата ГП после выдачи исп. листа*//*number*/
sum( case  when (kod_opl_astr.dat_opl &gt;= kod_isp.dat_doc)  then qube.fin_ul_opl_astr1 end )  as ur_opl_posl_il_astr1, /*Оплата по. реш. суда до выдачи исп. листа*//*number*/
sum( nvl( ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v1 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur3 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf1)  end )  end )  ,0) )  ,0) )  end )  ,0)  +nvl( qube.ur_hist_mat_dec_hand_ost1 ,0)  +nvl( ( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  ,0) )  as dolg_resh_tek_hnd1, /*Долг по решению  с учетом ручных сумм*//*number*/
sum( case  when (vid_real.vid_real = 2)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_osn1, /*Текущая задолженность по решению осн. реал*//*number*/
sum( case  when (vid_real.vid_real = 7)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_peni1, /*Текущая задолженность по решению  % за польз. чуж.ден. ср. до выд. исп. л.*//*number*/
sum( case  when (vid_real.vid_real = 4)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_shtr1, /*Текущая задолженность по решению  штраф*//*number*/
sum( case  when (vid_real.vid_real = 9)  then ( case  when ( 1=1 )  then ( nvl( qube.ur_dp_sum_v2 ,0)  -nvl( ( nvl( qube.sr_opl_kred_ur4 ,0)  +nvl( ( case  when (kod_opl.dat_uch &gt;= kod_hist_mat_dec.dat_post)  then ( case  when (( nvl( kod_dogplat.prizn_konv ,0)=1 )  or (kod_opl.dat_uch &gt; ( nullif(least (  nvl( kod_dogplat.dat_form , to_date('01.01.9999','DD.MM.YYYY'))  , nvl( kod_hist_mat_dec.dat_post , to_date('01.01.9999','DD.MM.YYYY'))  ), to_date('01.01.9999','DD.MM.YYYY')) ) ) )  then (qube.sr_opl_opl_sf2)  end )  end )  ,0) )  ,0) )  end )  end )  as dolg_resh_tek_gp1, /*Текущая задолженность по решению  ГП*//*number*/
sum( nvl( qube.fin_ul_nach_astr1 ,0)  -nvl( qube.fin_ul_opl_astr2 ,0) )  as fin_ul_dolg_astr1, /*Долг по астренту*//*number*/
max( case  when (qube.ur_isp_for_mat_count1 &gt; 1)  then 'Уже есть исполнительный лист по выбранному делу' end )  as isp_kod_hist_mat_vld1/*string*/

from (
--
select qube.kod_isp as kod_isp, /*number*/
qube.kod_opl_astr as kod_opl_astr, /*number*/
qube.kod_opl as kod_opl, /*number*/
qube.vid_real as vid_real, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
(
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
null as vid_real, 
qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.peni_period_ym1 as peni_period_ym1, /*Период*//*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_isp_for_mat_count1 as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_isp_for_mat_count1)  as ur_isp_for_mat_count1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_ras as kod_ras_astr/*number*//*key*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr_a_d
--\sr_facras_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on sr_facras_astr_a_d.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_facras_astr_a_d.kod_ras, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facras_astr
select a.kod_ras as kod_ras, /*number*//*key*/
a.kod_ras as kod_ras_astr, /*number*//*key*/
a.nachisl as nachisl_astr/*Начислено астрент*//*number*/

from sr_facras
a
--\sr_facras
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_sf as vid_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
kod_sf.vid_sf not in (2 , 9) )
sr_facras_astr on sr_facras_astr.kod_ras = dims.kod_ras_prm--\sr_facras_astr
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = ur_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
 nvl( a.ogr ,0)  +nvl( a.sud_izd ,0)  as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( a.opl_ogr ,0)  +nvl( a.opl_sud_izd ,0)  as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
 nvl( (nvl(a.ogr,0)  - nvl(a.opl_ogr,0) )  ,0)  +nvl( (nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0) )  ,0)  as hand_ost/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec on ur_hist_mat_dec.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec
)
--\
union all
(
--
select ur_isp.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--ur_isp
select a.kod_isp as kod_isp/*number*//*key*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp
--\ur_isp
where
ur_isp.kod_isp is not null )
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from ( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n1 as kod_isp  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3 )
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
ur_isp_for_mat.cnt as ur_isp_for_mat_count1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select ur_isp_for_mat_a_d.kod_isp as kod_isp_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat_a_d
--\ur_isp_for_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1_a_d1 on ur_isp_for_mat_a_d.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat1_a_d1.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_isp_for_mat_a_d.kod_isp, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--ur_isp_for_mat
select a.kod_isp as kod_isp, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
a
--\(select a.kod_isp as kod_isp  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ))
)
ur_isp_for_mat on ur_isp_for_mat.kod_isp = dims.kod_isp_prm--\ur_isp_for_mat
)
--\
union all
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as fin_ul_nach_astr1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
)
--\
)
un
--\
 group by
un.kod_isp/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
qube.kod_opl_astr as kod_opl_astr, /*number*/
null as vid_real, 
null as fin_ul_nach_astr1, /*number*/
qube.fin_ul_opl_astr2 as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
sum(un.fin_ul_opl_astr2)  as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl_astr as kod_opl_astr, /*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr2, /*Оплачено астрент*//*number*/
sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/

from (
--
select kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp/*number*//*key*/

from (
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr
--\sr_opl_astr
left outer join
(
--sr_facvip_astr
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf as kod_sf_astr/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_astr_a_d on kod_opl_astr.kod_sf = kod_sf_astr_a_d.kod_sf--\sr_facvip_astr
left outer join
(
--sr_penni_astr
select  nvl( kod_sf.kod_sf_first , kod_sf.kod_sf )  as kod_sf_astr, /*number*/
a.kod_delo as kod_delo/*number*/

from (
--sr_penni
select a.kod_pen as kod_pen, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
a.kod_delo as kod_delo/*number*/

from sr_penni
a
--\sr_penni
)
a
--\sr_penni
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.kod_sf_first as kod_sf_first/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on a.kod_sf = kod_sf.kod_sf--\sr_facvip
where
a.kod_delo is not null )
kod_pen_astr_a_d on kod_pen_astr_a_d.kod_sf_astr = kod_sf_astr_a_d.kod_sf--\sr_penni_astr
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_pen_astr_a_d.kod_delo = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
kod_opl_astr.kod_opl, /*number*//*key*/
ur_isp.kod_isp/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_astr/*Оплачено астрент*//*number*/

from sr_opl
a
--\sr_opl
)
sr_opl_astr on sr_opl_astr.kod_opl = dims.kod_opl_prm--\sr_opl_astr
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl_astr/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
qube.sr_opl_kred_ur3 as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur2 as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
qube.sr_opl_kred_ur4 as sr_opl_kred_ur4, /*Оплата (кредит)*//*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_kred_ur3)  as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur2)  as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sum(un.sr_opl_kred_ur4)  as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur3, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur2, /*Оплата (кредит)*//*number*/
sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur4/*Оплата (кредит)*//*number*/

from (
--
select sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_kred_ur_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_opl.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_link as kod_link/*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link1_a_d1 on sr_opl_kred_ur_a_d.kod_link = kod_link1_a_d1.kod_link--\sr_opl_bank
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_link1_a_d1.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from sr_opl
a
--\sr_opl
)
kod_opl on sr_opl_kred_ur_a_d.kod_opl = kod_opl.kod_opl--\sr_opl
where
ur_isp.kod_isp is not null  group by
sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_opl.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_kred_ur
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_kred_ur/*Оплата (кредит)*//*number*/

from sr_opl
a
--\sr_opl
left outer join
(
--sr_opl_bank
select a.kod_link as kod_link, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from sr_opl_bank
a
--\sr_opl_bank
)
kod_link on a.kod_link = kod_link.kod_link--\sr_opl_bank
where
(a.kod_type_opl in (1 , 2 , 5 , 6) )  and (kod_link.kod_mat is not null ) )
sr_opl_kred_ur on sr_opl_kred_ur.kod_opl = dims.kod_opl_prm--\sr_opl_kred_ur
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
qube.kod_isp as kod_isp, /*number*/
qube.kod_opl as kod_opl, /*number*/
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
qube.sr_opl_opl_sf2 as sr_opl_opl_sf2, /*Оплата начислений*//*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_ym_max_priz1, /*number*/
null as ur_dp_ym_min_priz1, /*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
un.kod_isp as kod_isp, /*number*//*key*/
un.kod_opl as kod_opl, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sum(un.sr_opl_opl_sf2)  as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
(
(
--
select dims.kod_dogplat as kod_dogplat, /*number*//*key*/
dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
dims.kod_isp as kod_isp, /*number*/
dims.kod_opl as kod_opl, /*number*/
dims.vid_real as vid_real, /*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
sr_opl_sf.opl_sf as sr_opl_opl_sf2/*Оплата начислений*//*number*/

from (
--
select sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
sr_opl_sf_a_d.kod_opl as kod_opl, /*number*//*key*/
kod_sf_a_d.vid_real as vid_real/*number*//*key*/

from (
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf_a_d
--\sr_opl_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on sr_opl_sf_a_d.kod_sf = kod_sf_a_d.kod_sf--\sr_facvip
left outer join
(
--vv_all_deb_sf
select a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from vv_all_deb_sf
a
--\vv_all_deb_sf
)
vv_all_deb_sf_a_d1 on vv_all_deb_sf_a_d1.kod_sf = kod_sf_a_d.kod_sf--\vv_all_deb_sf
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_deb_sf as kod_deb_sf/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_deb_sf = vv_all_deb_sf_a_d1.kod_deb_sf--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on kod_dogplat.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
sr_opl_sf_a_d.kod_opl, /*number*//*key*/
kod_dogplat.kod_dogplat, /*number*//*key*/
kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
kod_sf_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--sr_opl_sf
select a.kod_opl as kod_opl, /*number*//*key*/
 nvl( a.opl ,0)  +nvl( a.opls ,0)  as opl_sf/*Оплата начислений*//*number*/

from sr_opl
a
--\sr_opl
where
a.kod_type_opl in (0 , 2 , 3 , 4) )
sr_opl_sf on sr_opl_sf.kod_opl = dims.kod_opl_prm--\sr_opl_sf
)
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_hist_mat_dec, /*number*//*key*/
un.kod_isp, /*number*//*key*/
un.kod_opl, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
null as kod_hist_mat_dec, 
qube.kod_isp as kod_isp, /*number*/
null as kod_opl, 
null as kod_opl_astr, 
qube.vid_real as vid_real, /*number*/
null as fin_ul_nach_astr1, /*number*/
null as fin_ul_opl_astr2, /*number*/
null as fin_ul_opl_astr1, /*number*/
null as kr_dog_name1, /*string*/
null as peni_period_ym1, /*string*/
null as sr_opl_kred_ur3, /*number*/
null as sr_opl_kred_ur1, /*number*/
null as sr_opl_kred_ur2, /*number*/
null as sr_opl_kred_ur4, /*number*/
null as sr_opl_opl_sf1, /*number*/
null as sr_opl_opl_sf2, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_ym_max_priz1 as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
qube.ur_dp_ym_min_priz1 as ur_dp_ym_min_priz1, /*Период начисления с (призн.)*//*number*/
null as ur_hist_mat_dec_hand_opl1, /*number*/
null as ur_hist_mat_dec_hand_ost1, /*number*/
null as ur_hist_mat_dec_hand_sum1, /*number*/
null as ur_isp_for_mat_count1/*number*/

from (
--
select un.kod_isp as kod_isp, /*number*//*key*/
un.vid_real as vid_real, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
max(un.ur_dp_ym_max_priz1)  as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
min(un.ur_dp_ym_min_priz1)  as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
(
(
--
select dims.kod_isp as kod_isp, /*number*//*key*/
dims.vid_real as vid_real, /*number*/
ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
ur_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
ur_dogplat.ym_max_priz as ur_dp_ym_max_priz1, /*Период начисления по (призн.)*//*number*/
ur_dogplat.ym_min_priz as ur_dp_ym_min_priz1/*Период начисления с (призн.)*//*number*/

from (
--
select ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
ur_isp.kod_isp as kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real as vid_real/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat1_a_d1 on ur_dogplat_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_mat_pp
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_mat as kod_mat_pp/*number*//*key*/

from ur_mat
a
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
where
kod_folders.kod_sdp = 1)
kod_mat_pp_a_d on kod_mat_pp_a_d.kod_mat = kod_mat1_a_d1.kod_mat--\ur_mat_pp
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec_a_d on kod_hist_mat_dec_a_d.kod_mat = kod_mat_pp_a_d.kod_mat--\ur_hist_mat_dec
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*number*/

from (select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.kod_hist_mat as kod_hist_mat  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
ur_isp on ur_isp.kod_hist_mat = kod_hist_mat_dec_a_d.kod_hist_mat--\ur_isp
where
ur_isp.kod_isp is not null  group by
ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
ur_isp.kod_isp, /*number*//*key*/
ur_dogplat_a_d.vid_real/*number*//*key*/
)
dims
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_min_priz, /*Период начисления с (призн.)*//*number*/
 case  when ( nvl( a.sum_v ,0)!=0 )  then ( case  when (a.vid_real not in (7 , 9) )  then a.ym end )  end  as ym_max_priz/*Период начисления по (призн.)*//*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat on ur_dogplat.kod_dogplat = dims.kod_dogplat_prm--\ur_dogplat
)
--\
)
--\
)
un
--\
 group by
un.kod_isp, /*number*//*key*/
un.vid_real/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on kod_hist_mat_dec.kod_hist_mat = qube.kod_hist_mat_dec--\ur_hist_mat_dec
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
a.prizn_konv as prizn_konv/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
left outer join
(
--sk_vid_real
select a.vid_real as vid_real/**//*number*//*key*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real on vid_real.vid_real = qube.vid_real--\sk_vid_real
left outer join
(
--sr_opl
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_uch as dat_uch/**//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl on kod_opl.kod_opl = qube.kod_opl--\sr_opl
left outer join
(
--sr_opl_astr
select a.kod_opl as kod_opl, /*number*//*key*/
a.dat_opl as dat_opl/*Дата платежного документа*//*date*/

from sr_opl
a
--\sr_opl
)
kod_opl_astr on kod_opl_astr.kod_opl = qube.kod_opl_astr--\sr_opl_astr
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/

from (select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.dat_doc as dat_doc  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.d2 as dat_doc  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
)
kod_isp on kod_isp.kod_isp = qube.kod_isp--\ur_isp
 group by
qube.kod_isp/*number*//*key*/
)
qube
--\
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg as num_reg, /*Номер исп. листа*//*string*/
a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
a.kod_folders as kod_folders, /*number*/
a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
a.kod_hist_mat as kod_hist_mat, /*number*/
a.prim as prim, /*Примечание*//*string*/
a.kod_scan as kod_scan, /*number*/
a.dat_arh as dat_arh, /*Дата архивации*//*date*/
a.work_done as work_done, /**//*string*/
kod_folders.kod_podr as kod_podr, /*number*/
 case  when ((kod_hist_mat_dec.dat_entry is not null )  and (a.dat_doc is null )  and (( sysdate )  &gt; (kod_hist_mat_dec.dat_entry + ( 14 ) ) ) )  then '[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу' end  as dat_doc_vld, /* *//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_isp as kod_isp,a.num_reg as num_reg,a.dat_doc as dat_doc,a.kod_folders as kod_folders,a.dat_post as dat_post,a.dat_function as dat_function,a.dat_srok as dat_srok,a.kod_emp as kod_emp,a.kod_hist_mat as kod_hist_mat,a.prim as prim,a.kod_scan as kod_scan,a.dat_arh as dat_arh,a.work_done as work_done,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,t.d2 as dat_doc,t.n5 as kod_folders,t.d3 as dat_post,t.d1 as dat_function,t.d4 as dat_srok,t.n3 as kod_emp,t.n2 as kod_hist_mat,t.s2 as prim,t.n4 as kod_scan,t.d5 as dat_arh,t.s3 as work_done,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
a
--\(select a.kod_isp as kod_isp,a.num_reg as num_reg,a.dat_doc as dat_doc,a.kod_folders as kod_folders,a.dat_post as dat_post,a.dat_function as dat_function,a.dat_srok as dat_srok,a.kod_emp as kod_emp,a.kod_hist_mat as kod_hist_mat,a.prim as prim,a.kod_scan as kod_scan,a.dat_arh as dat_arh,a.work_done as work_done,0 as is_new,1 as is_not_new  from ur_isp a where not exists (select * from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and a.kod_isp=t.f2 ) and   a.kod_isp in :kod_isp_prm   union all  select t.n1 as kod_isp,t.s1 as num_reg,t.d2 as dat_doc,t.n5 as kod_folders,t.d3 as dat_post,t.d1 as dat_function,t.d4 as dat_srok,t.n3 as kod_emp,t.n2 as kod_hist_mat,t.s2 as prim,t.n4 as kod_scan,t.d5 as dat_arh,t.s3 as work_done,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_isp_prm )
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat1 on a.kod_hist_mat = kod_hist_mat1.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on kod_hist_mat1.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--ur_hist_mat_dec
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
kod_hist_mat_dec on a.kod_hist_mat = kod_hist_mat_dec.kod_hist_mat--\ur_hist_mat_dec
)
ur_isp on ur_isp.kod_isp = qube.kod_isp--\ur_isp
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_isp.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_isp.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_isp.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
a.opl_sud_izd as opl_sud_izd, /*Оплачено: Судебные издержки*//*number*/
nvl(a.ogr,0)  - nvl(a.opl_ogr,0)  as ost_ogr, /*Остаток задолж. расх. за введ. огр. реж. энергопотр.*//*number*/
nvl(a.sud_izd,0)  - nvl(a.opl_sud_izd,0)  as ost_sud_izd/*Остаток задолж. суд. издерж.*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
kod_hist_mat on ur_isp.kod_hist_mat = kod_hist_mat.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on kod_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_folders_isp" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" key="kod_folders_isp" parent-table="ur_isp" parent-key="kod_isp" is-ms-upd="1" key-dimension="kod_folders_isp">
      <select-text>
--
select ur_folders_isp.kod_folders as kod_folders_isp, /*2*//*number*//*key*/
ur_folders_isp.is_new as is_new, /*number*/
ur_folders_isp.is_not_new as is_not_new, /*number*/
ur_folders_isp.kod_isp as kod_isp/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
0 as is_new, /*number*/
1 as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from ur_folders
a
--\ur_folders
where
a.kod_sdp = 2)
ur_folders_isp
--\ur_folders_isp
where
ur_folders_isp.kod_isp = :fk_kod_isp --\
</select-text>
      <columns>
        <column name="kod_folders_isp" table="ur_folders_isp" type="number" title="2" parname="kod_folders_isp" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
        <column name="is_new" table="ur_folders_isp" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders_isp" type="number" title="" is-user-editable="1" />
        <column name="kod_isp" table="ur_folders_isp" type="number" title="Исполнительный лист" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_isp" as="kod_isp" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_isp" into="n1">a.kod_isp as kod_isp, /**//*number*//*key*/
</column><column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="num_reg" into="s1">a.num_reg as num_reg, /*Номер исп. листа*//*string*/
</column><column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" key="0" used="1" type="date" agg="max" sourcetable="./a/a" sourcecolumn="dat_doc" into="d1">a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_post" into="d2">a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
</column><column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_function" into="d3">a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
</column><column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_srok" into="d4">a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
</column><column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_emp" reference="kr_employee" refcol="kod_emp" into="n2">a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
</column><column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." key="0" used="1" type="string" sourcetable="./a/kod_emp" sourcecolumn="fio" into="s2">kod_emp.fio as kod_emp_x_n, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*string*/
</column><column table="a" column="prim" as="prim" title="Примечание" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="prim" into="s3">a.prim as prim, /*Примечание*//*string*/
</column><column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_arh" into="d5">a.dat_arh as dat_arh, /*Дата архивации*//*date*/
</column><column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_post_upr" into="d6">a.dat_post_upr as dat_post_upr, /*Дата поступления исп.листа в управление*//*date*/
</column><column table="a" column="full_name" as="full_name" title="Исполнительный лист" key="0" used="1" type="string" agg="max" into="s4">a.full_name as full_name, /*Исполнительный лист*//*string*/
</column><column table="a" column="info" as="info" title="Исполнительный лист" key="0" used="1" type="string" agg="max" into="s5">a.info as info, /*Исполнительный лист*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус исп. листа" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус исп. листа*//*number*/
</column><column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" key="0" used="1" type="date" agg="max" sourcetable="./a/a" sourcecolumn="dat_doc" into="d7">a.dat_doc1 as dat_doc1, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " key="0" used="1" type="string" agg="max" into="s6">a.dat_doc_vld as dat_doc_vld, /* *//*string*/
</column><column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" into="n4">a.kod_status_opl as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</column><column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" into="n5">a.dolg_on_il_hnd as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" key="0" used="1" type="number" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch" into="n6">a.ur_opl_posl_il_hnd as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select>
                <from>
from <query name="ur_isp" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" sourcetable="./a/a" sourcecolumn="num_reg" used="1">a.num_reg as num_reg, /*Номер исп. листа*//*string*/
</column><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" sourcetable="./a/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата выдачи исп. листа*//*date*/
</column><column table="a" column="dat_post" type="date" title="Дата поступления исп.листа в отделение" comment="дата поступл.исп.листа в отделение" as="dat_post" key="0" sourcetable="./a/a" sourcecolumn="dat_post" used="1">a.dat_post as dat_post, /*Дата поступления исп.листа в отделение*//*date*/
</column><column table="a" column="dat_function" type="date" title="Дата вступления в силу акта" comment="дата начала срока действия исп.листа" column-mandatory="1" as="dat_function" key="0" sourcetable="./a/a" sourcecolumn="dat_function" used="1">a.dat_function as dat_function, /*Дата вступления в силу акта*//*date*/
</column><column table="a" column="dat_srok" type="date" title="Дата отсрочки исп. листа" comment="срок предоставления отсрочки / рассрочки по исп. листу" as="dat_srok" key="0" sourcetable="./a/a" sourcecolumn="dat_srok" used="1">a.dat_srok as dat_srok, /*Дата отсрочки исп. листа*//*date*/
</column><column table="a" column="kod_emp" type="number" comment="юрист" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." column-mandatory="1" as="kod_emp" reference="kr_employee" refcol="kod_emp" key="0" sourcetable="./a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп.*//*number*/
</column><column table="a" column="prim" type="string" title="Примечание" comment="примечание" controlType="UITextEx" as="prim" key="0" sourcetable="./a/a" sourcecolumn="prim" used="1">a.prim as prim, /*Примечание*//*string*/
</column><column table="a" column="dat_arh" type="date" title="Дата архивации" comment="Дата архивации" as="dat_arh" key="0" sourcetable="./a/a" sourcecolumn="dat_arh" used="1">a.dat_arh as dat_arh, /*Дата архивации*//*date*/
</column><column table="a" column="dat_post_upr" type="date" title="Дата поступления исп.листа в управление" comment="дата поступл.исп.листа в управление" as="dat_post_upr" key="0" sourcetable="./a/a" sourcecolumn="dat_post_upr" used="1">a.dat_post_upr as dat_post_upr, /*Дата поступления исп.листа в управление*//*date*/
</column><call function="||" as="full_name" title="Исполнительный лист" key="0" pth="" type="string" used="1" agg="max"><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" thissrc="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as full_name, /*Исполнительный лист*//*string*/
</call><call function="||" as="info" title="Исполнительный лист" agg="max" key="0" pth="" type="string" used="1"><const><text>'ИЛ № '</text></const><text txtype="func"> || </text><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" thissrc="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as info, /*Исполнительный лист*//*string*/
</call><call function="true if null" as="is_active" title="Статус исп. листа" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_arh" type="date" title="Дата архивации" comment="Дата архивации" as="dat_arh" key="0" thissrc="dat_arh">a.dat_arh</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус исп. листа*//*number*/
</call><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc1" key="0" thissrc="dat_doc" sourcetable="./a/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc1, /*Дата выдачи исп. листа*//*date*/
</column><call function="if" type="string" as="dat_doc_vld" agg="max" title=" " key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="is not null" pth="" type="bool">(<column table="kod_hist_mat_dec" column="dat_entry">kod_hist_mat_dec.dat_entry</column><text txtype="func"> is not null </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="gt" pth="" type="bool">(<call function="sysdate" pth="" type="date">(<text txtype="func"> sysdate </text>) </call><text txtype="func"> &gt; </text><call function="date add days" pth="" type="date">(<column table="kod_hist_mat_dec" column="dat_entry">kod_hist_mat_dec.dat_entry</column><text txtype="func"> + ( </text><const><text>14</text></const><text txtype="func"> ) </text>) </call>) </call>) </call><text txtype="func"> then </text><const><text>'[inf]Не заполнена дата выдачи исп. листа. Прошло более 14-ти дней с момента вступления решения в законную силу'</text></const><text txtype="func"> end </text> as dat_doc_vld, /* *//*string*/
</call><column table="kod_isp_q" column="kod_status_opl" as="kod_status_opl" key="0" used="1" type="number" title="Статус оплаты ИЛ" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">kod_isp_q.kod_status_opl as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</column><column table="kod_isp_q" column="dolg_on_il_hnd" as="dolg_on_il_hnd" key="0" is-fact-use="1" used="1" type="number" title="Долг на дату выдачи ИЛ с учетом ручных сумм" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">kod_isp_q.dolg_on_il_hnd as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column table="kod_isp_q" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" key="0" is-fact-use="1" used="1" type="number" title="Оплата по исп листу с учетом ручных сумм" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">kod_isp_q.ur_opl_posl_il_hnd as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" used="1">ur_isp
a
--\ur_isp
</table><query name="ur_hist_mat_dec" dimension="kod_hist_mat" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry" key="0" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="a" column="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp_qube" as="kod_isp_q" join="left outer" path="./a/a/kod_isp_q" used="1">left outer join
(
<select>--ur_isp_qube
select <column table="kod_isp" column="kod_isp" as="kod_isp" keypath=".kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><call function="case" as="kod_status_opl" title="Статус оплаты ИЛ" type="number" pth="" used="1" key="0" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="gt" pth="" type="bool">(<column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" thissrc="dolg_on_il_hnd" table="qube">nvl(qube.dolg_on_il_hnd1,0) </column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>0</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="gt" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" thissrc="ur_opl_posl_il_hnd" table="qube">nvl(qube.ur_opl_posl_il_hnd1,0) </column><text txtype="func"> &lt; </text><column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" thissrc="dolg_on_il_hnd" table="qube">nvl(qube.dolg_on_il_hnd1,0) </column>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>2</text></const></call><text txtype="func"> end </text> as kod_status_opl, /*Статус оплаты ИЛ*//*number*/
</call><column column="dolg_on_il_hnd1" nvl="0" as="dolg_on_il_hnd" is-fact-use="1" table="qube" used="1" key="0" type="number" title="Долг на дату выдачи ИЛ с учетом ручных сумм" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">nvl(qube.dolg_on_il_hnd1,0)  as dolg_on_il_hnd, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</column><column column="ur_opl_posl_il_hnd1" nvl="0" as="ur_opl_posl_il_hnd" is-fact-use="1" table="qube" used="1" key="0" type="number" title="Оплата по исп листу с учетом ручных сумм" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">nvl(qube.ur_opl_posl_il_hnd1,0)  as ur_opl_posl_il_hnd/*Оплата по исп листу с учетом ручных сумм*//*number*/
</column></select><from>
from <query haskeys="1" as="qube" path="./a/a/kod_isp_q/qube" used="1">(
<select>--
select <column table="qube" column="kod_isp" group="1" as="kod_isp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*//*key*/
</column><call as="dolg_on_il_hnd1" function="+nvl" title="Долг на дату выдачи ИЛ с учетом ручных сумм" key="0" group="sum" pth="" type="number" used="1" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">sum(<text txtype="func"> nvl( </text><call function="if" as="dolg_on_il" title="Задолженность на дату выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> then </text><call function="-nvl" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="ur_dp_sum_v1">qube.ur_dp_sum_v1</column><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><call function="if" as="ur_opl_do_il" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &lt; </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column><text txtype="func"> , </text><call function="doomsday" pth="0" type="date"><text txtype="func"> DATE'8999-12-31' </text></call><text txtype="func"> ) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="+nvl" as="ur_opl_posl_resh" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="sr_opl_kred_ur1">qube.sr_opl_kred_ur1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_deb_posl_resh" title="Оплата после вынес. реш. суда" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column>) </call><text txtype="func"> then </text><call function="if" as="ur_opl" title="Оплата по юр. документу" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="or" pth="1" type="bool">(<call function="=1" pth="1" type="bool">(<text txtype="func"> nvl( </text><column table="kod_dogplat" column="prizn_konv" title="вроде как признак счета сформированного в арбитраже">kod_dogplat.prizn_konv</column><text txtype="func"> ,0)=1 </text>) </call><text txtype="func"> or </text><call function="gt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt; </text><call function="earliest" pth="" type="date">(<text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><column table="kod_dogplat" column="dat_form">kod_dogplat.dat_form</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="()" as="fin_ul_fl_opl" pth="">(<column table="qube" column="sr_opl_opl_sf1">qube.sr_opl_opl_sf1</column>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call as="ur_hand_dolg_on_il" function="if" type="number" title="Оплата ручных сумм до выдачи исп листа" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="is null" pth="" type="bool">(<column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is null </text>) </call><text txtype="func"> then </text><column table="qube" column="ur_hist_mat_dec_hand_ost1">qube.ur_hist_mat_dec_hand_ost1</column><text txtype="func"> else </text><column table="qube" column="ur_hist_mat_dec_hand_sum1">qube.ur_hist_mat_dec_hand_sum1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="-nvl" as="dolg_on_il_astr" title="Долг по астренту" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="fin_ul_nach_astr1">qube.fin_ul_nach_astr1</column><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><call function="if" as="ur_opl_do_il_astr" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="lt" pth="" type="bool">(<column table="kod_opl_astr" column="dat_opl">kod_opl_astr.dat_opl</column><text txtype="func"> &lt; </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column><text txtype="func"> , </text><call function="doomsday" pth="0" type="date"><text txtype="func"> DATE'8999-12-31' </text></call><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> then </text><column table="qube" column="fin_ul_opl_astr1">qube.fin_ul_opl_astr1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> ,0) </text>)  as dolg_on_il_hnd1, /*Долг на дату выдачи ИЛ с учетом ручных сумм*//*number*/
</call><call as="ur_opl_posl_il_hnd1" function="+nvl" title="Оплата по исп листу с учетом ручных сумм" key="0" group="sum" pth="" type="number" used="1" agg="max" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch">sum(<text txtype="func"> nvl( </text><call function="if" as="ur_opl_posl_il" type="number" title="Оплата по исп. листу" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column>) </call><text txtype="func"> then </text><call function="+nvl" as="ur_opl_posl_resh" pth="" type="number">(<text txtype="func"> nvl( </text><column table="qube" column="sr_opl_kred_ur1">qube.sr_opl_kred_ur1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_deb_posl_resh" title="Оплата после вынес. реш. суда" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt;= </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column>) </call><text txtype="func"> then </text><call function="if" as="ur_opl" title="Оплата по юр. документу" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="or" pth="1" type="bool">(<call function="=1" pth="1" type="bool">(<text txtype="func"> nvl( </text><column table="kod_dogplat" column="prizn_konv" title="вроде как признак счета сформированного в арбитраже">kod_dogplat.prizn_konv</column><text txtype="func"> ,0)=1 </text>) </call><text txtype="func"> or </text><call function="gt" pth="" type="bool">(<column table="kod_opl" column="dat_uch">kod_opl.dat_uch</column><text txtype="func"> &gt; </text><call function="earliest" pth="" type="date">(<text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><column table="kod_dogplat" column="dat_form">kod_dogplat.dat_form</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_hist_mat_dec" column="dat_post">kod_hist_mat_dec.dat_post</column><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="()" as="fin_ul_fl_opl" pth="">(<column table="qube" column="sr_opl_opl_sf1">qube.sr_opl_opl_sf1</column>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="qube" column="ur_hist_mat_dec_hand_opl1">qube.ur_hist_mat_dec_hand_opl1</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="if" as="ur_opl_posl_il_astr" title="Оплата по. реш. суда до выдачи исп. листа" type="number" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<column table="kod_opl_astr" column="dat_opl">kod_opl_astr.dat_opl</column><text txtype="func"> &gt;= </text><column table="kod_isp" column="dat_doc">kod_isp.dat_doc</column>) </call><text txtype="func"> then </text><column table="qube" column="fin_ul_opl_astr1">qube.fin_ul_opl_astr1</column><text txtype="func"> end </text>) </call><text txtype="func"> ,0) </text>)  as ur_opl_posl_il_hnd1/*Оплата по исп листу с учетом ручных сумм*//*number*/
</call></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">qube.kod_opl_astr as kod_opl_astr, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><column table="qube" column="kod_dogplat" as="kod_dogplat" keypath=".kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">qube.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="qube" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="qube" column="fin_ul_nach_astr1" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><column table="qube" column="fin_ul_opl_astr1" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
</column><column table="qube" column="sr_opl_kred_ur1" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
</column><column table="qube" column="sr_opl_opl_sf1" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
</column><column table="qube" column="ur_dp_sum_v1" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_opl1" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_ost1" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_sum1" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><const as="kod_opl" used="1" key="0"><text>null</text> as kod_opl, 
</const><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><column table="qube" column="fin_ul_nach_astr1" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">qube.fin_ul_nach_astr1 as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><column table="qube" column="ur_dp_sum_v1" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_opl1" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_opl1 as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_ost1" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">qube.ur_hist_mat_dec_hand_ost1 as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_hand_sum1" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">qube.ur_hist_mat_dec_hand_sum1 as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="fin_ul_nach_astr1" group="sum" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">sum(un.fin_ul_nach_astr1)  as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><column table="un" column="ur_dp_sum_v1" group="sum" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_opl1" group="sum" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">sum(un.ur_hist_mat_dec_hand_opl1)  as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_ost1" group="sum" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">sum(un.ur_hist_mat_dec_hand_ost1)  as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_hand_sum1" group="sum" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">sum(un.ur_hist_mat_dec_hand_sum1)  as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_facras_astr" column="nachisl_astr" as="fin_ul_nach_astr1" used="1" key="0" type="number" title="Начислено астрент" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl">sr_facras_astr.nachisl_astr as fin_ul_nach_astr1, /*Начислено астрент*//*number*/
</column><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_facras_astr_a_d" column="kod_ras" as="kod_ras_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras">sr_facras_astr_a_d.kod_ras as kod_ras_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="sr_facras_astr" dimension="kod_ras_astr" as="sr_facras_astr_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" haskeys="1" used="1">(
<select>--sr_facras_astr
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras_astr" key="1" fixed="1" thissrc="kod_ras" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras_astr" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_astr_a_d
--\sr_facras_astr
</query><query name="sr_facvip_astr" dimension="kod_sf_astr" as="kod_sf_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_astr
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf_astr" key="1" fixed="1" thissrc="kod_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf_astr" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_astr_a_d on <column table="sr_facras_astr_a_d" column="kod_sf">sr_facras_astr_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_facvip_astr
</query><query name="sr_penni_astr" dimension="kod_pen_astr" as="kod_pen_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_penni_astr
select <call function="nvl" as="kod_sf_astr" pth="" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" reference="sr_facvip" refcol="kod_sf"><text txtype="func"> nvl( </text><column table="kod_sf" column="kod_sf_first">kod_sf.kod_sf_first</column><text txtype="func"> , </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column><text txtype="func"> ) </text> as kod_sf_astr, /*number*/
</call><column table="a" column="kod_delo" as="kod_delo" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" reference="ur_mat" refcol="kod_mat">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <query name="sr_penni" as="a" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" haskeys="1" used="1">(
<select>--sr_penni
select <column table="a" column="kod_pen" type="number" as="kod_pen" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_pen" used="1">a.kod_pen as kod_pen, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" comment="счета фактур" as="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_delo" type="number" comment="код дела ur_mat.kod_mat, по которому отбираются документы для расчета пени в режиме арбитраж" as="kod_delo" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" used="1">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <table name="sr_penni" as="a" used="1">sr_penni
a
--\sr_penni
</table></from>)
a
--\sr_penni
</query><query name="sr_facvip" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" used="1">a.kod_sf_first as kod_sf_first/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_delo">a.kod_delo</column><text txtype="func"> is not null </text></call></where><call function="=" type="bool">)
kod_pen_astr_a_d on <column table="kod_pen_astr_a_d" column="kod_sf_astr">kod_pen_astr_a_d.kod_sf_astr</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_penni_astr
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_pen_astr_a_d" column="kod_delo">kod_pen_astr_a_d.kod_delo</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_facras_astr_a_d" column="kod_ras" as="kod_ras_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_facras_astr_a_d" sourcecolumn="kod_ras">sr_facras_astr_a_d.kod_ras, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_facras_astr" dimension="kod_ras_astr" as="sr_facras_astr" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" haskeys="1" used="1">left outer join
(
<select>--sr_facras_astr
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras_astr" key="1" fixed="1" thissrc="kod_ras" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras_astr, /*number*//*key*/
</column><column table="a" column="nachisl" type="number" title="Начислено астрент" fact="sr_facras_nachisl" agg="sum" as="nachisl_astr" key="0" thissrc="nachisl" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr" sourcecolumn="nachisl" used="1">a.nachisl as nachisl_astr/*Начислено астрент*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras_astr" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_facras_astr/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
sr_facras_astr on <column table="sr_facras_astr" column="kod_ras">sr_facras_astr.kod_ras</column><text txtype="func"> = </text><column table="dims" column="kod_ras_prm">dims.kod_ras_prm</column></call>--\sr_facras_astr
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><column table="ur_dogplat" column="sum_v" as="ur_dp_sum_v1" used="1" key="0" type="number" title="Признано по юр. документу" agg="sum" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v">ur_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
</column><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_dogplat_a_d" column="kod_dogplat" as="kod_dogplat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat">ur_dogplat_a_d.kod_dogplat as kod_dogplat_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="ur_dogplat" dimension="kod_dogplat" as="ur_dogplat_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" haskeys="1" used="1">(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from>)
ur_dogplat_a_d
--\ur_dogplat
</query><query name="ur_mat" as="kod_mat1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1_a_d1 on <column table="ur_dogplat_a_d" column="kod_mat">ur_dogplat_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="ur_dogplat_a_d" column="kod_dogplat" as="kod_dogplat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_dogplat_a_d" sourcecolumn="kod_dogplat">ur_dogplat_a_d.kod_dogplat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_dogplat" dimension="kod_dogplat" as="ur_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="sum_v" type="number" fact="ur_dp_sum_v" title="Признано по юр. документу" agg="sum" as="sum_v" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_dogplat" sourcecolumn="sum_v" used="1">a.sum_v as sum_v/*Признано по юр. документу*//*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
ur_dogplat on <column table="ur_dogplat" column="kod_dogplat">ur_dogplat.kod_dogplat</column><text txtype="func"> = </text><column table="dims" column="kod_dogplat_prm">dims.kod_dogplat_prm</column></call>--\ur_dogplat
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><column table="ur_hist_mat_dec" column="hand_opl" as="ur_hist_mat_dec_hand_opl1" used="1" key="0" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" agg="sum">ur_hist_mat_dec.hand_opl as ur_hist_mat_dec_hand_opl1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</column><column table="ur_hist_mat_dec" column="hand_ost" as="ur_hist_mat_dec_hand_ost1" used="1" key="0" type="number" agg="sum">ur_hist_mat_dec.hand_ost as ur_hist_mat_dec_hand_ost1, /*number*/
</column><column table="ur_hist_mat_dec" column="hand_sum" as="ur_hist_mat_dec_hand_sum1" used="1" key="0" type="number" title="Расходы за введение ограничения режима энергопотребления" agg="sum">ur_hist_mat_dec.hand_sum as ur_hist_mat_dec_hand_sum1/*Расходы за введение ограничения режима энергопотребления*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="ur_hist_mat_dec_a_d" column="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="+nvl" as="hand_sum" agg="sum" key="0" pth="" type="number" used="1" title="Расходы за введение ограничения режима энергопотребления"><text txtype="func"> nvl( </text><column table="a" column="ogr" type="number" title="Расходы за введение ограничения режима энергопотребления" comment="расходы за введение ограничения режима электропотребления" as="ogr" fact="ur_hist_mat_dec_ogr" agg="sum" key="0" thissrc="ogr">a.ogr</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="sud_izd" type="number" comment="судебные издержки" title="Судебные издержки" exists="decision" as="sud_izd" fact="ur_hist_mat_dec_sud_izd" agg="sum" key="0" thissrc="sud_izd">a.sud_izd</column><text txtype="func"> ,0) </text> as hand_sum, /*Расходы за введение ограничения режима энергопотребления*//*number*/
</call><call function="+nvl" as="hand_opl" agg="sum" key="0" pth="" type="number" used="1" title="Оплачено: расходы за введение ограничения режима энергопотребления"><text txtype="func"> nvl( </text><column table="a" column="opl_ogr" type="number" title="Оплачено: расходы за введение ограничения режима энергопотребления" comment="вручную: оплата расходов за ограничение электропотребления " as="opl_ogr" fact="ur_hist_mat_dec_opl_ogr" agg="sum" key="0" thissrc="opl_ogr">a.opl_ogr</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opl_sud_izd" type="number" title="Оплачено: Судебные издержки" comment="оплата судебных издержек" exists="decision" as="opl_sud_izd" fact="ur_hist_mat_dec_opl_sud_izd" agg="sum" key="0" thissrc="opl_sud_izd">a.opl_sud_izd</column><text txtype="func"> ,0) </text> as hand_opl, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
</call><call function="+nvl" as="hand_ost" agg="sum" key="0" pth="" type="number" used="1"><text txtype="func"> nvl( </text><call function="-" as="ost_ogr" title="Остаток задолж. расх. за введ. огр. реж. энергопотр." agg="sum" key="0" pth="" type="number" thissrc="ost_ogr">(<column table="a" column="ogr" nvl="0">nvl(a.ogr,0) </column><text txtype="func"> - </text><column table="a" column="opl_ogr" nvl="0">nvl(a.opl_ogr,0) </column>) </call><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><call function="-" as="ost_sud_izd" title="Остаток задолж. суд. издерж." agg="sum" key="0" pth="" type="number" thissrc="ost_sud_izd">(<column table="a" nvl="0" column="sud_izd">nvl(a.sud_izd,0) </column><text txtype="func"> - </text><column table="a" column="opl_sud_izd" nvl="0">nvl(a.opl_sud_izd,0) </column>) </call><text txtype="func"> ,0) </text> as hand_ost/*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
ur_hist_mat_dec on <column table="ur_hist_mat_dec" column="kod_hist_mat">ur_hist_mat_dec.kod_hist_mat</column><text txtype="func"> = </text><column table="dims" column="kod_hist_mat_prm">dims.kod_hist_mat_prm</column></call>--\ur_hist_mat_dec
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><const as="kod_opl" used="1" key="0"><text>null</text> as kod_opl, 
</const><column table="qube" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">qube.kod_opl_astr as kod_opl_astr, /*number*/
</column><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><column table="qube" column="fin_ul_opl_astr1" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">qube.fin_ul_opl_astr1 as fin_ul_opl_astr1, /*Оплачено астрент*//*number*/
</column><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl_astr" group="1" as="kod_opl_astr" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">un.kod_opl_astr as kod_opl_astr, /*number*//*key*/
</column><column table="un" column="fin_ul_opl_astr1" group="sum" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">sum(un.fin_ul_opl_astr1)  as fin_ul_opl_astr1/*Оплачено астрент*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="dims" column="kod_opl_astr" as="kod_opl_astr" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">dims.kod_opl_astr as kod_opl_astr, /*number*/
</column><column table="sr_opl_astr" column="opl_astr" as="fin_ul_opl_astr1" used="1" key="0" type="number" title="Оплачено астрент" agg="sum">sr_opl_astr.opl_astr as fin_ul_opl_astr1/*Оплачено астрент*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="kod_opl_astr" column="kod_opl" as="kod_opl_astr" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl as kod_opl_astr, /*number*//*key*/
</column><column table="kod_opl_astr" column="kod_opl" as="kod_opl_prm" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <query name="sr_opl_astr" dimension="kod_opl_astr" as="kod_opl_astr" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" haskeys="1" used="1">(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from>)
kod_opl_astr
--\sr_opl_astr
</query><query name="sr_facvip_astr" dimension="kod_sf_astr" as="kod_sf_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_astr
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf_astr" key="1" fixed="1" thissrc="kod_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_astr_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf_astr/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf_astr" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_astr_a_d on <column table="kod_opl_astr" column="kod_sf">kod_opl_astr.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_facvip_astr
</query><query name="sr_penni_astr" dimension="kod_pen_astr" as="kod_pen_astr_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_penni_astr
select <call function="nvl" as="kod_sf_astr" pth="" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" reference="sr_facvip" refcol="kod_sf"><text txtype="func"> nvl( </text><column table="kod_sf" column="kod_sf_first">kod_sf.kod_sf_first</column><text txtype="func"> , </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column><text txtype="func"> ) </text> as kod_sf_astr, /*number*/
</call><column table="a" column="kod_delo" as="kod_delo" key="0" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" reference="ur_mat" refcol="kod_mat">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <query name="sr_penni" as="a" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" haskeys="1" used="1">(
<select>--sr_penni
select <column table="a" column="kod_pen" type="number" as="kod_pen" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_pen" used="1">a.kod_pen as kod_pen, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" comment="счета фактур" as="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="kod_delo" type="number" comment="код дела ur_mat.kod_mat, по которому отбираются документы для расчета пени в режиме арбитраж" as="kod_delo" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/a" sourcecolumn="kod_delo" used="1">a.kod_delo as kod_delo/*number*/
</column></select><from>
from <table name="sr_penni" as="a" used="1">sr_penni
a
--\sr_penni
</table></from>)
a
--\sr_penni
</query><query name="sr_facvip" as="kod_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_pen_astr_a_d/kod_sf" sourcecolumn="kod_sf_first" used="1">a.kod_sf_first as kod_sf_first/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_delo">a.kod_delo</column><text txtype="func"> is not null </text></call></where><call function="=" type="bool">)
kod_pen_astr_a_d on <column table="kod_pen_astr_a_d" column="kod_sf_astr">kod_pen_astr_a_d.kod_sf_astr</column><text txtype="func"> = </text><column table="kod_sf_astr_a_d" column="kod_sf">kod_sf_astr_a_d.kod_sf</column></call>--\sr_penni_astr
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_pen_astr_a_d" column="kod_delo">kod_pen_astr_a_d.kod_delo</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="kod_opl_astr" column="kod_opl" as="kod_opl_astr" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">kod_opl_astr.kod_opl, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_astr" dimension="kod_opl_astr" as="sr_opl_astr" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_astr" haskeys="1" used="1">left outer join
(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_astr" agg="sum" title="Оплачено астрент" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_astr/*Оплачено астрент*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
sr_opl_astr on <column table="sr_opl_astr" column="kod_opl">sr_opl_astr.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_astr
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl_astr" group="1" as="kod_opl_astr" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_opl_astr" sourcecolumn="kod_opl">un.kod_opl_astr/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <const as="kod_dogplat" used="1" key="1"><text>null</text> as kod_dogplat, /*key*/
</const><const as="kod_hist_mat_dec" used="1" key="0"><text>null</text> as kod_hist_mat_dec, 
</const><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><column table="qube" column="sr_opl_kred_ur1" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">qube.sr_opl_kred_ur1 as sr_opl_kred_ur1, /*Оплата (кредит)*//*number*/
</column><const type="number" as="sr_opl_opl_sf1" used="1" key="0"><text>null</text> as sr_opl_opl_sf1, /*number*/
</const><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">un.kod_opl as kod_opl, /*number*//*key*/
</column><column table="un" column="sr_opl_kred_ur1" group="sum" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">sum(un.sr_opl_kred_ur1)  as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_isp" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*//*key*/
</column><column table="dims" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">dims.kod_opl as kod_opl, /*number*/
</column><column table="sr_opl_kred_ur" column="opl_kred_ur" as="sr_opl_kred_ur1" used="1" key="0" type="number" title="Оплата (кредит)" agg="sum">sr_opl_kred_ur.opl_kred_ur as sr_opl_kred_ur1/*Оплата (кредит)*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl as kod_opl/*number*//*key*/
</column></select><from>
from <query name="sr_opl_kred_ur" dimension="kod_opl_kred_ur" as="sr_opl_kred_ur_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" haskeys="1" used="1">(
<select>--sr_opl_kred_ur
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_link" type="number" as="kod_link" reference="sr_opl_bank" refcol="kod_link" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_link" used="1">a.kod_link as kod_link/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_kred_ur" used="1">sr_opl
a
--\sr_opl
</table><query name="sr_opl_bank" dimension="1" as="kod_link" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d/kod_link" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" dimension="1" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link on <column table="a" column="kod_link">a.kod_link</column><text txtype="func"> = </text><column table="kod_link" column="kod_link">kod_link.kod_link</column></call>--\sr_opl_bank
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>5</text></const><text txtype="func"> , </text><const><text>6</text></const>) </call>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="kod_link" column="kod_mat">kod_link.kod_mat</column><text txtype="func"> is not null </text>) </call></call></where>)
sr_opl_kred_ur_a_d
--\sr_opl_kred_ur
</query><query name="sr_opl_bank" as="kod_link1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_link1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link1_a_d1 on <column table="sr_opl_kred_ur_a_d" column="kod_link">sr_opl_kred_ur_a_d.kod_link</column><text txtype="func"> = </text><column table="kod_link1_a_d1" column="kod_link">kod_link1_a_d1.kod_link</column></call>--\sr_opl_bank
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_link1_a_d1" column="kod_mat">kod_link1_a_d1.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec_a_d on <column table="kod_hist_mat_dec_a_d" column="kod_mat">kod_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec_a_d" column="kod_hist_mat">kod_hist_mat_dec_a_d.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_opl_kred_ur_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">sr_opl_kred_ur_a_d.kod_opl, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_kred_ur" dimension="kod_opl_kred_ur" as="sr_opl_kred_ur" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur" haskeys="1" used="1">left outer join
(
<select>--sr_opl_kred_ur
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_kred_ur" agg="sum" title="Оплата (кредит)" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_kred_ur/*Оплата (кредит)*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_kred_ur" used="1">sr_opl
a
--\sr_opl
</table><query name="sr_opl_bank" dimension="1" as="kod_link" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" haskeys="1" used="1">left outer join
(
<select>--sr_opl_bank
select <column table="a" column="kod_link" type="number" as="kod_link" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" sourcecolumn="kod_link" used="1">a.kod_link as kod_link, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" comment="связь с иском (переплаты по гп, владивосток)" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_kred_ur/kod_link" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*/
</column></select><from>
from <table name="sr_opl_bank" as="a" dimension="1" used="1">sr_opl_bank
a
--\sr_opl_bank
</table></from><call function="=" type="bool">)
kod_link on <column table="a" column="kod_link">a.kod_link</column><text txtype="func"> = </text><column table="kod_link" column="kod_link">kod_link.kod_link</column></call>--\sr_opl_bank
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>5</text></const><text txtype="func"> , </text><const><text>6</text></const>) </call>) </call><text txtype="func"> and </text><call function="is not null" pth="" type="bool">(<column table="kod_link" column="kod_mat">kod_link.kod_mat</column><text txtype="func"> is not null </text>) </call></call></where><call function="=" type="bool">)
sr_opl_kred_ur on <column table="sr_opl_kred_ur" column="kod_opl">sr_opl_kred_ur.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_kred_ur
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_kred_ur_a_d" sourcecolumn="kod_opl">un.kod_opl/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube" used="1">union all
(
<select>--
select <column table="qube" column="kod_dogplat" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">qube.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="qube" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">qube.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="qube" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp as kod_isp, /*number*/
</column><column table="qube" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">qube.kod_opl as kod_opl, /*number*/
</column><const as="kod_opl_astr" used="1" key="0"><text>null</text> as kod_opl_astr, 
</const><const type="number" as="fin_ul_nach_astr1" used="1" key="0"><text>null</text> as fin_ul_nach_astr1, /*number*/
</const><const type="number" as="fin_ul_opl_astr1" used="1" key="0"><text>null</text> as fin_ul_opl_astr1, /*number*/
</const><const type="number" as="sr_opl_kred_ur1" used="1" key="0"><text>null</text> as sr_opl_kred_ur1, /*number*/
</const><column table="qube" column="sr_opl_opl_sf1" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">qube.sr_opl_opl_sf1 as sr_opl_opl_sf1, /*Оплата начислений*//*number*/
</column><const type="number" as="ur_dp_sum_v1" used="1" key="0"><text>null</text> as ur_dp_sum_v1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_opl1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_opl1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_ost1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_ost1, /*number*/
</const><const type="number" as="ur_hist_mat_dec_hand_sum1" used="1" key="0"><text>null</text> as ur_hist_mat_dec_hand_sum1/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_dogplat" group="1" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">un.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="un" column="kod_hist_mat_dec" group="1" as="kod_hist_mat_dec" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">un.kod_hist_mat_dec as kod_hist_mat_dec, /*number*//*key*/
</column><column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp as kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">un.kod_opl as kod_opl, /*number*//*key*/
</column><column table="un" column="sr_opl_opl_sf1" group="sum" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">sum(un.sr_opl_opl_sf1)  as sr_opl_opl_sf1/*Оплата начислений*//*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="dims" column="kod_dogplat" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">dims.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="dims" column="kod_hist_mat_dec" as="kod_hist_mat_dec" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">dims.kod_hist_mat_dec as kod_hist_mat_dec, /*number*/
</column><column table="dims" column="kod_isp" as="kod_isp" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">dims.kod_isp as kod_isp, /*number*/
</column><column table="dims" column="kod_opl" as="kod_opl" used="1" key="0" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">dims.kod_opl as kod_opl, /*number*/
</column><column table="sr_opl_sf" column="opl_sf" as="sr_opl_opl_sf1" used="1" key="0" type="number" title="Оплата начислений" agg="sum">sr_opl_sf.opl_sf as sr_opl_opl_sf1/*Оплата начислений*//*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl as kod_opl_prm, /*number*//*key*/
</column><column table="kod_dogplat" column="kod_dogplat" as="kod_dogplat" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="kod_hist_mat_dec" column="kod_hist_mat" as="kod_hist_mat_dec" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat as kod_hist_mat_dec, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp as kod_isp, /*number*//*key*/
</column><column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl as kod_opl/*number*//*key*/
</column></select><from>
from <query name="sr_opl_sf" dimension="kod_opl_sf" as="sr_opl_sf_a_d" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" haskeys="1" used="1">(
<select>--sr_opl_sf
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_sf" used="1">sr_opl
a
--\sr_opl
</table></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call></call></where>)
sr_opl_sf_a_d
--\sr_opl_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_a_d on <column table="sr_opl_sf_a_d" column="kod_sf">sr_opl_sf_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_a_d" column="kod_sf">kod_sf_a_d.kod_sf</column></call>--\sr_facvip
</query><query name="vv_all_deb_sf" as="vv_all_deb_sf_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/vv_all_deb_sf_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
vv_all_deb_sf_a_d1 on <column table="vv_all_deb_sf_a_d1" column="kod_sf">vv_all_deb_sf_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_a_d" column="kod_sf">kod_sf_a_d.kod_sf</column></call>--\vv_all_deb_sf
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat on <column table="kod_dogplat" column="kod_deb_sf">kod_dogplat.kod_deb_sf</column><text txtype="func"> = </text><column table="vv_all_deb_sf_a_d1" column="kod_deb_sf">vv_all_deb_sf_a_d1.kod_deb_sf</column></call>--\ur_dogplat
</query><query name="ur_mat" as="kod_mat1_a_d1" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat1_a_d1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1_a_d1 on <column table="kod_dogplat" column="kod_mat">kod_dogplat.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1_a_d1" column="kod_mat">kod_mat1_a_d1.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="kod_hist_mat_dec" column="kod_mat">kod_hist_mat_dec.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_hist_mat_dec
</query><query name="ur_isp" dimension="kod_isp" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" valid="qube.isp_kod_hist_mat_vld" column-mandatory="1" as="kod_hist_mat" key="0" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat/*number*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_hist_mat">kod_isp.kod_hist_mat</column><text txtype="func"> = </text><column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column></call>--\ur_isp
</query></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> is not null </text></call></where><group> group by
<column table="sr_opl_sf_a_d" column="kod_opl" as="kod_opl_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">sr_opl_sf_a_d.kod_opl, /*number*//*key*/
</column><column table="kod_dogplat" column="kod_dogplat" as="kod_dogplat" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">kod_dogplat.kod_dogplat, /*number*//*key*/
</column><column table="kod_hist_mat_dec" column="kod_hist_mat" as="kod_hist_mat_dec" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat, /*number*//*key*/
</column><column table="kod_isp" column="kod_isp" as="kod_isp" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">kod_isp.kod_isp/*number*//*key*/
</column></group>)
dims
--\
</query><query name="sr_opl_sf" dimension="kod_opl_sf" as="sr_opl_sf" join="left outer" path="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_sf" haskeys="1" used="1">left outer join
(
<select>--sr_opl_sf
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/sr_opl_sf" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><call function="+nvl" as="opl_sf" agg="sum" title="Оплата начислений" key="0" pth="" type="number" thissrc="oplf" used="1"><text txtype="func"> nvl( </text><column table="a" column="opl">a.opl</column><text txtype="func"> ,0) </text><text txtype="func"> +nvl( </text><column table="a" column="opls">a.opls</column><text txtype="func"> ,0) </text> as opl_sf/*Оплата начислений*//*number*/
</call></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_sf" used="1">sr_opl
a
--\sr_opl
</table></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call></call></where><call function="=" type="bool">)
sr_opl_sf on <column table="sr_opl_sf" column="kod_opl">sr_opl_sf.kod_opl</column><text txtype="func"> = </text><column table="dims" column="kod_opl_prm">dims.kod_opl_prm</column></call>--\sr_opl_sf
</query><qubecontent><where>where
<call function="is not null" condsource="ur_isp_qube"><column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_dogplat" group="1" as="kod_dogplat" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat" sourcecolumn="kod_dogplat">un.kod_dogplat, /*number*//*key*/
</column><column table="un" column="kod_hist_mat_dec" group="1" as="kod_hist_mat_dec" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_hist_mat_dec" sourcecolumn="kod_hist_mat">un.kod_hist_mat_dec, /*number*//*key*/
</column><column table="un" column="kod_isp" group="1" as="kod_isp" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">un.kod_isp, /*number*//*key*/
</column><column table="un" column="kod_opl" group="1" as="kod_opl" used="1" key="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/sr_opl_sf_a_d" sourcecolumn="kod_opl">un.kod_opl/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" link-mp-point="1" as="kod_hist_mat_dec" join="left outer" path="./a/a/kod_isp_q/qube/kod_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="dat_post" type="date" title="Дата прин. суд. акта" column-mandatory="1" comment="Дата принятия судебного акта" as="dat_post" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="dat_post" used="1">a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_hist_mat_dec on <column table="kod_hist_mat_dec" column="kod_hist_mat">kod_hist_mat_dec.kod_hist_mat</column><text txtype="func"> = </text><column table="qube" column="kod_hist_mat_dec">qube.kod_hist_mat_dec</column></call>--\ur_hist_mat_dec
</query><query name="ur_dogplat" dimension="kod_dogplat" link-mp-point="1" as="kod_dogplat" join="left outer" path="./a/a/kod_isp_q/qube/kod_dogplat" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="dat_form" type="date" title="Дата расч. задолж." editable="is_doc" editable-invert="1" as="dat_form" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="dat_form" used="1">a.dat_form as dat_form, /*Дата расч. задолж.*//*date*/
</column><column table="a" column="prizn_konv" type="number" title="" comment="Бельченко: не знаю для чего создавалась будет признаком автоматического счета" is-fact="1" agg="max" as="prizn_konv" fact="ur_dogplat_prizn_konv" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_dogplat" sourcecolumn="prizn_konv" used="1">a.prizn_konv as prizn_konv/**//*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat on <column table="kod_dogplat" column="kod_dogplat">kod_dogplat.kod_dogplat</column><text txtype="func"> = </text><column table="qube" column="kod_dogplat">qube.kod_dogplat</column></call>--\ur_dogplat
</query><query name="sr_opl" dimension="kod_opl" link-mp-point="1" as="kod_opl" join="left outer" path="./a/a/kod_isp_q/qube/kod_opl" haskeys="1" used="1">left outer join
(
<select>--sr_opl
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="dat_uch" type="date" title="" as="dat_uch" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_opl" sourcecolumn="dat_uch" used="1">a.dat_uch as dat_uch/**//*date*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
kod_opl on <column table="kod_opl" column="kod_opl">kod_opl.kod_opl</column><text txtype="func"> = </text><column table="qube" column="kod_opl">qube.kod_opl</column></call>--\sr_opl
</query><query name="sr_opl_astr" dimension="kod_opl_astr" link-mp-point="1" as="kod_opl_astr" join="left outer" path="./a/a/kod_isp_q/qube/kod_opl_astr" haskeys="1" used="1">left outer join
(
<select>--sr_opl_astr
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_opl_astr" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="dat_opl" type="date" title="Дата платежного документа" as="dat_opl" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_opl_astr" sourcecolumn="dat_opl" used="1">a.dat_opl as dat_opl/*Дата платежного документа*//*date*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_astr" used="1">sr_opl
a
--\sr_opl
</table></from><call function="=" type="bool">)
kod_opl_astr on <column table="kod_opl_astr" column="kod_opl">kod_opl_astr.kod_opl</column><text txtype="func"> = </text><column table="qube" column="kod_opl_astr">qube.kod_opl_astr</column></call>--\sr_opl_astr
</query><query name="ur_isp" dimension="kod_isp" link-mp-point="1" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/qube/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/qube/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" sourcetable="./a/a/kod_isp_q/qube/kod_isp" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc/*Дата выдачи исп. листа*//*date*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> = </text><column table="qube" column="kod_isp">qube.kod_isp</column></call>--\ur_isp
</query></from><group> group by
<column table="qube" column="kod_isp" group="1" as="kod_isp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_isp_q/qube/qube/qube/qube/qube/un/un/dims/kod_isp" sourcecolumn="kod_isp">qube.kod_isp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_isp" dimension="kod_isp" link-mp-point="1" as="kod_isp" join="left outer" path="./a/a/kod_isp_q/kod_isp" haskeys="1" used="1">left outer join
(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a/kod_isp_q/kod_isp" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp/*number*//*key*/
</column></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" dimension="kod_isp" used="1">ur_isp
a
--\ur_isp
</table></from><call function="=" type="bool">)
kod_isp on <column table="kod_isp" column="kod_isp">kod_isp.kod_isp</column><text txtype="func"> = </text><column table="qube" column="kod_isp">qube.kod_isp</column></call>--\ur_isp
</query></from><call function="=" type="bool">)
kod_isp_q on <column table="a" column="kod_isp">a.kod_isp</column><text txtype="func"> = </text><column table="kod_isp_q" column="kod_isp">kod_isp_q.kod_isp</column></call>--\ur_isp_qube
</query></from>)
a
--\ur_isp
</query><query name="kr_employee" as="kod_emp" join="left outer" path="./a/kod_emp" haskeys="1" used="1">left outer join
(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/kod_emp" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/kod_emp" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from><call function="=" type="bool">)
kod_emp on <column table="a" column="kod_emp">a.kod_emp</column><text txtype="func"> = </text><column table="kod_emp" column="kod_emp">kod_emp.kod_emp</column></call>--\kr_employee
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_isp" as="kod_isp" title="" key="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_isp" as="kod_isp" title="" key="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> ) like lower( </text><const><text>:kod_isp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" thissrc="num_reg">a.num_reg</column><text txtype="func"> ) like lower( </text><const><text>:num_reg_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" thissrc="dat_post">a.dat_post</column><text txtype="func"> ) like lower( </text><const><text>:dat_post_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" thissrc="dat_function">a.dat_function</column><text txtype="func"> ) like lower( </text><const><text>:dat_function_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" thissrc="dat_srok">a.dat_srok</column><text txtype="func"> ) like lower( </text><const><text>:dat_srok_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." thissrc="kod_emp_x_n">kod_emp.fio</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="prim" as="prim" title="Примечание" thissrc="prim">a.prim</column><text txtype="func"> ) like lower( </text><const><text>:prim_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" thissrc="dat_arh">a.dat_arh</column><text txtype="func"> ) like lower( </text><const><text>:dat_arh_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" thissrc="dat_post_upr">a.dat_post_upr</column><text txtype="func"> ) like lower( </text><const><text>:dat_post_upr_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="full_name" as="full_name" title="Исполнительный лист" thissrc="full_name">a.full_name</column><text txtype="func"> ) like lower( </text><const><text>:full_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info" as="info" title="Исполнительный лист" thissrc="info">a.info</column><text txtype="func"> ) like lower( </text><const><text>:info_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус исп. листа" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" thissrc="dat_doc1">a.dat_doc1</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc1_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " thissrc="dat_doc_vld">a.dat_doc_vld</column><text txtype="func"> ) like lower( </text><const><text>:dat_doc_vld_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" thissrc="kod_status_opl">a.kod_status_opl</column><text txtype="func"> ) like lower( </text><const><text>:kod_status_opl_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" thissrc="dolg_on_il_hnd">a.dolg_on_il_hnd</column><text txtype="func"> ) like lower( </text><const><text>:dolg_on_il_hnd_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" thissrc="ur_opl_posl_il_hnd">a.ur_opl_posl_il_hnd</column><text txtype="func"> ) like lower( </text><const><text>:ur_opl_posl_il_hnd_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Исполнительный лист" timestamp="09.09.2023 12:57:22" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_isp.xml" elid="2988" ord="2988" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_isp_filter" type="string" />
                    <param name="num_reg_filter" type="string" />
                    <param name="dat_doc_filter" type="string" />
                    <param name="dat_post_filter" type="string" />
                    <param name="dat_function_filter" type="string" />
                    <param name="dat_srok_filter" type="string" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="kod_emp_x_n_filter" type="string" />
                    <param name="prim_filter" type="string" />
                    <param name="dat_arh_filter" type="string" />
                    <param name="dat_post_upr_filter" type="string" />
                    <param name="full_name_filter" type="string" />
                    <param name="info_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="dat_doc1_filter" type="string" />
                    <param name="dat_doc_vld_filter" type="string" />
                    <param name="kod_status_opl_filter" type="string" />
                    <param name="dolg_on_il_hnd_filter" type="string" />
                    <param name="ur_opl_posl_il_hnd_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_isp" as="kod_isp" title="" key="1" />
                    <column table="a" column="num_reg" as="num_reg" title="Номер исп. листа" />
                    <column table="a" column="dat_doc" as="dat_doc" title="Дата выдачи исп. листа" />
                    <column table="a" column="dat_post" as="dat_post" title="Дата поступления исп.листа в отделение" />
                    <column table="a" column="dat_function" as="dat_function" title="Дата вступления в силу акта" />
                    <column table="a" column="dat_srok" as="dat_srok" title="Дата отсрочки исп. листа" />
                    <column table="a" column="kod_emp" as="kod_emp" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
                    <column table="kod_emp" column="fio" as="kod_emp_x_n" title="Юрист отв. за получ. ИЛ, учет, пердачу принуд. исп." />
                    <column table="a" column="prim" as="prim" title="Примечание" />
                    <column table="a" column="dat_arh" as="dat_arh" title="Дата архивации" />
                    <column table="a" column="dat_post_upr" as="dat_post_upr" title="Дата поступления исп.листа в управление" />
                    <column table="a" column="full_name" as="full_name" title="Исполнительный лист" />
                    <column table="a" column="info" as="info" title="Исполнительный лист" />
                    <column table="a" column="is_active" as="is_active" title="Статус исп. листа" />
                    <column table="a" column="dat_doc1" as="dat_doc1" title="Дата выдачи исп. листа" />
                    <column table="a" column="dat_doc_vld" as="dat_doc_vld" title=" " />
                    <column table="a" column="kod_status_opl" as="kod_status_opl" title="Статус оплаты ИЛ" />
                    <column table="a" column="dolg_on_il_hnd" as="dolg_on_il_hnd" title="Долг на дату выдачи ИЛ с учетом ручных сумм" />
                    <column table="a" column="ur_opl_posl_il_hnd" as="ur_opl_posl_il_hnd" title="Оплата по исп листу с учетом ручных сумм" />
                  </select>
                  <from>
                    <query name="ur_isp" as="a" title="Исполнительный лист">
                      <link name="kod_emp" as="kod_emp" table="kr_employee" child="ur_isp" field="kod_emp" parent="kr_employee" back="ur_isp" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="kod_isp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_reg" />
                        <useparam name="num_reg_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc" />
                        <useparam name="dat_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_post" />
                        <useparam name="dat_post_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_function" />
                        <useparam name="dat_function_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_srok" />
                        <useparam name="dat_srok_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp_x_n" />
                        <useparam name="kod_emp_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="prim" />
                        <useparam name="prim_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_arh" />
                        <useparam name="dat_arh_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_post_upr" />
                        <useparam name="dat_post_upr_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="full_name" />
                        <useparam name="full_name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info" />
                        <useparam name="info_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc1" />
                        <useparam name="dat_doc1_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_doc_vld" />
                        <useparam name="dat_doc_vld_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_status_opl" />
                        <useparam name="kod_status_opl_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dolg_on_il_hnd" />
                        <useparam name="dolg_on_il_hnd_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ur_opl_posl_il_hnd" />
                        <useparam name="ur_opl_posl_il_hnd_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_isp_filter" />
                    <useparam name="num_reg_filter" />
                    <useparam name="dat_doc_filter" />
                    <useparam name="dat_post_filter" />
                    <useparam name="dat_function_filter" />
                    <useparam name="dat_srok_filter" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="kod_emp_x_n_filter" />
                    <useparam name="prim_filter" />
                    <useparam name="dat_arh_filter" />
                    <useparam name="dat_post_upr_filter" />
                    <useparam name="full_name_filter" />
                    <useparam name="info_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="dat_doc1_filter" />
                    <useparam name="dat_doc_vld_filter" />
                    <useparam name="kod_status_opl_filter" />
                    <useparam name="dolg_on_il_hnd_filter" />
                    <useparam name="ur_opl_posl_il_hnd_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_isp_filter" type="string">
                  <const>:kod_isp_filter </const>
                </param>
                <param name="num_reg_filter" type="string">
                  <const>:num_reg_filter </const>
                </param>
                <param name="dat_doc_filter" type="string">
                  <const>:dat_doc_filter </const>
                </param>
                <param name="dat_post_filter" type="string">
                  <const>:dat_post_filter </const>
                </param>
                <param name="dat_function_filter" type="string">
                  <const>:dat_function_filter </const>
                </param>
                <param name="dat_srok_filter" type="string">
                  <const>:dat_srok_filter </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="kod_emp_x_n_filter" type="string">
                  <const>:kod_emp_x_n_filter </const>
                </param>
                <param name="prim_filter" type="string">
                  <const>:prim_filter </const>
                </param>
                <param name="dat_arh_filter" type="string">
                  <const>:dat_arh_filter </const>
                </param>
                <param name="dat_post_upr_filter" type="string">
                  <const>:dat_post_upr_filter </const>
                </param>
                <param name="full_name_filter" type="string">
                  <const>:full_name_filter </const>
                </param>
                <param name="info_filter" type="string">
                  <const>:info_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="dat_doc1_filter" type="string">
                  <const>:dat_doc1_filter </const>
                </param>
                <param name="dat_doc_vld_filter" type="string">
                  <const>:dat_doc_vld_filter </const>
                </param>
                <param name="kod_status_opl_filter" type="string">
                  <const>:kod_status_opl_filter </const>
                </param>
                <param name="dolg_on_il_hnd_filter" type="string">
                  <const>:dolg_on_il_hnd_filter </const>
                </param>
                <param name="ur_opl_posl_il_hnd_filter" type="string">
                  <const>:ur_opl_posl_il_hnd_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_folders_isp as kod_folders_isp 
,:kod_isp as kod_isp 
 
from dual ) 
 
loop 
insert into ur_folders 
(kod_folders 
,kod_isp 
) 
 values  
(r.kod_folders_isp 
,r.kod_isp 
) 
 returning  
kod_folders into :kod_folders_isp; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders_isp</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders_isp' 
and 
names=:form_id 
and 
f2=:kod_folders_isp; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_folders_isp as kod_folders_isp 
,:kod_isp as kod_isp 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n8 
) 
 values  
('ur_folders_isp' 
,:form_id 
,:kod_folders_isp 
,:row_state_id 
,r.kod_folders_isp 
,r.kod_isp 
); 
end loop; 
else 
for r in  
 ( select  
:kod_folders_isp as kod_folders_isp 
,:kod_isp as kod_isp 
,a.kodp 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.tep_el 
,a.vvod 
,a.dat_finish 
,a.num_doc 
,a.kod_podr 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders_isp) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n8 
,n2 
,n3 
,n4 
,n5 
,d1 
,n6 
,s1 
,d2 
,n7 
,n9 
,n10 
,d3 
,s2 
,n11 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders_isp' 
,:form_id 
,:kod_folders_isp 
,:row_state_id 
,r.kod_folders_isp 
,r.kod_isp 
,r.kodp 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.tep_el 
,r.vvod 
,r.dat_finish 
,r.num_doc 
,r.kod_podr 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders_isp' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kod_folders 
,kod_isp 
) 
= 
 ( select  
:kod_folders_isp as kod_folders_isp 
,:kod_isp as kod_isp 
 
from dual ) 
 
where 
kod_folders=:kod_folders_isp 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders_isp" as="ur_folders_isp">
          <columns>
            <column name="kod_folders_isp" type="number" title="2" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_isp_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_isp_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_folders_isp.kod_folders as kod_folders_isp, /*2*//*number*//*key*/
ur_folders_isp.is_new as is_new, /*number*/
ur_folders_isp.is_not_new as is_not_new, /*number*/
ur_folders_isp.kod_isp as kod_isp/*number*/

from (
--ur_folders_isp
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_isp as kod_isp, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new, /*number*/
a.kod_folders as kod_folders_isp/*number*//*key*/

from (select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders_isp' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_isp_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_isp_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_isp as kod_isp,0 as is_new,1 as is_not_new,a.kod_sdp as kod_sdp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders_isp' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_isp_prm   union all  select t.n1 as kod_folders,t.n8 as kod_isp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n5 as kod_sdp  from rr_temp t where t.skod ='ur_folders_isp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_isp_prm )
where
a.kod_sdp = 2)
ur_folders_isp
--\ur_folders_isp
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="f10" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="is_customer10_flag" key="val" is-ms-upd="0" is-top="1">
      <select-text>
--
select f10.val as val/*number*/

from (
--is_customer10_flag
select  case  when (a.customer_id = 10)  then 1 else 0 end  as val/*number*/

from (
--rs_rep_sets
select a.customer_id as customer_id/**//*number*/

from rs_rep_sets
a
--\rs_rep_sets
)
a
--\rs_rep_sets
)
f10
--\is_customer10_flag
--\
</select-text>
      <columns>
        <column name="val" table="f10" type="number" title="" parname="f10" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="is_customer10_flag" as="f10">
          <columns>
            <column name="val" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>