<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="vr_peni_period_select" title="Выбор периодов пени [:m.name]" show-toolbar="1" timestamp="28.12.2023 14:57:21" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\vr_peni_period_select.xml" elid="290" ord="290" leaf="0" lvl="2" pelid="">
    <field table="m" name="name" title="Документ начисления" width="323" controlType="UIText" rows-limit="100" id="19378286" />
    <field table="m" name="ym" title="Отчетный период начисления" controlType="UIText" format="F2" edit-mask="F2" rows-limit="100" id="38265290" />
    <splitcontainer is-vertical="1" id="47097817">
      <fieldgroup noborder="1" id="53809881">
        <fieldgroup title="Доступные" id="60526914">
          <grid table="a" id="60653651">
            <columns id="7475433">
              <field table="a" name="check1" title="Выбор" controlType="UICheck" rows-limit="100" id="45909795" />
              <field table="a" name="name" title="Период" width="250" controlType="UIText" rows-limit="100" id="44487070" />
            </columns>
          </grid>
        </fieldgroup>
      </fieldgroup>
      <fieldgroup title="Выбранные" id="5953457">
        <grid table="b" id="20371609">
          <columns id="48500159">
            <field table="b" name="kod" title="период" controlType="UIText" edit-mask="N2" rows-limit="100" id="33351416" />
            <field table="b" name="name" title="Период" width="323" controlType="UIText" rows-limit="100" id="33058048" />
          </columns>
        </grid>
      </fieldgroup>
    </splitcontainer>
    <toolbar id="46292156">
      <uicommand action-type="add-selected" title="Добавить выделенные" id="13156342" />
      <uicommand action-type="remove-selected" title="Убрать выделенные" id="26197536" />
    </toolbar>
  </form>
  <params>
    <param name="p_kod_sf" type="number">
      <const type="number">1936907</const>
    </param>
  </params>
  <dataset>
    <params>
      <param name="p_kod_sf" type="number">
        <const type="number">1936907</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="m_has_changes" parname="m_has_changes" />
      <field type="string" name="b_has_changes" parname="b_has_changes" />
      <field type="string" name="a_has_changes" parname="a_has_changes" />
    </fields>
    <table name="m" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="sr_facvip" key="kod_sf" is-ms-upd="1" is-top="1" key-dimension="kod_sf">
      <select-text>
--
select m.name as name, /*Документ начисления*//*string*/
m.ym as ym, /*Отчетный период начисления*//*number*/
m.is_new as is_new, /*number*/
m.is_not_new as is_not_new, /*number*/
m.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.ym as ym, /*Отчетный период начисления*//*number*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name, /*Документ начисления*//*string*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from sr_facvip
a
--\sr_facvip
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
m
--\sr_facvip
where
(m.kod_sf = :p_kod_sf ) --\
</select-text>
      <columns>
        <column name="name" table="m" type="string" title="Документ начисления" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select m.name as name, /*Документ начисления*//*string*/
m.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name/*Документ начисления*//*string*/

from (select a.kod_sf as kod_sf,a.num_sf as num_sf,a.dat_sf as dat_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='m' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n9 as num_sf,t.d1 as dat_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='m' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.num_sf as num_sf,a.dat_sf as dat_sf,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='m' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n9 as num_sf,t.d1 as dat_sf,t.n7 as vid_sf  from rr_temp t where t.skod ='m' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
m
--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ym" table="m" type="number" title="Отчетный период начисления" parname="sf_ym" ClientVisible="0" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n10" />
        <column name="is_new" table="m" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="m" type="number" title="" is-user-editable="1" />
        <column name="kod_sf" table="m" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_sf" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:ym as ym 
,:kod_sf as kod_sf 
 
from dual ) 
 
loop 
insert into sr_facvip 
(ym 
,kod_sf 
) 
 values  
(r.ym 
,r.kod_sf 
) 
 returning  
kod_sf into :kod_sf; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from sr_facvip where kod_sf=:kod_sf</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='m' 
and 
names=:form_id 
and 
f2=:kod_sf; 
if :row_state_id=1  then 
for r in  
 ( select  
:ym as ym 
,:kod_sf as kod_sf 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n10 
,n1 
) 
 values  
('m' 
,:form_id 
,:kod_sf 
,:row_state_id 
,r.ym 
,r.kod_sf 
); 
end loop; 
else 
for r in  
 ( select  
:ym as ym 
,:kod_sf as kod_sf 
,a.tep_el 
,a.kod_deb 
,a.kodp 
,a.kod_dog 
,a.vid_real 
,a.vid_sf 
,a.vid_pl 
,a.num_sf 
,a.dat_sf 
,a.dat_priem 
,a.pr_old 
,a.pr_sv 
,a.pr_osn 
,a.gru_pl 
,a.den 
,a.kod_dog_r 
,a.dat_uchet 
,a.dat_ezad 
,a.vist_day 
,a.num_sf_uch 
,a.ym_uch 
,a.d_m 
,a.u_m 
,a.pr_hand 
,a.vid_avans 
,a.prim_uo 
,a.kod_sf_old 
,a.kodp_plat 
,a.kod_sf_konsol 
,a.vid_recalc 
,a.kod_dog_link 
,a.pr_uch_av 
,a.kod_bu_akt 
,a.kod_sf_first 
,a.tip_bu_akt 
,a.kniga 
,a.dat_pen_ezad 
,a.dat_zadol 
,a.nom_sf 
,a.proc 
 
from sr_facvip a  where kod_sf=:kod_sf) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n10 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,n9 
,d1 
,d2 
,n11 
,n12 
,n13 
,n14 
,n15 
,n16 
,d3 
,d4 
,n17 
,n18 
,n19 
,d5 
,s1 
,n20 
,n21 
,s2 
,n22 
,n23 
,n24 
,n25 
,n26 
,n27 
,n28 
,n29 
,n30 
,n31 
,d6 
,d7 
,s3 
,n32 
) 
 values  
('m' 
,:form_id 
,:kod_sf 
,:row_state_id 
,r.ym 
,r.kod_sf 
,r.tep_el 
,r.kod_deb 
,r.kodp 
,r.kod_dog 
,r.vid_real 
,r.vid_sf 
,r.vid_pl 
,r.num_sf 
,r.dat_sf 
,r.dat_priem 
,r.pr_old 
,r.pr_sv 
,r.pr_osn 
,r.gru_pl 
,r.den 
,r.kod_dog_r 
,r.dat_uchet 
,r.dat_ezad 
,r.vist_day 
,r.num_sf_uch 
,r.ym_uch 
,r.d_m 
,r.u_m 
,r.pr_hand 
,r.vid_avans 
,r.prim_uo 
,r.kod_sf_old 
,r.kodp_plat 
,r.kod_sf_konsol 
,r.vid_recalc 
,r.kod_dog_link 
,r.pr_uch_av 
,r.kod_bu_akt 
,r.kod_sf_first 
,r.tip_bu_akt 
,r.kniga 
,r.dat_pen_ezad 
,r.dat_zadol 
,r.nom_sf 
,r.proc 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='m' and names=:form_id</clear-temp-text>
      <update-text>begin
update sr_facvip set  
(ym 
,kod_sf 
) 
= 
 ( select  
:ym as ym 
,:kod_sf as kod_sf 
 
from dual ) 
 
where 
kod_sf=:kod_sf 
;
end;
</update-text>
      <scheme>
        <table name="sr_facvip" as="m">
          <columns>
            <column name="name" type="string" title="Документ начисления" visible="0" />
            <column name="ym" type="number" format="F2" edit-mask="F2" title="Отчетный период начисления" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_sf_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_sf_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select m.name as name, /*Документ начисления*//*string*/
m.ym as ym, /*Отчетный период начисления*//*number*/
m.is_new as is_new, /*number*/
m.is_not_new as is_not_new, /*number*/
m.kod_sf as kod_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.ym as ym, /*Отчетный период начисления*//*number*/
vid_sf.abbr || ' № ' || a.num_sf || ' от ' || ( to_char( a.dat_sf ,'DD.MM.YYYY') )  as name, /*Документ начисления*//*string*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_sf as kod_sf,a.ym as ym,a.num_sf as num_sf,a.dat_sf as dat_sf,0 as is_new,1 as is_not_new,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='m' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n10 as ym,t.n9 as num_sf,t.d1 as dat_sf,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n7 as vid_sf  from rr_temp t where t.skod ='m' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
a
--\(select a.kod_sf as kod_sf,a.ym as ym,a.num_sf as num_sf,a.dat_sf as dat_sf,0 as is_new,1 as is_not_new,a.vid_sf as vid_sf  from sr_facvip a where not exists (select * from rr_temp t where t.skod ='m' and t.names=:form_id  and a.kod_sf=t.f2 ) and   a.kod_sf in :kod_sf_prm   union all  select t.n1 as kod_sf,t.n10 as ym,t.n9 as num_sf,t.d1 as dat_sf,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n7 as vid_sf  from rr_temp t where t.skod ='m' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sf_prm )
left outer join
(
--sk_vid_sf
select a.vid_sf as vid_sf, /**//*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from sk_vid_sf
a
--\sk_vid_sf
)
vid_sf on a.vid_sf = vid_sf.vid_sf--\sk_vid_sf
where
a.vid_sf not in (2 , 9) )
m
--\sr_facvip
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="b" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="kod" multi-select-column="" multi-select-target="" update-target="vr_peni_period" key="kod_peni_period" parent-table="m" parent-key="kod_sf" is-ms-upd="1" key-dimension="vr_peni_period">
      <select-text>
--
select b.ym as kod, /*период*//*number*/
c.name as name, /*Период*//*string*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
b.kod_peni_period as kod_peni_period, /*number*//*key*/
b.kod_sf as kod_sf/*с/ф*//*number*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf, /*с/ф*//*number*/
a.ym as ym, /*период*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_peni_period
a
--\vr_peni_period
)
b
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
c on b.ym = c.ym--\spr_time_ym
where
b.kod_sf = :fk_kod_sf 
order by name--\
</select-text>
      <columns>
        <column name="kod" table="b" type="number" title="период" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="ym" temp-col-name="n1">
          <dep-refresh-cmd>
            <root table="b">
              <params>
                <param name="kod_peni_period_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_peni_period_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select c.name as name, /*Период*//*string*/
b.kod_peni_period as kod_peni_period/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.ym as ym/*период*//*number*/

from (select a.kod_peni_period as kod_peni_period,a.ym as ym  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n1 as ym  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
a
--\(select a.kod_peni_period as kod_peni_period,a.ym as ym  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n1 as ym  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
)
b
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
c on b.ym = c.ym--\spr_time_ym
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="name" table="b" />
          </dependants>
        </column>
        <column name="name" table="c" type="string" title="Период" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_peni_period_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_peni_period_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select c.name as name, /*Период*//*string*/
b.kod_peni_period as kod_peni_period/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.ym as ym/*период*//*number*/

from (select a.kod_peni_period as kod_peni_period,a.ym as ym  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n1 as ym  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
a
--\(select a.kod_peni_period as kod_peni_period,a.ym as ym  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n1 as ym  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
)
b
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
c on b.ym = c.ym--\spr_time_ym
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="b" type="number" title="" is-user-editable="1" />
        <column name="kod_peni_period" table="b" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_peni_period" temp-col-name="n2" />
        <column name="kod_sf" table="b" type="number" title="с/ф" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_sf" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query class="1" timestamp="20.05.2023 11:07:55" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sr_facvip.xml" elid="2917" ord="2917" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_sf" as="kod_sf" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_sf" into="n1">a.kod_sf as kod_sf, /**//*number*//*key*/
</column><column table="a" column="num_sf" as="num_sf" title="Номер документа начисления" key="0" used="1" type="number" format="F0" sourcetable="./a/a" sourcecolumn="num_sf" into="n2">a.num_sf as num_sf, /*Номер документа начисления*//*number*/
</column><column table="a" column="dat_sf" as="dat_sf" title="Дата документа начисления" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_sf" into="d1">a.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
</column><column table="a" column="dat_rep" as="dat_rep" title="Дата документа начисления" key="0" used="1" type="date" into="d2">a.dat_rep as dat_rep, /*Дата документа начисления*//*date*/
</column><column table="a" column="ym" as="ym" title="Отчетный период начисления" key="0" used="1" type="number" format="F2" sourcetable="./a/a" sourcecolumn="ym" into="n3">a.ym as ym, /*Отчетный период начисления*//*number*/
</column><column table="a" column="nom_sf" as="nom_sf" title="Номер документа начисления" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="nom_sf" into="s1">a.nom_sf as nom_sf, /*Номер документа начисления*//*string*/
</column><column table="a" column="name" as="name" title="Документ начисления" key="0" used="1" type="string" sourcetable="./a/a/vid_sf" sourcecolumn="abbr" into="s2">a.name as name, /*Документ начисления*//*string*/
</column><column table="a" column="dat_bzad" as="dat_bzad" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" sourcetable="./a/a/kod_deb" sourcecolumn="dat_bzad" into="d3">a.dat_bzad as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_bzad_ksf" as="dat_bzad_ksf" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" into="d4">a.dat_bzad_ksf as dat_bzad_ksf, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_res_nal_45" as="dat_res_nal_45" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad" into="d5">a.dat_res_nal_45 as dat_res_nal_45, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_res_nal_90" as="dat_res_nal_90" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad" into="d6">a.dat_res_nal_90 as dat_res_nal_90, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_res_buh" as="dat_res_buh" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" agg="max" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad" into="d7">a.dat_res_buh as dat_res_buh, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_bzad_max" as="dat_bzad_max" title="Дата возникновения обязательства по погашению задолженности" key="0" used="1" type="date" sourcetable="./a/a/kod_deb" sourcecolumn="dat_bzad" into="d8">a.dat_bzad_max as dat_bzad_max, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</column><column table="a" column="dat_bzad_uved_kaz_el" as="dat_bzad_uved_kaz_el" title="Дата документа на оплату" key="0" used="1" type="date" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc" into="d9">a.dat_bzad_uved_kaz_el as dat_bzad_uved_kaz_el, /*Дата документа на оплату*//*date*/
</column><column table="a" column="is_big_avans" as="is_big_avans" title="Признак аванс больше чем 30, 40" key="0" used="1" type="number" into="n4">a.is_big_avans as is_big_avans, /*Признак аванс больше чем 30, 40*//*number*/
</column><column table="a" column="dat_ezad_kaz" as="dat_ezad_kaz" title="Дата возникновения задолженности с учетом авансов 30,40% " key="0" used="1" type="date" agg="max" format="F2" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc" reference="sk_vid_real" refcol="vid_real" into="d10">a.dat_ezad_kaz as dat_ezad_kaz, /*Дата возникновения задолженности с учетом авансов 30,40% *//*date*/
</column><column table="a" column="nachisl" as="nachisl" title="Начислено" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" into="n5">a.nachisl as nachisl, /*Начислено*//*number*/
</column><column table="a" column="ym_vozn" as="ym_vozn" title="Отчетный период начисления" key="0" used="1" type="number" format="F2" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="ym" into="n6">a.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><column table="a" column="dat_vozn_otch" as="dat_vozn_otch" title="Отчетный период начисления" key="0" used="1" type="date" format="F2" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="ym" into="d11">a.dat_vozn_otch as dat_vozn_otch, /*Отчетный период начисления*//*date*/
</column><column table="a" column="nachisl_p" as="nachisl_p" title="Начислено" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" into="n7">a.nachisl_p as nachisl_p, /*Начислено*//*number*/
</column><column table="a" column="nachisl_m" as="nachisl_m" title="Начислено" key="0" used="1" type="number" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" into="n8">a.nachisl_m as nachisl_m, /*Начислено*//*number*/
</column><column table="a" column="ym_min" as="ym_min" title="Период начисления с" key="0" used="1" type="number" format="F2" sourcetable="./a/a" sourcecolumn="ym" into="n9">a.ym_min as ym_min, /*Период начисления с*//*number*/
</column><column table="a" column="ym_max" as="ym_max" title="Период начисления по" key="0" used="1" type="number" format="F2" sourcetable="./a/a" sourcecolumn="ym" into="n10">a.ym_max as ym_max, /*Период начисления по*//*number*/
</column><column table="a" column="dat_dolg_norm" as="dat_dolg_norm" title="Дата документа начисления" key="0" used="1" type="date" format="F2" into="d12">a.dat_dolg_norm as dat_dolg_norm, /*Дата документа начисления*//*date*/
</column><column table="a" column="dat_vozn_norm" as="dat_vozn_norm" title="Дата документа начисления" key="0" used="1" type="date" format="F2" into="d13">a.dat_vozn_norm as dat_vozn_norm, /*Дата документа начисления*//*date*/
</column><column table="a" column="sf_old_ym" as="sf_old_ym" title="Отчетный период начисления" key="0" used="1" type="number" format="F2" sourcetable="./a/a/kod_sf_old" sourcecolumn="ym" into="n11">a.sf_old_ym as sf_old_ym, /*Отчетный период начисления*//*number*/
</column><column table="a" column="kod_ur_state" as="kod_ur_state" title="Код юр. статуса" key="0" used="1" type="number" agg="max" into="n12">a.kod_ur_state as kod_ur_state, /*Код юр. статуса*//*number*/
</column><column table="a" column="ras_name" as="ras_name" title="Наименование" key="0" used="1" type="string" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="name" into="s3">a.ras_name as ras_name, /*Наименование*//*string*/
</column><column table="a" column="dat_sf_recalc" as="dat_sf_recalc" title="Дата документа начисления" key="0" used="1" type="date" into="d14">a.dat_sf_recalc as dat_sf_recalc/*Дата документа начисления*//*date*/
</column></select>
                <from>
from <query name="sr_facvip" as="a" path="./a/a" haskeys="1" used="1">(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="num_sf" type="number" title="Номер документа начисления" format="F0" as="num_sf" key="0" sourcetable="./a/a" sourcecolumn="num_sf" used="1">a.num_sf as num_sf, /*Номер документа начисления*//*number*/
</column><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" sourcetable="./a/a" sourcecolumn="dat_sf" used="1">a.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
</column><call function="if" as="dat_rep" type="date" key="0" pth="" used="1" title="Дата документа начисления"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<call function="date to ym" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> &lt; </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column>) </call><text txtype="func"> and </text><call function="!=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> != </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><call function="ym end day" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *100,'YYYYMM')) </text>) </call><text txtype="func"> else </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> end </text> as dat_rep, /*Дата документа начисления*//*date*/
</call><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a" sourcecolumn="ym" used="1">a.ym as ym, /*Отчетный период начисления*//*number*/
</column><column table="a" column="nom_sf" type="string" comment="полный номер док-та для печати" title="Номер документа начисления" as="nom_sf" key="0" sourcetable="./a/a" sourcecolumn="nom_sf" used="1">a.nom_sf as nom_sf, /*Номер документа начисления*//*string*/
</column><call function="||" as="name" title="Документ начисления" key="0" pth="" type="string" used="1" sourcetable="./a/a/vid_sf" sourcecolumn="abbr"><column table="vid_sf" column="abbr">vid_sf.abbr</column><text txtype="func"> || </text><const><text>' № '</text></const><text txtype="func"> || </text><column table="a" column="num_sf">a.num_sf</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_sf">a.dat_sf</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name, /*Документ начисления*//*string*/
</call><call function="coalesce" as="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" key="0" pth="" used="1" sourcetable="./a/a/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> coalesce( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> , </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ) </text> as dat_bzad, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="if" as="dat_bzad_ksf" type="date" title="Дата возникновения обязательства по погашению задолженности" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is null" pth="" type="bool">(<column table="a" column="kod_sf_old" type="number" comment="kod_sf перерасчитываемой сф" as="kod_sf_old" reference="sr_facvip" refcol="kod_sf" key="0" thissrc="kod_sf_old">a.kod_sf_old</column><text txtype="func"> is null </text>) </call><text txtype="func"> then </text><call function="coalesce" as="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" key="0" pth="" thissrc="dat_bzad">(<text txtype="func"> coalesce( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> , </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ) </text>) </call><text txtype="func"> else </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> end </text> as dat_bzad_ksf, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="latest" as="dat_res_nal_45" key="0" pth="" type="date" used="1" title="Дата возникновения обязательства по погашению задолженности" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="date add days" type="date" pth="">(<column table="kod_sf_main" column="dat_bzad">kod_sf_main.dat_bzad</column><text txtype="func"> + ( </text><const><text>45</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="a" column="dat_sf">a.dat_sf</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text> as dat_res_nal_45, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="latest" as="dat_res_nal_90" key="0" pth="" type="date" used="1" title="Дата возникновения обязательства по погашению задолженности" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="date add days" type="date" pth="">(<column table="kod_sf_main" column="dat_bzad">kod_sf_main.dat_bzad</column><text txtype="func"> + ( </text><const><text>90</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="a" column="dat_sf">a.dat_sf</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text> as dat_res_nal_90, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="earliest" as="dat_res_buh" key="0" pth="" type="date" used="1" title="Дата возникновения обязательства по погашению задолженности" agg="max" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><column table="kod_sf_main" column="dat_bzad">kod_sf_main.dat_bzad</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><call function="if" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<call function="egr_payer_sulst" pth="" type="string">(<text txtype="func"> KG_EGR_ULIP_R.get_payer_sulst( </text><column table="kodp" column="kodp">kodp.kodp</column><text txtype="func"> ) </text>) </call><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="egr_payer_sulst_dat" pth="" type="string">(<text txtype="func"> KG_EGR_ULIP_R.get_payer_sulst_date( </text><column table="kodp" column="kodp">kodp.kodp</column><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text> as dat_res_buh, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="coalesce" as="dat_bzad_max" type="date" title="Дата возникновения обязательства по погашению задолженности" key="0" pth="" thissrc="dat_bzad" used="1" sourcetable="./a/a/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> coalesce( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> , </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ) </text> as dat_bzad_max, /*Дата возникновения обязательства по погашению задолженности*//*date*/
</call><call function="case" as="dat_bzad_uved_kaz_el" type="date" key="0" pth="" used="1" title="Дата документа на оплату" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_sf_dop" column="perc">kod_sf_dop.perc</column><text txtype="func"> = </text><const><text>30</text></const>) </call><text txtype="func"> then </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="to_date" pth="" type="date">(<text txtype="func"> to_date( </text><call function="||" pth="" type="string">(<const><text>'10.'</text></const><text txtype="func"> || </text><call function="ym to char" pth="" type="string">(<text txtype="func"> trim(to_char( </text><column table="kod_sf_dop" column="rym">kod_sf_dop.rym</column><text txtype="func"> ,'9999.99')) </text>) </call>) </call><text txtype="func"> , </text><const><text>'DD.YYYY.MM'</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_deb" column="dat_deb">kod_deb.dat_deb</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_sf_dop" column="perc">kod_sf_dop.perc</column><text txtype="func"> = </text><const><text>40</text></const>) </call><text txtype="func"> then </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="to_date" pth="" type="date">(<text txtype="func"> to_date( </text><call function="||" pth="" type="string">(<const><text>'25.'</text></const><text txtype="func"> || </text><call function="ym to char" pth="" type="string">(<text txtype="func"> trim(to_char( </text><column table="kod_sf_dop" column="rym">kod_sf_dop.rym</column><text txtype="func"> ,'9999.99')) </text>) </call>) </call><text txtype="func"> , </text><const><text>'DD.YYYY.MM'</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_deb" column="dat_deb">kod_deb.dat_deb</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><call function="earliest" pth="" type="date">(<text txtype="func"> nullif(least ( </text><text txtype="func"> nvl( </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><column table="kod_deb" column="dat_deb">kod_deb.dat_deb</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call><text txtype="func"> , </text><call function="ym end day" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="kod_sf_dop" column="rym">kod_sf_dop.rym</column><text txtype="func"> *100,'YYYYMM')) </text>) </call><text txtype="func"> ) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><call function="ym begin time" pth="" type="date">(<text txtype="func"> (to_date(to_char( </text><column table="kod_sf_dop" column="rym">kod_sf_dop.rym</column><text txtype="func"> *10000+01),'YYYYMMDD')) </text>) </call><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><call function="ym end day" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="kod_sf_dop" column="rym">kod_sf_dop.rym</column><text txtype="func"> *100,'YYYYMM')) </text>) </call><text txtype="func"> , to_date('01.01.9999','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.9999','DD.MM.YYYY')) </text>) </call></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><call function="latest" pth="" type="date">(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> , nvl( </text><column table="kod_deb" column="dat_deb">kod_deb.dat_deb</column><text txtype="func"> , to_date('01.01.0001','DD.MM.YYYY')) </text><text txtype="func"> ), to_date('01.01.0001','DD.MM.YYYY')) </text>) </call></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , </text><call function="ym end day" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="ym add month" pth="" type="number">(<!--to_number(to_char(ADD_MONTHS((to_date(to_char(2014.08*10000+01),'YYYYMMDD')),1),'YYYYMM'))/100--><text txtype="func"> to_number(to_char(ADD_MONTHS( </text><text txtype="func"> (to_date(to_char( </text><column table="a" column="ym">a.ym</column><text txtype="func"> *10000+01),'YYYYMMDD') </text><text txtype="func"> ) </text><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> ) </text><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM')) </text>) </call><text txtype="func"> ) </text>) </call></call><text txtype="func"> end </text> as dat_bzad_uved_kaz_el, /*Дата документа на оплату*//*date*/
</call><call as="is_big_avans" function="if" type="number" title="Признак аванс больше чем 30, 40" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> ,0)=0 </text>) </call><text txtype="func"> and </text><call function="not in" pth="" type="bool">(<column table="kod_sf_dop" column="perc">kod_sf_dop.perc</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>30</text></const><text txtype="func"> , </text><const><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=1" pth="1" type="bool">(<text txtype="func"> nvl( </text><column table="kod_sf_dop" column="day">kod_sf_dop.day</column><text txtype="func"> ,0)=1 </text>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as is_big_avans, /*Признак аванс больше чем 30, 40*//*number*/
</call><call as="dat_ezad_kaz" function="case" type="date" title="Дата возникновения задолженности с учетом авансов 30,40% " key="0" pth="" used="1" agg="max" format="F2" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc" reference="sk_vid_real" refcol="vid_real"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<call function="nvl" agg="sum" as="perc" key="0" pth="" thissrc="perc">(<text txtype="func"> nvl( </text><column table="kod_sf_dop" column="perc">kod_sf_dop.perc</column><text txtype="func"> , </text><column table="a" column="proc">a.proc</column><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>30</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><call function="to_date" pth="" type="date">(<text txtype="func"> to_date( </text><call function="||" pth="" type="string">(<call function="to_char" pth="" type="string">(<text txtype="func"> to_char( </text><const><text>25</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> || </text><const><text>'.'</text></const><text txtype="func"> || </text><call function="to_char" pth="" type="string">(<text txtype="func"> to_char( </text><call function="mes" pth="" type="number">(<text txtype="func"> mod( </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> , 1)*100 </text>) </call><text txtype="func"> ) </text>) </call><text txtype="func"> || </text><const><text>'.'</text></const><text txtype="func"> || </text><call function="to_char" pth="" type="string">(<text txtype="func"> to_char( </text><call function="year" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><call function="ym begin time" pth="" type="date">(<text txtype="func"> (to_date(to_char( </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> *10000+01),'YYYYMMDD')) </text>) </call><text txtype="func"> ,'YYYY')) </text>) </call><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> , </text><const><text>'dd.mm.yyyy'</text></const><text txtype="func"> ) </text>) </call></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="ym add month" pth="" type="number">(<!--to_number(to_char(ADD_MONTHS((to_date(to_char(2014.08*10000+01),'YYYYMMDD')),1),'YYYYMM'))/100--><text txtype="func"> to_number(to_char(ADD_MONTHS( </text><text txtype="func"> (to_date(to_char( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *10000+01),'YYYYMMDD') </text><text txtype="func"> ) </text><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> ) </text><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call></call><text txtype="func"> end </text> as dat_ezad_kaz, /*Дата возникновения задолженности с учетом авансов 30,40% *//*date*/
</call><query as="nachisl" key="0" path="./a/a/nachisl" used="1" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">(
<select>--
select <column table="sr_facras_psh1" group="sum" column="nachisl" as="nachisl" fixed="1" used="1" key="0" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">sum(sr_facras_psh1.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras_psh1" path="./a/a/nachisl/sr_facras_psh1" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/nachisl/sr_facras_psh1/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_psh1
--\sr_facras
</query></from><where>where
<call function="and" pth="" type="bool"><call function="=" joinexp="1" pth="" type="bool">(<column table="sr_facras_psh1" column="kod_sf">sr_facras_psh1.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column>) </call></call></where>)
--\
 as nachisl, /*Начислено*//*number*/
</query><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn, /*Отчетный период начисления*//*number*/
</call><call function="add_months" type="date" as="dat_vozn_otch" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> add_months( </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> ) </text> as dat_vozn_otch, /*Отчетный период начисления*//*date*/
</call><call function="if" as="nachisl_p" key="0" pth="" used="1" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl"><text txtype="func"> case </text><text txtype="func"> when </text><call function="ge" pth="" type="bool">(<query as="nachisl" thissrc="nachisl" path="./a/a/nachisl" used="1">(
<select>--
select <column table="sr_facras_psh1" group="sum" column="nachisl" as="nachisl" fixed="1" used="1" key="0" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">sum(sr_facras_psh1.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras_psh1" path="./a/a/nachisl/sr_facras_psh1" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/nachisl/sr_facras_psh1/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_psh1
--\sr_facras
</query></from><where>where
<call function="and" pth="" type="bool"><call function="=" joinexp="1" pth="" type="bool">(<column table="sr_facras_psh1" column="kod_sf">sr_facras_psh1.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column>) </call></call></where>)
--\
</query><text txtype="func"> &gt;= </text><const><text>0</text></const>) </call><text txtype="func"> then </text><query as="nachisl" thissrc="nachisl" path="./a/a/nachisl" used="1">(
<select>--
select <column table="sr_facras_psh1" group="sum" column="nachisl" as="nachisl" fixed="1" used="1" key="0" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">sum(sr_facras_psh1.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras_psh1" path="./a/a/nachisl/sr_facras_psh1" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/nachisl/sr_facras_psh1/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_psh1
--\sr_facras
</query></from><where>where
<call function="and" pth="" type="bool"><call function="=" joinexp="1" pth="" type="bool">(<column table="sr_facras_psh1" column="kod_sf">sr_facras_psh1.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column>) </call></call></where>)
--\
</query><text txtype="func"> end </text> as nachisl_p, /*Начислено*//*number*/
</call><call function="if" as="nachisl_m" key="0" pth="" used="1" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl"><text txtype="func"> case </text><text txtype="func"> when </text><call function="lt" pth="" type="bool">(<query as="nachisl" thissrc="nachisl" path="./a/a/nachisl" used="1">(
<select>--
select <column table="sr_facras_psh1" group="sum" column="nachisl" as="nachisl" fixed="1" used="1" key="0" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">sum(sr_facras_psh1.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras_psh1" path="./a/a/nachisl/sr_facras_psh1" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/nachisl/sr_facras_psh1/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_psh1
--\sr_facras
</query></from><where>where
<call function="and" pth="" type="bool"><call function="=" joinexp="1" pth="" type="bool">(<column table="sr_facras_psh1" column="kod_sf">sr_facras_psh1.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column>) </call></call></where>)
--\
</query><text txtype="func"> &lt; </text><const><text>0</text></const>) </call><text txtype="func"> then </text><query as="nachisl" thissrc="nachisl" path="./a/a/nachisl" used="1">(
<select>--
select <column table="sr_facras_psh1" group="sum" column="nachisl" as="nachisl" fixed="1" used="1" key="0" type="number" title="Начислено" agg="sum" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl">sum(sr_facras_psh1.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras_psh1" path="./a/a/nachisl/sr_facras_psh1" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/nachisl/sr_facras_psh1/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/nachisl/sr_facras_psh1/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_psh1
--\sr_facras
</query></from><where>where
<call function="and" pth="" type="bool"><call function="=" joinexp="1" pth="" type="bool">(<column table="sr_facras_psh1" column="kod_sf">sr_facras_psh1.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column>) </call></call></where>)
--\
</query><text txtype="func"> end </text> as nachisl_m, /*Начислено*//*number*/
</call><column table="a" column="ym" type="number" title="Период начисления с" dimension="ym" format="F2" as="ym_min" key="0" thissrc="ym" sourcetable="./a/a" sourcecolumn="ym" used="1">a.ym as ym_min, /*Период начисления с*//*number*/
</column><column table="a" column="ym" type="number" title="Период начисления по" dimension="ym" format="F2" as="ym_max" key="0" thissrc="ym" sourcetable="./a/a" sourcecolumn="ym" used="1">a.ym as ym_max, /*Период начисления по*//*number*/
</column><call as="dat_dolg_norm" function="if" type="date" key="0" pth="" used="1" title="Отчетный период начисления" format="F2"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call type="" function="if" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> = </text><call function="to_date" pth="" type="date">(<text txtype="func"> to_date( </text><call function="||" pth="" type="string">(<const><text>'31.12.'</text></const><text txtype="func"> || </text><call function="year" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ,'YYYY')) </text>) </call>) </call><text txtype="func"> , </text><const><text>'DD.MM.YYYY'</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="date to ym" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call function="if" as="" type="" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<call function="if" type="number" as="ym_vozn" key="0" pth="" thissrc="ym_vozn">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column>) </call><text txtype="func"> and </text><call function="or" pth="1" type="bool">(<call function="gt" pth="" type="bool">(<column table="kod_sf_dop" column="nachisl">kod_sf_dop.nachisl</column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> or </text><call function="is not null" pth="" type="bool">(<column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" thissrc="kod_sf_first">a.kod_sf_first</column><text txtype="func"> is not null </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="ym add month" pth="" type="number">(<!--to_number(to_char(ADD_MONTHS((to_date(to_char(2014.08*10000+01),'YYYYMMDD')),1),'YYYYMM'))/100--><text txtype="func"> to_number(to_char(ADD_MONTHS( </text><text txtype="func"> (to_date(to_char( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *10000+01),'YYYYMMDD') </text><text txtype="func"> ) </text><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> ) </text><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text> as dat_dolg_norm, /*Отчетный период начисления*//*date*/
</call><call as="dat_vozn_norm" function="if" type="date" key="0" pth="" thissrc="dat_dolg_norm" used="1" title="Отчетный период начисления" format="F2"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call type="" function="if" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> = </text><call function="to_date" pth="" type="date">(<text txtype="func"> to_date( </text><call function="||" pth="" type="string">(<const><text>'31.12.'</text></const><text txtype="func"> || </text><call function="year" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ,'YYYY')) </text>) </call>) </call><text txtype="func"> , </text><const><text>'DD.MM.YYYY'</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="date to ym" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call function="if" as="" type="" pth="">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<call function="if" type="number" as="ym_vozn" key="0" pth="" thissrc="ym_vozn">(<text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column>) </call><text txtype="func"> and </text><call function="or" pth="1" type="bool">(<call function="gt" pth="" type="bool">(<column table="kod_sf_dop" column="nachisl">kod_sf_dop.nachisl</column><text txtype="func"> &gt; </text><const><text>0</text></const>) </call><text txtype="func"> or </text><call function="is not null" pth="" type="bool">(<column table="a" column="kod_sf_first" type="number" comment="при перерасчете самый исходный kod_sf" as="kod_sf_first" reference="sr_facvip" refcol="kod_sf" key="0" thissrc="kod_sf_first">a.kod_sf_first</column><text txtype="func"> is not null </text>) </call>) </call>) </call><text txtype="func"> then </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><call function="ym add month" pth="" type="number">(<!--to_number(to_char(ADD_MONTHS((to_date(to_char(2014.08*10000+01),'YYYYMMDD')),1),'YYYYMM'))/100--><text txtype="func"> to_number(to_char(ADD_MONTHS( </text><text txtype="func"> (to_date(to_char( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *10000+01),'YYYYMMDD') </text><text txtype="func"> ) </text><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> ) </text><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> else </text><call function="ym end time" pth="" type="date">(<text txtype="func"> LAST_DAY(to_date( </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> *100,'YYYYMM'))+(1-1/24/60/60) </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text>) </call><text txtype="func"> end </text> as dat_vozn_norm, /*Отчетный период начисления*//*date*/
</call><column table="kod_sf_old" column="ym" as="sf_old_ym" key="0" used="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_old" sourcecolumn="ym">kod_sf_old.ym as sf_old_ym, /*Отчетный период начисления*//*number*/
</column><column table="kod_sf_norm_av" column="kod_ur_state" dimension="kod_ur_state" as="kod_ur_state" key="0" is-fact-use="1" used="1" type="number" title="Код юр. статуса" agg="max">kod_sf_norm_av.kod_ur_state as kod_ur_state, /*Код юр. статуса*//*number*/
</column><column table="kod_sf_dop" column="name" as="ras_name" key="0" used="1" type="string" title="Наименование" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="name">kod_sf_dop.name as ras_name, /*Наименование*//*string*/
</column><call as="dat_sf_recalc" function="if" type="date" key="0" pth="" used="1" title="Дата документа начисления"><text txtype="func"> case </text><text txtype="func"> when </text><call function="in" pth="" type="bool">(<column table="a" column="kniga" type="number" as="kniga" key="0" thissrc="kniga">a.kniga</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>1</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call>) </call><text txtype="func"> then </text><query as="dat_sf_recalc" path="./a/a/dat_sf_recalc" used="1">(
<select>--
select <column group="max" table="sqsr" column="dat_recalc" as="dat_recalc" fixed="1" used="1" key="0" type="date" sourcetable="./a/a/dat_sf_recalc/sqsr" sourcecolumn="dat_recalc">max(sqsr.dat_recalc)  as dat_recalc/*date*/
</column></select><from>
from <query name="sr_recalc_sf" as="sqsrs" path="./a/a/dat_sf_recalc/sqsrs" haskeys="1" used="1">(
<select>--sr_recalc_sf
select <column table="a" column="kod_recalc" type="number" group="1" as="kod_recalc" key="1" fixed="1" sourcetable="./a/a/dat_sf_recalc/sqsrs" sourcecolumn="kod_recalc" used="1">a.kod_recalc as kod_recalc, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" group="1" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/dat_sf_recalc/sqsrs" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_recalc_sf" as="a" used="1">sr_recalc_sf
a
--\sr_recalc_sf
</table></from><group> group by
<column table="a" column="kod_recalc" type="number" group="1" as="kod_recalc" key="1" fixed="1" sourcetable="./a/a/dat_sf_recalc/sqsrs" sourcecolumn="kod_recalc" used="1">a.kod_recalc, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" group="1" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/dat_sf_recalc/sqsrs" sourcecolumn="kod_sf" used="1">a.kod_sf/*number*/
</column></group>)
sqsrs
--\sr_recalc_sf
</query><query name="sr_recalc" as="sqsr" join="left outer" path="./a/a/dat_sf_recalc/sqsr" haskeys="1" used="1">left outer join
(
<select>--sr_recalc
select <column table="a" column="kod_recalc" type="number" as="kod_recalc" key="1" fixed="1" sourcetable="./a/a/dat_sf_recalc/sqsr" sourcecolumn="kod_recalc" used="1">a.kod_recalc as kod_recalc, /*number*//*key*/
</column><column table="a" column="dat_recalc" type="date" title="" comment="дата перерасчета" as="dat_recalc" key="0" sourcetable="./a/a/dat_sf_recalc/sqsr" sourcecolumn="dat_recalc" used="1">a.dat_recalc as dat_recalc/**//*date*/
</column></select><from>
from <table name="sr_recalc" as="a" used="1">sr_recalc
a
--\sr_recalc
</table></from><call function="=" type="bool">)
sqsr on <column table="sqsrs" column="kod_recalc">sqsrs.kod_recalc</column><text txtype="func"> = </text><column table="sqsr" column="kod_recalc">sqsr.kod_recalc</column></call>--\sr_recalc
</query></from><where>where
<call function="=" pth="" type="bool"><column table="sqsrs" column="kod_sf">sqsrs.kod_sf</column><text txtype="func"> = </text><column table="a" column="kod_sf">a.kod_sf</column></call></where>)
--\
</query><text txtype="func"> else </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> end </text> as dat_sf_recalc/*Дата документа начисления*//*date*/
</call></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table><query name="kr_dogovor" as="kod_dog1" join="left outer" path="./a/a/kod_dog1" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog1" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (для договоров услуг - сторона1 - кому платят )" vid="1" as="kodp" reference="kr_payer" refcol="kodp" key="0" sourcetable="./a/a/kod_dog1" sourcecolumn="kodp" used="1">a.kodp as kodp/**//*number*/
</column></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog1 on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog1" column="kod_dog">kod_dog1.kod_dog</column></call>--\kr_dogovor
</query><query name="kr_payer" as="kodp" join="left outer" path="./a/a/kodp" haskeys="1" used="1">left outer join
(
<select>--kr_payer
select <column table="a" column="kodp" type="number" title="" comment="уник. код абонента" fact="kr_payer_kodp" agg="max" as="kodp" key="1" fixed="1" sourcetable="./a/a/kodp" sourcecolumn="kodp" used="1">a.kodp as kodp/**//*number*//*key*/
</column></select><from>
from <table name="kr_payer" as="a" title="Абонент" used="1">kr_payer
a
--\kr_payer
</table></from><call function="=" type="bool">)
kodp on <column table="kod_dog1" column="kodp">kod_dog1.kodp</column><text txtype="func"> = </text><column table="kodp" column="kodp">kodp.kodp</column></call>--\kr_payer
</query><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_av" column="perc" group="max" as="perc" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc">max(kod_av.perc)  as perc, /*number*/
</column><column table="kod_av" column="day" group="min" as="day" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="day">min(kod_av.day)  as day, /*number*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym, /*number*/
</column><column table="kod_ras_text" column="name" group="min" as="name" key="0" used="1" type="string" title="Наименование" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="name">min(kod_ras_text.name)  as name, /*Наименование*//*string*/
</column><column table="sr_facras" column="nachisl" group="sum" as="nachisl" key="0" used="1" type="number" title="Начислено" agg="sum" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="nachisl">sum(sr_facras.nachisl)  as nachisl/*Начислено*//*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym, /**//*number*/
</column><column table="a" column="nachisl" type="number" title="Начислено" fact="sr_facras_nachisl" agg="sum" as="nachisl" key="0" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="nachisl" used="1">a.nachisl as nachisl/*Начислено*//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query><query name="sr_facras_text" as="kod_ras_text" join="left outer" path="./a/a/kod_sf_dop/kod_ras_text" haskeys="1" used="1">left outer join
(
<select>--sr_facras_text
select <column table="a" column="kod_ras" type="number" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Наименование" comment="для пени-список с платежками" as="name" key="0" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="name" used="1">a.name as name, /*Наименование*//*string*/
</column><column table="a" column="kod_account" type="number" as="kod_account" key="0" sourcetable="./a/a/kod_sf_dop/kod_ras_text" sourcecolumn="kod_account" used="1">a.kod_account as kod_account, /*number*/
</column><column table="kod_sf" column="vid_real" as="vid_real" key="0" used="1" type="number" agg="max" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_sf.vid_real as vid_real/*number*/
</column></select><from>
from <table name="sr_facras_text" as="a" used="1">sr_facras_text
a
--\sr_facras_text
</table><query name="sr_facras" as="kod_ras" join="left outer" path="./a/a/kod_sf_dop/kod_ras_text/kod_ras" haskeys="1" used="1">left outer join
(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_ras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_ras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_dop/kod_ras_text/kod_ras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_ras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_ras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_ras on <column table="a" column="kod_ras">a.kod_ras</column><text txtype="func"> = </text><column table="kod_ras" column="kod_ras">kod_ras.kod_ras</column></call>--\sr_facras
</query><query name="sr_facvip" as="kod_sf" join="left outer" path="./a/a/kod_sf_dop/kod_ras_text/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_dop/kod_ras_text/kod_sf" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_ras" column="kod_sf">kod_ras.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><call function="=" type="bool">)
kod_ras_text on <column table="kod_ras_text" column="kod_ras">kod_ras_text.kod_ras</column><text txtype="func"> = </text><column table="sr_facras" column="kod_ras">sr_facras.kod_ras</column></call>--\sr_facras_text
</query><query name="sr_avans" as="kod_av" join="left outer" path="./a/a/kod_sf_dop/kod_av" haskeys="1" used="1">left outer join
(
<select>--sr_avans
select <column table="a" column="kod_av" type="number" as="kod_av" key="1" fixed="1" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="kod_av" used="1">a.kod_av as kod_av, /*number*//*key*/
</column><column table="a" column="day" type="number" title="" as="day" key="0" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="day" used="1">a.day as day, /**//*number*/
</column><column table="a" column="perc" type="number" title="" as="perc" key="0" sourcetable="./a/a/kod_sf_dop/kod_av" sourcecolumn="perc" used="1">a.perc as perc/**//*number*/
</column></select><from>
from <table name="sr_avans" as="a" used="1">sr_avans
a
--\sr_avans
</table></from><call function="and" type="bool">)
kod_av on <call function="=" pth="" type="bool">(<column table="kod_ras_text" column="kod_account">kod_ras_text.kod_account</column><text txtype="func"> = </text><column table="kod_av" column="kod_av">kod_av.kod_av</column>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="kod_ras_text" column="vid_real">kod_ras_text.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call></call>--\sr_avans
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="sr_facvip" as="kod_sf_old" join="left outer" path="./a/a/kod_sf_old" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_old" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_old" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old on <column table="a" column="kod_sf_old">a.kod_sf_old</column><text txtype="func"> = </text><column table="kod_sf_old" column="kod_sf">kod_sf_old.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_sf" dimension="1" as="vid_sf" join="left outer" path="./a/a/vid_sf" haskeys="1" used="1">left outer join
(
<select>--sk_vid_sf
select <column table="a" column="vid_sf" type="number" title="" as="vid_sf" key="1" fixed="1" sourcetable="./a/a/vid_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf, /**//*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" sourcetable="./a/a/vid_sf" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="sk_vid_sf" as="a" dimension="1" used="1">sk_vid_sf
a
--\sk_vid_sf
</table></from><call function="=" type="bool">)
vid_sf on <column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> = </text><column table="vid_sf" column="vid_sf">vid_sf.vid_sf</column></call>--\sk_vid_sf
</query><query name="sr_debet" dimension="kod_deb" as="kod_deb" join="left outer" path="./a/a/kod_deb" haskeys="1" used="1">left outer join
(
<select>--sr_debet
select <column table="a" column="kod_deb" type="number" key-dimension="kod_deb" as="kod_deb" key="1" fixed="1" sourcetable="./a/a/kod_deb" sourcecolumn="kod_deb" used="1">a.kod_deb as kod_deb, /*number*//*key*/
</column><column table="a" column="dat_deb" type="date" title="Дата документа на оплату" is-private-dimension="dat" is-final-dimension="dat" dimension="dat" as="dat_deb" key="0" sourcetable="./a/a/kod_deb" sourcecolumn="dat_deb" used="1">a.dat_deb as dat_deb, /*Дата документа на оплату*//*date*/
</column><column table="a" column="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" as="dat_bzad" key="0" sourcetable="./a/a/kod_deb" sourcecolumn="dat_bzad" used="1">a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/
</column></select><from>
from <table name="sr_debet" as="a" dimension="kod_deb" used="1">sr_debet
a
--\sr_debet
</table></from><call function="=" type="bool">)
kod_deb on <column table="a" column="kod_deb">a.kod_deb</column><text txtype="func"> = </text><column table="kod_deb" column="kod_deb">kod_deb.kod_deb</column></call>--\sr_debet
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query><query name="sr_facvip_main" dimension="1" as="kod_sf_main" join="left outer" path="./a/a/kod_sf_main" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_main
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_main" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="coalesce" as="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" key="0" pth="" used="1" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad"><text txtype="func"> coalesce( </text><column table="kod_deb" column="dat_bzad">kod_deb.dat_bzad</column><text txtype="func"> , </text><column table="a" column="dat_zadol" type="date" comment="конечная дата расчета пени по авансам (для эх)" as="dat_zadol" key="0" thissrc="dat_zadol">a.dat_zadol</column><text txtype="func"> , </text><column table="a" column="dat_sf" type="date" title="Дата документа начисления" as="dat_sf" key="0" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ) </text> as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="1" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_debet" dimension="kod_deb" as="kod_deb" join="left outer" path="./a/a/kod_sf_main/kod_deb" haskeys="1" used="1">left outer join
(
<select>--sr_debet
select <column table="a" column="kod_deb" type="number" key-dimension="kod_deb" as="kod_deb" key="1" fixed="1" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="kod_deb" used="1">a.kod_deb as kod_deb, /*number*//*key*/
</column><column table="a" column="dat_bzad" type="date" title="Дата возникновения обязательства по погашению задолженности" as="dat_bzad" key="0" sourcetable="./a/a/kod_sf_main/kod_deb" sourcecolumn="dat_bzad" used="1">a.dat_bzad as dat_bzad/*Дата возникновения обязательства по погашению задолженности*//*date*/
</column></select><from>
from <table name="sr_debet" as="a" dimension="kod_deb" used="1">sr_debet
a
--\sr_debet
</table></from><call function="=" type="bool">)
kod_deb on <column table="a" column="kod_deb">a.kod_deb</column><text txtype="func"> = </text><column table="kod_deb" column="kod_deb">kod_deb.kod_deb</column></call>--\sr_debet
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_main on <call function="nvl" as="kod_sf_main" type="number" key="0" pth="" thissrc="kod_sf_main">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column><text txtype="func"> , </text><column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" thissrc="kod_sf">a.kod_sf</column><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><column table="kod_sf_main" column="kod_sf">kod_sf_main.kod_sf</column></call>--\sr_facvip_main
</query><query name="sr_facvip_norm_av" as="kod_sf_norm_av" join="left outer" path="./a/a/kod_sf_norm_av" used="1">left outer join
(
<select>--sr_facvip_norm_av
select <column table="a" column="kod_sf" as="kod_sf" keypath=".kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/kod_sf" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_ur_state" as="kod_ur_state" is-fact-use="1" used="1" key="0" type="number" title="Код юр. статуса" agg="max">a.kod_ur_state as kod_ur_state/*Код юр. статуса*//*number*/
</column></select><from>
from <query name="sr_facvip_norm_av1" as="a" path="./a/a/kod_sf_norm_av/a" used="1">(
<select>--sr_facvip_norm_av1
select <column table="kod_sf" column="kod_sf" as="kod_sf" reference="sr_facvip" refcol="kod_sf" keypath=".kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="vid_real" column="vid_real" as="vid_real" reference="sk_vid_real" refcol="vid_real" keypath=".vid_real" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/vid_real" sourcecolumn="vid_real">vid_real.vid_real as vid_real, /*number*//*key*/
</column><column column="kod_ur_state1" table="qube" as="kod_ur_state" is-fact-use="1" used="1" key="0" type="number" title="Код юр. статуса" agg="max">qube.kod_ur_state1 as kod_ur_state/*Код юр. статуса*//*number*/
</column></select><from>
from <query haskeys="1" as="qube" path="./a/a/kod_sf_norm_av/a/qube" used="1">(
<select>--
select <column table="qube" column="kod_dog" group="1" as="kod_dog" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">qube.kod_dog as kod_dog, /*number*//*key*/
</column><column table="qube" column="kod_sf" group="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">qube.kod_sf as kod_sf, /*number*//*key*/
</column><column table="qube" column="vid_real" group="1" as="vid_real" key="1" fixed="1" used="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real as vid_real, /*number*//*key*/
</column><column table="qube" column="ym_vozn" group="1" as="ym_vozn" key="1" fixed="1" used="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*//*key*/
</column><call function="greatest_num" as="kod_ur_state1" type="number" title="Код юр. статуса" key="0" group="max" pth="" used="1" agg="max">max(<text txtype="func"> nullif(greatest ( </text><text txtype="func"> nvl( </text><column table="qube" column="kod_ur_state_51">qube.kod_ur_state_51</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> , nvl( </text><column table="qube" column="kod_ur_state_61">qube.kod_ur_state_61</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> , nvl( </text><column table="qube" column="kod_ur_state_41">qube.kod_ur_state_41</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> , nvl( </text><column table="qube" column="kod_ur_state_31">qube.kod_ur_state_31</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> , nvl( </text><column table="qube" column="kod_ur_state_21">qube.kod_ur_state_21</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> , nvl( </text><column table="qube" column="kod_ur_state_11">qube.kod_ur_state_11</column><text txtype="func"> , -99999999999999999999999999999999999999) </text><text txtype="func"> ), -99999999999999999999999999999999999999) </text>)  as kod_ur_state1/*Код юр. статуса*//*number*/
</call></select><from>
from <query as="qube" path="./a/a/kod_sf_norm_av/a/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_dog" as="kod_dog" keypath=".kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">qube.kod_dog as kod_dog, /*number*//*key*/
</column><column table="qube" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">qube.kod_sf as kod_sf, /*number*/
</column><column table="qube" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real as vid_real, /*number*/
</column><column table="qube" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><column table="qube" column="kod_ur_state_11" as="kod_ur_state_11" used="1" key="0" type="number" agg="max">qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
</column><column table="qube" column="kod_ur_state_21" as="kod_ur_state_21" used="1" key="0" type="number" agg="max">qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
</column><column table="qube" column="kod_ur_state_31" as="kod_ur_state_31" used="1" key="0" type="number" agg="max">qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
</column><column table="qube" column="kod_ur_state_41" as="kod_ur_state_41" used="1" key="0" type="number" agg="max">qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
</column><column table="qube" column="kod_ur_state_51" as="kod_ur_state_51" used="1" key="0" type="number" agg="max">qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
</column><column table="qube" column="kod_ur_state_61" as="kod_ur_state_61" used="1" key="0" type="number" agg="max">qube.kod_ur_state_61 as kod_ur_state_61/*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_sf_norm_av/a/qube/qube/qube" used="1">(
<query path="./a/a/kod_sf_norm_av/a/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">qube.kod_dog as kod_dog, /*number*//*key*/
</column><column table="qube" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">qube.kod_sf as kod_sf, /*number*/
</column><column table="qube" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real as vid_real, /*number*/
</column><column table="qube" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><column table="qube" column="kod_ur_state_11" as="kod_ur_state_11" used="1" key="0" type="number" agg="max">qube.kod_ur_state_11 as kod_ur_state_11, /*number*/
</column><column table="qube" column="kod_ur_state_21" as="kod_ur_state_21" used="1" key="0" type="number" agg="max">qube.kod_ur_state_21 as kod_ur_state_21, /*number*/
</column><column table="qube" column="kod_ur_state_31" as="kod_ur_state_31" used="1" key="0" type="number" agg="max">qube.kod_ur_state_31 as kod_ur_state_31, /*number*/
</column><column table="qube" column="kod_ur_state_41" as="kod_ur_state_41" used="1" key="0" type="number" agg="max">qube.kod_ur_state_41 as kod_ur_state_41, /*number*/
</column><column table="qube" column="kod_ur_state_51" as="kod_ur_state_51" used="1" key="0" type="number" agg="max">qube.kod_ur_state_51 as kod_ur_state_51, /*number*/
</column><column table="qube" column="kod_ur_state_61" as="kod_ur_state_61" used="1" key="0" type="number" agg="max">qube.kod_ur_state_61 as kod_ur_state_61/*number*/
</column></select><from>
from <query as="qube" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">un.kod_dog as kod_dog, /*number*//*key*/
</column><column table="un" column="kod_sf" group="1" as="kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">un.kod_sf as kod_sf, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real as vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*//*key*/
</column><column table="un" column="kod_ur_state_61" group="max" as="kod_ur_state_61" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_61)  as kod_ur_state_61, /*number*/
</column><column table="un" column="kod_ur_state_21" group="max" as="kod_ur_state_21" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_21)  as kod_ur_state_21, /*number*/
</column><column table="un" column="kod_ur_state_41" group="max" as="kod_ur_state_41" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_41)  as kod_ur_state_41, /*number*/
</column><column table="un" column="kod_ur_state_51" group="max" as="kod_ur_state_51" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_51)  as kod_ur_state_51, /*number*/
</column><column table="un" column="kod_ur_state_31" group="max" as="kod_ur_state_31" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_31)  as kod_ur_state_31, /*number*/
</column><column table="un" column="kod_ur_state_11" group="max" as="kod_ur_state_11" used="1" key="0" type="number" agg="max">max(un.kod_ur_state_11)  as kod_ur_state_11/*number*/
</column></select><from>
from <query as="un" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_ras" multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="kod_sf" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">kod_sf.kod_dog as kod_dog, /*number*//*key*/
</column><column table="sr_facras_a_d" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras_a_d.kod_sf as kod_sf, /*number*/
</column><column table="kod_sf" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_sf.vid_real as vid_real, /*number*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query name="sr_facras" dimension="kod_ras" as="sr_facras_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_a_d
--\sr_facras
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /*number*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="sr_facras_a_d" column="kod_sf">sr_facras_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_sf" column="vid_real">kod_sf.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="vid_real">dims.vid_real as vid_real, 
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><column table="ur_hist_mat_ba" column="kod_ur_state" as="kod_ur_state_61" used="1" key="0" type="number" agg="max">ur_hist_mat_ba.kod_ur_state as kod_ur_state_61, /*number*/
</column><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_hist_mat_ba_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_ba_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
</column><column table="kod_dogplat_bnk_a_d" column="kod_dog_bnk" as="kod_dog" group="1" used="1" key="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_dog">kod_dogplat_bnk_a_d.kod_dog_bnk as kod_dog, /*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_bnk_a_d" column="vid_real_bnk" as="vid_real" group="1" used="1" key="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="vid_real">kod_dogplat_bnk_a_d.vid_real_bnk as vid_real, /*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_hist_mat_ba" dimension="kod_hist_mat_ba" as="ur_hist_mat_ba_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_ba
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_ba" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_ba/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_ba" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="ur_mat_ba" as="kod_mat_ba1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1" haskeys="1" used="1">left outer join
(
<select>--ur_mat_ba
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_ba" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_ba/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_mat_ba1/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>9</text></const></call></where><call function="=" type="bool">)
kod_mat_ba1 on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_ba1" column="kod_mat_ba">kod_mat_ba1.kod_mat_ba</column></call>--\ur_mat_ba
</query><query name="ur_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="kod_mat_ba1" column="kod_folders">kod_mat_ba1.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>9</text></const></call></where>)
ur_hist_mat_ba_a_d
--\ur_hist_mat_ba
</query><query name="ur_mat_ba" dimension="kod_mat_ba" as="kod_mat_ba_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_ba
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_ba" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_ba/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_ba" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_ba_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>9</text></const></call></where><call function="=" type="bool">)
kod_mat_ba_a_d on <column table="ur_hist_mat_ba_a_d" column="kod_mat">ur_hist_mat_ba_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_ba_a_d" column="kod_mat_ba">kod_mat_ba_a_d.kod_mat_ba</column></call>--\ur_mat_ba
</query><query name="ur_dogplat_bnk" dimension="kod_dogplat_bnk" as="kod_dogplat_bnk_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat_bnk
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*/
</column><column table="a" column="kod_dog" is-final-dimension="1" dimension="kod_dog" is-private-dimension="1" as="kod_dog_bnk" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog_bnk, 
</column><column table="a" column="vid_real" is-final-dimension="1" dimension="vid_real" is-private-dimension="1" as="vid_real_bnk" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real_bnk
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat_bnk" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_bnk_a_d on <column table="kod_dogplat_bnk_a_d" column="kod_mat">kod_dogplat_bnk_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_ba_a_d" column="kod_mat">kod_mat_ba_a_d.kod_mat</column></call>--\ur_dogplat_bnk
</query><query name="vv_all_deb_sf" as="kod_deb_sf2_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf2_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf2_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf2_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf2_a_d1 on <column table="kod_dogplat_bnk_a_d" column="kod_deb_sf">kod_dogplat_bnk_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf2_a_d1" column="kod_deb_sf">kod_deb_sf2_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf2_a_d1" column="kod_sf">kod_deb_sf2_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_bnk_a_d" column="vid_real_bnk">kod_dogplat_bnk_a_d.vid_real_bnk</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_hist_mat_ba_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_ba_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_ba_a_d.kod_hist_mat, /*number*//*key*/
</column><column table="kod_dogplat_bnk_a_d" column="kod_dog_bnk" as="kod_dog" group="1" used="1" key="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="kod_dog">kod_dogplat_bnk_a_d.kod_dog_bnk, /*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_bnk_a_d" column="vid_real_bnk" as="vid_real" group="1" used="1" key="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_bnk_a_d" sourcecolumn="vid_real">kod_dogplat_bnk_a_d.vid_real_bnk, /*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_hist_mat_ba" dimension="kod_hist_mat_ba" as="ur_hist_mat_ba" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_ba
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_ba" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_ba, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_mor" type="date" comment="признать зад-ть мораторной с..." title="Признать задолженность мораторной с" as="dat_mor" key="0" thissrc="dat_mor">a.dat_mor</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>6</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_ba" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="ur_mat_ba" as="kod_mat_ba1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1" haskeys="1" used="1">left outer join
(
<select>--ur_mat_ba
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_ba" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_ba/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_mat_ba1/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>9</text></const></call></where><call function="=" type="bool">)
kod_mat_ba1 on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_ba1" column="kod_mat_ba">kod_mat_ba1.kod_mat_ba</column></call>--\ur_mat_ba
</query><query name="ur_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_ba/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="kod_mat_ba1" column="kod_folders">kod_mat_ba1.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>9</text></const></call></where><call function="=" type="bool">)
ur_hist_mat_ba on <column table="ur_hist_mat_ba" column="kod_hist_mat">ur_hist_mat_ba.kod_hist_mat</column><text txtype="func"> = </text><column table="dims" column="kod_hist_mat_prm">dims.kod_hist_mat_prm</column></call>--\ur_hist_mat_ba
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*number*//*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">dims.vid_real as vid_real, /*number*/
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><column table="ur_hist_mat_dec" column="kod_ur_state" as="kod_ur_state_21" used="1" key="0" type="number" agg="max">ur_hist_mat_dec.kod_ur_state as kod_ur_state_21, /*number*/
</column><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real as vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp_a_d on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_mat_pp
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" title="" column-mandatory="1" editable="is_doc" editable-invert="1" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /**//*number*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_a_d on <column table="kod_dogplat_a_d" column="kod_mat">kod_dogplat_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp_a_d" column="kod_mat">kod_mat_pp_a_d.kod_mat</column></call>--\ur_dogplat
</query><query name="vv_all_deb_sf" as="kod_deb_sf1_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf1_a_d1 on <column table="kod_dogplat_a_d" column="kod_deb_sf">kod_dogplat_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf1_a_d1" column="kod_deb_sf">kod_deb_sf1_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf1_a_d1" column="kod_sf">kod_deb_sf1_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_a_d" column="vid_real">kod_dogplat_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_hist_mat_dec_a_d" column="kod_hist_mat" as="kod_hist_mat_prm" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat">ur_hist_mat_dec_a_d.kod_hist_mat, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" haskeys="1" used="1">left outer join
(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry" key="0" thissrc="dat_entry">a.dat_entry</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>2</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
ur_hist_mat_dec on <column table="ur_hist_mat_dec" column="kod_hist_mat">ur_hist_mat_dec.kod_hist_mat</column><text txtype="func"> = </text><column table="dims" column="kod_hist_mat_prm">dims.kod_hist_mat_prm</column></call>--\ur_hist_mat_dec
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*number*//*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">dims.vid_real as vid_real, /*number*/
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><column table="ur_inkasso" column="kod_ur_state" as="kod_ur_state_41" used="1" key="0" type="number" agg="max">ur_inkasso.kod_ur_state as kod_ur_state_41, /*number*/
</column><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_inkasso_a_d" column="kod_inkasso" as="kod_inkasso_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_inkasso_a_d" sourcecolumn="kod_inkasso">ur_inkasso_a_d.kod_inkasso as kod_inkasso_prm, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real as vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_inkasso" dimension="kod_inkasso" as="ur_inkasso_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_inkasso_a_d" haskeys="1" used="1">(
<select>--ur_inkasso
select <column table="a" column="kod_inkasso" type="number" key-dimension="kod_inkasso" is-fact="1" agg="max" as="kod_inkasso" fact="ur_inkasso_kod_inkasso" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_inkasso_a_d" sourcecolumn="kod_inkasso" used="1">a.kod_inkasso as kod_inkasso/*number*//*key*/
</column></select><from>
from <table name="ur_inkasso" as="a" dimension="kod_inkasso" used="1">ur_inkasso
a
--\ur_inkasso
</table></from>)
ur_inkasso_a_d
--\ur_inkasso
</query><query name="ur_dp_inkasso" dimension="kod_dp_inkasso" as="kod_dp_inkasso_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_inkasso_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dp_inkasso
select <column column="kod_dp_inkasso" table="a" type="number" as="kod_dp_inkasso" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_inkasso_a_d" sourcecolumn="kod_dp_inkasso" used="1">a.kod_dp_inkasso as kod_dp_inkasso, /*number*//*key*/
</column><column table="a" column="kod_inkasso" type="number" as="kod_inkasso" reference="ur_inkasso" refcol="kod_inkasso" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_inkasso_a_d" sourcecolumn="kod_inkasso" used="1">a.kod_inkasso as kod_inkasso, /*number*/
</column><column column="kod_dogplat" table="a" type="number" as="kod_dogplat" reference="ur_dogplat" refcol="kod_dogplat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_inkasso_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat/*number*/
</column></select><from>
from <table name="ur_dp_inkasso" as="a" table-code="1885" dimension="kod_dp_inkasso" used="1">ur_dp_inkasso
a
--\ur_dp_inkasso
</table></from><call function="=" type="bool">)
kod_dp_inkasso_a_d on <column table="kod_dp_inkasso_a_d" column="kod_inkasso">kod_dp_inkasso_a_d.kod_inkasso</column><text txtype="func"> = </text><column table="ur_inkasso_a_d" column="kod_inkasso">ur_inkasso_a_d.kod_inkasso</column></call>--\ur_dp_inkasso
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" title="" column-mandatory="1" editable="is_doc" editable-invert="1" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /**//*number*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_a_d on <column table="kod_dp_inkasso_a_d" column="kod_dogplat">kod_dp_inkasso_a_d.kod_dogplat</column><text txtype="func"> = </text><column table="kod_dogplat_a_d" column="kod_dogplat">kod_dogplat_a_d.kod_dogplat</column></call>--\ur_dogplat
</query><query name="vv_all_deb_sf" as="kod_deb_sf1_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf1_a_d1 on <column table="kod_dogplat_a_d" column="kod_deb_sf">kod_dogplat_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf1_a_d1" column="kod_deb_sf">kod_deb_sf1_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf1_a_d1" column="kod_sf">kod_deb_sf1_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_a_d" column="vid_real">kod_dogplat_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_inkasso_a_d" column="kod_inkasso" as="kod_inkasso_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_inkasso_a_d" sourcecolumn="kod_inkasso">ur_inkasso_a_d.kod_inkasso, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_inkasso" dimension="kod_inkasso" as="ur_inkasso" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_inkasso" haskeys="1" used="1">left outer join
(
<select>--ur_inkasso
select <column table="a" column="kod_inkasso" type="number" key-dimension="kod_inkasso" is-fact="1" agg="max" as="kod_inkasso" fact="ur_inkasso_kod_inkasso" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_inkasso" sourcecolumn="kod_inkasso" used="1">a.kod_inkasso as kod_inkasso, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_doc" type="date" title="Дата документа на инкассо" dimension="dat_ur" column-mandatory="1" column-default="today" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>4</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_inkasso" as="a" dimension="kod_inkasso" used="1">ur_inkasso
a
--\ur_inkasso
</table></from><call function="=" type="bool">)
ur_inkasso on <column table="ur_inkasso" column="kod_inkasso">ur_inkasso.kod_inkasso</column><text txtype="func"> = </text><column table="dims" column="kod_inkasso_prm">dims.kod_inkasso_prm</column></call>--\ur_inkasso
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*number*//*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">dims.vid_real as vid_real, /*number*/
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><column table="ur_kazn" column="kod_ur_state" as="kod_ur_state_51" used="1" key="0" type="number" agg="max">ur_kazn.kod_ur_state as kod_ur_state_51, /*number*/
</column><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_kazn_a_d" column="kod_kazn" as="kod_kazn_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_kazn_a_d" sourcecolumn="kod_kazn">ur_kazn_a_d.kod_kazn as kod_kazn_prm, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real as vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_kazn" dimension="kod_kazn" as="ur_kazn_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_kazn_a_d" haskeys="1" used="1">(
<select>--ur_kazn
select <column table="a" column="kod_kazn" type="number" key-dimension="kod_kazn" is-fact="1" agg="max" as="kod_kazn" fact="ur_kazn_kod_kazn" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_kazn_a_d" sourcecolumn="kod_kazn" used="1">a.kod_kazn as kod_kazn/*number*//*key*/
</column></select><from>
from <table name="ur_kazn" as="a" dimension="kod_kazn" used="1">ur_kazn
a
--\ur_kazn
</table></from>)
ur_kazn_a_d
--\ur_kazn
</query><query name="ur_dp_kazn" dimension="kod_dp_kazn" as="kod_dp_kazn_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_kazn_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dp_kazn
select <column column="kod_dp_kazn" table="a" type="number" as="kod_dp_kazn" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_kazn_a_d" sourcecolumn="kod_dp_kazn" used="1">a.kod_dp_kazn as kod_dp_kazn, /*number*//*key*/
</column><column table="a" column="kod_kazn" type="number" as="kod_kazn" reference="ur_kazn" refcol="kod_kazn" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_kazn_a_d" sourcecolumn="kod_kazn" used="1">a.kod_kazn as kod_kazn, /*number*/
</column><column column="kod_dogplat" table="a" type="number" as="kod_dogplat" reference="ur_dogplat" refcol="kod_dogplat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_kazn_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat/*number*/
</column></select><from>
from <table name="ur_dp_kazn" as="a" table-code="1886" dimension="kod_dp_kazn" used="1">ur_dp_kazn
a
--\ur_dp_kazn
</table></from><call function="=" type="bool">)
kod_dp_kazn_a_d on <column table="kod_dp_kazn_a_d" column="kod_kazn">kod_dp_kazn_a_d.kod_kazn</column><text txtype="func"> = </text><column table="ur_kazn_a_d" column="kod_kazn">ur_kazn_a_d.kod_kazn</column></call>--\ur_dp_kazn
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" title="" column-mandatory="1" editable="is_doc" editable-invert="1" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /**//*number*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_a_d on <column table="kod_dp_kazn_a_d" column="kod_dogplat">kod_dp_kazn_a_d.kod_dogplat</column><text txtype="func"> = </text><column table="kod_dogplat_a_d" column="kod_dogplat">kod_dogplat_a_d.kod_dogplat</column></call>--\ur_dogplat
</query><query name="vv_all_deb_sf" as="kod_deb_sf1_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf1_a_d1 on <column table="kod_dogplat_a_d" column="kod_deb_sf">kod_dogplat_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf1_a_d1" column="kod_deb_sf">kod_deb_sf1_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf1_a_d1" column="kod_sf">kod_deb_sf1_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_a_d" column="vid_real">kod_dogplat_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_kazn_a_d" column="kod_kazn" as="kod_kazn_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_kazn_a_d" sourcecolumn="kod_kazn">ur_kazn_a_d.kod_kazn, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_kazn" dimension="kod_kazn" as="ur_kazn" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_kazn" haskeys="1" used="1">left outer join
(
<select>--ur_kazn
select <column table="a" column="kod_kazn" type="number" key-dimension="kod_kazn" is-fact="1" agg="max" as="kod_kazn" fact="ur_kazn_kod_kazn" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_kazn" sourcecolumn="kod_kazn" used="1">a.kod_kazn as kod_kazn, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_doc" type="date" title="Дата документа в казначействе" dimension="dat_ur" column-mandatory="1" column-default="today" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>5</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_kazn" as="a" dimension="kod_kazn" used="1">ur_kazn
a
--\ur_kazn
</table></from><call function="=" type="bool">)
ur_kazn on <column table="ur_kazn" column="kod_kazn">ur_kazn.kod_kazn</column><text txtype="func"> = </text><column table="dims" column="kod_kazn_prm">dims.kod_kazn_prm</column></call>--\ur_kazn
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*number*//*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">dims.vid_real as vid_real, /*number*/
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><column table="ur_mat_isp" column="kod_ur_state" as="kod_ur_state_31" used="1" key="0" type="number" agg="max">ur_mat_isp.kod_ur_state as kod_ur_state_31, /*number*/
</column><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11/*number*/
</const></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_mat_isp_a_d" column="kod_mat" as="kod_mat_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d" sourcecolumn="kod_mat">ur_mat_isp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real as vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_mat_isp" dimension="kod_mat_isp" as="ur_mat_isp_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d" haskeys="1" used="1">(
<select>--ur_mat_isp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_isp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_isp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_isp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>2</text></const></call></where>)
ur_mat_isp_a_d
--\ur_mat_isp
</query><query name="ur_dp_isp" dimension="kod_dp_isp" as="kod_dp_isp_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_isp_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dp_isp
select <column column="kod_dp_isp" table="a" type="number" as="kod_dp_isp" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_isp_a_d" sourcecolumn="kod_dp_isp" used="1">a.kod_dp_isp as kod_dp_isp, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_isp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column column="kod_dogplat" table="a" type="number" as="kod_dogplat" reference="ur_dogplat" refcol="kod_dogplat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dp_isp_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat/*number*/
</column></select><from>
from <table name="ur_dp_isp" as="a" table-code="1836" dimension="kod_dp_isp" used="1">ur_dp_isp
a
--\ur_dp_isp
</table></from><call function="=" type="bool">)
kod_dp_isp_a_d on <column table="kod_dp_isp_a_d" column="kod_mat">kod_dp_isp_a_d.kod_mat</column><text txtype="func"> = </text><column table="ur_mat_isp_a_d" column="kod_mat">ur_mat_isp_a_d.kod_mat</column></call>--\ur_dp_isp
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" title="" column-mandatory="1" editable="is_doc" editable-invert="1" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /**//*number*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_a_d on <column table="kod_dp_isp_a_d" column="kod_dogplat">kod_dp_isp_a_d.kod_dogplat</column><text txtype="func"> = </text><column table="kod_dogplat_a_d" column="kod_dogplat">kod_dogplat_a_d.kod_dogplat</column></call>--\ur_dogplat
</query><query name="vv_all_deb_sf" as="kod_deb_sf1_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf1_a_d1 on <column table="kod_dogplat_a_d" column="kod_deb_sf">kod_dogplat_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf1_a_d1" column="kod_deb_sf">kod_deb_sf1_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf1_a_d1" column="kod_sf">kod_deb_sf1_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_a_d" column="vid_real">kod_dogplat_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_mat_isp_a_d" column="kod_mat" as="kod_mat_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_isp_a_d" sourcecolumn="kod_mat">ur_mat_isp_a_d.kod_mat, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_mat_isp" dimension="kod_mat_isp" as="ur_mat_isp" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_isp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_isp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_isp, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>3</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_isp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_isp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>2</text></const></call></where><call function="=" type="bool">)
ur_mat_isp on <column table="ur_mat_isp" column="kod_mat">ur_mat_isp.kod_mat</column><text txtype="func"> = </text><column table="dims" column="kod_mat_prm">dims.kod_mat_prm</column></call>--\ur_mat_isp
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query><query multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="dims" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">dims.kod_dog as kod_dog, /*number*//*key*/
</column><column table="dims" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">dims.kod_sf as kod_sf, /*number*/
</column><column table="dims" column="vid_real" as="vid_real" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">dims.vid_real as vid_real, /*number*/
</column><column table="dims" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">dims.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><column table="ur_mat_pp" column="kod_ur_state" as="kod_ur_state_11" used="1" key="0" type="number" agg="max">ur_mat_pp.kod_ur_state as kod_ur_state_11/*number*/
</column></select><from>
from <query as="dims" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims" used="1">(
<select>--
select <column table="ur_mat_pp_a_d" column="kod_mat" as="kod_mat_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d" sourcecolumn="kod_mat">ur_mat_pp_a_d.kod_mat as kod_mat_prm, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf as kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real as vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="ur_mat_pp_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_mat_pp_a_d
--\ur_mat_pp
</query><query name="ur_dogplat" dimension="kod_dogplat" as="kod_dogplat_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" haskeys="1" used="1">left outer join
(
<select>--ur_dogplat
select <column table="a" column="kod_dogplat" type="number" key-dimension="kod_dogplat" as="kod_dogplat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dogplat" used="1">a.kod_dogplat as kod_dogplat, /*number*//*key*/
</column><column table="a" column="vid_real" type="number" title="" column-mandatory="1" editable="is_doc" editable-invert="1" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /**//*number*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="kod_mat" type="number" as="kod_mat" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_deb_sf" type="number" comment="связь с СФ через VV_ALL_DEB_SF" as="kod_deb_sf" reference="vv_all_deb_sf" refcol="kod_deb_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf/*number*/
</column></select><from>
from <table name="ur_dogplat" as="a" dimension="kod_dogplat" used="1">ur_dogplat
a
--\ur_dogplat
</table></from><call function="=" type="bool">)
kod_dogplat_a_d on <column table="kod_dogplat_a_d" column="kod_mat">kod_dogplat_a_d.kod_mat</column><text txtype="func"> = </text><column table="ur_mat_pp_a_d" column="kod_mat">ur_mat_pp_a_d.kod_mat</column></call>--\ur_dogplat
</query><query name="vv_all_deb_sf" as="kod_deb_sf1_a_d1" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" haskeys="1" used="1">left outer join
(
<select>--vv_all_deb_sf
select <column table="a" column="kod_deb_sf" type="number" key="1" as="kod_deb_sf" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_deb_sf" used="1">a.kod_deb_sf as kod_deb_sf, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_deb_sf1_a_d1" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="vv_all_deb_sf" as="a" used="1">vv_all_deb_sf
a
--\vv_all_deb_sf
</table></from><call function="=" type="bool">)
kod_deb_sf1_a_d1 on <column table="kod_dogplat_a_d" column="kod_deb_sf">kod_dogplat_a_d.kod_deb_sf</column><text txtype="func"> = </text><column table="kod_deb_sf1_a_d1" column="kod_deb_sf">kod_deb_sf1_a_d1.kod_deb_sf</column></call>--\vv_all_deb_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_deb_sf1_a_d1" column="kod_sf">kod_deb_sf1_a_d1.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_dogplat_a_d" column="vid_real">kod_dogplat_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><group> group by
<column table="ur_mat_pp_a_d" column="kod_mat" as="kod_mat_prm" group="1" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/ur_mat_pp_a_d" sourcecolumn="kod_mat">ur_mat_pp_a_d.kod_mat, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="kod_dog" as="kod_dog" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="kod_dog">kod_dogplat_a_d.kod_dog, /*number*//*key*/
</column><column table="kod_sf" column="kod_sf" as="kod_sf" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf" sourcecolumn="kod_sf">kod_sf.kod_sf, /*number*//*key*/
</column><column table="kod_dogplat_a_d" column="vid_real" as="vid_real" group="1" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_dogplat_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_dogplat_a_d.vid_real, /*number*//*key*/
</column><column table="kod_sf" column="ym_vozn" as="ym_vozn" group="1" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/dims/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
dims
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="ur_mat_pp" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><call function="if" type="number" as="kod_ur_state" agg="max" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> end </text> as kod_ur_state/*number*/
</call></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/ur_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
ur_mat_pp on <column table="ur_mat_pp" column="kod_mat">ur_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="dims" column="kod_mat_prm">dims.kod_mat_prm</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">un.kod_dog, /*number*//*key*/
</column><column table="un" column="kod_sf" group="1" as="kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">un.kod_sf, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube" used="1">union all
(
<select>--
select <column table="qube" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_dog">qube.kod_dog as kod_dog, /*number*//*key*/
</column><const as="kod_sf" used="1" key="0"><text>null</text> as kod_sf, 
</const><column table="qube" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real as vid_real, /*number*/
</column><column table="qube" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_dog">un.kod_dog as kod_dog, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real as vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query as="un" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_ras" multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="kod_sf_a_d" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_dog">kod_sf_a_d.kod_dog as kod_dog, /*number*//*key*/
</column><column table="kod_sf_a_d" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_sf_a_d.vid_real as vid_real, /*number*/
</column><column table="kod_sf_a_d" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym">kod_sf_a_d.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*/
</column></select><from>
from <query name="sr_facras" dimension="kod_ras" as="sr_facras_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*/
</column></select><from>
from <table name="sr_facras" as="a" dimension="kod_ras" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras_a_d
--\sr_facras
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf_a_d" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="vid_real" used="1">a.vid_real as vid_real, /*number*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_a_d on <column table="sr_facras_a_d" column="kod_sf">sr_facras_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_a_d" column="kod_sf">kod_sf_a_d.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_sf_a_d" column="vid_real">kod_sf_a_d.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>0</const>) </call></call></where></qubecontent></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const>) </call></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="kod_dog">un.kod_dog, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf_a_d/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query><query as="qube" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube" used="1">union all
(
<select>--
select <column table="qube" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">qube.kod_dog as kod_dog, /*number*//*key*/
</column><column table="qube" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">qube.kod_sf as kod_sf, /*number*/
</column><column table="qube" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real as vid_real, /*number*/
</column><column table="qube" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn as ym_vozn, /*Отчетный период начисления*//*number*/
</column><const type="number" as="kod_ur_state_11" used="1" key="0"><text>null</text> as kod_ur_state_11, /*number*/
</const><const type="number" as="kod_ur_state_21" used="1" key="0"><text>null</text> as kod_ur_state_21, /*number*/
</const><const type="number" as="kod_ur_state_31" used="1" key="0"><text>null</text> as kod_ur_state_31, /*number*/
</const><const type="number" as="kod_ur_state_41" used="1" key="0"><text>null</text> as kod_ur_state_41, /*number*/
</const><const type="number" as="kod_ur_state_51" used="1" key="0"><text>null</text> as kod_ur_state_51, /*number*/
</const><const type="number" as="kod_ur_state_61" used="1" key="0"><text>null</text> as kod_ur_state_61/*number*/
</const></select><from>
from <query as="qube" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">un.kod_dog as kod_dog, /*number*//*key*/
</column><column table="un" column="kod_sf" group="1" as="kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">un.kod_sf as kod_sf, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real as vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></select><from>
from <query as="un" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_opl_sf" multiplicate-point="1" as="un" union="1" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="kod_sf" column="kod_dog" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">kod_sf.kod_dog as kod_dog, /*number*//*key*/
</column><column table="sr_opl_sf_a_d" column="kod_sf" as="kod_sf" used="1" key="0" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_opl_sf_a_d.kod_sf as kod_sf, /*number*/
</column><column table="kod_sf" column="vid_real" as="vid_real" used="1" key="0" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">kod_sf.vid_real as vid_real, /*number*/
</column><column table="sr_opl_sf_a_d" column="ym_vozn" as="ym_vozn" used="1" key="0" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym">sr_opl_sf_a_d.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*/
</column></select><from>
from <query name="sr_opl_sf" dimension="kod_opl_sf" as="sr_opl_sf_a_d" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" haskeys="1" used="1">(
<select>--sr_opl_sf
select <column table="a" column="kod_opl" type="number" key-dimension="kod_opl" as="kod_opl" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_opl" used="1">a.kod_opl as kod_opl, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="kod_sf" column="ym_vozn" dimension="ym_vozn" as="ym_vozn" key="0" used="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym">kod_sf.ym_vozn as ym_vozn/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_opl" as="a" dimension="kod_opl_sf" used="1">sr_opl
a
--\sr_opl
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><call function="if" type="number" as="ym_vozn" key="0" pth="" used="1" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" thissrc="vid_real">a.vid_real</column><text txtype="func"> = </text><const><text>0</text></const>) </call><text txtype="func"> then </text><column table="kod_sf_dop" column="rym" dgroup="min" dimension="ym_vozn2" as="rym" key="0" thissrc="rym">kod_sf_dop.rym</column><text txtype="func"> else </text><call function="nvl" pth="">(<text txtype="func"> nvl( </text><column table="kod_sf_old_neg" column="ym">kod_sf_old_neg.ym</column><text txtype="func"> , </text><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" thissrc="ym">a.ym</column><text txtype="func"> ) </text>) </call><text txtype="func"> end </text> as ym_vozn/*Отчетный период начисления*//*number*/
</call></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table><query name="sr_facvip_dop" as="kod_sf_dop" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop" haskeys="1" used="1">left outer join
(
<select>--sr_facvip_dop
select <column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf as kod_sf, /*number*//*key*/
</column><column table="sr_facras" column="rym" group="min" as="rym" key="0" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym">min(sr_facras.rym)  as rym/*number*/
</column></select><from>
from <query name="sr_facras" as="sr_facras" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" haskeys="1" used="1">(
<select>--sr_facras
select <column table="a" column="kod_ras" type="number" key-dimension="kod_ras" as="kod_ras" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_ras" used="1">a.kod_ras as kod_ras, /*number*//*key*/
</column><column table="a" column="kod_sf" type="number" as="kod_sf" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*/
</column><column table="a" column="rym" type="number" title="" as="rym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="rym" used="1">a.rym as rym/**//*number*/
</column></select><from>
from <table name="sr_facras" as="a" used="1">sr_facras
a
--\sr_facras
</table><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="vid_sf" type="number" as="vid_sf" reference="sk_vid_sf" refcol="vid_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras/kod_sf" sourcecolumn="vid_sf" used="1">a.vid_sf as vid_sf/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="kod_sf" column="vid_sf">kod_sf.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
sr_facras
--\sr_facras
</query></from><group> group by
<column table="sr_facras" column="kod_sf" group="1" index="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_dop/sr_facras" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">sr_facras.kod_sf/*number*//*key*/
</column></group><call function="=" type="bool">)
kod_sf_dop on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_dop" column="kod_sf">kod_sf_dop.kod_sf</column></call>--\sr_facvip_dop
</query><query name="vv_sr_facvip_rec_info_m" as="kod_sf_rec_info" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_rec_info" haskeys="1" used="1">left outer join
(
<select>--vv_sr_facvip_rec_info_m
select <column table="a" column="kod_sf" type="number" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_sf_old_neg" type="number" as="kod_sf_old_neg" reference="sr_facvip" refcol="kod_sf" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_rec_info" sourcecolumn="kod_sf_old_neg" used="1">a.kod_sf_old_neg as kod_sf_old_neg/*number*/
</column></select><from>
from <table name="vv_sr_facvip_rec_info_m" as="a" used="1">vv_sr_facvip_rec_info_m
a
--\vv_sr_facvip_rec_info_m
</table></from><call function="=" type="bool">)
kod_sf_rec_info on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_rec_info" column="kod_sf">kod_sf_rec_info.kod_sf</column></call>--\vv_sr_facvip_rec_info_m
</query><query name="sr_facvip" as="kod_sf_old_neg" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="ym" type="number" title="Отчетный период начисления" dimension="ym" format="F2" as="ym" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym" used="1">a.ym as ym/*Отчетный период начисления*//*number*/
</column></select><from>
from <table name="sr_facvip" as="a" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_old_neg on <column table="kod_sf_rec_info" column="kod_sf_old_neg">kod_sf_rec_info.kod_sf_old_neg</column><text txtype="func"> = </text><column table="kod_sf_old_neg" column="kod_sf">kod_sf_old_neg.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="kod_type_opl" type="number" as="kod_type_opl" key="0" thissrc="kod_type_opl">a.kod_type_opl</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>0</text></const><text txtype="func"> , </text><const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const><text txtype="func"> , </text><const><text>4</text></const>) </call></call></where>)
sr_opl_sf_a_d
--\sr_opl_sf
</query><query name="sr_facvip" dimension="kod_sf" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf, /*number*//*key*/
</column><column table="a" column="kod_dog" type="number" as="kod_dog" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*/
</column><column table="a" column="vid_real" type="number" fact="sf_vid_real" agg="max" as="vid_real" reference="sk_vid_real" refcol="vid_real" key="0" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/*number*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="sr_opl_sf_a_d" column="kod_sf">sr_opl_sf_a_d.kod_sf</column><text txtype="func"> = </text><column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column></call>--\sr_facvip
</query><query name="sk_vid_real" dimension="vid_real" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="kod_sf" column="vid_real">kod_sf.vid_real</column><text txtype="func"> = </text><column table="vid_real" column="vid_real">vid_real.vid_real</column></call>--\sk_vid_real
</query><qubecontent><where>where
<call function="in" condsource="sr_facvip_norm_av1"><column table="vid_real" column="vid_real">vid_real.vid_real</column><call function="array">(<const>2</const><const>3</const>) </call></call></where></qubecontent></from><where>where
<call function="in" pth="" type="bool"><column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_dog" group="1" as="kod_dog" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">un.kod_dog, /*number*//*key*/
</column><column table="un" column="kod_sf" group="1" as="kod_sf" used="1" key="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">un.kod_sf, /*number*//*key*/
</column><column table="un" column="vid_real" group="1" as="vid_real" used="1" key="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">un.vid_real, /*number*//*key*/
</column><column table="un" column="ym_vozn" group="1" as="ym_vozn" used="1" key="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_opl_sf_a_d/kod_sf/kod_sf_old_neg" sourcecolumn="ym">un.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_dog" group="1" as="kod_dog" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="kod_dog">qube.kod_dog, /*number*//*key*/
</column><column table="qube" column="kod_sf" group="1" as="kod_sf" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/sr_facras_a_d" sourcecolumn="kod_sf" reference="sr_facvip" refcol="kod_sf">qube.kod_sf, /*number*//*key*/
</column><column table="qube" column="vid_real" group="1" as="vid_real" key="1" fixed="1" used="1" type="number" agg="max" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf" sourcecolumn="vid_real" reference="sk_vid_real" refcol="vid_real">qube.vid_real, /*number*//*key*/
</column><column table="qube" column="ym_vozn" group="1" as="ym_vozn" key="1" fixed="1" used="1" type="number" title="Отчетный период начисления" format="F2" sourcetable="./a/a/kod_sf_norm_av/a/qube/qube/qube/qube/qube/un/un/kod_sf/kod_sf_old_neg" sourcecolumn="ym">qube.ym_vozn/*Отчетный период начисления*//*number*//*key*/
</column></group>)
qube
--\
</query><query name="sk_vid_real" dimension="vid_real" link-mp-point="1" as="vid_real" join="left outer" path="./a/a/kod_sf_norm_av/a/vid_real" haskeys="1" used="1">left outer join
(
<select>--sk_vid_real
select <column table="a" column="vid_real" type="number" title="" as="vid_real" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/vid_real" sourcecolumn="vid_real" used="1">a.vid_real as vid_real/**//*number*//*key*/
</column></select><from>
from <table name="sk_vid_real" as="a" title="Вид реализации" dimension="vid_real" used="1">sk_vid_real
a
--\sk_vid_real
</table></from><call function="=" type="bool">)
vid_real on <column table="vid_real" column="vid_real">vid_real.vid_real</column><text txtype="func"> = </text><column table="qube" column="vid_real">qube.vid_real</column></call>--\sk_vid_real
</query><query name="sr_facvip" dimension="kod_sf" link-mp-point="1" as="kod_sf" join="left outer" path="./a/a/kod_sf_norm_av/a/kod_sf" haskeys="1" used="1">left outer join
(
<select>--sr_facvip
select <column table="a" column="kod_sf" type="number" key-dimension="kod_sf" as="kod_sf" key="1" fixed="1" sourcetable="./a/a/kod_sf_norm_av/a/kod_sf" sourcecolumn="kod_sf" used="1">a.kod_sf as kod_sf/*number*//*key*/
</column></select><from>
from <table name="sr_facvip" as="a" dimension="kod_sf" used="1">sr_facvip
a
--\sr_facvip
</table></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf on <column table="kod_sf" column="kod_sf">kod_sf.kod_sf</column><text txtype="func"> = </text><column table="qube" column="kod_sf">qube.kod_sf</column></call>--\sr_facvip
</query></from>)
a
--\sr_facvip_norm_av1
</query></from><where>where
<call function="in" pth="" type="bool"><column table="a" column="vid_real">a.vid_real</column><text txtype="func"> in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>3</text></const>) </call></call></where><call function="=" type="bool">)
kod_sf_norm_av on <column table="a" column="kod_sf">a.kod_sf</column><text txtype="func"> = </text><column table="kod_sf_norm_av" column="kod_sf">kod_sf_norm_av.kod_sf</column></call>--\sr_facvip_norm_av
</query></from><where>where
<call function="not in" pth="" type="bool"><column table="a" column="vid_sf">a.vid_sf</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text>2</text></const><text txtype="func"> , </text><const><text>9</text></const>) </call></call></where>)
a
--\sr_facvip
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_sf" as="kod_sf" title="" key="1" thissrc="kod_sf">a.kod_sf</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_sf" as="kod_sf" title="" key="1" thissrc="kod_sf">a.kod_sf</column><text txtype="func"> ) like lower( </text><const><text>:kod_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_sf" as="num_sf" title="Номер документа начисления" thissrc="num_sf">a.num_sf</column><text txtype="func"> ) like lower( </text><const><text>:num_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_sf" as="dat_sf" title="Дата документа начисления" thissrc="dat_sf">a.dat_sf</column><text txtype="func"> ) like lower( </text><const><text>:dat_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_rep" as="dat_rep" title="Дата документа начисления" thissrc="dat_rep">a.dat_rep</column><text txtype="func"> ) like lower( </text><const><text>:dat_rep_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym" as="ym" title="Отчетный период начисления" thissrc="ym">a.ym</column><text txtype="func"> ) like lower( </text><const><text>:ym_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nom_sf" as="nom_sf" title="Номер документа начисления" thissrc="nom_sf">a.nom_sf</column><text txtype="func"> ) like lower( </text><const><text>:nom_sf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Документ начисления" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_bzad" as="dat_bzad" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_bzad">a.dat_bzad</column><text txtype="func"> ) like lower( </text><const><text>:dat_bzad_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_bzad_ksf" as="dat_bzad_ksf" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_bzad_ksf">a.dat_bzad_ksf</column><text txtype="func"> ) like lower( </text><const><text>:dat_bzad_ksf_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_res_nal_45" as="dat_res_nal_45" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_res_nal_45">a.dat_res_nal_45</column><text txtype="func"> ) like lower( </text><const><text>:dat_res_nal_45_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_res_nal_90" as="dat_res_nal_90" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_res_nal_90">a.dat_res_nal_90</column><text txtype="func"> ) like lower( </text><const><text>:dat_res_nal_90_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_res_buh" as="dat_res_buh" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_res_buh">a.dat_res_buh</column><text txtype="func"> ) like lower( </text><const><text>:dat_res_buh_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_bzad_max" as="dat_bzad_max" title="Дата возникновения обязательства по погашению задолженности" thissrc="dat_bzad_max">a.dat_bzad_max</column><text txtype="func"> ) like lower( </text><const><text>:dat_bzad_max_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_bzad_uved_kaz_el" as="dat_bzad_uved_kaz_el" title="Дата документа на оплату" thissrc="dat_bzad_uved_kaz_el">a.dat_bzad_uved_kaz_el</column><text txtype="func"> ) like lower( </text><const><text>:dat_bzad_uved_kaz_el_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_big_avans" as="is_big_avans" title="Признак аванс больше чем 30, 40" thissrc="is_big_avans">a.is_big_avans</column><text txtype="func"> ) like lower( </text><const><text>:is_big_avans_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_ezad_kaz" as="dat_ezad_kaz" title="Дата возникновения задолженности с учетом авансов 30,40% " thissrc="dat_ezad_kaz">a.dat_ezad_kaz</column><text txtype="func"> ) like lower( </text><const><text>:dat_ezad_kaz_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nachisl" as="nachisl" title="Начислено" thissrc="nachisl">a.nachisl</column><text txtype="func"> ) like lower( </text><const><text>:nachisl_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym_vozn" as="ym_vozn" title="Отчетный период начисления" thissrc="ym_vozn">a.ym_vozn</column><text txtype="func"> ) like lower( </text><const><text>:ym_vozn_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_vozn_otch" as="dat_vozn_otch" title="Отчетный период начисления" thissrc="dat_vozn_otch">a.dat_vozn_otch</column><text txtype="func"> ) like lower( </text><const><text>:dat_vozn_otch_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nachisl_p" as="nachisl_p" title="Начислено" thissrc="nachisl_p">a.nachisl_p</column><text txtype="func"> ) like lower( </text><const><text>:nachisl_p_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nachisl_m" as="nachisl_m" title="Начислено" thissrc="nachisl_m">a.nachisl_m</column><text txtype="func"> ) like lower( </text><const><text>:nachisl_m_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym_min" as="ym_min" title="Период начисления с" thissrc="ym_min">a.ym_min</column><text txtype="func"> ) like lower( </text><const><text>:ym_min_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym_max" as="ym_max" title="Период начисления по" thissrc="ym_max">a.ym_max</column><text txtype="func"> ) like lower( </text><const><text>:ym_max_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_dolg_norm" as="dat_dolg_norm" title="Дата документа начисления" thissrc="dat_dolg_norm">a.dat_dolg_norm</column><text txtype="func"> ) like lower( </text><const><text>:dat_dolg_norm_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_vozn_norm" as="dat_vozn_norm" title="Дата документа начисления" thissrc="dat_vozn_norm">a.dat_vozn_norm</column><text txtype="func"> ) like lower( </text><const><text>:dat_vozn_norm_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="sf_old_ym" as="sf_old_ym" title="Отчетный период начисления" thissrc="sf_old_ym">a.sf_old_ym</column><text txtype="func"> ) like lower( </text><const><text>:sf_old_ym_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_ur_state" as="kod_ur_state" title="Код юр. статуса" thissrc="kod_ur_state">a.kod_ur_state</column><text txtype="func"> ) like lower( </text><const><text>:kod_ur_state_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ras_name" as="ras_name" title="Наименование" thissrc="ras_name">a.ras_name</column><text txtype="func"> ) like lower( </text><const><text>:ras_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_sf_recalc" as="dat_sf_recalc" title="Дата документа начисления" thissrc="dat_sf_recalc">a.dat_sf_recalc</column><text txtype="func"> ) like lower( </text><const><text>:dat_sf_recalc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" timestamp="20.05.2023 11:07:55" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sr_facvip.xml" elid="2917" ord="2917" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" timestamp="20.05.2023 11:07:55" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\sr_facvip.xml" elid="2917" ord="2917" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_sf_filter" type="string" />
                    <param name="num_sf_filter" type="string" />
                    <param name="dat_sf_filter" type="string" />
                    <param name="dat_rep_filter" type="string" />
                    <param name="ym_filter" type="string" />
                    <param name="nom_sf_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="dat_bzad_filter" type="string" />
                    <param name="dat_bzad_ksf_filter" type="string" />
                    <param name="dat_res_nal_45_filter" type="string" />
                    <param name="dat_res_nal_90_filter" type="string" />
                    <param name="dat_res_buh_filter" type="string" />
                    <param name="dat_bzad_max_filter" type="string" />
                    <param name="dat_bzad_uved_kaz_el_filter" type="string" />
                    <param name="is_big_avans_filter" type="string" />
                    <param name="dat_ezad_kaz_filter" type="string" />
                    <param name="nachisl_filter" type="string" />
                    <param name="ym_vozn_filter" type="string" />
                    <param name="dat_vozn_otch_filter" type="string" />
                    <param name="nachisl_p_filter" type="string" />
                    <param name="nachisl_m_filter" type="string" />
                    <param name="ym_min_filter" type="string" />
                    <param name="ym_max_filter" type="string" />
                    <param name="dat_dolg_norm_filter" type="string" />
                    <param name="dat_vozn_norm_filter" type="string" />
                    <param name="sf_old_ym_filter" type="string" />
                    <param name="kod_ur_state_filter" type="string" />
                    <param name="ras_name_filter" type="string" />
                    <param name="dat_sf_recalc_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_sf" as="kod_sf" title="" key="1" />
                    <column table="a" column="num_sf" as="num_sf" title="Номер документа начисления" />
                    <column table="a" column="dat_sf" as="dat_sf" title="Дата документа начисления" />
                    <column table="a" column="dat_rep" as="dat_rep" title="Дата документа начисления" />
                    <column table="a" column="ym" as="ym" title="Отчетный период начисления" />
                    <column table="a" column="nom_sf" as="nom_sf" title="Номер документа начисления" />
                    <column table="a" column="name" as="name" title="Документ начисления" />
                    <column table="a" column="dat_bzad" as="dat_bzad" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_bzad_ksf" as="dat_bzad_ksf" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_res_nal_45" as="dat_res_nal_45" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_res_nal_90" as="dat_res_nal_90" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_res_buh" as="dat_res_buh" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_bzad_max" as="dat_bzad_max" title="Дата возникновения обязательства по погашению задолженности" />
                    <column table="a" column="dat_bzad_uved_kaz_el" as="dat_bzad_uved_kaz_el" title="Дата документа на оплату" />
                    <column table="a" column="is_big_avans" as="is_big_avans" title="Признак аванс больше чем 30, 40" />
                    <column table="a" column="dat_ezad_kaz" as="dat_ezad_kaz" title="Дата возникновения задолженности с учетом авансов 30,40% " />
                    <column table="a" column="nachisl" as="nachisl" title="Начислено" />
                    <column table="a" column="ym_vozn" as="ym_vozn" title="Отчетный период начисления" />
                    <column table="a" column="dat_vozn_otch" as="dat_vozn_otch" title="Отчетный период начисления" />
                    <column table="a" column="nachisl_p" as="nachisl_p" title="Начислено" />
                    <column table="a" column="nachisl_m" as="nachisl_m" title="Начислено" />
                    <column table="a" column="ym_min" as="ym_min" title="Период начисления с" />
                    <column table="a" column="ym_max" as="ym_max" title="Период начисления по" />
                    <column table="a" column="dat_dolg_norm" as="dat_dolg_norm" title="Дата документа начисления" />
                    <column table="a" column="dat_vozn_norm" as="dat_vozn_norm" title="Дата документа начисления" />
                    <column table="a" column="sf_old_ym" as="sf_old_ym" title="Отчетный период начисления" />
                    <column table="a" column="kod_ur_state" as="kod_ur_state" title="Код юр. статуса" />
                    <column table="a" column="ras_name" as="ras_name" title="Наименование" />
                    <column table="a" column="dat_sf_recalc" as="dat_sf_recalc" title="Дата документа начисления" />
                  </select>
                  <from>
                    <query name="sr_facvip" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_sf" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_sf" />
                        <useparam name="kod_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_sf" />
                        <useparam name="num_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_sf" />
                        <useparam name="dat_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_rep" />
                        <useparam name="dat_rep_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym" />
                        <useparam name="ym_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nom_sf" />
                        <useparam name="nom_sf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_bzad" />
                        <useparam name="dat_bzad_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_bzad_ksf" />
                        <useparam name="dat_bzad_ksf_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_res_nal_45" />
                        <useparam name="dat_res_nal_45_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_res_nal_90" />
                        <useparam name="dat_res_nal_90_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_res_buh" />
                        <useparam name="dat_res_buh_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_bzad_max" />
                        <useparam name="dat_bzad_max_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_bzad_uved_kaz_el" />
                        <useparam name="dat_bzad_uved_kaz_el_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_big_avans" />
                        <useparam name="is_big_avans_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_ezad_kaz" />
                        <useparam name="dat_ezad_kaz_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nachisl" />
                        <useparam name="nachisl_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym_vozn" />
                        <useparam name="ym_vozn_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_vozn_otch" />
                        <useparam name="dat_vozn_otch_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nachisl_p" />
                        <useparam name="nachisl_p_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nachisl_m" />
                        <useparam name="nachisl_m_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym_min" />
                        <useparam name="ym_min_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym_max" />
                        <useparam name="ym_max_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_dolg_norm" />
                        <useparam name="dat_dolg_norm_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_vozn_norm" />
                        <useparam name="dat_vozn_norm_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="sf_old_ym" />
                        <useparam name="sf_old_ym_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_ur_state" />
                        <useparam name="kod_ur_state_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ras_name" />
                        <useparam name="ras_name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_sf_recalc" />
                        <useparam name="dat_sf_recalc_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_sf_filter" />
                    <useparam name="num_sf_filter" />
                    <useparam name="dat_sf_filter" />
                    <useparam name="dat_rep_filter" />
                    <useparam name="ym_filter" />
                    <useparam name="nom_sf_filter" />
                    <useparam name="name_filter" />
                    <useparam name="dat_bzad_filter" />
                    <useparam name="dat_bzad_ksf_filter" />
                    <useparam name="dat_res_nal_45_filter" />
                    <useparam name="dat_res_nal_90_filter" />
                    <useparam name="dat_res_buh_filter" />
                    <useparam name="dat_bzad_max_filter" />
                    <useparam name="dat_bzad_uved_kaz_el_filter" />
                    <useparam name="is_big_avans_filter" />
                    <useparam name="dat_ezad_kaz_filter" />
                    <useparam name="nachisl_filter" />
                    <useparam name="ym_vozn_filter" />
                    <useparam name="dat_vozn_otch_filter" />
                    <useparam name="nachisl_p_filter" />
                    <useparam name="nachisl_m_filter" />
                    <useparam name="ym_min_filter" />
                    <useparam name="ym_max_filter" />
                    <useparam name="dat_dolg_norm_filter" />
                    <useparam name="dat_vozn_norm_filter" />
                    <useparam name="sf_old_ym_filter" />
                    <useparam name="kod_ur_state_filter" />
                    <useparam name="ras_name_filter" />
                    <useparam name="dat_sf_recalc_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_sf_filter" type="string">
                  <const>:kod_sf_filter </const>
                </param>
                <param name="num_sf_filter" type="string">
                  <const>:num_sf_filter </const>
                </param>
                <param name="dat_sf_filter" type="string">
                  <const>:dat_sf_filter </const>
                </param>
                <param name="dat_rep_filter" type="string">
                  <const>:dat_rep_filter </const>
                </param>
                <param name="ym_filter" type="string">
                  <const>:ym_filter </const>
                </param>
                <param name="nom_sf_filter" type="string">
                  <const>:nom_sf_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="dat_bzad_filter" type="string">
                  <const>:dat_bzad_filter </const>
                </param>
                <param name="dat_bzad_ksf_filter" type="string">
                  <const>:dat_bzad_ksf_filter </const>
                </param>
                <param name="dat_res_nal_45_filter" type="string">
                  <const>:dat_res_nal_45_filter </const>
                </param>
                <param name="dat_res_nal_90_filter" type="string">
                  <const>:dat_res_nal_90_filter </const>
                </param>
                <param name="dat_res_buh_filter" type="string">
                  <const>:dat_res_buh_filter </const>
                </param>
                <param name="dat_bzad_max_filter" type="string">
                  <const>:dat_bzad_max_filter </const>
                </param>
                <param name="dat_bzad_uved_kaz_el_filter" type="string">
                  <const>:dat_bzad_uved_kaz_el_filter </const>
                </param>
                <param name="is_big_avans_filter" type="string">
                  <const>:is_big_avans_filter </const>
                </param>
                <param name="dat_ezad_kaz_filter" type="string">
                  <const>:dat_ezad_kaz_filter </const>
                </param>
                <param name="nachisl_filter" type="string">
                  <const>:nachisl_filter </const>
                </param>
                <param name="ym_vozn_filter" type="string">
                  <const>:ym_vozn_filter </const>
                </param>
                <param name="dat_vozn_otch_filter" type="string">
                  <const>:dat_vozn_otch_filter </const>
                </param>
                <param name="nachisl_p_filter" type="string">
                  <const>:nachisl_p_filter </const>
                </param>
                <param name="nachisl_m_filter" type="string">
                  <const>:nachisl_m_filter </const>
                </param>
                <param name="ym_min_filter" type="string">
                  <const>:ym_min_filter </const>
                </param>
                <param name="ym_max_filter" type="string">
                  <const>:ym_max_filter </const>
                </param>
                <param name="dat_dolg_norm_filter" type="string">
                  <const>:dat_dolg_norm_filter </const>
                </param>
                <param name="dat_vozn_norm_filter" type="string">
                  <const>:dat_vozn_norm_filter </const>
                </param>
                <param name="sf_old_ym_filter" type="string">
                  <const>:sf_old_ym_filter </const>
                </param>
                <param name="kod_ur_state_filter" type="string">
                  <const>:kod_ur_state_filter </const>
                </param>
                <param name="ras_name_filter" type="string">
                  <const>:ras_name_filter </const>
                </param>
                <param name="dat_sf_recalc_filter" type="string">
                  <const>:dat_sf_recalc_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod as kod 
,:kod_peni_period as kod_peni_period 
,:kod_sf as kod_sf 
 
from dual ) 
 
loop 
insert into vr_peni_period 
(ym 
,kod_peni_period 
,kod_sf 
) 
 values  
(r.kod 
,r.kod_peni_period 
,r.kod_sf 
) 
 returning  
kod_peni_period into :kod_peni_period; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_peni_period where kod_peni_period=:kod_peni_period</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='b' 
and 
names=:form_id 
and 
f2=:kod_peni_period; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod as kod 
,:kod_peni_period as kod_peni_period 
,:kod_sf as kod_sf 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
) 
 values  
('b' 
,:form_id 
,:kod_peni_period 
,:row_state_id 
,r.kod 
,r.kod_peni_period 
,r.kod_sf 
); 
end loop; 
else 
for r in  
 ( select  
:kod as kod 
,:kod_peni_period as kod_peni_period 
,:kod_sf as kod_sf 
,a.u_m 
,a.d_m 
 
from vr_peni_period a  where kod_peni_period=:kod_peni_period) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,s1 
,d1 
) 
 values  
('b' 
,:form_id 
,:kod_peni_period 
,:row_state_id 
,r.kod 
,r.kod_peni_period 
,r.kod_sf 
,r.u_m 
,r.d_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='b' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_peni_period set  
(ym 
,kod_peni_period 
,kod_sf 
) 
= 
 ( select  
:kod as kod 
,:kod_peni_period as kod_peni_period 
,:kod_sf as kod_sf 
 
from dual ) 
 
where 
kod_peni_period=:kod_peni_period 
;
end;
</update-text>
      <scheme>
        <table name="vr_peni_period" as="b">
          <columns>
            <column name="kod" type="number" title="период" visible="0" />
            <column name="name" type="string" title="Период" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_peni_period" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod" type="number" title="период" visible="0" />
            <column name="name" type="string" title="Период" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_peni_period" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sf" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_peni_period_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_peni_period_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select b.ym as kod, /*период*//*number*/
c.name as name, /*Период*//*string*/
b.is_new as is_new, /*number*/
b.is_not_new as is_not_new, /*number*/
b.kod_peni_period as kod_peni_period, /*number*//*key*/
b.kod_sf as kod_sf/*с/ф*//*number*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf, /*с/ф*//*number*/
a.ym as ym, /*период*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_peni_period as kod_peni_period,a.kod_sf as kod_sf,a.ym as ym,0 as is_new,1 as is_not_new  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n3 as kod_sf,t.n1 as ym,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
a
--\(select a.kod_peni_period as kod_peni_period,a.kod_sf as kod_sf,a.ym as ym,0 as is_new,1 as is_not_new  from vr_peni_period a where not exists (select * from rr_temp t where t.skod ='b' and t.names=:form_id  and a.kod_peni_period=t.f2 ) and   a.kod_peni_period in :kod_peni_period_prm   union all  select t.n2 as kod_peni_period,t.n3 as kod_sf,t.n1 as ym,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='b' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_peni_period_prm )
)
b
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
c on b.ym = c.ym--\spr_time_ym

order by name--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="a" auto-refresh="1" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="check1" multi-select-target="b" update-target="spr_time_ym" key="ym" is-ms-upd="1" is-top="1">
      <select-text>
--
select null as check1, /*number*/
a.name as name, /*Период*//*string*/
a.ym as ym/*number*//*key*/

from (
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre

order by ym desc)
a
--\spr_time_ym
where
(a.ym &lt;= :sf_ym )  and (a.ym &gt;= (:sf_ym  - 3) ) 
order by name desc--\
</select-text>
      <columns>
        <column name="check1" table="a" type="number" title="Выбор" ColumnEditable="1" is-user-editable="1" is-updateable-ext="1" is-refreshed="1" update-target="check1" temp-col-name="n1" />
        <column name="name" table="a" type="string" title="Период" ColumnEditable="0" is-refreshed="1" />
        <column name="ym" table="a" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
 
from dual ) 
 
loop 
insert into spr_time_ym 
() 
 values  
() 
 returning  
ym into :ym; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from spr_time_ym where ym=:ym</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='a' 
and 
names=:form_id 
and 
f2=:ym; 
if :row_state_id=1  then 
for r in  
 ( select  
:check1 as check1 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('a' 
,:form_id 
,:ym 
,:row_state_id 
,r.check1 
); 
end loop; 
else 
for r in  
 ( select  
:check1 as check1 
 
from spr_time_ym a  where ym=:ym) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('a' 
,:form_id 
,:ym 
,:row_state_id 
,r.check1 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='a' and names=:form_id</clear-temp-text>
      <update-text>begin
update spr_time_ym set  
() 
= 
 ( select  
 
from dual ) 
 
where 
ym=:ym 
;
end;
</update-text>
      <scheme>
        <table name="spr_time_ym" as="a">
          <columns>
            <column name="check1" type="number" title="Выбор" />
            <column name="name" type="string" title="Период" />
            <column name="ym" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="check1" type="number" title="Выбор" />
            <column name="name" type="string" title="Период" />
            <column name="ym" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
    </table>
  </dataset>
</root>