<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_hist_mat_bnk" title="[:ur_hist_mat.nump] [:ur_hist_mat.namep]" show-toolbar="1" form-size="932;732" security-id="asuse_ur_hist_mat" with-behavior="0" timestamp="28.12.2023 14:56:06" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_hist_mat_bnk.xml" elid="272" ord="272" leaf="0" lvl="2" pelid="">
    <field table="f10" name="val" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="53802809" />
    <field table="ur_hist_mat" name="kod_mat" title="Материалы переданные в суд" controlType="UICombo" rows-limit="100" id="2930202" />
    <field table="ur_hist_mat" name="decision" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="43656669" />
    <field table="ur_hist_mat" name="not_vvod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="23689264" />
    <field table="ur_hist_mat" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="38259537" />
    <field table="ur_hist_mat" name="nump" title="Код абонента" controlType="UIText" rows-limit="100" id="29750671" />
    <field table="ur_hist_mat" name="namep" title="Наименование абонента" controlType="UIText" rows-limit="100" id="19100871" />
    <fieldgroup title="Иск" id="573928">
      <field table="ur_mat" name="num_delo" title="Номер дела" controlType="UIText" rows-limit="100" width-perc="50" id="34365927" />
      <field table="ur_mat" name="dat_prin" title="Дата принятия документов в суде" controlType="UIDate" rows-limit="100" width-perc="50" id="31344750" />
    </fieldgroup>
    <fieldgroup title="Этап рассмотрения" id="38162166">
      <field table="ur_hist_mat" name="kod_sdp" title="" controlType="UICombo" rows-limit="100" id="30418236" />
      <field table="ur_hist_mat" name="dat_post" title="Дата прин. суд. акта" controlType="UIDate" rows-limit="100" width-perc="50" id="15241579" />
      <field table="ur_hist_mat" name="result_kod_post" title="Судебный акт" controlType="UICombo" rows-limit="100" width-perc="50" id="65250536">
        <listquery id="59942248">
          <query name="us_post_list" id="51779185">
            <withparams id="27567270">
              <useparam name="folder_kod_sdp" id="14448391" />
            </withparams>
          </query>
        </listquery>
      </field>
      <field table="ur_hist_mat" name="kod_result" title="Результат рассмотрения" controlType="UICombo" rows-limit="0" width-perc="50" id="22822553" />
      <field table="ur_hist_mat" name="dat_mor" title="Признать задолженность мораторной с" controlType="UIDate" rows-limit="100" width-perc="50" id="19587399" />
      <field table="ur_hist_mat" name="dat_mor_out" title="Дата искл. задолж. из реестра" controlType="UIDate" rows-limit="100" width-perc="50" id="31733575" />
      <field table="ur_hist_mat" name="ukaz" title="Указания" controlType="UITextEx" rows-limit="100" width-perc="50" id="2637915" />
      <field table="ur_hist_mat" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="27928985" />
      <field table="ur_hist_mat" name="kod_scan" title="Файл" controlType="UIFile" rows-limit="100" id="2259307" />
    </fieldgroup>
    <fieldgroup noborder="1" visible="decision" visible-invert="1" id="39657912">
      <uicommand action-type="custom" title="Счет на гос. пошлину" visible="kod_sf_gp" id="41972999">
        <useaction action-type="dynamic-form" call="sr_facvip_ur" modal="1" id="32482349">
          <useparam name="kod_mat" id="9328921" />
          <useparam name="kod_sf_gp" id="24670769" />
        </useaction>
        <useaction action-type="refresh-table" object="dp_gp" id="43842912" />
      </uicommand>
      <uicommand action-type="custom" title="Создать счет на гос. пошлину" visible="kod_sf_gp" visible-invert="1" id="58993691">
        <useaction action-type="dynamic-form" call="create_ur_sf" modal="1" id="23887771">
          <useparam name="kod_mat" id="9976475" />
          <useparam name="gp_otv" id="58991158" />
          <const id="39523655">9</const>
          <const id="14378967">49</const>
        </useaction>
        <useaction action-type="refresh-table" object="dp_gp" id="58092312" />
      </uicommand>
    </fieldgroup>
    <fieldgroup title="Сумма присужденная" visible="decision" id="35280760">
      <fieldgroup width-perc="50" noborder="1" id="55806853">
        <field table="ur_mat" name="ur_dp_priz_all" title="Всего" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="50" id="21494559" />
        <field table="ur_mat" name="ur_dp_priz_osn" title="Осн. реал." controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="50" id="47348812" />
        <uicommand action-type="custom" title="Ввод сумм по документам" id="18779829">
          <useaction object="ur_mat" name="form_ur_dogplat_doc_view_prizn" modal="1" width-perc="100" id="3876972">
            <useparam name="p_kod_sdp" id="60154904" />
            <useparam name="kodp" id="34093352" />
            <useparam name="dat_post" id="62117194" />
          </useaction>
          <useaction action-type="refresh-table" object="dp_peni" id="4152951" />
        </uicommand>
      </fieldgroup>
      <fieldgroup width-perc="25" noborder="1" id="27915425">
        <field table="ur_mat" name="ur_dp_priz_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="4973216" />
        <field table="ur_hist_mat" name="peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="11120603" />
        <field table="dp_peni" name="kod_sf_peni" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="32153252" />
        <uicommand action-type="custom" title="Создать счет на проценты (пени)" side="Right" visible="kod_sf_peni" visible-invert="1" id="25635297">
          <useaction action-type="dynamic-form" call="create_ur_sf" modal="1" id="31162546">
            <useparam name="kod_mat" id="57065290" />
            <useparam name="peni_hand" id="4561522" />
            <const id="40434090">7</const>
            <const id="62632016">-44</const>
          </useaction>
          <useaction action-type="refresh-table" object="dp_peni" id="41002244" />
        </uicommand>
        <uicommand action-type="custom" title="Счет на проценты (пени)" side="Right" visible="kod_sf_peni" id="50470666">
          <useaction action-type="dynamic-form" call="sr_facvip_ur" modal="1" id="25055379">
            <useparam name="kod_mat" id="16493475" />
            <useparam name="kod_sf_peni" id="1738947" />
          </useaction>
          <useaction action-type="refresh-table" object="dp_peni" id="52866680" />
        </uicommand>
        <field table="ur_mat" name="ur_dp_sum_peni" title="Пени 1" controlType="UIText" edit-mask="N2" rows-limit="100" id="57699630" />
        <field table="ur_mat" name="ur_dp_priz_vld" title="Валидация (наличие признанных сумм по решению)" controlType="UIText" rows-limit="100" id="10354593" />
      </fieldgroup>
      <fieldgroup noborder="1" visible="f10" visible-invert="1" width-perc="25" id="38651824">
        <field table="ur_mat" name="ur_dp_priz_shtr" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="3122536" />
        <field table="ur_hist_mat" name="Штраф" title="Штраф" controlType="UIText" edit-mask="N2" rows-limit="100" id="47051480" />
        <field table="dp_shtraf" name="kod_sf_shtraf" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="30255246" />
        <uicommand action-type="custom" title="Счет на штраф" visible="kod_sf_shtraf" side="Right" id="767802">
          <useaction action-type="dynamic-form" call="sr_facvip_ur" modal="1" id="1433712">
            <useparam name="kod_mat" id="27164190" />
            <useparam name="kod_sf_shtraf" id="30415970" />
          </useaction>
          <useaction action-type="refresh-table" object="dp_shtraf" id="8877921" />
        </uicommand>
        <uicommand action-type="custom" title="Создать счет на штраф" visible="kod_sf_shtraf" visible-invert="1" side="Right" id="42514044">
          <useaction action-type="dynamic-form" call="create_ur_sf" modal="1" id="34154888">
            <useparam name="kod_mat" id="40693520" />
            <useparam name="shtraf" id="9272960" />
            <const id="21704878">4</const>
            <const id="9507866">154</const>
          </useaction>
          <useaction action-type="refresh-table" object="dp_shtraf" id="65378605" />
        </uicommand>
      </fieldgroup>
    </fieldgroup>
    <fieldgroup title="Госпошлина" visible="decision" is-layout-block="1" id="61540377">
      <field table="ur_mat" name="sum_gp" title="Оплачено при подаче" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="57940967">
        <buttons id="35815811">
          <uicommand action-type="custom" title="Просмотр и привязка платежей" visible="f10" id="675770">
            <useaction action-type="dynamic-form" call="ur_folders_g_plat" modal="1" id="16365342">
              <const type="number" id="17183210">0</const>
              <useparam name="kod_mat" id="38294929" />
            </useaction>
            <useaction action-type="reset-column" object="ur_mat" column="sum_gp" id="62056794" />
          </uicommand>
        </buttons>
      </field>
      <field table="ur_hist_mat" name="gp_otv" title="Ответчика" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="19189826">
        <buttons id="37843395">
          <uicommand title="Рассчет госпошлины по признанной сумме" object="ur_hist_mat" name="clu_calc_gp" width-perc="50" type="Redo" id="15805198" />
          <uicommand object="ur_hist_mat" title="Добавить остаток" name="clu_calc_gp_otv" type="Plus" side="Right" id="32369150" />
        </buttons>
      </field>
      <field table="dp_gp" name="kod_sf_gp" title="" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="59542908" />
      <uicommand action-type="custom" title="Счет на гос. пошлину" visible="kod_sf_gp" width-perc="33" id="50151504">
        <useaction action-type="dynamic-form" call="sr_facvip_ur" modal="1" id="13253279">
          <useparam name="kod_mat" id="20741811" />
          <useparam name="kod_sf_gp" id="25574161" />
        </useaction>
        <useaction action-type="refresh-table" object="dp_gp" id="31335174" />
      </uicommand>
      <uicommand action-type="custom" title="Создать счет на гос. пошлину" visible="kod_sf_gp" visible-invert="1" width-perc="33" id="55577938">
        <useaction action-type="dynamic-form" call="create_ur_sf" modal="1" id="9456596">
          <useparam name="kod_mat" id="40784028" />
          <useparam name="gp_otv" id="14069859" />
          <const id="7505033">9</const>
          <const id="62222470">49</const>
        </useaction>
        <useaction action-type="refresh-table" object="dp_gp" id="31437559" />
      </uicommand>
      <field table="ur_hist_mat" name="gp_all" title="Всего по решению" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="59949573" />
      <field table="ur_mat" name="ur_hist_mat_gp_vld" title="Гос. пошлина, всего" controlType="UIText" rows-limit="100" id="22212493" />
      <field table="ur_hist_mat" name="gp_es" title="Истца" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="50759805">
        <buttons id="39759218">
          <uicommand object="ur_hist_mat" title="Добавить остаток" name="clu_calc_gp_es" type="Plus" side="Right" id="45067348" />
        </buttons>
      </field>
      <field table="ur_hist_mat" name="gp_ret" title="Возврат из бюджета" controlType="UIText" edit-mask="N2" rows-limit="100" width-perc="33" id="26863774">
        <buttons id="45478313">
          <uicommand object="ur_hist_mat" title="Добавить остаток" name="clu_calc_gp_ret" type="Plus" side="Right" visible="1" id="29980795" />
        </buttons>
      </field>
    </fieldgroup>
    <fieldgroup title="Ввод сумм вручную" expanded="0" visible="decision" id="52146279">
      <fieldgroup noborder="1" width-perc="33" id="12795292">
        <label id="40414518" />
        <label title="Судебные издержки" id="61594676" />
        <label title="Расх. за введ. огр. реж. энергопотр." id="43292389" />
      </fieldgroup>
      <fieldgroup noborder="1" width-perc="33" id="5081113">
        <label title="Начислено" id="7061855" />
        <field table="ur_hist_mat" name="sud_izd" title=" " controlType="UIText" edit-mask="N2" rows-limit="100" text-visible="0" id="38733998" />
        <field table="ur_hist_mat" name="ogr" title=" " controlType="UIText" edit-mask="N2" rows-limit="100" text-visible="0" id="20332760" />
      </fieldgroup>
      <fieldgroup noborder="1" width-perc="33" id="11113531">
        <label title="Оплачено" id="863533" />
        <field table="ur_hist_mat" name="opl_sud_izd" title=" " controlType="UIText" edit-mask="N2" rows-limit="100" text-visible="0" id="45767293" />
        <field table="ur_hist_mat" name="opl_ogr" title=" " controlType="UIText" edit-mask="N2" rows-limit="100" text-visible="0" id="46853540" />
      </fieldgroup>
    </fieldgroup>
  </form>
  <params>
    <param name="kod_hist_mat" type="number" />
    <param name="p_kod" type="number" />
    <param name="p_kod_sdp" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_hist_mat" type="number">
        <const exclude="1">1</const>
      </param>
      <param name="p_kod" type="number">
        <const exclude="1">21</const>
      </param>
      <param name="p_kod_sdp" type="number">
        <const exclude="1">15</const>
      </param>
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_hist_mat_has_changes" parname="ur_hist_mat_has_changes" />
      <field type="string" name="ur_mat_has_changes" parname="ur_mat_has_changes" />
      <field type="string" name="dp_gp_has_changes" parname="dp_gp_has_changes" />
      <field type="string" name="dp_peni_has_changes" parname="dp_peni_has_changes" />
      <field type="string" name="dp_shtraf_has_changes" parname="dp_shtraf_has_changes" />
      <field type="string" name="f10_has_changes" parname="f10_has_changes" />
    </fields>
    <table name="ur_hist_mat" auto-refresh="1" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_hist_mat" key="kod_hist_mat" is-ms-upd="1" is-top="1" key-dimension="kod_hist_mat">
      <select-text>
--
select ur_hist_mat.kod_mat as kod_mat, /*number*/
ur_hist_mat.decision as decision, /*number*/
kod_folders.not_vvod as not_vvod, /*number*/
kod_folders.kodp as kodp, /*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as namep, /*Наименование абонента*//*string*/
kod_folders.kod_sdp as kod_sdp, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.kod_result as kod_result, /*number*/
ur_hist_mat.dat_mor as dat_mor, /*Признать задолженность мораторной с*//*date*/
ur_hist_mat.dat_mor_out as dat_mor_out, /*Дата искл. задолж. из реестра*//*date*/
ur_hist_mat.ukaz as ukaz, /*Указания*//*string*/
ur_hist_mat.prim as prim, /*Примечание*//*string*/
ur_hist_mat.kod_scan as kod_scan, /*number*/
ur_hist_mat.peni as peni, /*Проценты (пени)*//*number*/
ur_hist_mat.shtraf as Штраф, /*Штраф*//*number*/
ur_hist_mat.gp_otv as gp_otv, /*Ответчика*//*number*/
ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.gp_es as gp_es, /*Истца*//*number*/
ur_hist_mat.gp_ret as gp_ret, /*Возврат из бюджета*//*number*/
ur_hist_mat.sud_izd as sud_izd, /* *//*number*/
ur_hist_mat.ogr as ogr, /* *//*number*/
ur_hist_mat.opl_sud_izd as opl_sud_izd, /* *//*number*/
ur_hist_mat.opl_ogr as opl_ogr, /* *//*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
result_kod_post_x_n.name as result_kod_post_x_n, /*Судебный акт*//*string*/
kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat
--\ur_hist_mat
where
(ur_hist_mat.kod_hist_mat = :kod_hist_mat )  and (ur_hist_mat.kod_hist_mat is not null ) )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
(ur_hist_mat.kod_hist_mat = :kod_hist_mat )  and (ur_hist_mat.kod_hist_mat is not null )  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.ukaz as ukaz, /*Указания*//*string*/
a.dat_mor as dat_mor, /*Признать задолженность мораторной с*//*date*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.shtraf as shtraf, /**//*number*/
a.peni as peni, /*% за польз. чуж. ден. ср.*//*number*/
a.gp_ret as gp_ret, /*Гос. пошлина, возврат из бюджета*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd, /*Оплачено: Судебные издержки*//*number*/
a.kod_scan as kod_scan, /*number*/
a.dat_mor_out as dat_mor_out, /*Дата искл. задолж. из реестра*//*date*/
kod_result.kod_post as result_kod_post, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all, /*Гос. пошлина, всего*//*number*/
kod_result.decision as decision, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post_x_n on ur_hist_mat.result_kod_post = result_kod_post_x_n.kod_post--\us_post
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on kod_folders.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_folders.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kod_folders.kodp = kodp.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="kod_mat" table="ur_hist_mat" type="number" title="Материалы переданные в суд" parname="kod_mat" ColumnVisible="0" ClientDefault="p_kod" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n3">
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.not_vvod as not_vvod, /*number*/
kod_folders.kodp as kodp, /*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as namep, /*Наименование абонента*//*string*/
kod_folders.kod_sdp as kod_sdp, /*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on kod_folders.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_folders.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kod_folders.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1, /*string*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="not_vvod" table="ur_hist_mat" />
            <dependant name="kodp" table="ur_hist_mat" />
            <dependant name="nump" table="ur_hist_mat" />
            <dependant name="namep" table="ur_hist_mat" />
            <dependant name="kod_sdp" table="ur_hist_mat" />
            <dependant name="kod_mat_x_n" table="ur_hist_mat" />
            <dependant name="kodp_x_n" table="ur_hist_mat" />
            <dependant name="kod_sdp_x_n" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
            <dependant name="ur_hist_mat_gp_vld" table="ur_mat" />
            <dependant name="ur_hist_mat_count" table="ur_mat" />
          </dependants>
        </column>
        <column name="decision" table="ur_hist_mat" type="number" title="" parname="decision" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.decision as decision, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_result.decision as decision/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="not_vvod" table="kod_folders" type="number" title="" parname="is_not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.not_vvod as not_vvod, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp" table="kod_folders" type="number" title="Абонент" parname="kodp" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.kodp as kodp, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="nump" table="kodp" type="string" title="Код абонента" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.nump as nump, /*Код абонента*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump/*Код абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kod_folders.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="namep" table="kodp" type="string" title="Наименование абонента" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp.name as namep, /*Наименование абонента*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kod_folders.kodp = kodp.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sdp" table="kod_folders" type="number" title="" parname="folder_kod_sdp" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folders.kod_sdp as kod_sdp, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_post" table="ur_hist_mat" type="date" title="Дата прин. суд. акта" parname="dat_post" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_post" temp-col-name="d1" />
        <column name="result_kod_post" table="ur_hist_mat" type="number" title="Судебный акт" ColumnEditable="1" is-user-editable="1" ColumnMandatory="1" is-updateable-ext="1" is-refreshed="1" update-target="result_kod_post" temp-col-name="n37">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_post.xml" elid="2640" ord="2640" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_post" type="number" as="kod_post" key="1" fixed="1" used="1" sourcetable="./a/a" sourcecolumn="kod_post" into="n1">a.kod_post as kod_post, /*number*//*key*/
</column><column table="a" column="name" as="name" key="0" used="1" type="string" title="Судебный акт" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Судебный акт*//*string*/
</column></select>
                <from>
from <query name="us_post" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_post
select <column table="a" column="kod_post" type="number" as="kod_post" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp, /*number*/
</column><column table="a" column="name" type="string" title="Судебный акт" vid="1" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Судебный акт*//*string*/
</column></select><from>
from <table name="us_post" as="a" title="Судебный акт" used="1">us_post
a
--\us_post
</table></from>)
a
--\us_post
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="=" pth="" optional="1" type="bool">(<column table="a" column="kod_sdp">a.kod_sdp</column><text txtype="func"> = </text><const><text>:kod_sdp </text></const>) </call><text txtype="func"> } </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_post" type="number" as="kod_post" key="1" fixed="1" thissrc="kod_post">a.kod_post</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_post" type="number" as="kod_post" key="1" fixed="1" thissrc="kod_post">a.kod_post</column><text txtype="func"> ) like lower( </text><const><text>:kod_post_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" key="0" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_post.xml" elid="2640" ord="2640" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_post.xml" elid="2640" ord="2640" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="kod_sdp" type="number" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_post_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_post" type="number" as="kod_post" key="1" fixed="1" />
                    <column table="a" column="name" as="name" key="0" />
                  </select>
                  <from>
                    <query name="us_post" as="a" title="Судебный акт" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="=" optional="1">
                          <column table="a" column="kod_sdp" />
                          <useparam name="kod_sdp" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_post" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_post" />
                        <useparam name="kod_post_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_sdp" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_post_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_sdp" type="number">
                  <const>:kod_sdp </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_post_filter" type="string">
                  <const>:kod_post_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars>
            <withparams>
              <useparam name="folder_kod_sdp" parname="kod_sdp" />
            </withparams>
          </sel-list-cl-fact-pars>
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.result_kod_post as result_kod_post, /*number*/
result_kod_post_x_n.name as result_kod_post_x_n, /*Судебный акт*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post_x_n on ur_hist_mat.result_kod_post = result_kod_post_x_n.kod_post--\us_post
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="result_kod_post" table="ur_hist_mat" />
            <dependant name="result_kod_post_x_n" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="kod_result" table="ur_hist_mat" type="number" title="Результат рассмотрения" is-user-editable="1" ColumnMandatory="1" Valid="qube.kod_result_vld" is-updateable="1" is-updateable-ext="1" update-target="kod_result" temp-col-name="n1">
          <sel-list-compiled>
            <root>
              <query name="us_result_list" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_result.xml" haskeys="1" noname="1" path="." used="1">
                <select>--us_result_list
select <column table="a" column="kod_result" as="kod_result" key="1" fixed="1" used="1" type="number" sourcetable="./a" sourcecolumn="kod_result" into="n1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="name" title="Результат рассмотрения" as="name" key="0" used="1" type="string" sourcetable="./a" sourcecolumn="name" into="s1">a.name as name/*Результат рассмотрения*//*string*/
</column></select>
                <from>
from <query name="us_result" as="a" path="./a" haskeys="1" used="1">(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="name" type="string" title="Результат рассмотрения" vid="1" as="name" key="0" sourcetable="./a" sourcecolumn="name" used="1">a.name as name/*Результат рассмотрения*//*string*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from>)
a
--\us_result
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="=" pth="" optional="1" type="bool">(<column table="a" column="kod_post">a.kod_post</column><text txtype="func"> = </text><const><text>:kod_post </text></const>) </call><text txtype="func"> } </text></call></where>--\us_result_list
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="us_result_list" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\us_result.xml" elid="2646" ord="2646" leaf="0" lvl="2" pelid="" haskeys="1">
              <queries>
                <query name="us_result_list" as="a">
                  <withparams>
                    <useparam name="kod_post" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_post" type="number" column="result_kod_post">
                  <const>:kod_post </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="kod_post" type="number" column="result_kod_post" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.decision as decision, /*number*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
result_kod_post_x_n.name as result_kod_post_x_n, /*Судебный акт*//*string*/
kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result, /*number*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.decision as decision/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,null as result_kod_post  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n37 as result_kod_post  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result,null as result_kod_post  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result,t.n37 as result_kod_post  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post_x_n on ur_hist_mat.result_kod_post = result_kod_post_x_n.kod_post--\us_post
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="decision" table="ur_hist_mat" />
            <dependant name="result_kod_post" table="ur_hist_mat" />
            <dependant name="result_kod_post_x_n" table="ur_hist_mat" />
            <dependant name="kod_result_x_n" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
            <dependant name="kod_result_vld" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="dat_mor" table="ur_hist_mat" type="date" title="Признать задолженность мораторной с" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_mor" temp-col-name="d4" />
        <column name="dat_mor_out" table="ur_hist_mat" type="date" title="Дата искл. задолж. из реестра" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_mor_out" temp-col-name="d9" />
        <column name="ukaz" table="ur_hist_mat" type="string" title="Указания" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ukaz" temp-col-name="s3" />
        <column name="prim" table="ur_hist_mat" type="string" title="Примечание" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s1" />
        <column name="kod_scan" table="ur_hist_mat" type="number" title="Файл" ColumnEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_scan" temp-col-name="n31">
          <sel-list-compiled>
            <root>
              <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_scan" as="kod_scan" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_scan" into="n1">a.kod_scan as kod_scan, /**//*number*//*key*/
</column><column table="a" column="file_name" as="file_name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="file_name" into="s1">a.file_name as file_name/**//*string*/
</column></select>
                <from>
from <query name="ur_scan_docs" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_scan_docs
select <column table="a" column="kod_scan" type="number" comment="уникальный ключ" as="kod_scan" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_scan" used="1">a.kod_scan as kod_scan, /*number*//*key*/
</column><column table="a" column="file_name" type="string" title="" comment="имя файла" vid="1" spec-column="file-name" as="file_name" key="0" sourcetable="./a/a" sourcecolumn="file_name" used="1">a.file_name as file_name/**//*string*/
</column></select><from>
from <table name="ur_scan_docs" as="a" title="Файл" used="1">ur_scan_docs
a
--\ur_scan_docs
</table></from>)
a
--\ur_scan_docs
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_scan" as="kod_scan" title="" key="1" thissrc="kod_scan">a.kod_scan</column><text txtype="func"> ) like lower( </text><const><text>:kod_scan_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="file_name" as="file_name" title="" thissrc="file_name">a.file_name</column><text txtype="func"> ) like lower( </text><const><text>:file_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Файл" spec-table="file" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_scan_docs.xml" elid="3005" ord="3005" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_scan_filter" type="string" />
                    <param name="file_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_scan" as="kod_scan" title="" key="1" />
                    <column table="a" column="file_name" as="file_name" title="" />
                  </select>
                  <from>
                    <query name="ur_scan_docs" as="a" title="Файл" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_scan" />
                        <useparam name="kod_scan_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="file_name" />
                        <useparam name="file_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_scan_filter" />
                    <useparam name="file_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_scan_filter" type="string">
                  <const>:kod_scan_filter </const>
                </param>
                <param name="file_name_filter" type="string">
                  <const>:file_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_scan as kod_scan/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_scan_x_n" table="ur_hist_mat" />
          </dependants>
        </column>
        <column name="peni" table="ur_hist_mat" type="number" title="Проценты (пени)" parname="peni_hand" VisibleInvert="1" ClientVisible="kod_sf_peni" is-user-editable="1" ClientNewVal="priz_peni" is-updateable="1" is-updateable-ext="1" update-target="peni" temp-col-name="n23" />
        <column name="Штраф" table="ur_hist_mat" type="number" title="Штраф" parname="shtraf" VisibleInvert="1" ClientVisible="kod_sf_shtraf" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="shtraf" temp-col-name="n22" />
        <column name="gp_otv" table="ur_hist_mat" type="number" title="Ответчика" parname="gp_otv" Exists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_otv" temp-col-name="n6">
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1/*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="gp_all" table="ur_hist_mat" />
            <dependant name="ur_hist_mat_gp_vld" table="ur_mat" />
          </dependants>
        </column>
        <column name="gp_all" table="ur_hist_mat" type="number" title="Всего по решению" ClientExists="decision" is-user-editable="1" ClientValid="gp_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="gp_es" table="ur_hist_mat" type="number" title="Истца" Exists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_es" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1/*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="gp_all" table="ur_hist_mat" />
            <dependant name="ur_hist_mat_gp_vld" table="ur_mat" />
          </dependants>
        </column>
        <column name="gp_ret" table="ur_hist_mat" type="number" title="Возврат из бюджета" Exists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="gp_ret" temp-col-name="n25">
          <dep-refresh-cmd>
            <root table="ur_hist_mat">
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1/*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="gp_all" table="ur_hist_mat" />
            <dependant name="ur_hist_mat_gp_vld" table="ur_mat" />
          </dependants>
        </column>
        <column name="sud_izd" table="ur_hist_mat" type="number" title=" " Exists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sud_izd" temp-col-name="n10" />
        <column name="ogr" table="ur_hist_mat" type="number" title=" " is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ogr" temp-col-name="n19" />
        <column name="opl_sud_izd" table="ur_hist_mat" type="number" title=" " Exists="decision" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="opl_sud_izd" temp-col-name="n30" />
        <column name="opl_ogr" table="ur_hist_mat" type="number" title=" " is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="opl_ogr" temp-col-name="n26" />
        <column name="kod_mat_x_n" table="ur_hist_mat.kod_mat" type="string" title="Материалы переданные в суд" text-source-for="kod_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="kod_folders.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sdp_x_n" table="kod_folders.kod_sdp" type="string" title="Договор" text-source-for="kod_sdp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_sdp as kod_sdp/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on kod_folders.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="result_kod_post_x_n" table="ur_hist_mat.result_kod_post" type="string" title="Судебный акт" text-source-for="result_kod_post" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select result_kod_post_x_n.name as result_kod_post_x_n, /*Судебный акт*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post_x_n on ur_hist_mat.result_kod_post = result_kod_post_x_n.kod_post--\us_post
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_result_x_n" table="ur_hist_mat.kod_result" type="string" title="Результат рассмотрения" text-source-for="kod_result" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_result as kod_result/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_scan_x_n" table="ur_hist_mat.kod_scan" type="string" title="Файл" text-source-for="kod_scan" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_scan as kod_scan/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_scan as kod_scan  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n31 as kod_scan  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_result_vld" table="ur_hist_mat" type="string" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_hist_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_hist_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_hist_mat" type="number" title="" is-user-editable="1" />
        <column name="kod_hist_mat" table="ur_hist_mat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_hist_mat" temp-col-name="n2" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:kod_result as kod_result 
,:dat_mor as dat_mor 
,:dat_mor_out as dat_mor_out 
,:ukaz as ukaz 
,:prim as prim 
,:kod_scan as kod_scan 
,:peni as peni 
,:Штраф as Штраф 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:sud_izd as sud_izd 
,:ogr as ogr 
,:opl_sud_izd as opl_sud_izd 
,:opl_ogr as opl_ogr 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into ur_hist_mat 
(kod_mat 
,dat_post 
,kod_result 
,dat_mor 
,dat_mor_out 
,ukaz 
,prim 
,kod_scan 
,peni 
,shtraf 
,gp_otv 
,gp_es 
,gp_ret 
,sud_izd 
,ogr 
,opl_sud_izd 
,opl_ogr 
,kod_hist_mat 
) 
 values  
(r.kod_mat 
,r.dat_post 
,r.kod_result 
,r.dat_mor 
,r.dat_mor_out 
,r.ukaz 
,r.prim 
,r.kod_scan 
,r.peni 
,r.Штраф 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.sud_izd 
,r.ogr 
,r.opl_sud_izd 
,r.opl_ogr 
,r.kod_hist_mat 
) 
 returning  
kod_hist_mat into :kod_hist_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_hist_mat where kod_hist_mat=:kod_hist_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_hist_mat' 
and 
names=:form_id 
and 
f2=:kod_hist_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:result_kod_post as result_kod_post 
,:kod_result as kod_result 
,:dat_mor as dat_mor 
,:dat_mor_out as dat_mor_out 
,:ukaz as ukaz 
,:prim as prim 
,:kod_scan as kod_scan 
,:peni as peni 
,:Штраф as Штраф 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:sud_izd as sud_izd 
,:ogr as ogr 
,:opl_sud_izd as opl_sud_izd 
,:opl_ogr as opl_ogr 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,n37 
,n1 
,d4 
,d9 
,s3 
,s1 
,n31 
,n23 
,n22 
,n6 
,n4 
,n25 
,n10 
,n19 
,n30 
,n26 
,n2 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_mat 
,r.dat_post 
,r.result_kod_post 
,r.kod_result 
,r.dat_mor 
,r.dat_mor_out 
,r.ukaz 
,r.prim 
,r.kod_scan 
,r.peni 
,r.Штраф 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.sud_izd 
,r.ogr 
,r.opl_sud_izd 
,r.opl_ogr 
,r.kod_hist_mat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:result_kod_post as result_kod_post 
,:kod_result as kod_result 
,:dat_mor as dat_mor 
,:dat_mor_out as dat_mor_out 
,:ukaz as ukaz 
,:prim as prim 
,:kod_scan as kod_scan 
,:peni as peni 
,:Штраф as Штраф 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:sud_izd as sud_izd 
,:ogr as ogr 
,:opl_sud_izd as opl_sud_izd 
,:opl_ogr as opl_ogr 
,:kod_hist_mat as kod_hist_mat 
,a.dat_rassm 
,a.u_m 
,a.d_m 
,a.kod_zased 
,a.kod_stage 
,a.kod_busin 
,a.kod_hist_mat_new 
,a.astrent 
,a.dat_vz 
,a.proc 
,a.kodp 
,a.opl_peni 
,a.opl_proc 
,a.opl_astrent 
,a.opl_osnreal 
,a.opl_gpotv 
,a.data_prinyat 
,a.snum_z 
,a.fio_court 
,a.osnreal 
,a.manual_sums 
,a.dat_entry 
,a.dat_srok 
,a.proc_calc 
,a.kod_vid_proc 
,a.proc_const 
,a.dat_send_il 
,a.opl_ogr_dat 
,a.opl_sud_izd_dat 
,a.dat_send_zv 
,a.dat_receipt_post 
,a.dat_send_petition_il 
,a.gosposhlina 
,a.dat_um_mor_dolg 
,a.sum_um_mor_dolg 
,a.kod_osn_um_mor_dolg 
,a.comment_um_mor_dolg 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
 
from ur_hist_mat a  where kod_hist_mat=:kod_hist_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n3 
,d1 
,n37 
,n1 
,d4 
,d9 
,s3 
,s1 
,n31 
,n23 
,n22 
,n6 
,n4 
,n25 
,n10 
,n19 
,n30 
,n26 
,n2 
,d2 
,s2 
,d3 
,n5 
,n7 
,n8 
,n9 
,n11 
,d5 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,d6 
,s4 
,s5 
,n21 
,n24 
,d7 
,d8 
,n27 
,n28 
,n29 
,d10 
,d11 
,d12 
,d13 
,d14 
,d15 
,n32 
,d16 
,n33 
,n34 
,s6 
,n35 
,n36 
) 
 values  
('ur_hist_mat' 
,:form_id 
,:kod_hist_mat 
,:row_state_id 
,r.kod_mat 
,r.dat_post 
,r.result_kod_post 
,r.kod_result 
,r.dat_mor 
,r.dat_mor_out 
,r.ukaz 
,r.prim 
,r.kod_scan 
,r.peni 
,r.Штраф 
,r.gp_otv 
,r.gp_es 
,r.gp_ret 
,r.sud_izd 
,r.ogr 
,r.opl_sud_izd 
,r.opl_ogr 
,r.kod_hist_mat 
,r.dat_rassm 
,r.u_m 
,r.d_m 
,r.kod_zased 
,r.kod_stage 
,r.kod_busin 
,r.kod_hist_mat_new 
,r.astrent 
,r.dat_vz 
,r.proc 
,r.kodp 
,r.opl_peni 
,r.opl_proc 
,r.opl_astrent 
,r.opl_osnreal 
,r.opl_gpotv 
,r.data_prinyat 
,r.snum_z 
,r.fio_court 
,r.osnreal 
,r.manual_sums 
,r.dat_entry 
,r.dat_srok 
,r.proc_calc 
,r.kod_vid_proc 
,r.proc_const 
,r.dat_send_il 
,r.opl_ogr_dat 
,r.opl_sud_izd_dat 
,r.dat_send_zv 
,r.dat_receipt_post 
,r.dat_send_petition_il 
,r.gosposhlina 
,r.dat_um_mor_dolg 
,r.sum_um_mor_dolg 
,r.kod_osn_um_mor_dolg 
,r.comment_um_mor_dolg 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_hist_mat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_hist_mat set  
(kod_mat 
,dat_post 
,kod_result 
,dat_mor 
,dat_mor_out 
,ukaz 
,prim 
,kod_scan 
,peni 
,shtraf 
,gp_otv 
,gp_es 
,gp_ret 
,sud_izd 
,ogr 
,opl_sud_izd 
,opl_ogr 
,kod_hist_mat 
) 
= 
 ( select  
:kod_mat as kod_mat 
,:dat_post as dat_post 
,:kod_result as kod_result 
,:dat_mor as dat_mor 
,:dat_mor_out as dat_mor_out 
,:ukaz as ukaz 
,:prim as prim 
,:kod_scan as kod_scan 
,:peni as peni 
,:Штраф as Штраф 
,:gp_otv as gp_otv 
,:gp_es as gp_es 
,:gp_ret as gp_ret 
,:sud_izd as sud_izd 
,:ogr as ogr 
,:opl_sud_izd as opl_sud_izd 
,:opl_ogr as opl_ogr 
,:kod_hist_mat as kod_hist_mat 
 
from dual ) 
 
where 
kod_hist_mat=:kod_hist_mat 
;
end;
</update-text>
      <scheme>
        <table name="ur_hist_mat" as="ur_hist_mat">
          <columns>
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="decision" type="number" title="" visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="nump" type="string" title="Код абонента" visible="0" />
            <column name="namep" type="string" title="Наименование абонента" visible="0" />
            <column name="kod_sdp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_post" type="date" title="Дата прин. суд. акта" />
            <column name="result_kod_post" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_result" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_mor" type="date" title="Признать задолженность мораторной с" />
            <column name="dat_mor_out" type="date" title="Дата искл. задолж. из реестра" />
            <column name="ukaz" type="string" title="Указания" />
            <column name="prim" type="string" title="Примечание" />
            <column name="kod_scan" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="peni" type="number" title="Проценты (пени)" />
            <column name="Штраф" type="number" title="Штраф" />
            <column name="gp_otv" type="number" title="Ответчика" />
            <column name="gp_all" type="number" title="Всего по решению" />
            <column name="gp_es" type="number" title="Истца" />
            <column name="gp_ret" type="number" title="Возврат из бюджета" />
            <column name="sud_izd" type="number" title=" " />
            <column name="ogr" type="number" title=" " />
            <column name="opl_sud_izd" type="number" title=" " />
            <column name="opl_ogr" type="number" title=" " />
            <column name="kod_mat_x_n" type="string" title="Материалы переданные в суд" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" visible="0" />
            <column name="kod_sdp_x_n" type="string" title="Договор" visible="0" />
            <column name="result_kod_post_x_n" type="string" title="Судебный акт" />
            <column name="kod_result_x_n" type="string" title="Результат рассмотрения" />
            <column name="kod_scan_x_n" type="string" title="Файл" />
            <column name="kod_result_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_hist_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_hist_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_hist_mat.kod_mat as kod_mat, /*number*/
ur_hist_mat.decision as decision, /*number*/
kod_folders.not_vvod as not_vvod, /*number*/
kod_folders.kodp as kodp, /*number*/
kodp.nump as nump, /*Код абонента*//*string*/
kodp.name as namep, /*Наименование абонента*//*string*/
kod_folders.kod_sdp as kod_sdp, /*number*/
ur_hist_mat.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
ur_hist_mat.result_kod_post as result_kod_post, /*number*/
ur_hist_mat.kod_result as kod_result, /*number*/
ur_hist_mat.dat_mor as dat_mor, /*Признать задолженность мораторной с*//*date*/
ur_hist_mat.dat_mor_out as dat_mor_out, /*Дата искл. задолж. из реестра*//*date*/
ur_hist_mat.ukaz as ukaz, /*Указания*//*string*/
ur_hist_mat.prim as prim, /*Примечание*//*string*/
ur_hist_mat.kod_scan as kod_scan, /*number*/
ur_hist_mat.peni as peni, /*Проценты (пени)*//*number*/
ur_hist_mat.shtraf as Штраф, /*Штраф*//*number*/
ur_hist_mat.gp_otv as gp_otv, /*Ответчика*//*number*/
ur_hist_mat.gp_all as gp_all, /*Всего по решению*//*number*/
ur_hist_mat.gp_es as gp_es, /*Истца*//*number*/
ur_hist_mat.gp_ret as gp_ret, /*Возврат из бюджета*//*number*/
ur_hist_mat.sud_izd as sud_izd, /* *//*number*/
ur_hist_mat.ogr as ogr, /* *//*number*/
ur_hist_mat.opl_sud_izd as opl_sud_izd, /* *//*number*/
ur_hist_mat.opl_ogr as opl_ogr, /* *//*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Материалы переданные в суд*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
kod_sdp_x_n.name as kod_sdp_x_n, /*Юридический документ*//*string*/
result_kod_post_x_n.name as result_kod_post_x_n, /*Судебный акт*//*string*/
kod_result_x_n.name as kod_result_x_n, /*Результат рассмотрения*//*string*/
kod_scan_x_n.file_name as kod_scan_x_n, /*Файл*//*string*/
qube.kod_result_vld1 as kod_result_vld, /*string*/
ur_hist_mat.is_new as is_new, /*number*/
ur_hist_mat.is_not_new as is_not_new, /*number*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
max( case  when (kod_hist_mat.result_kod_post != kod_hist_mat.result_kod_post_read)  then 'Укажите результат рассмотрения соответствующий судебному акту' when (qube.ur_hist_mat_dec_othr_cnt1 &gt; 1)  then 'Уже есть другое окончательное решение по делу' end )  as kod_result_vld1/*string*/

from (
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select qube.kod_hist_mat as kod_hist_mat, /*number*//*key*/
qube.ur_hist_mat_dec_othr_cnt1 as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select un.kod_hist_mat as kod_hist_mat, /*number*//*key*/
sum(un.ur_hist_mat_dec_othr_cnt1)  as ur_hist_mat_dec_othr_cnt1/*number*/

from (
(
(
--
select ur_hist_mat.kod_hist_mat as kod_hist_mat, /*number*//*key*/
null as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat
--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null )
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3 )
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
union all
(
--
select dims.kod_hist_mat as kod_hist_mat, /*number*//*key*/
ur_hist_mat_dec_othr.cnt as ur_hist_mat_dec_othr_cnt1/*number*/

from (
--
select ur_hist_mat_dec_othr_a_d.kod_hist_mat as kod_hist_mat_prm, /*number*//*key*/
ur_hist_mat.kod_hist_mat as kod_hist_mat/*number*//*key*/

from (
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr_a_d
--\ur_hist_mat_dec_othr
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ))
)
kod_mat_a_d1 on ur_hist_mat_dec_othr_a_d.kod_mat = kod_mat_a_d1.kod_mat--\ur_mat
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
)
ur_hist_mat on ur_hist_mat.kod_mat = kod_mat_a_d1.kod_mat--\ur_hist_mat
where
ur_hist_mat.kod_hist_mat is not null  group by
ur_hist_mat_dec_othr_a_d.kod_hist_mat, /*number*//*key*/
ur_hist_mat.kod_hist_mat/*number*//*key*/
)
dims
--\
left outer join
(
--ur_hist_mat_dec_othr
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
where
kod_result.decision = 1)
ur_hist_mat_dec_othr on ur_hist_mat_dec_othr.kod_hist_mat = dims.kod_hist_mat_prm--\ur_hist_mat_dec_othr
)
--\
)
--\
)
un
--\
 group by
un.kod_hist_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.result_kod_post as result_kod_post, /*number*/
kod_result.kod_post as result_kod_post_read/*number*/

from (select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,null as result_kod_post,a.kod_result as kod_result  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n37 as result_kod_post,t.n1 as kod_result  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post/*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat on kod_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
 group by
qube.kod_hist_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
a.kod_result as kod_result, /*number*/
a.dat_post as dat_post, /*Дата прин. суд. акта*//*date*/
a.gp_es as gp_es, /*Гос. пошлина, взысканная с истца*//*number*/
a.prim as prim, /*Примечание*//*string*/
a.gp_otv as gp_otv, /*Гос. пошлина, взысканная с ответчика*//*number*/
a.ukaz as ukaz, /*Указания*//*string*/
a.dat_mor as dat_mor, /*Признать задолженность мораторной с*//*date*/
a.sud_izd as sud_izd, /*Судебные издержки*//*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.shtraf as shtraf, /**//*number*/
a.peni as peni, /*% за польз. чуж. ден. ср.*//*number*/
a.gp_ret as gp_ret, /*Гос. пошлина, возврат из бюджета*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_sud_izd as opl_sud_izd, /*Оплачено: Судебные издержки*//*number*/
a.kod_scan as kod_scan, /*number*/
a.dat_mor_out as dat_mor_out, /*Дата искл. задолж. из реестра*//*date*/
a.result_kod_post as result_kod_post, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all, /*Гос. пошлина, всего*//*number*/
kod_result.decision as decision, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.dat_post as dat_post,a.gp_es as gp_es,a.prim as prim,a.gp_otv as gp_otv,a.ukaz as ukaz,a.dat_mor as dat_mor,a.sud_izd as sud_izd,a.ogr as ogr,a.shtraf as shtraf,a.peni as peni,a.gp_ret as gp_ret,a.opl_ogr as opl_ogr,a.opl_sud_izd as opl_sud_izd,a.kod_scan as kod_scan,a.dat_mor_out as dat_mor_out,null as result_kod_post,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.d1 as dat_post,t.n4 as gp_es,t.s1 as prim,t.n6 as gp_otv,t.s3 as ukaz,t.d4 as dat_mor,t.n10 as sud_izd,t.n19 as ogr,t.n22 as shtraf,t.n23 as peni,t.n25 as gp_ret,t.n26 as opl_ogr,t.n30 as opl_sud_izd,t.n31 as kod_scan,t.d9 as dat_mor_out,t.n37 as result_kod_post,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.kod_result as kod_result,a.dat_post as dat_post,a.gp_es as gp_es,a.prim as prim,a.gp_otv as gp_otv,a.ukaz as ukaz,a.dat_mor as dat_mor,a.sud_izd as sud_izd,a.ogr as ogr,a.shtraf as shtraf,a.peni as peni,a.gp_ret as gp_ret,a.opl_ogr as opl_ogr,a.opl_sud_izd as opl_sud_izd,a.kod_scan as kod_scan,a.dat_mor_out as dat_mor_out,null as result_kod_post,0 as is_new,1 as is_not_new  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ) and   a.kod_hist_mat in :kod_hist_mat_prm   union all  select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n1 as kod_result,t.d1 as dat_post,t.n4 as gp_es,t.s1 as prim,t.n6 as gp_otv,t.s3 as ukaz,t.d4 as dat_mor,t.n10 as sud_izd,t.n19 as ogr,t.n22 as shtraf,t.n23 as peni,t.n25 as gp_ret,t.n26 as opl_ogr,t.n30 as opl_sud_izd,t.n31 as kod_scan,t.d9 as dat_mor_out,t.n37 as result_kod_post,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_hist_mat_prm )
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.kod_post as kod_post, /*number*/
a.decision as decision/**//*number*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
ur_hist_mat on ur_hist_mat.kod_hist_mat = qube.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_scan_docs
select a.kod_scan as kod_scan, /*number*//*key*/
a.file_name as file_name/**//*string*/

from ur_scan_docs
a
--\ur_scan_docs
)
kod_scan_x_n on ur_hist_mat.kod_scan = kod_scan_x_n.kod_scan--\ur_scan_docs
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result_x_n on ur_hist_mat.kod_result = kod_result_x_n.kod_result--\us_result
left outer join
(
--us_post
select a.kod_post as kod_post, /*number*//*key*/
a.name as name/*Судебный акт*//*string*/

from us_post
a
--\us_post
)
result_kod_post_x_n on ur_hist_mat.result_kod_post = result_kod_post_x_n.kod_post--\us_post
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_hist_mat.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat on ur_hist_mat.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.kod_sdp as kod_sdp, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on kod_mat.kod_folders = kod_folders.kod_folders--\ur_folders
left outer join
(
--uk_sdp
select a.kod_sdp as kod_sdp, /*number*//*key*/
a.name as name/*Юридический документ*//*string*/

from uk_sdp
a
--\uk_sdp
)
kod_sdp_x_n on kod_folders.kod_sdp = kod_sdp_x_n.kod_sdp--\uk_sdp
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_folders.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump as nump, /*Код абонента*//*string*/
a.name as name/*Наименование абонента*//*string*/

from kr_payer
a
--\kr_payer
)
kodp on kod_folders.kodp = kodp.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_mat" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_mat" delete-validation="ur_dp_exists_vld" key="kod_mat" is-ms-upd="1" is-top="1" key-dimension="kod_mat">
      <select-text>
--
select ur_mat.num_delo as num_delo, /*Номер дела*//*string*/
ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Осн. реал.*//*number*/
qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Пени 1*//*number*/
qube.ur_dp_priz_vld1 as ur_dp_priz_vld, /*Валидация (наличие признанных сумм по решению)*//*string*/
qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_mat.sum_gp as sum_gp, /*Оплачено при подаче*//*number*/
qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
ur_mat.is_new as is_new, /*number*/
ur_mat.is_not_new as is_not_new, /*number*/
qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1, /*Призн. по юр. док. всего*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_osn1, /*Призн. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_peni1, /*Призн. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
max( case  when ((qube.ur_dp_has_no_priz1 &gt; 0) )  then 'Должны быть заполнены суммы по решению суда' end )  as ur_dp_priz_vld1, /*Валидация (наличие признанных сумм по решению)*//*string*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_shtr1, /*Призн. по юр. док. штрафы*//*number*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1, /*string*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_gp_all1, /*number*/
null as ur_mat_sum_gp1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1, /*number*/
max(un.ur_dp_has_no_priz1)  as ur_dp_has_no_priz1, /*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.cnt as ur_dogplat_count1, /*number*/
kod_dogplat.has_no_prizn as ur_dp_has_no_priz1, /*number*/
kod_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
kod_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 case  when (a.sum_v is null )  then 1 end  as has_no_prizn/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
(ur_mat.kod_mat = :p_kod )  and (ur_mat.kod_mat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dogplat_count1, /*number*/
null as ur_dp_has_no_priz1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_summa1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ur_hist_mat
a
--\ur_hist_mat
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from ur_mat
a
--\ur_mat
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
(ur_mat.kod_mat = :p_kod )  and (ur_mat.kod_mat is not null ) )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from ur_mat
a
--\ur_mat
)
ur_mat
--\ur_mat
where
(ur_mat.kod_mat = :p_kod )  and (ur_mat.kod_mat is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.sum_gp as sum_gp, /*Оплачено госпошлины при подаче*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</select-text>
      <columns>
        <column name="num_delo" table="ur_mat" type="string" title="Номер дела" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="num_delo" temp-col-name="s1" />
        <column name="dat_prin" table="ur_mat" type="date" title="Дата принятия документов в суде" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_prin" temp-col-name="d2" />
        <column name="ur_dp_priz_all" table="ur_mat" type="number" title="Всего" ClientExists="decision" is-user-editable="1" ClientValid="ur_dp_priz_vld" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1/*Призн. по юр. док. всего*//*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_dogplat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_dp_sum_v1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_osn" table="ur_mat" type="number" title="Осн. реал." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Осн. реал.*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_osn1/*Призн. по юр. док. осн. реал.*//*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_mat as kod_mat/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_peni" table="ur_mat" type="number" title="Проценты (пени)" parname="priz_peni" ClientVisible="kod_sf_peni" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_peni1/*Призн. по юр. док. пени*//*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_mat as kod_mat/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_sum_peni" table="ur_mat" type="number" title="Пени 1" parname="peni_doc" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Пени 1*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1/*Выст. по юр. док. пени*//*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_summa1 as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dp_summa1/*number*/

from (
--
select un.kod_mat as kod_mat/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_vld" table="ur_mat" type="string" title="Валидация (наличие признанных сумм по решению)" parname="ur_dp_priz_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_vld1 as ur_dp_priz_vld, /*Валидация (наличие признанных сумм по решению)*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ((qube.ur_dp_has_no_priz1 &gt; 0) )  then 'Должны быть заполнены суммы по решению суда' end )  as ur_dp_priz_vld1/*Валидация (наличие признанных сумм по решению)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
max(un.ur_dp_has_no_priz1)  as ur_dp_has_no_priz1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.has_no_prizn as ur_dp_has_no_priz1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 case  when (a.sum_v is null )  then 1 end  as has_no_prizn/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_dogplat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_dp_has_no_priz1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_dp_priz_shtr" table="ur_mat" type="number" title="Штраф" parname="priz_shtraf" ClientVisible="kod_sf_shtraf" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v1 end )  as ur_dp_priz_shtr1/*Призн. по юр. док. штрафы*//*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.sum_v as ur_dp_sum_v1/*Признано по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dp_sum_v1/*number*/

from (
--
select un.kod_mat as kod_mat/*number*//*key*/

from (
(
(
--
select ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="sum_gp" table="ur_mat" type="number" title="Оплачено при подаче" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="sum_gp" temp-col-name="n9">
          <value-reset-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                </params>
                <query>
--
select ur_mat.sum_gp as sum_gp, /*Оплачено при подаче*//*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where   a.kod_mat in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where   a.kod_mat in :kod_mat_prm )
)
ur_mat
--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-reset-cmd>
          <dep-refresh-cmd>
            <root table="ur_mat">
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_mat.sum_gp as sum_gp, /*Оплачено при подаче*//*number*/
qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1/*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_hist_mat_gp_vld" table="ur_mat" />
            <dependant name="sum_gp" table="ur_mat" />
          </dependants>
        </column>
        <column name="ur_hist_mat_gp_vld" table="ur_mat" type="string" title="Гос. пошлина, всего" parname="gp_vld" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1/*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_hist_mat_count" table="ur_mat" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1/*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_mat" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_mat" type="number" title="" is-user-editable="1" />
        <column name="ur_dp_exists_vld" table="ur_mat" type="string" title="Валидация (наличие привязанных документов)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_mat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_mat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
(
(
--
select qube.kod_mat as kod_mat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1/*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1/*number*/

from (
(
(
--
select ur_dogplat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_dogplat_a_d.cnt as ur_dogplat_count1/*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt/*number*/

from ur_dogplat
a
--\ur_dogplat
)
ur_dogplat_a_d
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_dogplat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_dogplat_count1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat" table="ur_mat" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:num_delo as num_delo 
,:dat_prin as dat_prin 
,:sum_gp as sum_gp 
,:kod_mat as kod_mat 
 
from dual ) 
 
loop 
insert into ur_mat 
(num_delo 
,dat_prin 
,sum_gp 
,kod_mat 
) 
 values  
(r.num_delo 
,r.dat_prin 
,r.sum_gp 
,r.kod_mat 
) 
 returning  
kod_mat into :kod_mat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_mat where kod_mat=:kod_mat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_mat' 
and 
names=:form_id 
and 
f2=:kod_mat; 
if :row_state_id=1  then 
for r in  
 ( select  
:num_delo as num_delo 
,:dat_prin as dat_prin 
,:sum_gp as sum_gp 
,:kod_mat as kod_mat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,d2 
,n9 
,n3 
) 
 values  
('ur_mat' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.num_delo 
,r.dat_prin 
,r.sum_gp 
,r.kod_mat 
); 
end loop; 
else 
for r in  
 ( select  
:num_delo as num_delo 
,:dat_prin as dat_prin 
,:sum_gp as sum_gp 
,:kod_mat as kod_mat 
,a.kod_folders 
,a.kod_doc 
,a.kod_ssp 
,a.num_reg 
,a.dat_otv 
,a.kod_ret_isk 
,a.u_m 
,a.d_m 
,a.num_otz 
,a.dat_otz 
,a.dat_doc 
,a.fio_otz 
,a.kod_subject 
,a.prichina_otz 
,a.prim 
,a.dat_gp 
,a.kod_sud 
,a.num_pp_gp 
,a.kod_parent 
,a.kodp 
,a.ogr 
,a.kod_dispute 
,a.type_claim_template 
,a.kod_delo 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_emp 
,a.kod_vi 
,a.dep 
,a.dat_finish 
,a.prim_mor_dz 
,a.osnreal 
,a.period_zadol_s_vvod 
,a.period_zadol_po_vvod 
,a.ur_opl_do_resh_vvod 
,a.shtraf 
,a.peni 
,a.otvetch_info 
,a.link_delo 
,a.sum_zach_gp 
,a.num_zach_doc 
,a.dat_zach 
,a.sum_ifns_gp 
,a.num_ifns_doc 
,a.dat_ifns 
,a.kod_scan 
,a.astrent_exists 
,a.dat_post 
,a.dat_arh 
,a.type_rassm 
,a.dat_post_mat_pio 
,a.num_zap_post_mat 
 
from ur_mat a  where kod_mat=:kod_mat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,s1 
,d2 
,n9 
,n3 
,n4 
,n5 
,n6 
,s2 
,d1 
,n7 
,s3 
,d3 
,s4 
,d4 
,d5 
,s5 
,n8 
,s6 
,s7 
,d6 
,n10 
,s8 
,n11 
,n1 
,n12 
,n13 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,d7 
,s9 
,n22 
,n23 
,n24 
,n25 
,n26 
,n27 
,s10 
,s11 
,n28 
,s12 
,d8 
,n29 
,s13 
,d9 
,n30 
,n31 
,d10 
,d11 
,n32 
,d12 
,s14 
) 
 values  
('ur_mat' 
,:form_id 
,:kod_mat 
,:row_state_id 
,r.num_delo 
,r.dat_prin 
,r.sum_gp 
,r.kod_mat 
,r.kod_folders 
,r.kod_doc 
,r.kod_ssp 
,r.num_reg 
,r.dat_otv 
,r.kod_ret_isk 
,r.u_m 
,r.d_m 
,r.num_otz 
,r.dat_otz 
,r.dat_doc 
,r.fio_otz 
,r.kod_subject 
,r.prichina_otz 
,r.prim 
,r.dat_gp 
,r.kod_sud 
,r.num_pp_gp 
,r.kod_parent 
,r.kodp 
,r.ogr 
,r.kod_dispute 
,r.type_claim_template 
,r.kod_delo 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_emp 
,r.kod_vi 
,r.dep 
,r.dat_finish 
,r.prim_mor_dz 
,r.osnreal 
,r.period_zadol_s_vvod 
,r.period_zadol_po_vvod 
,r.ur_opl_do_resh_vvod 
,r.shtraf 
,r.peni 
,r.otvetch_info 
,r.link_delo 
,r.sum_zach_gp 
,r.num_zach_doc 
,r.dat_zach 
,r.sum_ifns_gp 
,r.num_ifns_doc 
,r.dat_ifns 
,r.kod_scan 
,r.astrent_exists 
,r.dat_post 
,r.dat_arh 
,r.type_rassm 
,r.dat_post_mat_pio 
,r.num_zap_post_mat 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_mat' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_mat set  
(num_delo 
,dat_prin 
,sum_gp 
,kod_mat 
) 
= 
 ( select  
:num_delo as num_delo 
,:dat_prin as dat_prin 
,:sum_gp as sum_gp 
,:kod_mat as kod_mat 
 
from dual ) 
 
where 
kod_mat=:kod_mat 
;
end;
</update-text>
      <events>
        <useaction action-type="custom" event-name="object-save">
          <useaction action-type="execute-update" call="ur_mat_upd_num_reg">
            <column table="this" column="kod_mat" />
          </useaction>
          <useaction action-type="execute-update" call="ur_mat_upd_pretenz">
            <column table="this" column="kod_mat" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_mat" as="ur_mat">
          <columns>
            <column name="num_delo" type="string" title="Номер дела" />
            <column name="dat_prin" type="date" title="Дата принятия документов в суде" />
            <column name="ur_dp_priz_all" type="number" title="Всего" />
            <column name="ur_dp_priz_osn" type="number" title="Осн. реал." />
            <column name="ur_dp_priz_peni" type="number" title="Проценты (пени)" />
            <column name="ur_dp_sum_peni" type="number" title="Пени 1" visible="0" />
            <column name="ur_dp_priz_vld" type="string" title="Валидация (наличие признанных сумм по решению)" visible="0" />
            <column name="ur_dp_priz_shtr" type="number" title="Штраф" />
            <column name="sum_gp" type="number" title="Оплачено при подаче" />
            <column name="ur_hist_mat_gp_vld" type="string" title="Гос. пошлина, всего" visible="0" />
            <column name="ur_hist_mat_count" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_dp_exists_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_mat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_mat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_mat.num_delo as num_delo, /*Номер дела*//*string*/
ur_mat.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
qube.ur_dp_priz_all1 as ur_dp_priz_all, /*Всего*//*number*/
qube.ur_dp_priz_osn1 as ur_dp_priz_osn, /*Осн. реал.*//*number*/
qube.ur_dp_priz_peni1 as ur_dp_priz_peni, /*Проценты (пени)*//*number*/
qube.ur_dp_sum_peni1 as ur_dp_sum_peni, /*Пени 1*//*number*/
qube.ur_dp_priz_vld1 as ur_dp_priz_vld, /*Валидация (наличие признанных сумм по решению)*//*string*/
qube.ur_dp_priz_shtr1 as ur_dp_priz_shtr, /*Штраф*//*number*/
ur_mat.sum_gp as sum_gp, /*Оплачено при подаче*//*number*/
qube.ur_hist_mat_gp_vld1 as ur_hist_mat_gp_vld, /*string*/
qube.ur_hist_mat_count1 as ur_hist_mat_count, /*number*/
ur_mat.is_new as is_new, /*number*/
ur_mat.is_not_new as is_not_new, /*number*/
qube.ur_dp_exists_vld1 as ur_dp_exists_vld, /*Валидация (наличие привязанных документов)*//*string*/
ur_mat.kod_mat as kod_mat/*number*//*key*/

from (
--
select qube.kod_mat as kod_mat, /*number*//*key*/
sum(qube.ur_dp_sum_v1)  as ur_dp_priz_all1, /*Призн. по юр. док. всего*//*number*/
sum( case  when (kod_dogplat.vid_real = 2)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_osn1, /*Призн. по юр. док. осн. реал.*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_peni1, /*Призн. по юр. док. пени*//*number*/
sum( case  when (kod_dogplat.vid_real = 7)  then qube.ur_dp_summa1 end )  as ur_dp_sum_peni1, /*Выст. по юр. док. пени*//*number*/
max( case  when ((qube.ur_dp_has_no_priz1 &gt; 0) )  then 'Должны быть заполнены суммы по решению суда' end )  as ur_dp_priz_vld1, /*Валидация (наличие признанных сумм по решению)*//*string*/
sum( case  when (kod_dogplat.vid_real = 4)  then qube.ur_dp_sum_v2 end )  as ur_dp_priz_shtr1, /*Призн. по юр. док. штрафы*//*number*/
max( case  when ( nvl( qube.ur_hist_mat_gp_all1 ,0)  != nvl( qube.ur_mat_sum_gp1 ,0) )  then 'Сумма гос. пошлины по решению суда не соответствует сумме гос. пошлины оплаченной при подаче' end )  as ur_hist_mat_gp_vld1, /*string*/
sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
max( case  when ( nvl( qube.ur_dogplat_count1 ,0)!=0 )  then 'Есть суммы по документу' end )  as ur_dp_exists_vld1/*Валидация (наличие привязанных документов)*//*string*/

from (
--
select qube.kod_mat as kod_mat, /*number*/
qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select qube.kod_dogplat as kod_dogplat, /*number*//*key*/
qube.kod_mat as kod_mat, /*number*/
qube.ur_dogplat_count1 as ur_dogplat_count1, /*number*/
qube.ur_dp_has_no_priz1 as ur_dp_has_no_priz1, /*number*/
qube.ur_dp_sum_v2 as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
qube.ur_dp_sum_v1 as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
qube.ur_dp_summa1 as ur_dp_summa1, /*Выставленно по юр. документу*//*number*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_gp_all1, /*number*/
null as ur_mat_sum_gp1/*number*/

from (
--
select un.kod_dogplat as kod_dogplat, /*number*//*key*/
un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_dogplat_count1)  as ur_dogplat_count1, /*number*/
max(un.ur_dp_has_no_priz1)  as ur_dp_has_no_priz1, /*number*/
sum(un.ur_dp_sum_v2)  as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_sum_v1)  as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
sum(un.ur_dp_summa1)  as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
(
(
--
select kod_dogplat.kod_dogplat as kod_dogplat, /*number*//*key*/
kod_dogplat.kod_mat as kod_mat, /*number*/
kod_dogplat.cnt as ur_dogplat_count1, /*number*/
kod_dogplat.has_no_prizn as ur_dp_has_no_priz1, /*number*/
kod_dogplat.sum_v as ur_dp_sum_v2, /*Признано по юр. документу*//*number*/
kod_dogplat.sum_v as ur_dp_sum_v1, /*Признано по юр. документу*//*number*/
kod_dogplat.summa as ur_dp_summa1/*Выставленно по юр. документу*//*number*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.summa as summa, /*Выставленно по юр. документу*//*number*/
a.sum_v as sum_v, /*Признано по юр. документу*//*number*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 case  when (a.sum_v is null )  then 1 end  as has_no_prizn/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat
--\ur_dogplat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on kod_dogplat.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_dogplat, /*number*//*key*/
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
union all
(
--
select null as kod_dogplat, /*key*/
qube.kod_mat as kod_mat, /*number*/
null as ur_dogplat_count1, /*number*/
null as ur_dp_has_no_priz1, /*number*/
null as ur_dp_sum_v2, /*number*/
null as ur_dp_sum_v1, /*number*/
null as ur_dp_summa1, /*number*/
qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
qube.ur_hist_mat_gp_all1 as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
qube.ur_mat_sum_gp1 as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--
select un.kod_mat as kod_mat, /*number*//*key*/
sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
sum(un.ur_hist_mat_gp_all1)  as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
sum(un.ur_mat_sum_gp1)  as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
(
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from ( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
a
--\( select t.n2 as kod_hist_mat,t.n3 as kod_mat,t.n25 as gp_ret,t.n6 as gp_otv,t.n4 as gp_es  from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and t.f3!=3 )
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_hist_mat_a_d.kod_mat as kod_mat, /*number*//*key*/
ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
ur_hist_mat_a_d.gp_all as ur_hist_mat_gp_all1, /*Гос. пошлина, всего*//*number*/
null as ur_mat_sum_gp1/*number*/

from (
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
a.kod_mat as kod_mat, /*number*/
1 as cnt, /*number*/
 nvl( a.gp_ret ,0)  +nvl( a.gp_otv ,0)  +nvl( a.gp_es ,0)  as gp_all/*Гос. пошлина, всего*//*number*/

from (select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
a
--\(select a.kod_hist_mat as kod_hist_mat,a.kod_mat as kod_mat,a.gp_ret as gp_ret,a.gp_otv as gp_otv,a.gp_es as gp_es  from ur_hist_mat a where not exists (select * from rr_temp t where t.skod ='ur_hist_mat' and t.names=:form_id  and a.kod_hist_mat=t.f2 ))
)
ur_hist_mat_a_d
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat/*number*//*key*/

from (select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_hist_mat_a_d.kod_mat = ur_mat.kod_mat--\ur_mat
where
ur_mat.kod_mat is not null )
--\
union all
(
--
select ur_mat.kod_mat as kod_mat, /*number*//*key*/
null as ur_hist_mat_count1, /*number*/
null as ur_hist_mat_gp_all1, /*number*/
ur_mat.sum_gp as ur_mat_sum_gp1/*Оплачено госпошлины при подаче*//*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.sum_gp as sum_gp/*Оплачено госпошлины при подаче*//*number*/

from (select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.sum_gp as sum_gp  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.n9 as sum_gp  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat
--\ur_mat
where
ur_mat.kod_mat is not null )
--\
)
--\
)
un
--\
 group by
un.kod_mat/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real/**//*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat on kod_dogplat.kod_dogplat = qube.kod_dogplat--\ur_dogplat
 group by
qube.kod_mat/*number*//*key*/
)
qube
--\
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_prin as dat_prin, /*Дата принятия документов в суде*//*date*/
a.sum_gp as sum_gp, /*Оплачено госпошлины при подаче*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_mat as kod_mat,a.num_delo as num_delo,a.dat_prin as dat_prin,a.sum_gp as sum_gp,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.s1 as num_delo,t.d2 as dat_prin,t.n9 as sum_gp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
a
--\(select a.kod_mat as kod_mat,a.num_delo as num_delo,a.dat_prin as dat_prin,a.sum_gp as sum_gp,0 as is_new,1 as is_not_new  from ur_mat a where not exists (select * from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and a.kod_mat=t.f2 ) and   a.kod_mat in :kod_mat_prm   union all  select t.n3 as kod_mat,t.s1 as num_delo,t.d2 as dat_prin,t.n9 as sum_gp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_mat' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_mat_prm )
)
ur_mat on ur_mat.kod_mat = qube.kod_mat--\ur_mat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="dp_gp" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select dp_gp.kod_sf2 as kod_sf_gp, 
dp_gp.is_new as is_new, /*number*/
dp_gp.is_not_new as is_not_new, /*number*/
dp_gp.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv, /**//*number*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
)
dp_gp
--\ur_dogplat
where
(dp_gp.kod_mat = :p_kod )  and (dp_gp.vid_real = 9)  and (dp_gp.prizn_konv = 1) --\
</select-text>
      <columns>
        <column name="kod_sf_gp" table="dp_gp" type="number" title="" parname="kod_sf_gp" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dp_gp.kod_sf2 as kod_sf_gp, 
dp_gp.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_gp
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="dp_gp" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="dp_gp" type="number" title="" is-user-editable="1" />
        <column name="kod_dogplat" table="dp_gp" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod_dogplat 
) 
 values  
(r.kod_dogplat 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='dp_gp' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('dp_gp' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,a.kod 
,a.kod_deb 
,a.kod_sdp 
,a.dat_form 
,a.u_m 
,a.d_m 
,a.kod_sf 
,a.summa 
,a.vid_real 
,a.sum_v 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.ym 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n8 
,n3 
,d1 
,s1 
,d2 
,n4 
,n7 
,n6 
,n9 
,n10 
,d3 
,n11 
,n12 
,n5 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('dp_gp' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
,r.kod 
,r.kod_deb 
,r.kod_sdp 
,r.dat_form 
,r.u_m 
,r.d_m 
,r.kod_sf 
,r.summa 
,r.vid_real 
,r.sum_v 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.ym 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='dp_gp' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod_dogplat 
) 
= 
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="dp_gp">
          <columns>
            <column name="kod_sf_gp" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select dp_gp.kod_sf2 as kod_sf_gp, 
dp_gp.is_new as is_new, /*number*/
dp_gp.is_not_new as is_not_new, /*number*/
dp_gp.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_gp' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_gp
--\ur_dogplat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="dp_peni" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select dp_peni.kod_sf2 as kod_sf_peni, 
dp_peni.is_new as is_new, /*number*/
dp_peni.is_not_new as is_not_new, /*number*/
dp_peni.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv, /**//*number*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
)
dp_peni
--\ur_dogplat
where
(dp_peni.kod_mat = :p_kod )  and (dp_peni.vid_real = 7)  and (dp_peni.prizn_konv = 1) --\
</select-text>
      <columns>
        <column name="kod_sf_peni" table="dp_peni" type="number" title="" parname="kod_sf_peni" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dp_peni.kod_sf2 as kod_sf_peni, 
dp_peni.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_peni
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="dp_peni" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="dp_peni" type="number" title="" is-user-editable="1" />
        <column name="kod_dogplat" table="dp_peni" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod_dogplat 
) 
 values  
(r.kod_dogplat 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='dp_peni' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('dp_peni' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,a.kod 
,a.kod_deb 
,a.kod_sdp 
,a.dat_form 
,a.u_m 
,a.d_m 
,a.kod_sf 
,a.summa 
,a.vid_real 
,a.sum_v 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.ym 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n8 
,n3 
,d1 
,s1 
,d2 
,n4 
,n7 
,n6 
,n9 
,n10 
,d3 
,n11 
,n12 
,n5 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('dp_peni' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
,r.kod 
,r.kod_deb 
,r.kod_sdp 
,r.dat_form 
,r.u_m 
,r.d_m 
,r.kod_sf 
,r.summa 
,r.vid_real 
,r.sum_v 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.ym 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='dp_peni' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod_dogplat 
) 
= 
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="dp_peni">
          <columns>
            <column name="kod_sf_peni" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select dp_peni.kod_sf2 as kod_sf_peni, 
dp_peni.is_new as is_new, /*number*/
dp_peni.is_not_new as is_not_new, /*number*/
dp_peni.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_peni' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_peni
--\ur_dogplat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="dp_shtraf" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_dogplat" key="kod_dogplat" is-ms-upd="1" is-top="1" key-dimension="kod_dogplat">
      <select-text>
--
select dp_shtraf.kod_sf2 as kod_sf_shtraf, 
dp_shtraf.is_new as is_new, /*number*/
dp_shtraf.is_not_new as is_not_new, /*number*/
dp_shtraf.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.vid_real as vid_real, /**//*number*/
a.prizn_konv as prizn_konv, /**//*number*/
a.kod_mat as kod_mat, /*number*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_dogplat
a
--\ur_dogplat
)
dp_shtraf
--\ur_dogplat
where
(dp_shtraf.kod_mat = :p_kod )  and (dp_shtraf.vid_real = 4)  and (dp_shtraf.prizn_konv = 1) --\
</select-text>
      <columns>
        <column name="kod_sf_shtraf" table="dp_shtraf" type="number" title="" parname="kod_sf_shtraf" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_dogplat_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_dogplat_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select dp_shtraf.kod_sf2 as kod_sf_shtraf, 
dp_shtraf.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp  from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_shtraf
--\ur_dogplat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="dp_shtraf" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="dp_shtraf" type="number" title="" is-user-editable="1" />
        <column name="kod_dogplat" table="dp_shtraf" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_dogplat" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into ur_dogplat 
(kod_dogplat 
) 
 values  
(r.kod_dogplat 
) 
 returning  
kod_dogplat into :kod_dogplat; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_dogplat where kod_dogplat=:kod_dogplat</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='dp_shtraf' 
and 
names=:form_id 
and 
f2=:kod_dogplat; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('dp_shtraf' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
); 
end loop; 
else 
for r in  
 ( select  
:kod_dogplat as kod_dogplat 
,a.kod 
,a.kod_deb 
,a.kod_sdp 
,a.dat_form 
,a.u_m 
,a.d_m 
,a.kod_sf 
,a.summa 
,a.vid_real 
,a.sum_v 
,a.kod_izv 
,a.dat_form_v 
,a.kod_dog 
,a.tep_el 
,a.ym 
,a.num_doc 
,a.dat_doc 
,a.dat_bzad 
,a.dat_mor 
,a.dat_priem 
,a.prizn_konv 
,a.kodp 
,a.kod_sogl 
,a.kod_pretenz 
,a.kod_mat 
,a.kod_inkasso 
,a.kod_kazn 
,a.kod_stage_bk 
,a.kod_likvid 
,a.kod_dead 
,a.kod_folders 
,a.kod_sf_dp 
,a.kod_deb_sf 
 
from ur_dogplat a  where kod_dogplat=:kod_dogplat) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n8 
,n3 
,d1 
,s1 
,d2 
,n4 
,n7 
,n6 
,n9 
,n10 
,d3 
,n11 
,n12 
,n5 
,n13 
,d4 
,d5 
,d6 
,d7 
,n14 
,n15 
,n16 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,n24 
,n25 
,n26 
) 
 values  
('dp_shtraf' 
,:form_id 
,:kod_dogplat 
,:row_state_id 
,r.kod_dogplat 
,r.kod 
,r.kod_deb 
,r.kod_sdp 
,r.dat_form 
,r.u_m 
,r.d_m 
,r.kod_sf 
,r.summa 
,r.vid_real 
,r.sum_v 
,r.kod_izv 
,r.dat_form_v 
,r.kod_dog 
,r.tep_el 
,r.ym 
,r.num_doc 
,r.dat_doc 
,r.dat_bzad 
,r.dat_mor 
,r.dat_priem 
,r.prizn_konv 
,r.kodp 
,r.kod_sogl 
,r.kod_pretenz 
,r.kod_mat 
,r.kod_inkasso 
,r.kod_kazn 
,r.kod_stage_bk 
,r.kod_likvid 
,r.kod_dead 
,r.kod_folders 
,r.kod_sf_dp 
,r.kod_deb_sf 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='dp_shtraf' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_dogplat set  
(kod_dogplat 
) 
= 
 ( select  
:kod_dogplat as kod_dogplat 
 
from dual ) 
 
where 
kod_dogplat=:kod_dogplat 
;
end;
</update-text>
      <scheme>
        <table name="ur_dogplat" as="dp_shtraf">
          <columns>
            <column name="kod_sf_shtraf" type="number" title="" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_dogplat" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_dogplat_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_dogplat_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select dp_shtraf.kod_sf2 as kod_sf_shtraf, 
dp_shtraf.is_new as is_new, /*number*/
dp_shtraf.is_not_new as is_not_new, /*number*/
dp_shtraf.kod_dogplat as kod_dogplat/*number*//*key*/

from (
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
 nvl( a.kod_sf , a.kod_sf_dp )  as kod_sf2, 
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
a
--\(select a.kod_dogplat as kod_dogplat,a.kod_sf as kod_sf,a.kod_sf_dp as kod_sf_dp,0 as is_new,1 as is_not_new  from ur_dogplat a where not exists (select * from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and a.kod_dogplat=t.f2 ) and   a.kod_dogplat in :kod_dogplat_prm   union all  select t.n1 as kod_dogplat,t.n4 as kod_sf,t.n25 as kod_sf_dp,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='dp_shtraf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_dogplat_prm )
)
dp_shtraf
--\ur_dogplat
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="f10" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="is_customer10_flag" key="val" is-ms-upd="0" is-top="1">
      <select-text>
--
select f10.val as val/*number*/

from (
--is_customer10_flag
select  case  when (a.customer_id = 10)  then 1 else 0 end  as val/*number*/

from (
--rs_rep_sets
select a.customer_id as customer_id/**//*number*/

from rs_rep_sets
a
--\rs_rep_sets
)
a
--\rs_rep_sets
)
f10
--\is_customer10_flag
--\
</select-text>
      <columns>
        <column name="val" table="f10" type="number" title="" parname="f10" ColumnVisible="0" is-refreshed="1" />
      </columns>
      <scheme>
        <table name="is_customer10_flag" as="f10">
          <columns>
            <column name="val" type="number" title="" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
    </table>
  </dataset>
</root>