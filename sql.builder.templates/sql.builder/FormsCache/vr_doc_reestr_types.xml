<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="vr_doc_reestr_types" title="Настройка выходных каталогов для документов" timestamp="28.12.2023 14:57:09" is-report="1" folder="rep_avans" with-behavior="0" file="sql.builder.templates\sql.builder\projects\ipr\forms\vr_doc_reestr_types.xml" elid="285" ord="285" leaf="0" lvl="2" pelid="">
    <grid table="vr_doc_reestr_types" show-toolbar="1" id="44490368">
      <toolbar id="1026211">
        <uicommand action-type="dynamic-form" call="vr_doc_reestr_folders" modal="1" title="Настройка списка выходных каталогов" id="7616592" />
      </toolbar>
      <columns id="45156615">
        <field table="vr_doc_reestr_types" name="kod_doc_type" title="Тип документа" width="238" controlType="UICombo" rows-limit="100" id="54389230" />
        <field table="vr_doc_reestr_types" name="kod_folder" title="Каталог" width="231" controlType="UICombo" rows-limit="100" id="17005945" />
      </columns>
    </grid>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="vr_doc_reestr_types_has_changes" parname="vr_doc_reestr_types_has_changes" />
    </fields>
    <table name="vr_doc_reestr_types" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_doc_reestr_types" key="kod_type" is-ms-upd="1" is-top="1">
      <select-text>
--
select vr_doc_reestr_types.kod_doc_type as kod_doc_type, /*Тип документа*//*number*/
vr_doc_reestr_types.kod_folder as kod_folder, /*Каталог*//*number*/
kod_doc_type_x_n.name as kod_doc_type_x_n, /*Тип документа*//*string*/
kod_folder_x_n.name as kod_folder_x_n, /*Каталог*//*string*/
vr_doc_reestr_types.is_new as is_new, /*number*/
vr_doc_reestr_types.is_not_new as is_not_new, /*number*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_doc_type as kod_doc_type, /*number*/
a.kod_folder as kod_folder, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_doc_reestr_types
a
--\vr_doc_reestr_types
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name/*string*/

from vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
)
kod_folder_x_n on vr_doc_reestr_types.kod_folder = kod_folder_x_n.kod_folder--\vr_doc_reestr_folders
left outer join
(
--ips_doc_type
select a.kod_doc_type as kod_doc_type, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ips_doc_type
a
--\ips_doc_type
)
kod_doc_type_x_n on vr_doc_reestr_types.kod_doc_type = kod_doc_type_x_n.kod_doc_type--\ips_doc_type
--\
</select-text>
      <columns>
        <column name="kod_doc_type" table="vr_doc_reestr_types" type="number" title="Тип документа" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_doc_type" temp-col-name="n1">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\ips_doc_type.xml" elid="4057" ord="4057" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_doc_type" as="kod_doc_type" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_doc_type" into="n1">a.kod_doc_type as kod_doc_type, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Наименование" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Наименование*//*string*/
</column></select>
                <from>
from <query name="ips_doc_type" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ips_doc_type
select <column table="a" column="kod_doc_type" type="number" as="kod_doc_type" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_doc_type" used="1">a.kod_doc_type as kod_doc_type, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Наименование" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Наименование*//*string*/
</column></select><from>
from <table name="ips_doc_type" as="a" used="1">ips_doc_type
a
--\ips_doc_type
</table></from>)
a
--\ips_doc_type
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_doc_type" as="kod_doc_type" title="" key="1" thissrc="kod_doc_type">a.kod_doc_type</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_doc_type" as="kod_doc_type" title="" key="1" thissrc="kod_doc_type">a.kod_doc_type</column><text txtype="func"> ) like lower( </text><const><text>:kod_doc_type_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Наименование" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\ips_doc_type.xml" elid="4057" ord="4057" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\ips_doc_type.xml" elid="4057" ord="4057" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_doc_type_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_doc_type" as="kod_doc_type" title="" key="1" />
                    <column table="a" column="name" as="name" title="Наименование" />
                  </select>
                  <from>
                    <query name="ips_doc_type" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_doc_type" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_doc_type" />
                        <useparam name="kod_doc_type_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_doc_type_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_doc_type_filter" type="string">
                  <const>:kod_doc_type_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_doc_reestr_types">
              <params>
                <param name="kod_type_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_type_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_doc_type_x_n.name as kod_doc_type_x_n, /*Тип документа*//*string*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_doc_type as kod_doc_type/*number*/

from (select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
a
--\(select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--ips_doc_type
select a.kod_doc_type as kod_doc_type, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ips_doc_type
a
--\ips_doc_type
)
kod_doc_type_x_n on vr_doc_reestr_types.kod_doc_type = kod_doc_type_x_n.kod_doc_type--\ips_doc_type
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_doc_type_x_n" table="vr_doc_reestr_types" />
          </dependants>
        </column>
        <column name="kod_folder" table="vr_doc_reestr_types" type="number" title="Каталог" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folder" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query timestamp="30.06.2017 17:45:15" class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\vr_doc_reestr_folders.xml" elid="4263" ord="4263" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folder" as="kod_folder" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_folder" into="n1">a.kod_folder as kod_folder, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/**//*string*/
</column></select>
                <from>
from <query name="vr_doc_reestr_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--vr_doc_reestr_folders
select <column table="a" column="kod_folder" key="1" type="number" as="kod_folder" used="1" sourcetable="./a/a" sourcecolumn="kod_folder">a.kod_folder as kod_folder, /*number*//*key*/
</column><column table="a" column="name" type="string" data-size="50" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*string*/
</column></select><from>
from <table name="vr_doc_reestr_folders" as="a" used="1">vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
</table></from>)
a
--\vr_doc_reestr_folders
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folder" as="kod_folder" title="" key="1" thissrc="kod_folder">a.kod_folder</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folder" as="kod_folder" title="" key="1" thissrc="kod_folder">a.kod_folder</column><text txtype="func"> ) like lower( </text><const><text>:kod_folder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" timestamp="30.06.2017 17:45:15" class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\vr_doc_reestr_folders.xml" elid="4263" ord="4263" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query timestamp="30.06.2017 17:45:15" class="1" file="sql.builder.templates\sql.builder\projects\ipr_scheme\scheme\original\vr_doc_reestr_folders.xml" elid="4263" ord="4263" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folder_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folder" as="kod_folder" title="" key="1" />
                    <column table="a" column="name" as="name" title="" />
                  </select>
                  <from>
                    <query name="vr_doc_reestr_folders" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folder" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folder" />
                        <useparam name="kod_folder_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folder_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folder_filter" type="string">
                  <const>:kod_folder_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="vr_doc_reestr_types">
              <params>
                <param name="kod_type_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_type_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folder_x_n.name as kod_folder_x_n, /*Каталог*//*string*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_folder as kod_folder/*number*/

from (select a.kod_type as kod_type,a.kod_folder as kod_folder  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n2 as kod_folder  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
a
--\(select a.kod_type as kod_type,a.kod_folder as kod_folder  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n2 as kod_folder  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name/*string*/

from vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
)
kod_folder_x_n on vr_doc_reestr_types.kod_folder = kod_folder_x_n.kod_folder--\vr_doc_reestr_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_folder_x_n" table="vr_doc_reestr_types" />
          </dependants>
        </column>
        <column name="kod_doc_type_x_n" table="vr_doc_reestr_types.kod_doc_type" type="string" title="Тип документа" text-source-for="kod_doc_type" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_type_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_type_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_doc_type_x_n.name as kod_doc_type_x_n, /*Тип документа*//*string*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_doc_type as kod_doc_type/*number*/

from (select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
a
--\(select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--ips_doc_type
select a.kod_doc_type as kod_doc_type, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ips_doc_type
a
--\ips_doc_type
)
kod_doc_type_x_n on vr_doc_reestr_types.kod_doc_type = kod_doc_type_x_n.kod_doc_type--\ips_doc_type
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folder_x_n" table="vr_doc_reestr_types.kod_folder" type="string" title="Каталог" text-source-for="kod_folder" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_type_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_type_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_folder_x_n.name as kod_folder_x_n, /*Каталог*//*string*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_folder as kod_folder/*number*/

from (select a.kod_type as kod_type,a.kod_folder as kod_folder  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n2 as kod_folder  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
a
--\(select a.kod_type as kod_type,a.kod_folder as kod_folder  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n2 as kod_folder  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name/*string*/

from vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
)
kod_folder_x_n on vr_doc_reestr_types.kod_folder = kod_folder_x_n.kod_folder--\vr_doc_reestr_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="vr_doc_reestr_types" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_doc_reestr_types" type="number" title="" is-user-editable="1" />
        <column name="kod_type" table="vr_doc_reestr_types" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_type" temp-col-name="n3" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_doc_type as kod_doc_type 
,:kod_folder as kod_folder 
,:kod_type as kod_type 
 
from dual ) 
 
loop 
insert into vr_doc_reestr_types 
(kod_doc_type 
,kod_folder 
,kod_type 
) 
 values  
(r.kod_doc_type 
,r.kod_folder 
,r.kod_type 
) 
 returning  
kod_type into :kod_type; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_doc_reestr_types where kod_type=:kod_type</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_doc_reestr_types' 
and 
names=:form_id 
and 
f2=:kod_type; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_doc_type as kod_doc_type 
,:kod_folder as kod_folder 
,:kod_type as kod_type 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
) 
 values  
('vr_doc_reestr_types' 
,:form_id 
,:kod_type 
,:row_state_id 
,r.kod_doc_type 
,r.kod_folder 
,r.kod_type 
); 
end loop; 
else 
for r in  
 ( select  
:kod_doc_type as kod_doc_type 
,:kod_folder as kod_folder 
,:kod_type as kod_type 
 
from vr_doc_reestr_types a  where kod_type=:kod_type) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
) 
 values  
('vr_doc_reestr_types' 
,:form_id 
,:kod_type 
,:row_state_id 
,r.kod_doc_type 
,r.kod_folder 
,r.kod_type 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_doc_reestr_types' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_doc_reestr_types set  
(kod_doc_type 
,kod_folder 
,kod_type 
) 
= 
 ( select  
:kod_doc_type as kod_doc_type 
,:kod_folder as kod_folder 
,:kod_type as kod_type 
 
from dual ) 
 
where 
kod_type=:kod_type 
;
end;
</update-text>
      <scheme>
        <table name="vr_doc_reestr_types" as="vr_doc_reestr_types">
          <columns>
            <column name="kod_doc_type" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folder" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_doc_type_x_n" type="string" title="Тип документа" />
            <column name="kod_folder_x_n" type="string" title="Каталог" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_type" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_doc_type_x_n" type="string" title="Тип документа" />
            <column name="kod_doc_type" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folder_x_n" type="string" title="Каталог" />
            <column name="kod_folder" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_type" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_type_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_type_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select vr_doc_reestr_types.kod_doc_type as kod_doc_type, /*Тип документа*//*number*/
vr_doc_reestr_types.kod_folder as kod_folder, /*Каталог*//*number*/
kod_doc_type_x_n.name as kod_doc_type_x_n, /*Тип документа*//*string*/
kod_folder_x_n.name as kod_folder_x_n, /*Каталог*//*string*/
vr_doc_reestr_types.is_new as is_new, /*number*/
vr_doc_reestr_types.is_not_new as is_not_new, /*number*/
vr_doc_reestr_types.kod_type as kod_type/*number*//*key*/

from (
--vr_doc_reestr_types
select a.kod_type as kod_type, /*number*//*key*/
a.kod_doc_type as kod_doc_type, /*number*/
a.kod_folder as kod_folder, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type,a.kod_folder as kod_folder,0 as is_new,1 as is_not_new  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type,t.n2 as kod_folder,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
a
--\(select a.kod_type as kod_type,a.kod_doc_type as kod_doc_type,a.kod_folder as kod_folder,0 as is_new,1 as is_not_new  from vr_doc_reestr_types a where not exists (select * from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and a.kod_type=t.f2 ) and   a.kod_type in :kod_type_prm   union all  select t.n3 as kod_type,t.n1 as kod_doc_type,t.n2 as kod_folder,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_doc_reestr_types' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_type_prm )
)
vr_doc_reestr_types
--\vr_doc_reestr_types
left outer join
(
--vr_doc_reestr_folders
select a.kod_folder as kod_folder, /*number*//*key*/
a.name as name/*string*/

from vr_doc_reestr_folders
a
--\vr_doc_reestr_folders
)
kod_folder_x_n on vr_doc_reestr_types.kod_folder = kod_folder_x_n.kod_folder--\vr_doc_reestr_folders
left outer join
(
--ips_doc_type
select a.kod_doc_type as kod_doc_type, /*number*//*key*/
a.name as name/*Наименование*//*string*/

from ips_doc_type
a
--\ips_doc_type
)
kod_doc_type_x_n on vr_doc_reestr_types.kod_doc_type = kod_doc_type_x_n.kod_doc_type--\ips_doc_type
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>