<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_sogl_graf" timestamp="28.12.2023 14:57:03" title="Графики погашения задолженности" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_graf.xml" elid="283" ord="283" leaf="0" lvl="2" pelid="">
    <field table="ur_graf" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="9730746" />
    <field table="ur_graf" name="ur_prizn" title="Тип документа" controlType="UICombo" rows-limit="100" id="5320493" />
    <field table="ur_graf" name="kod_sogl" title="Документ" controlType="UICombo" rows-limit="100" id="47097205" />
    <field table="ur_graf" name="kod_isp" title="Документ" controlType="UICombo" rows-limit="100" id="24479043" />
    <field table="ur_graf" name="kod_hist_mat" title="Документ" controlType="UICombo" rows-limit="100" id="42155051" />
    <field table="ur_graf" name="kod_tipdoc" title="Тип документа" controlType="UICombo" rows-limit="100" id="33504533" />
    <splitcontainer id="61247749">
      <fieldgroup title="  " id="7486642">
        <grid table="ur_sogl" id="20400537">
          <columns id="5449735">
            <field table="ur_sogl" name="kod_tipdoc" title="Тип документа" controlType="UICombo" rows-limit="100" id="27608503" />
            <field table="ur_sogl" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="41547797" />
          </columns>
        </grid>
      </fieldgroup>
    </splitcontainer>
  </form>
  <dataset>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_sogl_has_changes" parname="ur_sogl_has_changes" />
      <field type="string" name="ur_graf_has_changes" parname="ur_graf_has_changes" />
    </fields>
    <table name="ur_sogl" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_sogl" key="kod_sogl" is-ms-upd="1" is-top="1" key-dimension="kod_sogl">
      <select-text>
--
select ur_sogl.kod_tipdoc as kod_tipdoc, /*number*/
kod_graf.kodp as kodp, /*number*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_sogl.is_new as is_new, /*number*/
ur_sogl.is_not_new as is_not_new, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_sogl
a
--\ur_sogl
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
left outer join
(
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kodp as kodp/**//*number*/

from ur_graf
a
--\ur_graf
)
kod_graf on ur_sogl.kod_sogl = kod_graf.kod_sogl--\ur_graf
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_graf.kodp = kodp_x_n.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="kod_tipdoc" table="ur_sogl" type="number" title="Тип документа" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_tipdoc" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2256" ord="2256" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_tipdoc" into="n1">a.kod_tipdoc as kod_tipdoc, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Тип документа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Тип документа*//*string*/
</column></select>
                <from>
from <query name="kk_tipdoc_ur_1" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kk_tipdoc_ur_1
select <column table="a" column="kod_tipdoc" type="number" as="kod_tipdoc" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_tipdoc" used="1">a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Тип документа" vid="1" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Тип документа*//*string*/
</column></select><from>
from <table name="kk_tipdoc" as="a" title="Тип документа" used="1">kk_tipdoc
a
--\kk_tipdoc
</table></from><where>where
<call function="=" pth="" type="bool"><column table="a" column="ur_prizn">a.ur_prizn</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\kk_tipdoc_ur_1
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" thissrc="kod_tipdoc">a.kod_tipdoc</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" thissrc="kod_tipdoc">a.kod_tipdoc</column><text txtype="func"> ) like lower( </text><const><text>:kod_tipdoc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Тип документа" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2256" ord="2256" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2256" ord="2256" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_tipdoc_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_tipdoc" as="kod_tipdoc" title="" key="1" />
                    <column table="a" column="name" as="name" title="Тип документа" />
                  </select>
                  <from>
                    <query name="kk_tipdoc_ur_1" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_tipdoc" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_tipdoc" />
                        <useparam name="kod_tipdoc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_tipdoc_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_tipdoc_filter" type="string">
                  <const>:kod_tipdoc_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_sogl">
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_tipdoc_x_n" table="ur_sogl" />
          </dependants>
        </column>
        <column name="kodp" table="kod_graf" type="number" title="Абонент" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_graf.kodp as kodp, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kodp as kodp/**//*number*/

from ur_graf
a
--\ur_graf
)
kod_graf on ur_sogl.kod_sogl = kod_graf.kod_sogl--\ur_graf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_tipdoc_x_n" table="ur_sogl.kod_tipdoc" type="string" title="Тип документа" text-source-for="kod_tipdoc" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="kod_graf.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_sogl_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_sogl_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl/*number*//*key*/

from (select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kodp as kodp/**//*number*/

from ur_graf
a
--\ur_graf
)
kod_graf on ur_sogl.kod_sogl = kod_graf.kod_sogl--\ur_graf
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_graf.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_sogl" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_sogl" type="number" title="" is-user-editable="1" />
        <column name="kod_sogl" table="ur_sogl" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_sogl" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_tipdoc as kod_tipdoc 
,:kod_sogl as kod_sogl 
 
from dual ) 
 
loop 
insert into ur_sogl 
(kod_tipdoc 
,kod_sogl 
) 
 values  
(r.kod_tipdoc 
,r.kod_sogl 
) 
 returning  
kod_sogl into :kod_sogl; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_sogl where kod_sogl=:kod_sogl</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_sogl' 
and 
names=:form_id 
and 
f2=:kod_sogl; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_tipdoc as kod_tipdoc 
,:kod_sogl as kod_sogl 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n1 
) 
 values  
('ur_sogl' 
,:form_id 
,:kod_sogl 
,:row_state_id 
,r.kod_tipdoc 
,r.kod_sogl 
); 
end loop; 
else 
for r in  
 ( select  
:kod_tipdoc as kod_tipdoc 
,:kod_sogl as kod_sogl 
,a.kod_folders 
,a.kod_subject 
,a.num_reg 
,a.dat_do 
,a.dat_doc 
,a.dat_finish 
,a.u_m 
,a.d_m 
,a.prim 
,a.count_mes 
,a.status 
,a.kodp 
,a.proc 
,a.ogr 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_emp 
,a.kod_vi 
,a.dep 
,a.dat_finish_f 
,a.opl_proc 
,a.opl_ogr 
 
from ur_sogl a  where kod_sogl=:kod_sogl) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n1 
,n7 
,n3 
,s1 
,d2 
,d1 
,d3 
,s2 
,d4 
,s3 
,n4 
,n8 
,n9 
,n10 
,n5 
,n11 
,n12 
,n13 
,n14 
,n15 
,n16 
,d5 
,n17 
,n6 
) 
 values  
('ur_sogl' 
,:form_id 
,:kod_sogl 
,:row_state_id 
,r.kod_tipdoc 
,r.kod_sogl 
,r.kod_folders 
,r.kod_subject 
,r.num_reg 
,r.dat_do 
,r.dat_doc 
,r.dat_finish 
,r.u_m 
,r.d_m 
,r.prim 
,r.count_mes 
,r.status 
,r.kodp 
,r.proc 
,r.ogr 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_emp 
,r.kod_vi 
,r.dep 
,r.dat_finish_f 
,r.opl_proc 
,r.opl_ogr 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_sogl' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_sogl set  
(kod_tipdoc 
,kod_sogl 
) 
= 
 ( select  
:kod_tipdoc as kod_tipdoc 
,:kod_sogl as kod_sogl 
 
from dual ) 
 
where 
kod_sogl=:kod_sogl 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="custom">
          <useaction name="ur_save.p_graf_sync_bzad">
            <const>null</const>
            <column table="this" column="kod_sogl" />
            <const>null</const>
          </useaction>
          <useaction action-type="execute-update" call="ur_sogl_upd_num_reg">
            <column table="this" column="kod_sogl" />
          </useaction>
        </useaction>
      </events>
      <scheme>
        <table name="ur_sogl" as="ur_sogl">
          <columns>
            <column name="kod_tipdoc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_tipdoc_x_n" type="string" title="Тип документа" />
            <column name="kodp_x_n" type="string" title="Абонент" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sogl" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_tipdoc_x_n" type="string" title="Тип документа" />
            <column name="kod_tipdoc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" />
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sogl" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_sogl_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_sogl_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_sogl.kod_tipdoc as kod_tipdoc, /*number*/
kod_graf.kodp as kodp, /*number*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_sogl.is_new as is_new, /*number*/
ur_sogl.is_not_new as is_not_new, /*number*/
ur_sogl.kod_sogl as kod_sogl/*number*//*key*/

from (
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc,0 as is_new,1 as is_not_new  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
a
--\(select a.kod_sogl as kod_sogl,a.kod_tipdoc as kod_tipdoc,0 as is_new,1 as is_not_new  from ur_sogl a where not exists (select * from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and a.kod_sogl=t.f2 ) and   a.kod_sogl in :kod_sogl_prm   union all  select t.n1 as kod_sogl,t.n2 as kod_tipdoc,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_sogl' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_sogl_prm )
)
ur_sogl
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on ur_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
left outer join
(
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl, /*number*/
a.kodp as kodp/**//*number*/

from ur_graf
a
--\ur_graf
)
kod_graf on ur_sogl.kod_sogl = kod_graf.kod_sogl--\ur_graf
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on kod_graf.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_graf" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" new-rows-vis-for-other-tbls="1" update-target="ur_graf" key="kod_graf" parent-table="ur_sogl" parent-key="kod_sogl" is-ms-upd="1" key-dimension="kod_graf">
      <select-text>
--
select ur_graf.kodp as kodp, /*number*/
ur_graf.ur_prizn as ur_prizn, /*Тип документа*//*number*/
ur_graf.kod_sogl as kod_sogl, /*Документ*//*number*/
ur_graf.kod_isp as kod_isp, /*Документ*//*number*/
ur_graf.kod_hist_mat as kod_hist_mat, /*Документ*//*number*/
kod_sogl.kod_tipdoc as kod_tipdoc, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_prizn_x_n.name as ur_prizn_x_n, /*Тип документа*//*string*/
kod_sogl_x_n.full_name as kod_sogl_x_n, /*Документ*//*string*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Документ*//*string*/
kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Документ*//*string*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_graf.is_dop as is_dop, /*number*/
ur_graf.kod_folders as kod_folders, /*number*/
ur_graf.is_isp as is_isp, /*number*/
ur_graf.is_mat as is_mat, /*number*/
ur_graf.is_new as is_new, /*number*/
ur_graf.is_not_new as is_not_new, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat, /*Решение*//*number*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders, /*number*/
kod_tipdoc.ur_prizn as ur_prizn, /*Тип документа*//*number*/
 case  when (kod_tipdoc.ur_prizn = 3)  then 1 else 0 end  as is_isp, /*number*/
 case  when (kod_tipdoc.ur_prizn = 2)  then 1 else 0 end  as is_mat, /*number*/
 case  when (kod_tipdoc.ur_prizn = 1)  then 1 else 0 end  as is_dop, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_graf
a
--\ur_graf
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_graf.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on ur_graf.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
kod_tipdoc.abbr || ' ' || a.num_reg || ' от  ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Аббревиатура*//*string*/

from ur_sogl
a
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
kod_sogl_x_n on ur_graf.kod_sogl = kod_sogl_x_n.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc_ur_prizn
select a.kod as kod, /*number*//*key*/
a.name as name/*string*/

from (
      select 1 as kod,'Прочие' as name from dual union
      select 2,'Мировое соглашение (судебное)' from dual union
      select 3,'Исполнительный лист' from dual 
    )a
--\kk_tipdoc_prizn
)
ur_prizn_x_n on ur_prizn_x_n.kod = ur_graf.ur_prizn--\kk_tipdoc_ur_prizn
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_graf.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on ur_graf.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on kod_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
where
ur_graf.kod_sogl = :fk_kod_sogl --\
</select-text>
      <columns>
        <column name="kodp" table="ur_graf" type="number" title="Абонент" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n9">
          <sel-list-compiled>
            <root>
              <query title="Абонент" class="1" name-field-name="num_name" timestamp="09.06.2023 15:13:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_payer.xml" elid="2813" ord="2813" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kodp" as="kodp" title="" key="1" used="1" type="number" agg="max" sourcetable="./a/a" sourcecolumn="kodp" into="n1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="nump" as="nump" title="Код абонента" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="nump" into="s1">a.nump as nump, /*Код абонента*//*string*/
</column><column table="a" column="name" as="name" title="Наименование абонента" key="0" used="1" type="string" agg="list" sourcetable="./a/a" sourcecolumn="name" into="s2">a.name as name/*Наименование абонента*//*string*/
</column></select>
                <from>
from <query name="kr_payer" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kr_payer
select <column table="a" column="kodp" type="number" title="" comment="уник. код абонента" fact="kr_payer_kodp" agg="max" as="kodp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="nump" type="string" title="Код абонента" comment="номер абонента" vid="1" is-name="1" as="nump" key="0" sourcetable="./a/a" sourcecolumn="nump" used="1">a.nump as nump, /*Код абонента*//*string*/
</column><column table="a" column="name" type="string" title="Наименование абонента" comment="наименование" vid="1" is-name="1" is-fact="1" agg="list" as="name" fact="kr_payer_name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*Наименование абонента*//*string*/
</column></select><from>
from <table name="kr_payer" as="a" title="Абонент" used="1">kr_payer
a
--\kr_payer
</table></from>)
a
--\kr_payer
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" as="kodp" title="" key="1" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" as="kodp" title="" key="1" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="nump" as="nump" title="Код абонента" thissrc="nump">a.nump</column><text txtype="func"> ) like lower( </text><const><text>:nump_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Наименование абонента" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Абонент" class="1" name-field-name="num_name" timestamp="09.06.2023 15:13:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_payer.xml" elid="2813" ord="2813" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Абонент" class="1" name-field-name="num_name" timestamp="09.06.2023 15:13:17" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\kr_payer.xml" elid="2813" ord="2813" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="nump_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" as="kodp" title="" key="1" />
                    <column table="a" column="nump" as="nump" title="Код абонента" />
                    <column table="a" column="name" as="name" title="Наименование абонента" />
                  </select>
                  <from>
                    <query name="kr_payer" as="a" title="Абонент" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="nump" />
                        <useparam name="nump_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="nump_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="nump_filter" type="string">
                  <const>:nump_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_graf">
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_graf as kod_graf,a.kodp as kodp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n9 as kodp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kodp as kodp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n9 as kodp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_graf.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="ur_graf" />
          </dependants>
        </column>
        <column name="ur_prizn" table="ur_graf" type="number" title="Тип документа" ColumnEditable="1" is-user-editable="1" ColumnMandatory="1" is-updateable-ext="1" is-refreshed="1" update-target="ur_prizn" temp-col-name="n11">
          <sel-list-compiled>
            <root>
              <query class="1" title="Тип доп. документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2257" ord="2257" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod" as="kod" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod" into="n1">a.kod as kod, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/**//*string*/
</column></select>
                <from>
from <query name="kk_tipdoc_ur_prizn" as="a" path="./a/a" haskeys="1" used="1">(
<select>--kk_tipdoc_ur_prizn
select <column table="a" column="kod" type="number" as="kod" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod" used="1">a.kod as kod, /*number*//*key*/
</column><column table="a" column="name" type="string" vid="1" as="name" key="0" sourcetable="./a/a" sourcecolumn="name" used="1">a.name as name/*string*/
</column></select><from>
from <table name="kk_tipdoc_prizn" view="1" as="a" used="1"><text>(
      select 1 as kod,'Прочие' as name from dual union
      select 2,'Мировое соглашение (судебное)' from dual union
      select 3,'Исполнительный лист' from dual 
    )</text>a
--\kk_tipdoc_prizn
</table></from>)
a
--\kk_tipdoc_ur_prizn
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod" as="kod" title="" key="1" thissrc="kod">a.kod</column><text txtype="func"> ) like lower( </text><const><text>:kod_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Тип доп. документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2257" ord="2257" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" title="Тип доп. документа" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kk_tipdoc.xml" elid="2257" ord="2257" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod" as="kod" title="" key="1" />
                    <column table="a" column="name" as="name" title="" />
                  </select>
                  <from>
                    <query name="kk_tipdoc_ur_prizn" as="a" title="Тип доп. документа" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod" />
                        <useparam name="kod_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_filter" type="string">
                  <const>:kod_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_graf.ur_prizn as ur_prizn, /*Тип документа*//*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.ur_prizn as ur_prizn/*Тип документа*//*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
          <dep-refresh-cmd>
            <root table="ur_graf">
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_graf.ur_prizn as ur_prizn, /*Тип документа*//*number*/
ur_prizn_x_n.name as ur_prizn_x_n, /*Тип документа*//*string*/
ur_graf.is_dop as is_dop, /*number*/
ur_graf.is_isp as is_isp, /*number*/
ur_graf.is_mat as is_mat, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.ur_prizn as ur_prizn, /*Тип документа*//*number*/
 case  when (a.ur_prizn = 3)  then 1 else 0 end  as is_isp, /*number*/
 case  when (a.ur_prizn = 2)  then 1 else 0 end  as is_mat, /*number*/
 case  when (a.ur_prizn = 1)  then 1 else 0 end  as is_dop/*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
left outer join
(
--kk_tipdoc_ur_prizn
select a.kod as kod, /*number*//*key*/
a.name as name/*string*/

from (
      select 1 as kod,'Прочие' as name from dual union
      select 2,'Мировое соглашение (судебное)' from dual union
      select 3,'Исполнительный лист' from dual 
    )a
--\kk_tipdoc_prizn
)
ur_prizn_x_n on ur_prizn_x_n.kod = ur_graf.ur_prizn--\kk_tipdoc_ur_prizn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_prizn" table="ur_graf" />
            <dependant name="ur_prizn_x_n" table="ur_graf" />
            <dependant name="is_dop" table="ur_graf" />
            <dependant name="is_isp" table="ur_graf" />
            <dependant name="is_mat" table="ur_graf" />
          </dependants>
        </column>
        <column name="kod_sogl" table="ur_graf" type="number" title="Документ" Exists="is_dop" is-user-editable="1" Mandatory="is_dop" is-updateable="1" is-updateable-ext="1" update-target="kod_sogl" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_sogl.xml" elid="2624" ord="2624" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_sogl" as="kod_sogl" key="1" fixed="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_sogl" into="n1">a.kod_sogl as kod_sogl, /*number*//*key*/
</column><column table="a" column="full_name" as="full_name" key="0" used="1" type="string" title="Аббревиатура" sourcetable="./a/a/kod_tipdoc" sourcecolumn="abbr" into="s1">a.full_name as full_name/*Аббревиатура*//*string*/
</column></select>
                <from>
from <query name="ur_sogl" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_sogl
select <column table="a" column="kod_sogl" type="number" key-dimension="kod_sogl" as="kod_sogl" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_sogl" used="1">a.kod_sogl as kod_sogl, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><call function="||" as="full_name" key="0" pth="" type="string" used="1" title="Аббревиатура" sourcetable="./a/a/kod_tipdoc" sourcecolumn="abbr"><column table="kod_tipdoc" column="abbr">kod_tipdoc.abbr</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="a" column="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от  '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as full_name/*Аббревиатура*//*string*/
</call></select><from>
from <table name="ur_sogl" as="a" title="Доп. документ (арбитраж)" used="1">ur_sogl
a
--\ur_sogl
</table><query name="kk_tipdoc" as="kod_tipdoc" join="left outer" path="./a/a/kod_tipdoc" haskeys="1" used="1">left outer join
(
<select>--kk_tipdoc
select <column table="a" column="kod_tipdoc" type="number" as="kod_tipdoc" key="1" fixed="1" sourcetable="./a/a/kod_tipdoc" sourcecolumn="kod_tipdoc" used="1">a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" as="abbr" key="0" sourcetable="./a/a/kod_tipdoc" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="kk_tipdoc" as="a" title="Тип документа" used="1">kk_tipdoc
a
--\kk_tipdoc
</table></from><call function="=" type="bool">)
kod_tipdoc on <column table="a" column="kod_tipdoc">a.kod_tipdoc</column><text txtype="func"> = </text><column table="kod_tipdoc" column="kod_tipdoc">kod_tipdoc.kod_tipdoc</column></call>--\kk_tipdoc
</query></from>)
a
--\ur_sogl
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><const><text>:kod_folders </text></const>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_sogl" as="kod_sogl" key="1" fixed="1" thissrc="kod_sogl">a.kod_sogl</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_sogl" as="kod_sogl" key="1" fixed="1" thissrc="kod_sogl">a.kod_sogl</column><text txtype="func"> ) like lower( </text><const><text>:kod_sogl_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="full_name" as="full_name" key="0" thissrc="full_name">a.full_name</column><text txtype="func"> ) like lower( </text><const><text>:full_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_sogl.xml" elid="2624" ord="2624" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_sogl.xml" elid="2624" ord="2624" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param type="number" name="kod_folders" column="kod_folders" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_sogl_filter" type="string" />
                    <param name="full_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_sogl" as="kod_sogl" key="1" fixed="1" />
                    <column table="a" column="full_name" as="full_name" key="0" />
                  </select>
                  <from>
                    <query name="ur_sogl" as="a" title="Доп. документ (арбитраж)" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="=">
                          <column table="a" column="kod_folders" />
                          <useparam name="kod_folders" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_sogl" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_sogl" />
                        <useparam name="kod_sogl_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="full_name" />
                        <useparam name="full_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_folders" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_sogl_filter" />
                    <useparam name="full_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param type="number" name="kod_folders" column="kod_folders">
                  <const>:kod_folders </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_sogl_filter" type="string">
                  <const>:kod_sogl_filter </const>
                </param>
                <param name="full_name_filter" type="string">
                  <const>:full_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param type="number" name="kod_folders" column="kod_folders" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_graf">
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sogl.kod_tipdoc as kod_tipdoc, /*number*/
kod_sogl_x_n.full_name as kod_sogl_x_n, /*Документ*//*string*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl/*number*/

from (select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
kod_tipdoc.abbr || ' ' || a.num_reg || ' от  ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Аббревиатура*//*string*/

from ur_sogl
a
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
kod_sogl_x_n on ur_graf.kod_sogl = kod_sogl_x_n.kod_sogl--\ur_sogl
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on ur_graf.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on kod_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_tipdoc" table="ur_graf" />
            <dependant name="kod_sogl_x_n" table="ur_graf" />
            <dependant name="kod_tipdoc_x_n" table="ur_graf" />
          </dependants>
        </column>
        <column name="kod_isp" table="ur_graf" type="number" title="Документ" Exists="is_isp" is-user-editable="1" Mandatory="is_isp" is-updateable="1" is-updateable-ext="1" update-target="kod_isp" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_isp.xml" elid="2598" ord="2598" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_isp" as="kod_isp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_isp" into="n1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="full_name" as="full_name" key="0" used="1" type="string" title="Исполнительный лист" agg="max" into="s1">a.full_name as full_name/*Исполнительный лист*//*string*/
</column></select>
                <from>
from <query name="ur_isp" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_isp
select <column table="a" column="kod_isp" type="number" key-dimension="kod_isp" as="kod_isp" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_isp" used="1">a.kod_isp as kod_isp, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><call function="||" as="full_name" title="Исполнительный лист" key="0" pth="" type="string" used="1" agg="max"><column table="a" column="num_reg" type="string" title="Номер исп. листа" column-mandatory="1" as="num_reg" key="0" thissrc="num_reg">a.num_reg</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc" type="date" title="Дата выдачи исп. листа" fact="ur_isp_dat_doc" agg="max" dimension="dat_ur" as="dat_doc" key="0" thissrc="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as full_name/*Исполнительный лист*//*string*/
</call></select><from>
from <table name="ur_isp" as="a" title="Исполнительный лист" used="1">ur_isp
a
--\ur_isp
</table></from>)
a
--\ur_isp
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><const><text>:kod_folders </text></const>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_isp" as="kod_isp" key="1" fixed="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_isp" as="kod_isp" key="1" fixed="1" thissrc="kod_isp">a.kod_isp</column><text txtype="func"> ) like lower( </text><const><text>:kod_isp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="full_name" as="full_name" key="0" thissrc="full_name">a.full_name</column><text txtype="func"> ) like lower( </text><const><text>:full_name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_isp.xml" elid="2598" ord="2598" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_isp.xml" elid="2598" ord="2598" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param type="number" name="kod_folders" column="kod_folders" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_isp_filter" type="string" />
                    <param name="full_name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_isp" as="kod_isp" key="1" fixed="1" />
                    <column table="a" column="full_name" as="full_name" key="0" />
                  </select>
                  <from>
                    <query name="ur_isp" as="a" title="Исполнительный лист" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="=">
                          <column table="a" column="kod_folders" />
                          <useparam name="kod_folders" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_isp" />
                        <useparam name="kod_isp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="full_name" />
                        <useparam name="full_name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_folders" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_isp_filter" />
                    <useparam name="full_name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param type="number" name="kod_folders" column="kod_folders">
                  <const>:kod_folders </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_isp_filter" type="string">
                  <const>:kod_isp_filter </const>
                </param>
                <param name="full_name_filter" type="string">
                  <const>:full_name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param type="number" name="kod_folders" column="kod_folders" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_graf">
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp_x_n.full_name as kod_isp_x_n, /*Документ*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_graf as kod_graf,a.kod_isp as kod_isp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n3 as kod_isp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_isp as kod_isp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n3 as kod_isp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on ur_graf.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_isp_x_n" table="ur_graf" />
          </dependants>
        </column>
        <column name="kod_hist_mat" table="ur_graf" type="number" title="Документ" Exists="is_mat" is-user-editable="1" Mandatory="is_mat" is-updateable="1" is-updateable-ext="1" update-target="kod_hist_mat" temp-col-name="n4">
          <sel-list-compiled>
            <root>
              <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2581" ord="2581" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_hist_mat" into="n1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="name" as="name" key="0" used="1" type="string" title="Решение" agg="max" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" into="s1">a.name as name/*Решение*//*string*/
</column></select>
                <from>
from <query name="ur_hist_mat_dec" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_result" type="number" valid="qube.kod_result_vld" rows-limit="0" column-mandatory="1" as="kod_result" reference="us_result" refcol="kod_result" key="0" sourcetable="./a/a" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*/
</column><call function="||" as="name" title="Решение" key="0" pth="" type="string" used="1" agg="max" sourcetable="./a/a/kod_doc" sourcecolumn="abbr"><column table="kod_doc" column="abbr">kod_doc.abbr</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="kod_mat" column="dat_doc">kod_mat.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call><text txtype="func"> || </text><const><text>'  '</text></const><text txtype="func"> || </text><column table="kod_mat" column="num_delo">kod_mat.num_delo</column><text txtype="func"> || </text><const><text>'  '</text></const><text txtype="func"> || </text><column table="kod_result" column="name">kod_result.name</column> as name, /*Решение*//*string*/
</call><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc/*number*//*key*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="ur_mat" as="kod_mat1" join="left outer" path="./a/a/kod_mat1" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_mat1" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_doc" type="number" column-mandatory="1" as="kod_doc" reference="us_doc" refcol="kod_doc" key="0" sourcetable="./a/a/kod_mat1" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc/*number*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat1 on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat1" column="kod_mat">kod_mat1.kod_mat</column></call>--\ur_mat
</query><query name="us_doc" as="kod_doc" join="left outer" path="./a/a/kod_doc" haskeys="1" used="1">left outer join
(
<select>--us_doc
select <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" sourcetable="./a/a/kod_doc" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc, /*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" vid="1" as="abbr" key="0" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="us_doc" as="a" title="Документ" used="1">us_doc
a
--\us_doc
</table></from><call function="=" type="bool">)
kod_doc on <column table="kod_mat1" column="kod_doc">kod_mat1.kod_doc</column><text txtype="func"> = </text><column table="kod_doc" column="kod_doc">kod_doc.kod_doc</column></call>--\us_doc
</query><query name="ur_mat" dimension="kod_mat" as="kod_mat" join="left outer" path="./a/a/kod_mat" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/kod_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="num_delo" type="string" title="Номер дела" fact="ur_mat_num_delo" agg="stragg" mandatory="qube.ur_hist_mat_count" as="num_delo" key="0" sourcetable="./a/a/kod_mat" sourcecolumn="num_delo" used="1">a.num_delo as num_delo, /*Номер дела*//*string*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/kod_mat" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat" column="kod_mat">kod_mat.kod_mat</column></call>--\ur_mat
</query><query name="us_result" as="kod_result" join="left outer" path="./a/a/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Результат рассмотрения" vid="1" as="name" key="0" sourcetable="./a/a/kod_result" sourcecolumn="name" used="1">a.name as name, /*Результат рассмотрения*//*string*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_hist_mat_dec
</query><query name="ur_mat" as="kod_mat" join="left outer" path="./a/kod_mat" haskeys="1" used="1">left outer join
(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/kod_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/kod_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders/*number*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table></from><call function="=" type="bool">)
kod_mat on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat" column="kod_mat">kod_mat.kod_mat</column></call>--\ur_mat
</query><query name="us_result" as="kod_result" join="left outer" path="./a/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_not_edit" type="number" as="kod_not_edit" reference="uk_not_edit" refcol="kod_not_edit" key="0" sourcetable="./a/kod_result" sourcecolumn="kod_not_edit" used="1">a.kod_not_edit as kod_not_edit/*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="and" pth="" type="bool">(<call function="true" pth="" type="bool">(<text txtype="func"> 1=1 </text>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="=" pth="" optional="1" type="bool">(<column table="kod_mat" column="kod_folders">kod_mat.kod_folders</column><text txtype="func"> = </text><const><text>:kod_folders </text></const>) </call><text txtype="func"> } </text><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_not_edit">kod_result.kod_not_edit</column><text txtype="func"> = </text><const><text>3</text></const>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" thissrc="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" thissrc="kod_hist_mat">a.kod_hist_mat</column><text txtype="func"> ) like lower( </text><const><text>:kod_hist_mat_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" key="0" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2581" ord="2581" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_hist_mat.xml" elid="2581" ord="2581" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="kod_folders" type="number" column="kod_folders" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_hist_mat_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_hist_mat" as="kod_hist_mat" key="1" fixed="1" />
                    <column table="a" column="name" as="name" key="0" />
                  </select>
                  <from>
                    <query name="ur_hist_mat_dec" as="a" title="Решение по делу">
                      <link name="kod_result" as="kod_result" table="us_result" child="ur_hist_mat_dec" field="kod_result" parent="us_result" back="ur_hist_mat_dec" />
                      <link name="kod_mat" as="kod_mat" table="ur_mat" child="ur_hist_mat_dec" field="kod_mat" parent="ur_mat" back="ur_hist_mat_dec" title="Материалы переданные в суд" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="and">
                        <call function="true" />
                        <call function="=" optional="1">
                          <column table="kod_mat" column="kod_folders" />
                          <useparam name="kod_folders" />
                        </call>
                        <call function="=">
                          <column table="kod_result" column="kod_not_edit" />
                          <const>3</const>
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_hist_mat" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_hist_mat" />
                        <useparam name="kod_hist_mat_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="kod_folders" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_hist_mat_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="kod_folders" type="number" column="kod_folders">
                  <const>:kod_folders </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_hist_mat_filter" type="string">
                  <const>:kod_hist_mat_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="kod_folders" type="number" column="kod_folders" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_graf">
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Документ*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*Решение*//*number*/

from (select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_graf.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_hist_mat_x_n" table="ur_graf" />
          </dependants>
        </column>
        <column name="kod_tipdoc" table="kod_sogl" type="number" title="Тип документа" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sogl.kod_tipdoc as kod_tipdoc, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl/*number*/

from (select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on ur_graf.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_x_n" table="ur_graf.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_graf as kod_graf,a.kodp as kodp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n9 as kodp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kodp as kodp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n9 as kodp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_graf.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_prizn_x_n" table="ur_graf.ur_prizn" type="string" title="Тип документа" text-source-for="ur_prizn" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_prizn_x_n.name as ur_prizn_x_n, /*Тип документа*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.ur_prizn as ur_prizn/*Тип документа*//*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
left outer join
(
--kk_tipdoc_ur_prizn
select a.kod as kod, /*number*//*key*/
a.name as name/*string*/

from (
      select 1 as kod,'Прочие' as name from dual union
      select 2,'Мировое соглашение (судебное)' from dual union
      select 3,'Исполнительный лист' from dual 
    )a
--\kk_tipdoc_prizn
)
ur_prizn_x_n on ur_prizn_x_n.kod = ur_graf.ur_prizn--\kk_tipdoc_ur_prizn
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_sogl_x_n" table="ur_graf.kod_sogl" type="string" title="Документ" text-source-for="kod_sogl" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sogl_x_n.full_name as kod_sogl_x_n, /*Документ*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl/*number*/

from (select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
kod_tipdoc.abbr || ' ' || a.num_reg || ' от  ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Аббревиатура*//*string*/

from ur_sogl
a
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
kod_sogl_x_n on ur_graf.kod_sogl = kod_sogl_x_n.kod_sogl--\ur_sogl
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_isp_x_n" table="ur_graf.kod_isp" type="string" title="Документ" text-source-for="kod_isp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_isp_x_n.full_name as kod_isp_x_n, /*Документ*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_isp as kod_isp/*number*/

from (select a.kod_graf as kod_graf,a.kod_isp as kod_isp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n3 as kod_isp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_isp as kod_isp  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n3 as kod_isp  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on ur_graf.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_hist_mat_x_n" table="ur_graf.kod_hist_mat" type="string" title="Документ" text-source-for="kod_hist_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Документ*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat/*Решение*//*number*/

from (select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_graf.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_tipdoc_x_n" table="kod_sogl.kod_tipdoc" type="string" title="Тип документа" text-source-for="kod_tipdoc" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_sogl as kod_sogl/*number*/

from (select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_sogl as kod_sogl  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n2 as kod_sogl  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
)
ur_graf
--\ur_graf
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on ur_graf.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on kod_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_dop" table="ur_graf" type="number" title="Тип документа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_graf.is_dop as is_dop, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
 case  when (a.ur_prizn = 1)  then 1 else 0 end  as is_dop/*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_graf" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" elid="2980" ord="2980" leaf="0" lvl="2" pelid="" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
        </column>
        <column name="is_isp" table="ur_graf" type="number" title="Тип документа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_graf.is_isp as is_isp, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
 case  when (a.ur_prizn = 3)  then 1 else 0 end  as is_isp/*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_mat" table="ur_graf" type="number" title="Тип документа" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_graf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_graf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_graf.is_mat as is_mat, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
 case  when (a.ur_prizn = 2)  then 1 else 0 end  as is_mat/*number*/

from (select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,null as ur_prizn,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n11 as ur_prizn,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_graf" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_graf" type="number" title="" is-user-editable="1" />
        <column name="kod_graf" table="ur_graf" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_graf" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kodp as kodp 
,:kod_sogl as kod_sogl 
,:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:kod_folders as kod_folders 
,:kod_graf as kod_graf 
 
from dual ) 
 
loop 
insert into ur_graf 
(kodp 
,kod_sogl 
,kod_isp 
,kod_hist_mat 
,kod_folders 
,kod_graf 
) 
 values  
(r.kodp 
,r.kod_sogl 
,r.kod_isp 
,r.kod_hist_mat 
,r.kod_folders 
,r.kod_graf 
) 
 returning  
kod_graf into :kod_graf; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_graf where kod_graf=:kod_graf</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_graf' 
and 
names=:form_id 
and 
f2=:kod_graf; 
if :row_state_id=1  then 
for r in  
 ( select  
:kodp as kodp 
,:ur_prizn as ur_prizn 
,:kod_sogl as kod_sogl 
,:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:kod_folders as kod_folders 
,:kod_graf as kod_graf 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n9 
,n11 
,n2 
,n3 
,n4 
,n7 
,n1 
) 
 values  
('ur_graf' 
,:form_id 
,:kod_graf 
,:row_state_id 
,r.kodp 
,r.ur_prizn 
,r.kod_sogl 
,r.kod_isp 
,r.kod_hist_mat 
,r.kod_folders 
,r.kod_graf 
); 
end loop; 
else 
for r in  
 ( select  
:kodp as kodp 
,:ur_prizn as ur_prizn 
,:kod_sogl as kod_sogl 
,:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:kod_folders as kod_folders 
,:kod_graf as kod_graf 
,a.status 
,a.u_m 
,a.d_m 
,a.kod_tipdoc 
,a.kod_graf_status 
,a.dat_finish 
,a.dat_opl_beg 
,a.prim 
,a.proc_opl_potr 
 
from ur_graf a  where kod_graf=:kod_graf) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n9 
,n11 
,n2 
,n3 
,n4 
,n7 
,n1 
,n8 
,s2 
,d3 
,n10 
,n5 
,d2 
,d1 
,s1 
,n6 
) 
 values  
('ur_graf' 
,:form_id 
,:kod_graf 
,:row_state_id 
,r.kodp 
,r.ur_prizn 
,r.kod_sogl 
,r.kod_isp 
,r.kod_hist_mat 
,r.kod_folders 
,r.kod_graf 
,r.status 
,r.u_m 
,r.d_m 
,r.kod_tipdoc 
,r.kod_graf_status 
,r.dat_finish 
,r.dat_opl_beg 
,r.prim 
,r.proc_opl_potr 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_graf' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_graf set  
(kodp 
,kod_sogl 
,kod_isp 
,kod_hist_mat 
,kod_folders 
,kod_graf 
) 
= 
 ( select  
:kodp as kodp 
,:kod_sogl as kod_sogl 
,:kod_isp as kod_isp 
,:kod_hist_mat as kod_hist_mat 
,:kod_folders as kod_folders 
,:kod_graf as kod_graf 
 
from dual ) 
 
where 
kod_graf=:kod_graf 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" name="ur_save.p_graf_sync_bzad">
          <column table="this" column="kod_hist_mat" />
          <column table="this" column="kod_sogl" />
          <column table="this" column="kod_isp" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_graf" as="ur_graf">
          <columns>
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_prizn" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_sogl" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_isp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_hist_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_tipdoc" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" />
            <column name="ur_prizn_x_n" type="string" title="Тип документа" />
            <column name="kod_sogl_x_n" type="string" title="Документ" />
            <column name="kod_isp_x_n" type="string" title="Документ" />
            <column name="kod_hist_mat_x_n" type="string" title="Документ" />
            <column name="kod_tipdoc_x_n" type="string" title="Тип документа" />
            <column name="is_dop" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_isp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_graf" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_graf_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_graf_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_graf.kodp as kodp, /*number*/
ur_graf.ur_prizn as ur_prizn, /*Тип документа*//*number*/
ur_graf.kod_sogl as kod_sogl, /*Документ*//*number*/
ur_graf.kod_isp as kod_isp, /*Документ*//*number*/
ur_graf.kod_hist_mat as kod_hist_mat, /*Документ*//*number*/
kod_sogl.kod_tipdoc as kod_tipdoc, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_prizn_x_n.name as ur_prizn_x_n, /*Тип документа*//*string*/
kod_sogl_x_n.full_name as kod_sogl_x_n, /*Документ*//*string*/
kod_isp_x_n.full_name as kod_isp_x_n, /*Документ*//*string*/
kod_hist_mat_x_n.name as kod_hist_mat_x_n, /*Документ*//*string*/
kod_tipdoc_x_n.name as kod_tipdoc_x_n, /*Тип документа*//*string*/
ur_graf.is_dop as is_dop, /*number*/
ur_graf.kod_folders as kod_folders, /*number*/
ur_graf.is_isp as is_isp, /*number*/
ur_graf.is_mat as is_mat, /*number*/
ur_graf.is_new as is_new, /*number*/
ur_graf.is_not_new as is_not_new, /*number*/
ur_graf.kod_graf as kod_graf/*number*//*key*/

from (
--ur_graf
select a.kod_graf as kod_graf, /*number*//*key*/
a.kod_hist_mat as kod_hist_mat, /*Решение*//*number*/
a.kod_sogl as kod_sogl, /*number*/
a.kod_isp as kod_isp, /*number*/
a.kodp as kodp, /**//*number*/
a.kod_folders as kod_folders, /*number*/
a.ur_prizn as ur_prizn, /*Тип документа*//*number*/
 case  when (a.ur_prizn = 3)  then 1 else 0 end  as is_isp, /*number*/
 case  when (a.ur_prizn = 2)  then 1 else 0 end  as is_mat, /*number*/
 case  when (a.ur_prizn = 1)  then 1 else 0 end  as is_dop, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat,a.kod_sogl as kod_sogl,a.kod_isp as kod_isp,a.kodp as kodp,a.kod_folders as kod_folders,null as ur_prizn,0 as is_new,1 as is_not_new,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat,t.n2 as kod_sogl,t.n3 as kod_isp,t.n9 as kodp,t.n7 as kod_folders,t.n11 as ur_prizn,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
a
--\(select a.kod_graf as kod_graf,a.kod_hist_mat as kod_hist_mat,a.kod_sogl as kod_sogl,a.kod_isp as kod_isp,a.kodp as kodp,a.kod_folders as kod_folders,null as ur_prizn,0 as is_new,1 as is_not_new,a.kod_tipdoc as kod_tipdoc  from ur_graf a where not exists (select * from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and a.kod_graf=t.f2 ) and   a.kod_graf in :kod_graf_prm   union all  select t.n1 as kod_graf,t.n4 as kod_hist_mat,t.n2 as kod_sogl,t.n3 as kod_isp,t.n9 as kodp,t.n7 as kod_folders,t.n11 as ur_prizn,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n10 as kod_tipdoc  from rr_temp t where t.skod ='ur_graf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_graf_prm )
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.ur_prizn as ur_prizn/*Вид док-та*//*number*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
ur_graf
--\ur_graf
left outer join
(
--ur_hist_mat
select a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
kod_doc.abbr || ' от ' || ( to_char( kod_mat.dat_doc ,'DD.MM.YYYY') )  || '  ' || kod_mat.num_delo || '  ' || kod_result.name as name/*Решение*//*string*/

from ur_hist_mat
a
--\ur_hist_mat
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_doc as kod_doc/*number*/

from ur_mat
a
--\ur_mat
)
kod_mat1 on a.kod_mat = kod_mat1.kod_mat--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on kod_mat1.kod_doc = kod_doc.kod_doc--\us_doc
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.num_delo as num_delo, /*Номер дела*//*string*/
a.dat_doc as dat_doc/*Дата подачи в суд*//*date*/

from ur_mat
a
--\ur_mat
)
kod_mat on a.kod_mat = kod_mat.kod_mat--\ur_mat
left outer join
(
--us_result
select a.kod_result as kod_result, /*number*//*key*/
a.name as name/*Результат рассмотрения*//*string*/

from us_result
a
--\us_result
)
kod_result on a.kod_result = kod_result.kod_result--\us_result
)
kod_hist_mat_x_n on ur_graf.kod_hist_mat = kod_hist_mat_x_n.kod_hist_mat--\ur_hist_mat
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.num_reg || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Исполнительный лист*//*string*/

from ur_isp
a
--\ur_isp
)
kod_isp_x_n on ur_graf.kod_isp = kod_isp_x_n.kod_isp--\ur_isp
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
kod_tipdoc.abbr || ' ' || a.num_reg || ' от  ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as full_name/*Аббревиатура*//*string*/

from ur_sogl
a
--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc on a.kod_tipdoc = kod_tipdoc.kod_tipdoc--\kk_tipdoc
)
kod_sogl_x_n on ur_graf.kod_sogl = kod_sogl_x_n.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc_ur_prizn
select a.kod as kod, /*number*//*key*/
a.name as name/*string*/

from (
      select 1 as kod,'Прочие' as name from dual union
      select 2,'Мировое соглашение (судебное)' from dual union
      select 3,'Исполнительный лист' from dual 
    )a
--\kk_tipdoc_prizn
)
ur_prizn_x_n on ur_prizn_x_n.kod = ur_graf.ur_prizn--\kk_tipdoc_ur_prizn
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_graf.kodp = kodp_x_n.kodp--\kr_payer
left outer join
(
--ur_sogl
select a.kod_sogl as kod_sogl, /*number*//*key*/
a.kod_tipdoc as kod_tipdoc/*number*/

from ur_sogl
a
--\ur_sogl
)
kod_sogl on ur_graf.kod_sogl = kod_sogl.kod_sogl--\ur_sogl
left outer join
(
--kk_tipdoc
select a.kod_tipdoc as kod_tipdoc, /*number*//*key*/
a.name as name/*Тип документа*//*string*/

from kk_tipdoc
a
--\kk_tipdoc
)
kod_tipdoc_x_n on kod_sogl.kod_tipdoc = kod_tipdoc_x_n.kod_tipdoc--\kk_tipdoc
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>