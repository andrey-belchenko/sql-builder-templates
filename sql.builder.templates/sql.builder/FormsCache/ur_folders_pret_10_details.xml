<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_pret_10_details" title="Детализация" timestamp="28.12.2023 14:54:26" form-size="1037;537" with-behavior="0" file="sql.builder.templates\sql.builder\projects\asuse2\reports\arbitrage\forms\ur_folders_pret_10_details.xml" elid="259" ord="259" leaf="0" lvl="2" pelid="">
    <grid table="vr_pret_dolg_sf" show-toolbar="1" show-footer="1" id="63232985">
      <toolbar id="26304371">
        <uicommand button-type="grid-add" column-visible="0" visible="0" name="grid-add" control-name="ButtonAddRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="363" ord="363" leaf="1" lvl="2" pelid="" title="" id="25644771" />
        <uicommand button-type="grid-delete" visible="0" name="grid-delete" control-name="ButtonDeleteRow" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="367" ord="367" leaf="1" lvl="2" pelid="" title="" id="16995623" />
        <uicommand action-type="save-and-close" button-type="custom-save-and-close" name="custom-save-and-close" icon="CommitAndClose_24" title="Сохранить и закрыть" file="sql.builder.templates\sql.builder\projects\common\main.xml" elid="380" ord="380" leaf="1" lvl="2" pelid="" id="28352818" />
      </toolbar>
      <columns id="53107479">
        <field table="vr_pret_dolg_sf" name="num_sf" title="Номер документа начисления" controlType="UIText" format="F0" edit-mask="F0" rows-limit="100" id="2120807" />
        <field table="vr_pret_dolg_sf" name="dat_sf" title="Дата документа начисления" controlType="UIDate" rows-limit="100" id="51766919" />
        <field table="vr_pret_dolg_sf" name="vid_real" title="Вид реализации" controlType="UICombo" rows-limit="100" id="55477803" />
        <field table="vr_pret_dolg_sf" name="kod_peni_sf" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="10367736" />
        <field table="vr_pret_dolg_sf" name="total_dolg" title="Сальдо" controlType="UIText" edit-mask="N2" rows-limit="100" id="64833892" />
        <field table="vr_pret_dolg_sf" name="peni_period_str" title="Период пени" controlType="UIText" rows-limit="100" id="65407491">
          <buttons id="9865462">
            <uicommand action-type="dynamic-form" call="vr_peni_period_select" type="Ellipsis" side="Right" visible="p_kod_peni_sf" title="Выбор периодов пени" modal="1" id="40704700">
              <useparam table="ur_dogplat" column="kod_sf" name="p_kod_peni_sf" id="52682417" />
            </uicommand>
          </buttons>
        </field>
      </columns>
    </grid>
  </form>
  <params>
    <param name="p_kod_pret_dolg_dog" type="number" />
  </params>
  <dataset>
    <params>
      <param name="p_kod_pret_dolg_dog" type="number" />
    </params>
    <fields>
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="vr_pret_dolg_sf_has_changes" parname="vr_pret_dolg_sf_has_changes" />
    </fields>
    <table name="vr_pret_dolg_sf" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="vr_pret_dolg_sf" key="kod_pret_dolg_sf" is-ms-upd="1" is-top="1" key-dimension="vr_pret_dolg_sf">
      <select-text>
--
select kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
kod_sf.vid_real as vid_real, /*number*/
qube.kod_peni_sf1 as kod_peni_sf, /*number*/
vr_pret_dolg_sf.total_dolg as total_dolg, /*Сальдо*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_pret_dolg_sf.is_new as is_new, /*number*/
vr_pret_dolg_sf.is_not_new as is_not_new, /*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1, /*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(un.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
sr_facvip.kod_peni_sf as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_pret_dolg_dog as kod_pret_dolg_dog, /*number*/
a.kod_sf as kod_sf/*number*/

from vr_pret_dolg_sf
a
--\vr_pret_dolg_sf
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = sr_facvip_a_d.kod_sf--\vr_pret_dolg_sf
where
(vr_pret_dolg_sf.kod_pret_dolg_dog = :p_kod_pret_dolg_dog )  and (vr_pret_dolg_sf.kod_pret_dolg_sf is not null )  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as kod_peni_sf1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_pret_dolg_dog as kod_pret_dolg_dog, /*number*/
a.kod_sf as kod_sf/*number*/

from vr_pret_dolg_sf
a
--\vr_pret_dolg_sf
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = kod_sf_a_d.kod_sf--\vr_pret_dolg_sf
where
(vr_pret_dolg_sf.kod_pret_dolg_dog = :p_kod_pret_dolg_dog )  and (vr_pret_dolg_sf.kod_pret_dolg_sf is not null )  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
union all
(
--
select vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_pret_dolg_dog as kod_pret_dolg_dog/*number*/

from vr_pret_dolg_sf
a
--\vr_pret_dolg_sf
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
where
(vr_pret_dolg_sf.kod_pret_dolg_dog = :p_kod_pret_dolg_dog )  and (vr_pret_dolg_sf.kod_pret_dolg_sf is not null ) )
--\
)
--\
)
un
--\
 group by
un.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.dolg_osn_real ,0)  +nvl( a.dolg_gp ,0)  +nvl( a.dolg_peni ,0)  +nvl( a.dolg_sud_peni ,0)  +nvl( a.dolg_astr ,0)  +nvl( a.dolg_othr ,0)  as total_dolg, /*Сальдо*//*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from vr_pret_dolg_sf
a
--\vr_pret_dolg_sf
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_pret_dolg_sf = qube.vr_pret_dolg_sf--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real, /*number*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on kod_sf.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</select-text>
      <columns>
        <column name="num_sf" table="kod_sf" type="number" title="Номер документа начисления" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.num_sf as num_sf/*Номер документа начисления*//*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_sf" table="kod_sf" type="date" title="Дата документа начисления" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real" table="kod_sf" type="number" title="Вид реализации" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_sf.vid_real as vid_real, /*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_peni_sf" table="vr_pret_dolg_sf" type="number" title="" parname="p_kod_peni_sf" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kod_peni_sf1 as kod_peni_sf, /*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1/*number*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1/*number*/

from (
(
(
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1/*number*/

from (
--
select un.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(un.kod_peni_sf1)  as kod_peni_sf1/*number*/

from (
(
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
sr_facvip.kod_peni_sf as kod_peni_sf1/*number*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = sr_facvip_a_d.kod_sf--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as kod_peni_sf1/*number*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null )
--\
)
--\
)
un
--\
 group by
un.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_pret_dolg_sf = qube.vr_pret_dolg_sf--\vr_pret_dolg_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="total_dolg" table="vr_pret_dolg_sf" type="number" title="Сальдо" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vr_pret_dolg_sf.total_dolg as total_dolg, /*Сальдо*//*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
 nvl( a.dolg_osn_real ,0)  +nvl( a.dolg_gp ,0)  +nvl( a.dolg_peni ,0)  +nvl( a.dolg_sud_peni ,0)  +nvl( a.dolg_astr ,0)  +nvl( a.dolg_othr ,0)  as total_dolg/*Сальдо*//*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.dolg_osn_real as dolg_osn_real,a.dolg_gp as dolg_gp,a.dolg_peni as dolg_peni,a.dolg_sud_peni as dolg_sud_peni,a.dolg_astr as dolg_astr,a.dolg_othr as dolg_othr  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n5 as dolg_osn_real,t.n6 as dolg_gp,t.n7 as dolg_peni,t.n8 as dolg_sud_peni,t.n9 as dolg_astr,t.n10 as dolg_othr  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.dolg_osn_real as dolg_osn_real,a.dolg_gp as dolg_gp,a.dolg_peni as dolg_peni,a.dolg_sud_peni as dolg_sud_peni,a.dolg_astr as dolg_astr,a.dolg_othr as dolg_othr  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n5 as dolg_osn_real,t.n6 as dolg_gp,t.n7 as dolg_peni,t.n8 as dolg_sud_peni,t.n9 as dolg_astr,t.n10 as dolg_othr  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="peni_period_str" table="vr_pret_dolg_sf" type="string" title="Период пени" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = kod_sf_a_d.kod_sf--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
union all
(
--
select vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as peni_period_ym1/*string*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null )
--\
)
--\
)
un
--\
 group by
un.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_pret_dolg_sf = qube.vr_pret_dolg_sf--\vr_pret_dolg_sf
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vid_real_x_n" table="kod_sf.vid_real" type="string" title="Вид реализации" text-source-for="vid_real" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pret_dolg_sf_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on kod_sf.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="vr_pret_dolg_sf" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="vr_pret_dolg_sf" type="number" title="" is-user-editable="1" />
        <column name="kod_pret_dolg_sf" table="vr_pret_dolg_sf" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_pret_dolg_sf" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_pret_dolg_sf as kod_pret_dolg_sf 
 
from dual ) 
 
loop 
insert into vr_pret_dolg_sf 
(kod_pret_dolg_sf 
) 
 values  
(r.kod_pret_dolg_sf 
) 
 returning  
kod_pret_dolg_sf into :kod_pret_dolg_sf; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from vr_pret_dolg_sf where kod_pret_dolg_sf=:kod_pret_dolg_sf</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='vr_pret_dolg_sf' 
and 
names=:form_id 
and 
f2=:kod_pret_dolg_sf; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_pret_dolg_sf as kod_pret_dolg_sf 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
) 
 values  
('vr_pret_dolg_sf' 
,:form_id 
,:kod_pret_dolg_sf 
,:row_state_id 
,r.kod_pret_dolg_sf 
); 
end loop; 
else 
for r in  
 ( select  
:kod_pret_dolg_sf as kod_pret_dolg_sf 
,a.kod_pret_dolg_dog 
,a.kod_dog 
,a.kod_sf 
,a.dolg_osn_real 
,a.dolg_gp 
,a.dolg_peni 
,a.dolg_sud_peni 
,a.dolg_astr 
,a.num_delo 
,a.dolg_othr 
,a.dat_calc_peni 
,a.dat_sud 
,a.u_m 
,a.d_m 
 
from vr_pret_dolg_sf a  where kod_pret_dolg_sf=:kod_pret_dolg_sf) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,n9 
,s1 
,n10 
,d1 
,d2 
,s2 
,d3 
) 
 values  
('vr_pret_dolg_sf' 
,:form_id 
,:kod_pret_dolg_sf 
,:row_state_id 
,r.kod_pret_dolg_sf 
,r.kod_pret_dolg_dog 
,r.kod_dog 
,r.kod_sf 
,r.dolg_osn_real 
,r.dolg_gp 
,r.dolg_peni 
,r.dolg_sud_peni 
,r.dolg_astr 
,r.num_delo 
,r.dolg_othr 
,r.dat_calc_peni 
,r.dat_sud 
,r.u_m 
,r.d_m 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='vr_pret_dolg_sf' and names=:form_id</clear-temp-text>
      <update-text>begin
update vr_pret_dolg_sf set  
(kod_pret_dolg_sf 
) 
= 
 ( select  
:kod_pret_dolg_sf as kod_pret_dolg_sf 
 
from dual ) 
 
where 
kod_pret_dolg_sf=:kod_pret_dolg_sf 
;
end;
</update-text>
      <scheme>
        <table name="vr_pret_dolg_sf" as="vr_pret_dolg_sf">
          <columns>
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_peni_sf" type="number" title="" visible="0" />
            <column name="total_dolg" type="number" title="Сальдо" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_pret_dolg_sf" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="num_sf" type="number" format="F0" edit-mask="F0" title="Номер документа начисления" />
            <column name="dat_sf" type="date" title="Дата документа начисления" />
            <column name="vid_real_x_n" type="string" title="Вид реализации" />
            <column name="vid_real" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_peni_sf" type="number" title="" visible="0" />
            <column name="total_dolg" type="number" title="Сальдо" />
            <column name="peni_period_str" type="string" title="Период пени" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_pret_dolg_sf" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_pret_dolg_sf_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_pret_dolg_sf_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select kod_sf.num_sf as num_sf, /*Номер документа начисления*//*number*/
kod_sf.dat_sf as dat_sf, /*Дата документа начисления*//*date*/
kod_sf.vid_real as vid_real, /*number*/
qube.kod_peni_sf1 as kod_peni_sf, /*number*/
vr_pret_dolg_sf.total_dolg as total_dolg, /*Сальдо*//*number*/
qube.peni_period_str1 as peni_period_str, /*Период пени*//*string*/
vid_real_x_n.name as vid_real_x_n, /*Вид реализации*//*string*/
vr_pret_dolg_sf.is_new as is_new, /*number*/
vr_pret_dolg_sf.is_not_new as is_not_new, /*number*/
vr_pret_dolg_sf.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(qube.kod_peni_sf1)  as kod_peni_sf1, /*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.peni_period_ym1 ) )  as peni_period_str1/*Период пени*//*string*/

from (
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
qube.kod_peni_sf1 as kod_peni_sf1, /*number*/
qube.peni_period_ym1 as peni_period_ym1/*Период*//*string*/

from (
--
select un.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
max(un.kod_peni_sf1)  as kod_peni_sf1, /*number*/
stragg(un.peni_period_ym1)  as peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
sr_facvip.kod_peni_sf as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--
select sr_facvip_a_d.kod_sf as kod_sf_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip_a_d
--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = sr_facvip_a_d.kod_sf--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null  group by
sr_facvip_a_d.kod_sf, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
 case  when (a.vid_real = 7)  then a.kod_sf end  as kod_peni_sf/*number*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
sr_facvip on sr_facvip.kod_sf = dims.kod_sf_prm--\sr_facvip
)
--\
union all
(
--
select dims.vr_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as kod_peni_sf1, /*number*/
vr_peni_period.name as peni_period_ym1/*Период*//*string*/

from (
--
select vr_peni_period_a_d.kod_peni_period as kod_peni_period_prm, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf/*number*//*key*/

from (
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_sf as kod_sf/*с/ф*//*number*/

from vr_peni_period
a
--\vr_peni_period
)
vr_peni_period_a_d
--\vr_peni_period
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf/*number*//*key*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf_a_d on kod_sf_a_d.kod_sf = vr_peni_period_a_d.kod_sf--\sr_facvip
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_sf = kod_sf_a_d.kod_sf--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null  group by
vr_peni_period_a_d.kod_peni_period, /*number*//*key*/
vr_pret_dolg_sf.kod_pret_dolg_sf/*number*//*key*/
)
dims
--\
left outer join
(
--vr_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
spr_time_ym.name as name/*Период*//*string*/

from vr_peni_period
a
--\vr_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
vr_peni_period on vr_peni_period.kod_peni_period = dims.kod_peni_period_prm--\vr_peni_period
)
--\
union all
(
--
select vr_pret_dolg_sf.kod_pret_dolg_sf as vr_pret_dolg_sf, /*number*//*key*/
null as kod_peni_sf1, /*number*/
null as peni_period_ym1/*string*/

from (
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf/*number*//*key*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf
--\vr_pret_dolg_sf
where
vr_pret_dolg_sf.kod_pret_dolg_sf is not null )
--\
)
--\
)
un
--\
 group by
un.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.vr_pret_dolg_sf/*number*//*key*/
)
qube
--\
left outer join
(
--vr_pret_dolg_sf
select a.kod_pret_dolg_sf as kod_pret_dolg_sf, /*number*//*key*/
a.kod_sf as kod_sf, /*number*/
 nvl( a.dolg_osn_real ,0)  +nvl( a.dolg_gp ,0)  +nvl( a.dolg_peni ,0)  +nvl( a.dolg_sud_peni ,0)  +nvl( a.dolg_astr ,0)  +nvl( a.dolg_othr ,0)  as total_dolg, /*Сальдо*//*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf,a.dolg_osn_real as dolg_osn_real,a.dolg_gp as dolg_gp,a.dolg_peni as dolg_peni,a.dolg_sud_peni as dolg_sud_peni,a.dolg_astr as dolg_astr,a.dolg_othr as dolg_othr,0 as is_new,1 as is_not_new  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf,t.n5 as dolg_osn_real,t.n6 as dolg_gp,t.n7 as dolg_peni,t.n8 as dolg_sud_peni,t.n9 as dolg_astr,t.n10 as dolg_othr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
a
--\(select a.kod_pret_dolg_sf as kod_pret_dolg_sf,a.kod_sf as kod_sf,a.dolg_osn_real as dolg_osn_real,a.dolg_gp as dolg_gp,a.dolg_peni as dolg_peni,a.dolg_sud_peni as dolg_sud_peni,a.dolg_astr as dolg_astr,a.dolg_othr as dolg_othr,0 as is_new,1 as is_not_new  from vr_pret_dolg_sf a where not exists (select * from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and a.kod_pret_dolg_sf=t.f2 ) and   a.kod_pret_dolg_sf in :kod_pret_dolg_sf_prm   union all  select t.n1 as kod_pret_dolg_sf,t.n4 as kod_sf,t.n5 as dolg_osn_real,t.n6 as dolg_gp,t.n7 as dolg_peni,t.n8 as dolg_sud_peni,t.n9 as dolg_astr,t.n10 as dolg_othr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='vr_pret_dolg_sf' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pret_dolg_sf_prm )
)
vr_pret_dolg_sf on vr_pret_dolg_sf.kod_pret_dolg_sf = qube.vr_pret_dolg_sf--\vr_pret_dolg_sf
left outer join
(
--sr_facvip
select a.kod_sf as kod_sf, /*number*//*key*/
a.vid_real as vid_real, /*number*/
a.num_sf as num_sf, /*Номер документа начисления*//*number*/
a.dat_sf as dat_sf/*Дата документа начисления*//*date*/

from sr_facvip
a
--\sr_facvip
where
a.vid_sf not in (2 , 9) )
kod_sf on vr_pret_dolg_sf.kod_sf = kod_sf.kod_sf--\sr_facvip
left outer join
(
--sk_vid_real
select a.vid_real as vid_real, /**//*number*//*key*/
a.name as name/*Вид реализации*//*string*/

from sk_vid_real
a
--\sk_vid_real
)
vid_real_x_n on kod_sf.vid_real = vid_real_x_n.vid_real--\sk_vid_real
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>