<?xml version="1.0" encoding="utf-8"?>
<root>
  <form name="ur_folders_pretenz_vvod" title="Претензии в папке" security-id="asuse_ur_pir_pretenz" with-behavior="0" timestamp="28.12.2023 14:15:00" file="sql.builder.templates\sql.builder\projects\asuse2\forms\Арбитраж\ur_folders_pretenz_vvod.xml" elid="257" ord="257" leaf="0" lvl="2" pelid="">
    <field table="ur_folders" name="kodp" title="Абонент" controlType="UICombo" rows-limit="100" id="14635880" />
    <field table="ur_folders" name="vvod" title="Способ учета задолженности" controlType="UICombo" rows-limit="100" id="42649052" />
    <field table="ur_folders" name="not_vvod" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="62332209" />
    <field table="ur_folders" name="kod_podr" title="Отделение" controlType="UICombo" rows-limit="100" id="50037167" />
    <grid table="ur_pretenz" show-toolbar="1" id="9727434">
      <toolbar id="51494165">
        <uicommand name="upech_doc" editable="item_is_not_new" title="Печать отчётов" id="44201288">
          <useparam name="cur_kod_pretenz" id="57989171" />
          <const id="59375889">4</const>
          <useparam name="kod_folders" id="54669342" />
        </uicommand>
        <field id="42900941" controlType="UICheck" checked="1" type="number" title="Не показывать архивные" name="no_arh" />
      </toolbar>
      <columns id="4690089">
        <field table="ur_pretenz" name="kod_pretenz" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="35536079" />
        <field table="ur_pretenz" name="kr_dog_name" title="Договор" width="99" controlType="UIText" rows-limit="100" id="14795251" />
        <field table="ur_pretenz" name="kod_vid_pretenz" title="Вид претензии" width="113" controlType="UICombo" rows-limit="100" id="29830817" />
        <field table="ur_pretenz" name="dat_doc" title="Дата претензии" controlType="UIDate" rows-limit="100" id="33095740" />
        <field table="ur_pretenz" name="kod_subject" title="Предмет" controlType="UICombo" rows-limit="100" id="44099560" />
        <field table="ur_pretenz" name="ur_pretenz_vvod_sum_all" title="Заявленная сумма" controlType="UIText" edit-mask="N2" rows-limit="100" id="54913162" />
        <field table="ur_pretenz" name="vvod_sum_osn" title="Основная реализация" controlType="UIText" edit-mask="N2" rows-limit="100" id="56553410" />
        <field table="ur_pretenz" name="vvod_sum_peni" title="Проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="32933646" />
        <field table="ur_pretenz" name="pretenz_peni_period_str" title="Период пени" width="141" controlType="UIText" rows-limit="100" id="51532021">
          <buttons id="27950840">
            <uicommand action-type="dynamic-form" call="ur_pretenz_peni_period_select" type="Ellipsis" side="Right" title="Выбор периодов пени" modal="1" visible="item_is_not_new" id="30447291">
              <useparam name="cur_kod_pretenz" id="46907157" />
            </uicommand>
          </buttons>
        </field>
        <field table="ur_pretenz" name="ogr" title=" Расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="49828262" />
        <field table="ur_pretenz" name="vvod_per_s" title="Период начисления с" controlType="UICombo" format="F2" edit-mask="F2" rows-limit="100" id="14707733">
          <listquery val-field-name="ym" id="11116480">
            <query name="ym_list_vvod" id="53934124" />
          </listquery>
        </field>
        <field table="ur_pretenz" name="vvod_per_po" title="Период начисления по" controlType="UICombo" format="F2" edit-mask="F2" rows-limit="100" id="30479594">
          <listquery val-field-name="ym" id="18467424">
            <query name="ym_list_vvod" id="48132246" />
          </listquery>
        </field>
        <field table="ur_pretenz" name="dat_do" title="Оплатить до" controlType="UIDate" rows-limit="100" id="25727717" />
        <field table="ur_pretenz" name="dat_srok" title="Срок ответа" controlType="UIDate" rows-limit="100" id="24540792" />
        <field table="ur_pretenz" name="kod_state" title="Состояние документа" controlType="UICombo" rows-limit="100" id="25376529" />
        <field table="ur_pretenz" name="dat_otv" title="Дата получения ответа" controlType="UIDate" rows-limit="100" id="22848289" />
        <field table="ur_pretenz" name="reply" title="Содержание ответа" controlType="UIText" rows-limit="100" id="40456217" />
        <field table="ur_pretenz" name="ur_pretenz_vvod_opl_all" title="Оплата по претензии" controlType="UIText" edit-mask="N2" rows-limit="100" id="47385191" />
        <field table="ur_pretenz" name="vvod_opl_osn" title="Оплата основной реализации" controlType="UIText" edit-mask="N2" rows-limit="100" id="57077882" />
        <field table="ur_pretenz" name="vvod_opl_peni" title="Оплата проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="21247748" />
        <field table="ur_pretenz" name="opl_ogr" title="Оплата расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="9909838" />
        <field table="ur_pretenz" name="ur_pretenz_vvod_ostatok_all" title="Остаток задолженности по претензии" controlType="UIText" edit-mask="N2" rows-limit="100" id="17153665" />
        <field table="ur_pretenz" name="ur_pretenz_vvod_ostatok_osn" title="Остаток основной реализации" controlType="UIText" edit-mask="N2" rows-limit="100" id="28112703" />
        <field table="ur_pretenz" name="ur_pretenz_vvod_ostatok_peni" title="Остаток проценты (пени)" controlType="UIText" edit-mask="N2" rows-limit="100" id="23426759" />
        <field table="ur_pretenz" name="ur_pretenz_ost_ogr" title="Остаток расх. за введ. огранич. реж. энергопотребл." controlType="UIText" edit-mask="N2" rows-limit="100" id="30502749" />
        <field table="ur_pretenz" name="dat_arh" title="Дата архивации" controlType="UIDate" rows-limit="100" id="48073505" />
        <field table="ur_pretenz" name="is_not_new" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="2330975" />
        <field table="ur_pretenz" name="pr_priv" title="Скопирована из модуля &quot;Претензии&quot;" controlType="UICheck" rows-limit="100" id="5860956" />
        <field table="ur_pretenz" name="kod_mat" title="Иск" width="221" controlType="UICombo" rows-limit="100" id="27297177" />
        <field table="ur_pretenz" name="kod_emp" title="Исполнитель ПИО" controlType="UICombo" rows-limit="100" id="65281188" />
        <field table="ur_pretenz" name="num_sz" title="№ с/з о пост. мат." width="118" controlType="UIText" rows-limit="100" id="40066153" />
        <field table="ur_pretenz" name="pio_date" title="Дата поступления материалов в ПИО" width="93" controlType="UIDate" rows-limit="100" id="13090900" />
        <field table="ur_pretenz" name="prim" title="Примечание" controlType="UITextEx" rows-limit="100" id="1072517" />
        <field table="ur_pretenz" name="right_common" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="14658893" />
        <field table="ur_pretenz" name="right_pio" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="20888389" />
        <field table="ur_pretenz" name="last_kod_pretenz" title="" controlType="UIText" edit-mask="N2" rows-limit="100" id="27251084" />
      </columns>
    </grid>
    <toolbar id="35081382" />
  </form>
  <params>
    <param name="kod_folders" type="number" />
  </params>
  <dataset>
    <params>
      <param name="kod_folders" type="number">
        <const exclude="1">157</const>
      </param>
    </params>
    <fields>
      <field type="number" name="no_arh" parname="no_arh" title="Не показывать архивные" />
      <field type="string" name="is_form_valid" parname="is_form_valid" />
      <field type="string" name="is_form_valid_not" parname="is_form_valid_not" />
      <field type="string" name="ur_folders_has_changes" parname="ur_folders_has_changes" />
      <field type="string" name="ur_pretenz_has_changes" parname="ur_pretenz_has_changes" />
    </fields>
    <table name="ur_folders" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_folders" delete-validation="ur_folders_del_vld" key="kod_folders" is-ms-upd="1" is-top="1" key-dimension="kod_folders">
      <select-text>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_podr as kod_podr, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders
--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from ur_folders
a
--\ur_folders
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
(ur_folders.kod_folders = :kod_folders )  and (ur_folders.kod_folders is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
a.kod_podr as kod_podr, /*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_folders
a
--\ur_folders
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</select-text>
      <columns>
        <column name="kodp" table="ur_folders" type="number" title="Абонент" parname="ur_folders_kodp" ColumnVisible="0" ColumnMandatory="1" NewVal="kodp_new_val" is-updateable="1" is-updateable-ext="1" update-target="kodp" temp-col-name="n2">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kodp_x_n" table="ur_folders" />
            <dependant name="kodp_new_val" table="ur_folders" />
          </dependants>
        </column>
        <column name="vvod" table="ur_folders" type="number" title="Способ учета задолженности" parname="is_vvod" ColumnVisible="0" ColumnDefault="ur_folders_vvod_default" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="vvod" temp-col-name="n10">
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod, /**//*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="not_vvod" table="ur_folders" />
            <dependant name="vvod_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="not_vvod" table="ur_folders" type="number" title="" parname="is_not_vvod" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
 decode ( a.vvod ,0,1,0)  as not_vvod/*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr" table="ur_folders" type="number" title="Отделение" parname="dep" ColumnEditable="kr_dep_is_multi" is-user-editable="1" ColumnDefault="kr_dep_current" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_podr" temp-col-name="n11">
          <sel-list-compiled>
            <root>
              <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="name">name</column>
                </order>
                <select>--a
select <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" used="1" into="n1">a.kodp as kodp, /*number*//*key*/
</column><column table="kodp" column="name" title="Отделение" as="name" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="name" into="s1">kodp.name as name, /*Отделение*//*string*/
</column><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" used="1" type="string" sourcetable="./a/kodp" sourcecolumn="sname" into="s2">kodp.sname as sname, /*Аббревиатура*//*string*/
</column><const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0" used="1" into="n2"><text>1</text> as cnt/*number*/
</const></select>
                <from>
from <table name="kr_dep" as="a" view="1" used="1"><text>(
      SELECT LEVEL lvl, kodp
      FROM kr_org a
      WHERE kod_ecls = 4
      AND kod_separator = 2
      AND kodp IN
      (SELECT a.kodp
      FROM kr_org a, kr_org b
      WHERE     a.kod_ecls = 4
      AND kg_common.org_area (a.kodp, b.kodp) = 1
      AND b.kod_ecls = 4
      AND kg_common.user_podr_rights (1, b.kodp)  &gt; 0)
      CONNECT BY PRIOR kodp = kod_parent
      START WITH kod_parent IS NULL AND kod_ecls = 4 AND kod_separator &lt;= 2
      ORDER SIBLINGS BY kg.cut_num (name), name
    )</text>a
--\kr_dep
</table><query name="kr_org" as="kodp" join="left outer" path="./a/kodp" haskeys="1" used="1">left outer join
(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/kodp" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="name" type="string" title="Отделение" as="name" key="0" sourcetable="./a/kodp" sourcecolumn="name" used="1">a.name as name, /*Отделение*//*string*/
</column><column table="a" column="sname" type="string" title="" as="sname" key="0" sourcetable="./a/kodp" sourcecolumn="sname" used="1">a.sname as sname/**//*string*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from><call function="=" type="bool">)
kodp on <column table="a" column="kodp">a.kodp</column><text txtype="func"> = </text><column table="kodp" column="kodp">kodp.kodp</column></call>--\kr_org
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" sourcetable="./a" sourcecolumn="kodp" thissrc="kodp">a.kodp</column><text txtype="func"> ) like lower( </text><const><text>:kodp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="name" title="Отделение" as="name" key="0" thissrc="name">kodp.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" thissrc="sname">kodp.sname</column><text txtype="func"> ) like lower( </text><const><text>:sname_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by name</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" as="a">
              <queries>
                <query order="name" class="1" timestamp="04.02.2019 16:26:26" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_org.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kodp_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="sname_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kodp" type="number" as="kodp" key="1" fixed="1" />
                    <column table="kodp" column="name" title="Отделение" as="name" key="0" />
                    <column table="kodp" column="sname" title="Аббревиатура" fact="kr_dep_sname" agg="stragg" as="sname" key="0" />
                    <const type="number" as="cnt" fact="kr_dep_count" agg="sum" key="0">1</const>
                  </select>
                  <from>
                    <table name="kr_dep" as="a" view="1">
                      <dlink name="kr_dogovor" dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор" />
                      <dlink name="sv_opl_bank_dep" as="sv_opl_bank_dep" table="sv_opl_bank_dep" child="sv_opl_bank_dep" field="dep" parent="kr_dep" back="sv_opl_bank_dep">
                        <link name="kod_link" dimension="1" as="kod_link" table="sr_opl_bank" child="sv_opl_bank_dep" field="kod_link" parent="sr_opl_bank" back="sv_opl_bank_dep" />
                      </dlink>
                      <dlink name="kr_dogovor" dimension="1" is-final-dimension="1" is-private-dimension="1" as="kr_dogovor" table="kr_dogovor" child="kr_dogovor" field="kod_dep" parent="kr_dep" back="kr_dogovor" title="Договор">
                        <dimlink name="kod_dep" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kodp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                      <dlink name="ur_folders" dimension="1" is-final-dimension="1" is-private-dimension="1" as="ur_folders" table="ur_folders" child="ur_folders" field="kod_dep" parent="kr_dep" back="ur_folders" title="Папка">
                        <dimlink name="kod_mat_pp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_dec" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_folders_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_hist_mat_isp" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_inkasso" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_kazn" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                        <dimlink name="kod_mat" dimension="1" is-final-dimension="1" is-private-dimension="1" />
                      </dlink>
                    </table>
                    <query name="kr_org" as="kodp" join="left outer" dname="kr_dep">
                      <call function="=">
                        <column table="a" column="kodp" />
                        <column table="kodp" column="kodp" />
                      </call>
                    </query>
                    <query name="kr_calc_dep_max" join="left outer" as="kr_calc_dep_max" dname="kr_dep">
                      <call function="=">
                        <column table="this" column="kodp" />
                        <column table="kr_calc_dep_max" column="dep" />
                      </call>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kodp" />
                        <useparam name="kodp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="sname" />
                        <useparam name="sname_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="name" />
                  </order>
                  <order>
                    <column column="name" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kodp_filter" />
                    <useparam name="name_filter" />
                    <useparam name="sname_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kodp_filter" type="string">
                  <const>:kodp_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="sname_filter" type="string">
                  <const>:sname_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_folders">
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_podr_x_n" table="ur_folders" />
          </dependants>
        </column>
        <column name="kodp_x_n" table="ur_folders.kodp" type="string" title="Абонент" text-source-for="kodp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp/**//*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_x_n" table="ur_folders.vvod" type="string" title="Способ учета задолженности" text-source-for="vvod" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.vvod as vvod/**//*number*/

from (select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.vvod as vvod  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n10 as vvod  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_podr_x_n" table="ur_folders.kod_podr" type="string" title="Отделение" text-source-for="kod_podr" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from (select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kod_podr as kod_podr  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n11 as kod_podr  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kodp_new_val" table="ur_folders" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
kod_isp.kodp as kodp_new_val/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders
--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="is_not_new" table="ur_folders" type="number" title="" is-user-editable="1" />
        <column name="ur_folders_del_vld" table="ur_folders" type="string" title="Валидация удаления папки" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_folders_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_folders_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_folders" type="number" title="" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_folders 
(kodp 
,vvod 
,kod_podr 
,kod_folders 
) 
 values  
(r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
) 
 returning  
kod_folders into :kod_folders; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_folders where kod_folders=:kod_folders</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_folders' 
and 
names=:form_id 
and 
f2=:kod_folders; 
if :row_state_id=1  then 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n11 
,n1 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
,a.kod_emp 
,a.kod_vi 
,a.kod_sdp 
,a.dat_create 
,a.zadol 
,a.u_m 
,a.d_m 
,a.kod_parent 
,a.kod_isp 
,a.tep_el 
,a.dat_finish 
,a.num_doc 
,a.tep_el_byt 
,a.kodp_new 
,a.kodps 
,a.namep 
,a.kod_category 
,a.kod_dog 
 
from ur_folders a  where kod_folders=:kod_folders) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n2 
,n10 
,n11 
,n1 
,n3 
,n4 
,n5 
,d1 
,n6 
,s1 
,d3 
,n7 
,n8 
,n9 
,d2 
,s2 
,n12 
,n13 
,s3 
,s4 
,n14 
,n15 
) 
 values  
('ur_folders' 
,:form_id 
,:kod_folders 
,:row_state_id 
,r.kodp 
,r.vvod 
,r.kod_podr 
,r.kod_folders 
,r.kod_emp 
,r.kod_vi 
,r.kod_sdp 
,r.dat_create 
,r.zadol 
,r.u_m 
,r.d_m 
,r.kod_parent 
,r.kod_isp 
,r.tep_el 
,r.dat_finish 
,r.num_doc 
,r.tep_el_byt 
,r.kodp_new 
,r.kodps 
,r.namep 
,r.kod_category 
,r.kod_dog 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_folders' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_folders set  
(kodp 
,vvod 
,kod_podr 
,kod_folders 
) 
= 
 ( select  
:kodp as kodp 
,:vvod as vvod 
,:kod_podr as kod_podr 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_folders=:kod_folders 
;
end;
</update-text>
      <events>
        <useaction event-name="object-save" action-type="execute-update" call="ur_folders_sync_dat_arh">
          <column table="this" column="kod_folders" />
        </useaction>
      </events>
      <scheme>
        <table name="ur_folders" as="ur_folders">
          <columns>
            <column name="kodp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="vvod" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="not_vvod" type="number" title="" visible="0" />
            <column name="kod_podr" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kodp_x_n" type="string" title="Абонент" visible="0" />
            <column name="vvod_x_n" type="string" title="Способ учета задолженности" visible="0" />
            <column name="kod_podr_x_n" type="string" title="Отделение" />
            <column name="kodp_new_val" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_not_new" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_folders_del_vld" type="string" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns />
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_folders_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_folders_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_folders.kodp as kodp, /*number*/
ur_folders.vvod as vvod, /*number*/
ur_folders.not_vvod as not_vvod, /*number*/
ur_folders.kod_podr as kod_podr, /*number*/
kodp_x_n.sp_col_name as kodp_x_n, /*Абонент*//*string*/
vvod_x_n.name as vvod_x_n, /*Способ учета задолженности*//*string*/
kod_podr_x_n.name as kod_podr_x_n, /*Отделение*//*string*/
ur_folders.kodp_new_val as kodp_new_val, /*number*/
ur_folders.is_new as is_new, /*number*/
ur_folders.is_not_new as is_not_new, /*number*/
qube.ur_folders_del_vld1 as ur_folders_del_vld, /*Валидация удаления папки*//*string*/
ur_folders.kod_folders as kod_folders/*number*//*key*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
max( case  when ( nvl( (nullif( nvl( qube.ur_pretenz_count_old1 ,0)  +nvl( qube.ur_pret_count1 ,0) ,0) )  ,0)!=0 )  then 'Есть претензии' when ( nvl( qube.ur_mat_count1 ,0)!=0 )  then 'Есть материалы переданные в суд' end )  as ur_folders_del_vld1/*Валидация удаления папки*//*string*/

from (
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
(
(
--
select qube.kod_folders as kod_folders, /*number*//*key*/
qube.ur_mat_count1 as ur_mat_count1, /*number*/
qube.ur_pret_count1 as ur_pret_count1, /*number*/
qube.ur_pretenz_count_old1 as ur_pretenz_count_old1/*number*/

from (
--
select un.kod_folders as kod_folders, /*number*//*key*/
sum(un.ur_mat_count1)  as ur_mat_count1, /*number*/
sum(un.ur_pret_count1)  as ur_pret_count1, /*number*/
sum(un.ur_pretenz_count_old1)  as ur_pretenz_count_old1/*number*/

from (
(
(
--
select ur_folders.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders
--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_mat_a_d.kod_folders as kod_folders, /*number*//*key*/
ur_mat_a_d.cnt as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_mat
a
--\ur_mat
)
ur_mat_a_d
--\ur_mat
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_mat_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pret_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
ur_pret_a_d.cnt as ur_pret_count1, /*number*/
null as ur_pretenz_count_old1/*number*/

from (
--ur_pret
select a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pret
a
--\ur_pret
)
ur_pret_a_d
--\ur_pret
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pret_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
union all
(
--
select ur_pretenz_a_d.kod_folders as kod_folders, /*number*//*key*/
null as ur_mat_count1, /*number*/
null as ur_pret_count1, /*number*/
ur_pretenz_a_d.cnt as ur_pretenz_count_old1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
1 as cnt/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz_a_d
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders/*number*//*key*/

from (select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
)
ur_folders on ur_pretenz_a_d.kod_folders = ur_folders.kod_folders--\ur_folders
where
ur_folders.kod_folders is not null )
--\
)
--\
)
un
--\
 group by
un.kod_folders/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_folders/*number*//*key*/
)
qube
--\
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kodp as kodp, /**//*number*/
a.vvod as vvod, /**//*number*/
a.kod_podr as kod_podr, /*number*/
kod_isp.kodp as kodp_new_val, /*number*/
 decode ( a.vvod ,0,1,0)  as not_vvod, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
a
--\(select a.kod_folders as kod_folders,a.kodp as kodp,a.vvod as vvod,a.kod_podr as kod_podr,0 as is_new,1 as is_not_new,a.kod_isp as kod_isp  from ur_folders a where not exists (select * from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and a.kod_folders=t.f2 ) and   a.kod_folders in :kod_folders_prm   union all  select t.n1 as kod_folders,t.n2 as kodp,t.n10 as vvod,t.n11 as kod_podr,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new,t.n8 as kod_isp  from rr_temp t where t.skod ='ur_folders' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_folders_prm )
left outer join
(
--ur_isp
select a.kod_isp as kod_isp, /*number*//*key*/
a.kodp as kodp/**//*number*/

from ur_isp
a
--\ur_isp
)
kod_isp on a.kod_isp = kod_isp.kod_isp--\ur_isp
)
ur_folders on ur_folders.kod_folders = qube.kod_folders--\ur_folders
left outer join
(
--kr_org
select a.kodp as kodp, /**//*number*//*key*/
a.name as name/*Отделение*//*string*/

from kr_org
a
--\kr_org
)
kod_podr_x_n on ur_folders.kod_podr = kod_podr_x_n.kodp--\kr_org
left outer join
(
--ur_folders_vvod
select a.kod as kod, /*number*//*key*/
a.name as name/*Вид суммы*//*string*/

from (
      select 0 as kod,'По платежным документам' as name from dual union all
      select 1,'Ручной ввод' from dual
    )a
--\folders_vvod
)
vvod_x_n on ur_folders.vvod = vvod_x_n.kod--\ur_folders_vvod
left outer join
(
--kr_payer
select a.kodp as kodp, /**//*number*//*key*/
a.nump || ' ' || a.name as sp_col_name/**//*string*/

from kr_payer
a
--\kr_payer
)
kodp_x_n on ur_folders.kodp = kodp_x_n.kodp--\kr_payer
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
    <table name="ur_pretenz" auto-refresh="" async="" only-visible-refresh="" only-force-refresh="" ref-column="" multi-select-column="" multi-select-target="" update-target="ur_pretenz" key="kod_pretenz" parent-table="ur_folders" parent-key="kod_folders" is-ms-upd="1" key-dimension="kod_pretenz">
      <select-text>
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_pretenz.kod_vid_pretenz as kod_vid_pretenz, /*number*/
ur_pretenz.dat_doc as dat_doc, /*Дата претензии*//*date*/
ur_pretenz.kod_subject as kod_subject, /*number*/
qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
ur_pretenz.vvod_sum_osn as vvod_sum_osn, /*Основная реализация*//*number*/
ur_pretenz.vvod_sum_peni as vvod_sum_peni, /*Проценты (пени)*//*number*/
qube.pretenz_peni_period_str1 as pretenz_peni_period_str, /*Период пени*//*string*/
ur_pretenz.ogr as ogr, /* Расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.vvod_per_s as vvod_per_s, /*Период начисления с*//*number*/
ur_pretenz.vvod_per_po as vvod_per_po, /*Период начисления по*//*number*/
ur_pretenz.dat_do as dat_do, /*Оплатить до*//*date*/
ur_pretenz.dat_srok as dat_srok, /*Срок ответа*//*date*/
ur_pretenz.kod_state as kod_state, /*number*/
ur_pretenz.dat_otv as dat_otv, /*Дата получения ответа*//*date*/
ur_pretenz.reply as reply, /*Содержание ответа*//*string*/
qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
ur_pretenz.vvod_opl_osn as vvod_opl_osn, /*Оплата основной реализации*//*number*/
ur_pretenz.vvod_opl_peni as vvod_opl_peni, /*Оплата проценты (пени)*//*number*/
ur_pretenz.opl_ogr as opl_ogr, /*Оплата расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_osn1 as ur_pretenz_vvod_ostatok_osn, /*Остаток основной реализации*//*number*/
qube.ur_pretenz_vvod_ostatok_peni1 as ur_pretenz_vvod_ostatok_peni, /*Остаток проценты (пени)*//*number*/
qube.ur_pretenz_ost_ogr1 as ur_pretenz_ost_ogr, /*Остаток расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.dat_arh as dat_arh, /*Дата архивации*//*date*/
ur_pretenz.is_not_new as is_not_new, /*number*/
ur_pretenz.pr_priv as pr_priv, /*Скопирована из модуля "Претензии"*//*number*/
ur_pretenz.kod_mat as kod_mat, /*Иск*//*number*/
ur_pretenz.kod_emp as kod_emp, /*Исполнитель ПИО*//*number*/
ur_pretenz.num_sz as num_sz, /*№ с/з о пост. мат.*//*string*/
ur_pretenz.pio_date as pio_date, /*Дата поступления материалов в ПИО*//*date*/
ur_pretenz.prim as prim, /*Примечание*//*string*/
ur_pretenz.right_common as right_common, /*number*/
ur_pretenz.right_pio as right_pio, /*number*/
ur_pretenz.last_kod_pretenz as last_kod_pretenz, /*number*/
kod_vid_pretenz_x_n.name as kod_vid_pretenz_x_n, /*Вид претензии*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
kod_state_x_n.name as kod_state_x_n, /*Состояние документа*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Иск*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Исполнитель ПИО*//*string*/
ur_pretenz.dat_do_new_val as dat_do_new_val, /*Дата претензии*//*date*/
ur_pretenz.dat_otv_new_val as dat_otv_new_val, /*Дата претензии*//*date*/
ur_pretenz.kod_folders as kod_folders, /*number*/
ur_pretenz.dep_pio as dep_pio, /*number*/
ur_pretenz.is_new as is_new/*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.pretenz_peni_period_ym1 ) )  as pretenz_peni_period_str1, /*Период пени*//*string*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_osn1 ,0) )  as ur_pretenz_vvod_ostatok_osn1, /*Остаток задолженности основная реализация (Карточка ПИР, вкладка ИЛ)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_peni1 ,0) )  as ur_pretenz_vvod_ostatok_peni1, /*Остаток задолженности пени (Карточка ПИР, вкладка ИЛ)*//*number*/
sum( nvl( qube.ur_pretenz_ogr1 ,0)  -nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1, /*Период*//*string*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1, /*Период*//*string*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1, /*number*/
stragg(un.pretenz_peni_period_ym1)  as pretenz_peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_pretenz as kod_pretenz, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_pretenz_ogr1, /*number*/
null as ur_pretenz_opl_ogr1, /*number*/
null as ur_pretenz_vvod_opl_osn1, /*number*/
null as ur_pretenz_vvod_opl_peni1, /*number*/
null as ur_pretenz_vvod_sum_osn1, /*number*/
null as ur_pretenz_vvod_sum_peni1, /*number*/
null as pretenz_peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_pretenz as kod_pretenz/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz on kod_dogplat_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
( 1=1 )  {  and ((ur_pretenz.dat_arh is null )  and (:no_arh  = 1) )  }  and (ur_pretenz.kod_folders = :fk_kod_folders )  and (ur_pretenz.kod_pretenz is not null )  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1, /*number*/
null as pretenz_peni_period_ym1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_arh as dat_arh, /*Дата архивации*//*date*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz
--\ur_pretenz
where
( 1=1 )  {  and ((ur_pretenz.dat_arh is null )  and (:no_arh  = 1) )  }  and (ur_pretenz.kod_folders = :fk_kod_folders )  and (ur_pretenz.kod_pretenz is not null ) )
--\
union all
(
--
select ur_pretenz_peni_period_a_d.kod_pretenz as kod_pretenz, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_pretenz_ogr1, /*number*/
null as ur_pretenz_opl_ogr1, /*number*/
null as ur_pretenz_vvod_opl_osn1, /*number*/
null as ur_pretenz_vvod_opl_peni1, /*number*/
null as ur_pretenz_vvod_sum_osn1, /*number*/
null as ur_pretenz_vvod_sum_peni1, /*number*/
ur_pretenz_peni_period_a_d.name as pretenz_peni_period_ym1/*Период*//*string*/

from (
--ur_pretenz_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_pretenz as kod_pretenz, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_pretenz_peni_period
a
--\ur_pretenz_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_pretenz_peni_period_a_d
--\ur_pretenz_peni_period
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.dat_arh as dat_arh/*Дата архивации*//*date*/

from ur_pretenz
a
--\ur_pretenz
)
ur_pretenz on ur_pretenz_peni_period_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
( 1=1 )  {  and ((ur_pretenz.dat_arh is null )  and (:no_arh  = 1) )  }  and (ur_pretenz.kod_folders = :fk_kod_folders )  and (ur_pretenz.kod_pretenz is not null ) )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_subject as kod_subject, /*number*/
a.kod_state as kod_state, /*number*/
a.dat_do as dat_do, /*Оплатить до*//*date*/
a.dat_otv as dat_otv, /*Дата получения ответа*//*date*/
a.reply as reply, /*Содержание ответа*//*string*/
a.prim as prim, /*Примечание*//*string*/
a.dat_doc as dat_doc, /*Дата претензии*//*date*/
a.dat_srok as dat_srok, /*Срок ответа*//*date*/
a.kod_vid_pretenz as kod_vid_pretenz, /*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_arh as dat_arh, /*Дата архивации*//*date*/
a.num_sz as num_sz, /*№ с/з о пост. мат.*//*string*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_per_s as vvod_per_s, /*number*/
a.vvod_per_po as vvod_per_po, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn, /*number*/
a.kod_emp as kod_emp, /*Исполнитель ПИО*//*number*/
a.pio_date as pio_date, /*date*/
 max( a.kod_pretenz )  over(  partition by a.kod_mat )  as last_kod_pretenz, /*number*/
a.kod_mat as kod_mat, /*number*/
 case  when (a.kod_pret is not null )  then 1 else 0 end  as pr_priv, /*Скопирована из модуля "Претензии"*//*number*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 2)
--\
 )  as dat_do_new_val, /*Дата претензии*//*date*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 3)
--\
 )  as dat_otv_new_val, /*Дата претензии*//*date*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16078 ) )  = 2)  then 1 else 0 end  as right_common, /*number*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16077 ) )  = 2)  then 1 else 0 end  as right_pio, /*number*/
 case  when (rs_esys.kod_esys = 1)  then 1219 else kod_folders.kod_podr end  as dep_pio, /*number*/
0 as is_new, /*number*/
1 as is_not_new/*number*/

from ur_pretenz
a
--\ur_pretenz
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
cross join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys
--\rs_esys
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_pretenz.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_pretenz.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_pretenz.kod_state = kod_state_x_n.kod_state--\us_state
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_pretenz.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--us_vid_pretenz
select a.kod_vid_pretenz as kod_vid_pretenz, /*number*//*key*/
a.name as name/*Вид претензии*//*string*/

from us_vid_pretenz
a
--\us_vid_pretenz
)
kod_vid_pretenz_x_n on ur_pretenz.kod_vid_pretenz = kod_vid_pretenz_x_n.kod_vid_pretenz--\us_vid_pretenz
--\
</select-text>
      <columns>
        <column name="kod_pretenz" table="ur_pretenz" type="number" title="" parname="cur_kod_pretenz" ColumnVisible="0" is-updateable="1" is-updateable-ext="1" update-target="kod_pretenz" temp-col-name="n1" />
        <column name="kr_dog_name" table="ur_pretenz" type="string" title="Договор" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1/*Договор*//*string*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1/*Договор*//*string*/

from (
(
(
--
select dims.kod_pretenz as kod_pretenz, /*number*//*key*/
kr_dogovor.name as kr_dog_name1/*Договор*//*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_pretenz as kod_pretenz/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on kod_dogplat_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
null as kr_dog_name1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_vid_pretenz" table="ur_pretenz" type="number" title="Вид претензии" ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_vid_pretenz" temp-col-name="n2">
          <sel-list-compiled>
            <root>
              <query class="1" title="Вид претензии" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_vid_pretenz.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_vid_pretenz" as="kod_vid_pretenz" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_vid_pretenz" into="n1">a.kod_vid_pretenz as kod_vid_pretenz, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Вид претензии" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Вид претензии*//*string*/
</column></select>
                <from>
from <query name="us_vid_pretenz" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_vid_pretenz
select <column table="a" column="kod_vid_pretenz" type="number" key="1" as="kod_vid_pretenz" used="1" sourcetable="./a/a" sourcecolumn="kod_vid_pretenz">a.kod_vid_pretenz as kod_vid_pretenz, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Вид претензии" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Вид претензии*//*string*/
</column></select><from>
from <table name="us_vid_pretenz" as="a" title="Вид претензии" used="1">us_vid_pretenz
a
--\us_vid_pretenz
</table></from>)
a
--\us_vid_pretenz
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_vid_pretenz" as="kod_vid_pretenz" title="" key="1" thissrc="kod_vid_pretenz">a.kod_vid_pretenz</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_vid_pretenz" as="kod_vid_pretenz" title="" key="1" thissrc="kod_vid_pretenz">a.kod_vid_pretenz</column><text txtype="func"> ) like lower( </text><const><text>:kod_vid_pretenz_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Вид претензии" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Вид претензии" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_vid_pretenz.xml" haskeys="1" as="a">
              <queries>
                <query class="1" title="Вид претензии" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_vid_pretenz.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_vid_pretenz_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_vid_pretenz" as="kod_vid_pretenz" title="" key="1" />
                    <column table="a" column="name" as="name" title="Вид претензии" />
                  </select>
                  <from>
                    <query name="us_vid_pretenz" as="a" title="Вид претензии" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_vid_pretenz" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_vid_pretenz" />
                        <useparam name="kod_vid_pretenz_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_vid_pretenz_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_vid_pretenz_filter" type="string">
                  <const>:kod_vid_pretenz_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_vid_pretenz_x_n.name as kod_vid_pretenz_x_n, /*Вид претензии*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_vid_pretenz as kod_vid_pretenz/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_vid_pretenz as kod_vid_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n2 as kod_vid_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_vid_pretenz as kod_vid_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n2 as kod_vid_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_vid_pretenz
select a.kod_vid_pretenz as kod_vid_pretenz, /*number*//*key*/
a.name as name/*Вид претензии*//*string*/

from us_vid_pretenz
a
--\us_vid_pretenz
)
kod_vid_pretenz_x_n on ur_pretenz.kod_vid_pretenz = kod_vid_pretenz_x_n.kod_vid_pretenz--\us_vid_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_vid_pretenz_x_n" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="dat_doc" table="ur_pretenz" type="date" title="Дата претензии" ClientEditable="right_common" is-user-editable="1" ColumnDefault="today" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="dat_doc" temp-col-name="d1">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.dat_do_new_val as dat_do_new_val, /*Дата претензии*//*date*/
ur_pretenz.dat_otv_new_val as dat_otv_new_val, /*Дата претензии*//*date*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 2)
--\
 )  as dat_do_new_val, /*Дата претензии*//*date*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 3)
--\
 )  as dat_otv_new_val/*Дата претензии*//*date*/

from (select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dat_do_new_val" table="ur_pretenz" />
            <dependant name="dat_otv_new_val" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="kod_subject" table="ur_pretenz" type="number" title="Предмет" ClientEditable="right_common" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_subject" temp-col-name="n3">
          <sel-list-compiled>
            <root>
              <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_subject" as="kod_subject" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_subject" into="n1">a.kod_subject as kod_subject, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Предмет иска" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Предмет иска*//*string*/
</column></select>
                <from>
from <query name="us_subject" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_subject
select <column table="a" column="kod_subject" type="number" key="1" as="kod_subject" used="1" sourcetable="./a/a" sourcecolumn="kod_subject">a.kod_subject as kod_subject, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Предмет иска" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Предмет иска*//*string*/
</column></select><from>
from <table name="us_subject" as="a" title="Предмет" used="1">us_subject
a
--\us_subject
</table></from>)
a
--\us_subject
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_subject" as="kod_subject" title="" key="1" thissrc="kod_subject">a.kod_subject</column><text txtype="func"> ) like lower( </text><const><text>:kod_subject_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Предмет иска" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" as="a">
              <queries>
                <query class="1" title="Предмет" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_subject.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_subject_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_subject" as="kod_subject" title="" key="1" />
                    <column table="a" column="name" as="name" title="Предмет иска" />
                  </select>
                  <from>
                    <query name="us_subject" as="a" title="Предмет" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_subject" />
                        <useparam name="kod_subject_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_subject_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_subject_filter" type="string">
                  <const>:kod_subject_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_subject as kod_subject/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_subject as kod_subject  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_subject as kod_subject  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_pretenz.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_subject_x_n" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="ur_pretenz_vvod_sum_all" table="ur_pretenz" type="number" title="Заявленная сумма" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1/*Расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_sum_osn" table="ur_pretenz" type="number" title="Основная реализация" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_sum_osn" temp-col-name="n4">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_osn1 as ur_pretenz_vvod_ostatok_osn, /*Остаток основной реализации*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_osn1 ,0) )  as ur_pretenz_vvod_ostatok_osn1/*Остаток задолженности основная реализация (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_sum_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_osn" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="vvod_sum_peni" table="ur_pretenz" type="number" title="Проценты (пени)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_sum_peni" temp-col-name="n5">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_peni1 as ur_pretenz_vvod_ostatok_peni, /*Остаток проценты (пени)*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_peni1 ,0) )  as ur_pretenz_vvod_ostatok_peni1/*Остаток задолженности пени (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_sum_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_peni" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="pretenz_peni_period_str" table="ur_pretenz" type="string" title="Период пени" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.pretenz_peni_period_str1 as pretenz_peni_period_str, /*Период пени*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.pretenz_peni_period_ym1 ) )  as pretenz_peni_period_str1/*Период пени*//*string*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1/*Период*//*string*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1/*Период*//*string*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg(un.pretenz_peni_period_ym1)  as pretenz_peni_period_ym1/*Период*//*string*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
null as pretenz_peni_period_ym1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
union all
(
--
select ur_pretenz_peni_period_a_d.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz_peni_period_a_d.name as pretenz_peni_period_ym1/*Период*//*string*/

from (
--ur_pretenz_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_pretenz as kod_pretenz, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_pretenz_peni_period
a
--\ur_pretenz_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_pretenz_peni_period_a_d
--\ur_pretenz_peni_period
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz_peni_period_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ogr" table="ur_pretenz" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="ogr" temp-col-name="n6">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_ost_ogr1 as ur_pretenz_ost_ogr, /*Остаток расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_ogr1 ,0)  -nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_sum_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_ost_ogr" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="vvod_per_s" table="ur_pretenz" type="number" title="Период начисления с" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_per_s" temp-col-name="n7">
          <sel-list-compiled>
            <root>
              <query order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="ym">ym</column>
                </order>
                <select>--a
select <column table="a" column="ym" key="1" as="ym" used="1" type="number" into="n1">a.ym as ym, /*number*//*key*/
</column><column table="a" column="name" vid="1" is-name="1" as="name" key="0" used="1" type="string" title="Период" into="s1">a.name as name/*Период*//*string*/
</column></select>
                <from>
from <query name="spr_time_ym" as="a" path="./a/a" order="ym desc" haskeys="1" used="1">(
<order notext="1"><column column="ym">ym</column></order><select>--spr_time_ym
select <column table="a" column="ym" key="1" as="ym" used="1" type="number">a.ym as ym, /*number*//*key*/
</column><column table="a" column="name" vid="1" is-name="1" as="name" key="0" used="1" type="string" title="Период">a.name as name/*Период*//*string*/
</column></select><from>
from <query name="spr_time_ym_pre" as="a" path="./a/a/a" order="ym" haskeys="1" used="1">(
<order notext="1"><column column="ym">ym</column></order><select>--spr_time_ym_pre
select <call function="date to ym" as="ym" key="1" group="1" pth="" type="number" used="1"><text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text> as ym, /*number*//*key*/
</call><call function="ym to char" as="name" title="Период" key="0" group="max" pth="" type="string" used="1">max(<text txtype="func"> trim(to_char( </text><call function="date to ym" as="ym" key="1" pth="" type="number" thissrc="ym">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> ,'9999.99')) </text>)  as name/*Период*//*string*/
</call></select><from>
from <table name="vv_day" as="a" used="1">vv_day
a
--\vv_day
</table></from><group> group by
<call function="date to ym" as="ym" key="1" group="1" pth="" type="number" used="1"><text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text>/*number*//*key*/
</call></group><order>
order by ym</order>)
a
--\spr_time_ym_pre
</query></from><order>
order by ym desc</order>)
a
--\spr_time_ym
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="le" pth="" type="bool">(<column table="a" column="ym">a.ym</column><text txtype="func"> &lt;= </text><call function="date to ym" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><call function="sysdate" pth="" type="date">(<text txtype="func"> sysdate </text>) </call><text txtype="func"> ,'YYYYMM'))/100 </text>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="ym" key="1" as="ym" thissrc="ym">a.ym</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="name" vid="1" is-name="1" as="name" thissrc="name">a.name</column><text txtype="func"> in </text><const><text>:obj_name </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym" key="1" as="ym" thissrc="ym">a.ym</column><text txtype="func"> ) like lower( </text><const><text>:ym_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" vid="1" is-name="1" as="name" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by ym desc</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" as="a">
              <queries>
                <query order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="obj_name" type="array" />
                    <param name="ym_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="ym" key="1" as="ym" />
                    <column table="a" column="name" vid="1" is-name="1" as="name" />
                  </select>
                  <from>
                    <query name="spr_time_ym" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="le">
                        <column table="a" column="ym" />
                        <call function="date to ym">
                          <call function="sysdate" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="ym" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="name" />
                        <useparam name="obj_name" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym" />
                        <useparam name="ym_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="ym" />
                  </order>
                  <order>
                    <column column="ym" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="obj_name" />
                    <useparam name="ym_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="obj_name" type="array">
                  <const>:obj_name </const>
                </param>
                <param name="ym_filter" type="string">
                  <const>:ym_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
        </column>
        <column name="vvod_per_po" table="ur_pretenz" type="number" title="Период начисления по" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_per_po" temp-col-name="n8">
          <sel-list-compiled>
            <root>
              <query order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="ym">ym</column>
                </order>
                <select>--a
select <column table="a" column="ym" key="1" as="ym" used="1" type="number" into="n1">a.ym as ym, /*number*//*key*/
</column><column table="a" column="name" vid="1" is-name="1" as="name" key="0" used="1" type="string" title="Период" into="s1">a.name as name/*Период*//*string*/
</column></select>
                <from>
from <query name="spr_time_ym" as="a" path="./a/a" order="ym desc" haskeys="1" used="1">(
<order notext="1"><column column="ym">ym</column></order><select>--spr_time_ym
select <column table="a" column="ym" key="1" as="ym" used="1" type="number">a.ym as ym, /*number*//*key*/
</column><column table="a" column="name" vid="1" is-name="1" as="name" key="0" used="1" type="string" title="Период">a.name as name/*Период*//*string*/
</column></select><from>
from <query name="spr_time_ym_pre" as="a" path="./a/a/a" order="ym" haskeys="1" used="1">(
<order notext="1"><column column="ym">ym</column></order><select>--spr_time_ym_pre
select <call function="date to ym" as="ym" key="1" group="1" pth="" type="number" used="1"><text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text> as ym, /*number*//*key*/
</call><call function="ym to char" as="name" title="Период" key="0" group="max" pth="" type="string" used="1">max(<text txtype="func"> trim(to_char( </text><call function="date to ym" as="ym" key="1" pth="" type="number" thissrc="ym">(<text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text>) </call><text txtype="func"> ,'9999.99')) </text>)  as name/*Период*//*string*/
</call></select><from>
from <table name="vv_day" as="a" used="1">vv_day
a
--\vv_day
</table></from><group> group by
<call function="date to ym" as="ym" key="1" group="1" pth="" type="number" used="1"><text txtype="func"> to_number(to_char( </text><column table="a" column="dat_day">a.dat_day</column><text txtype="func"> ,'YYYYMM'))/100 </text>/*number*//*key*/
</call></group><order>
order by ym</order>)
a
--\spr_time_ym_pre
</query></from><order>
order by ym desc</order>)
a
--\spr_time_ym
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="le" pth="" type="bool">(<column table="a" column="ym">a.ym</column><text txtype="func"> &lt;= </text><call function="date to ym" pth="" type="number">(<text txtype="func"> to_number(to_char( </text><call function="sysdate" pth="" type="date">(<text txtype="func"> sysdate </text>) </call><text txtype="func"> ,'YYYYMM'))/100 </text>) </call>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="ym" key="1" as="ym" thissrc="ym">a.ym</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="name" vid="1" is-name="1" as="name" thissrc="name">a.name</column><text txtype="func"> in </text><const><text>:obj_name </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ym" key="1" as="ym" thissrc="ym">a.ym</column><text txtype="func"> ) like lower( </text><const><text>:ym_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" vid="1" is-name="1" as="name" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by ym desc</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" as="a">
              <queries>
                <query order="ym desc" class="1" comment="Запрос для полей с выбором периода в формах арбитража" timestamp="04.09.2023 14:16:08" file="sql.builder.templates\sql.builder\projects\common\time\spr_time_intervals.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="obj_name" type="array" />
                    <param name="ym_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="ym" key="1" as="ym" />
                    <column table="a" column="name" vid="1" is-name="1" as="name" />
                  </select>
                  <from>
                    <query name="spr_time_ym" as="a" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="le">
                        <column table="a" column="ym" />
                        <call function="date to ym">
                          <call function="sysdate" />
                        </call>
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="ym" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="name" />
                        <useparam name="obj_name" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ym" />
                        <useparam name="ym_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="ym" />
                  </order>
                  <order>
                    <column column="ym" />
                  </order>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="obj_name" />
                    <useparam name="ym_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="obj_name" type="array">
                  <const>:obj_name </const>
                </param>
                <param name="ym_filter" type="string">
                  <const>:ym_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-cl-fact-pars />
        </column>
        <column name="dat_do" table="ur_pretenz" type="date" title="Оплатить до" ClientEditable="right_common" is-user-editable="1" Default="dat_do_new_val" ColumnMandatory="1" NewVal="dat_do_new_val" is-updateable="1" is-updateable-ext="1" update-target="dat_do" temp-col-name="d2" />
        <column name="dat_srok" table="ur_pretenz" type="date" title="Срок ответа" ClientEditable="right_common" is-user-editable="1" Default="dat_otv_new_val" NewVal="dat_otv_new_val" is-updateable="1" is-updateable-ext="1" update-target="dat_srok" temp-col-name="d3" />
        <column name="kod_state" table="ur_pretenz" type="number" title="Состояние документа" ClientEditable="right_common" is-user-editable="1" ColumnMandatory="1" is-updateable="1" is-updateable-ext="1" update-target="kod_state" temp-col-name="n9">
          <sel-list-compiled>
            <root>
              <query title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_state" as="kod_state" title="" key="1" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_state" into="n1">a.kod_state as kod_state, /**//*number*//*key*/
</column><column table="a" column="name" as="name" title="Состояние документа" key="0" used="1" type="string" sourcetable="./a/a" sourcecolumn="name" into="s1">a.name as name/*Состояние документа*//*string*/
</column></select>
                <from>
from <query name="us_state" as="a" path="./a/a" haskeys="1" used="1">(
<select>--us_state
select <column table="a" column="kod_state" type="number" key="1" as="kod_state" used="1" sourcetable="./a/a" sourcecolumn="kod_state">a.kod_state as kod_state, /*number*//*key*/
</column><column table="a" column="name" type="string" title="Состояние документа" vid="1" as="name" used="1" sourcetable="./a/a" sourcecolumn="name" key="0">a.name as name/*Состояние документа*//*string*/
</column></select><from>
from <table name="us_state" as="a" title="Состояние документа" used="1">us_state
a
--\us_state
</table></from>)
a
--\us_state
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_state" as="kod_state" title="" key="1" thissrc="kod_state">a.kod_state</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_state" as="kod_state" title="" key="1" thissrc="kod_state">a.kod_state</column><text txtype="func"> ) like lower( </text><const><text>:kod_state_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Состояние документа" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" as="a">
              <queries>
                <query title="Состояние документа" class="1" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\us_state.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_state_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_state" as="kod_state" title="" key="1" />
                    <column table="a" column="name" as="name" title="Состояние документа" />
                  </select>
                  <from>
                    <query name="us_state" as="a" title="Состояние документа" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_state" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_state" />
                        <useparam name="kod_state_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_state_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_state_filter" type="string">
                  <const>:kod_state_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_state_x_n.name as kod_state_x_n, /*Состояние документа*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_state as kod_state/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_state as kod_state  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n9 as kod_state  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_state as kod_state  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n9 as kod_state  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_pretenz.kod_state = kod_state_x_n.kod_state--\us_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_state_x_n" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="dat_otv" table="ur_pretenz" type="date" title="Дата получения ответа" ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_otv" temp-col-name="d4" />
        <column name="reply" table="ur_pretenz" type="string" title="Содержание ответа" ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="reply" temp-col-name="s1" />
        <column name="ur_pretenz_vvod_opl_all" table="ur_pretenz" type="number" title="Оплата по претензии" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.opl_ogr as opl_ogr,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n12 as opl_ogr,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.opl_ogr as opl_ogr,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n12 as opl_ogr,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="vvod_opl_osn" table="ur_pretenz" type="number" title="Оплата основной реализации" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_opl_osn" temp-col-name="n10">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_osn1 as ur_pretenz_vvod_ostatok_osn, /*Остаток основной реализации*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_osn1 ,0) )  as ur_pretenz_vvod_ostatok_osn1/*Остаток задолженности основная реализация (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_opl_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_osn" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="vvod_opl_peni" table="ur_pretenz" type="number" title="Оплата проценты (пени)" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="vvod_opl_peni" temp-col-name="n11">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_peni1 as ur_pretenz_vvod_ostatok_peni, /*Остаток проценты (пени)*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_peni1 ,0) )  as ur_pretenz_vvod_ostatok_peni1/*Остаток задолженности пени (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_opl_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_peni" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="opl_ogr" table="ur_pretenz" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." ClientEditable="1" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="opl_ogr" temp-col-name="n12">
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_ost_ogr1 as ur_pretenz_ost_ogr, /*Остаток расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_ogr1 ,0)  -nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="ur_pretenz_vvod_opl_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" />
            <dependant name="ur_pretenz_ost_ogr" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="ur_pretenz_vvod_ostatok_all" table="ur_pretenz" type="number" title="Остаток задолженности по претензии" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1/*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_pretenz_vvod_ostatok_osn" table="ur_pretenz" type="number" title="Остаток основной реализации" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_ostatok_osn1 as ur_pretenz_vvod_ostatok_osn, /*Остаток основной реализации*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_osn1 ,0) )  as ur_pretenz_vvod_ostatok_osn1/*Остаток задолженности основная реализация (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.vvod_sum_osn as vvod_sum_osn,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n4 as vvod_sum_osn,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.vvod_sum_osn as vvod_sum_osn,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n4 as vvod_sum_osn,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_pretenz_vvod_ostatok_peni" table="ur_pretenz" type="number" title="Остаток проценты (пени)" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_vvod_ostatok_peni1 as ur_pretenz_vvod_ostatok_peni, /*Остаток проценты (пени)*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_peni1 ,0) )  as ur_pretenz_vvod_ostatok_peni1/*Остаток задолженности пени (Карточка ПИР, вкладка ИЛ)*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1/*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni/*number*/

from (select a.kod_pretenz as kod_pretenz,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="ur_pretenz_ost_ogr" table="ur_pretenz" type="number" title="Остаток расх. за введ. огранич. реж. энергопотребл." is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select qube.ur_pretenz_ost_ogr1 as ur_pretenz_ost_ogr, /*Остаток расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
sum( nvl( qube.ur_pretenz_ogr1 ,0)  -nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
(
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr/*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_arh" table="ur_pretenz" type="date" title="Дата архивации" ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="dat_arh" temp-col-name="d5" />
        <column name="is_not_new" table="ur_pretenz" type="number" title="" parname="item_is_not_new" ColumnVisible="0" />
        <column name="pr_priv" table="ur_pretenz" type="number" title="Скопирована из модуля &quot;Претензии&quot;" ClientEditable="right_common" is-user-editable="1" is-updateable-ext="1" is-refreshed="1" update-target="pr_priv" temp-col-name="n13">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.pr_priv as pr_priv, /*Скопирована из модуля "Претензии"*//*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 case  when (a.kod_pret is not null )  then 1 else 0 end  as pr_priv/*Скопирована из модуля "Претензии"*//*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_pret as kod_pret  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n25 as kod_pret  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_pret as kod_pret  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n25 as kod_pret  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat" table="ur_pretenz" type="number" title="Иск" ClientEditable="right_common" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_mat" temp-col-name="n14">
          <sel-list-compiled>
            <root>
              <query class="1" timestamp="05.06.2017 19:40:30" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_mat.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_mat" as="kod_mat" key="1" fixed="1" used="1" type="number" agg="max" sourcetable="./a/a" sourcecolumn="kod_mat" into="n1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="name" as="name" key="0" used="1" type="string" title="Иск" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" into="s1">a.name as name/*Иск*//*string*/
</column></select>
                <from>
from <query name="ur_mat" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><call function="||" as="name" title="Иск" key="0" pth="" type="string" used="1" sourcetable="./a/a/kod_doc" sourcecolumn="abbr"><column table="kod_doc" column="abbr">kod_doc.abbr</column><text txtype="func"> || </text><const><text>'  '</text></const><text txtype="func"> || </text><column table="a" column="num_delo">a.num_delo</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Иск*//*string*/
</call></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="us_doc" as="kod_doc" join="left outer" path="./a/a/kod_doc" haskeys="1" used="1">left outer join
(
<select>--us_doc
select <column table="a" column="kod_doc" type="number" as="kod_doc" key="1" fixed="1" sourcetable="./a/a/kod_doc" sourcecolumn="kod_doc" used="1">a.kod_doc as kod_doc, /*number*//*key*/
</column><column table="a" column="abbr" type="string" title="Аббревиатура" vid="1" as="abbr" key="0" sourcetable="./a/a/kod_doc" sourcecolumn="abbr" used="1">a.abbr as abbr/*Аббревиатура*//*string*/
</column></select><from>
from <table name="us_doc" as="a" title="Документ" used="1">us_doc
a
--\us_doc
</table></from><call function="=" type="bool">)
kod_doc on <column table="a" column="kod_doc">a.kod_doc</column><text txtype="func"> = </text><column table="kod_doc" column="kod_doc">kod_doc.kod_doc</column></call>--\us_doc
</query></from>)
a
--\ur_mat
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><const><text>:p_kod_fold </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_mat" as="kod_mat" key="1" fixed="1" thissrc="kod_mat">a.kod_mat</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_mat" as="kod_mat" key="1" fixed="1" thissrc="kod_mat">a.kod_mat</column><text txtype="func"> ) like lower( </text><const><text>:kod_mat_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" key="0" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" class="1" timestamp="05.06.2017 19:40:30" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_mat.xml" haskeys="1" as="a">
              <queries>
                <query class="1" timestamp="05.06.2017 19:40:30" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\ur_mat.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param type="number" name="p_kod_fold" column="kod_folders" />
                    <param name="pk_prm" type="array" />
                    <param name="kod_mat_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_mat" as="kod_mat" key="1" fixed="1" />
                    <column table="a" column="name" as="name" key="0" />
                  </select>
                  <from>
                    <query name="ur_mat" as="a" title="Материалы переданные в суд" />
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="=">
                        <column table="a" column="kod_folders" />
                        <useparam name="p_kod_fold" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_mat" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_mat" />
                        <useparam name="kod_mat_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="p_kod_fold" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_mat_filter" />
                    <useparam name="name_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param type="number" name="p_kod_fold" column="kod_folders">
                  <const>:p_kod_fold </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_mat_filter" type="string">
                  <const>:kod_mat_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param type="number" name="p_kod_fold" column="kod_folders" />
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.last_kod_pretenz as last_kod_pretenz, /*number*/
kod_mat_x_n.name as kod_mat_x_n, /*Иск*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 max( a.kod_pretenz )  over(  partition by a.kod_mat )  as last_kod_pretenz, /*number*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_pretenz.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="last_kod_pretenz" table="ur_pretenz" />
            <dependant name="kod_mat_x_n" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="kod_emp" table="ur_pretenz" type="number" title="Исполнитель ПИО" ClientEditable="right_pio" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_emp" temp-col-name="n15">
          <sel-list-compiled>
            <root>
              <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <order notext="1">
                  <column column="fio">fio</column>
                </order>
                <select>--a
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp" into="n1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" as="fio" key="0" used="1" type="string" title="Юрист" sourcetable="./a/a/a" sourcecolumn="fio" into="s1">a.fio as fio/*Юрист*//*string*/
</column></select>
                <from>
from <query name="kr_employee_urists" as="a" path="./a/a" order="fio" haskeys="1" used="1">(
<order notext="1"><column column="fio">fio</column></order><select>--kr_employee_urists
select <column table="a" column="kod_emp" key="1" as="kod_emp" used="1" type="number" sourcetable="./a/a/a" sourcecolumn="kod_emp">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="fio" title="Юрист" vid="1" as="fio" key="0" used="1" type="string" sourcetable="./a/a/a" sourcecolumn="fio">a.fio as fio/*Юрист*//*string*/
</column></select><from>
from <query name="kr_employee" as="a" path="./a/a/a" haskeys="1" used="1">(
<select>--kr_employee
select <column table="a" column="kod_emp" type="number" comment="код сотрудника" as="kod_emp" key="1" fixed="1" sourcetable="./a/a/a" sourcecolumn="kod_emp" used="1">a.kod_emp as kod_emp, /*number*//*key*/
</column><column table="a" column="kodp" type="number" title="" comment="код абонента (организации)" as="kodp" key="0" sourcetable="./a/a/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*/
</column><column table="a" column="kod_dolzhfun" type="number" comment="код должностной функции" as="kod_dolzhfun" reference="kk_dolzhfun" refcol="kod_dolzhfun" key="0" sourcetable="./a/a/a" sourcecolumn="kod_dolzhfun" used="1">a.kod_dolzhfun as kod_dolzhfun, /*number*/
</column><column table="a" column="fio" type="string" title="ФИО" comment="фио" vid="1" as="fio" key="0" sourcetable="./a/a/a" sourcecolumn="fio" used="1">a.fio as fio/*ФИО*//*string*/
</column></select><from>
from <table name="kr_employee" as="a" used="1">kr_employee
a
--\kr_employee
</table></from>)
a
--\kr_employee
</query></from><where>where
<call function="and" pth="" type="bool"><call function="in" pth="" type="bool">(<column table="a" column="kodp">a.kodp</column><text txtype="func"> in </text><query path="./a/a" used="1">(
<select>--
select <column table="b" column="kodp" as="kodp" fixed="1" key="1" keypath=".kodp" used="1" type="number" sourcetable="./a/a/b/a" sourcecolumn="kodp">b.kodp as kodp/*number*//*key*/
</column></select><from>
from <query name="kr_org_branch3" as="b" path="./a/a/b" used="1">(
<select>--kr_org_branch3
select <column table="a" column="kodp" as="kodp" type="number" title="" key="1" fixed="1" used="1" sourcetable="./a/a/b/a" sourcecolumn="kodp">a.kodp as kodp/**//*number*//*key*/
</column></select><from>
from <query name="kr_org" as="a" path="./a/a/b/a" haskeys="1" used="1">(
<select>--kr_org
select <column table="a" column="kodp" type="number" title="" as="kodp" key="1" fixed="1" sourcetable="./a/a/b/a" sourcecolumn="kodp" used="1">a.kodp as kodp, /**//*number*//*key*/
</column><column table="a" column="kod_parent" type="number" as="kod_parent" reference="kr_org" refcol="kodp" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_separator" type="number" as="kod_separator" reference="kk_orgseparator" refcol="kod_separator" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_separator" used="1">a.kod_separator as kod_separator, /*number*/
</column><column table="a" column="kod_ecls" type="number" as="kod_ecls" reference="kk_cls" refcol="kod_ecls" key="0" sourcetable="./a/a/b/a" sourcecolumn="kod_ecls" used="1">a.kod_ecls as kod_ecls/*number*/
</column></select><from>
from <table name="kr_org" as="a" used="1">kr_org
a
--\kr_org
</table></from>)
a
--\kr_org
</query></from><connect>connect by nocycle
<call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kodp" prior="1">prior a.kodp</column><text txtype="func"> = </text><column table="a" column="kod_parent">a.kod_parent</column>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="not" pth="" optional="1" type="bool">(<text txtype="func"> not </text><call function="and" pth="" type="bool">(<call function="=" pth="" type="bool">(<column column="kod_separator" table="a">a.kod_separator</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="case" pth="">(<text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="not in" pth="" type="bool">(<column column="kodp" table="a">a.kodp</column><text txtype="func"> not in </text><call function="array" pth="">(<const><text txtype="const"> :dep </text></const>) </call>) </call><text txtype="func"> then </text><const><text>1</text></const></call><call function="else" pth="0" type="else"><text txtype="func"> else </text><const><text>0</text></const></call><text txtype="func"> end </text>) </call><text txtype="func"> = </text><const><text>1</text></const>) </call>) </call>) </call><text txtype="func"> } </text></call></connect><start>
start with <call function="and" pth="" type="bool"><call function="=" pth="" type="bool">(<column table="a" column="kod_separator">a.kod_separator</column><text txtype="func"> = </text><const><text>1</text></const>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_ecls">a.kod_ecls</column><text txtype="func"> = </text><const><text>4</text></const>) </call></call></start>)
b
--\kr_org_branch3
</query></from>)
--\
</query>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<column table="a" column="kod_dolzhfun">a.kod_dolzhfun</column><text txtype="func"> = </text><const><text>-1</text></const>) </call></call></where><order>
order by fio</order>)
a
--\kr_employee_urists
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_emp" key="1" as="kod_emp" thissrc="kod_emp">a.kod_emp</column><text txtype="func"> ) like lower( </text><const><text>:kod_emp_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="fio" as="fio" thissrc="fio">a.fio</column><text txtype="func"> ) like lower( </text><const><text>:fio_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>
                <order>
order by fio</order>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" as="a">
              <queries>
                <query order="fio" class="1" timestamp="13.02.2017 19:36:42" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\extension\kr_employee.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="dep" type="number" column="dep_pio">
                      <!--<const>(102276621)</const>-->
                    </param>
                    <param name="pk_prm" type="array" />
                    <param name="kod_emp_filter" type="string" />
                    <param name="fio_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_emp" key="1" as="kod_emp" />
                    <column table="a" column="fio" as="fio" />
                  </select>
                  <from>
                    <query name="kr_employee_urists" as="a">
                      <withparams>
                        <call function="array">
                          <useparam name="dep" />
                        </call>
                      </withparams>
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_emp" />
                        <useparam name="kod_emp_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="fio" />
                        <useparam name="fio_filter" />
                      </call>
                    </call>
                  </where>
                  <order>
                    <column column="fio" />
                  </order>
                  <withparams>
                    <useparam name="dep" />
                    <useparam name="pk_prm" />
                    <useparam name="kod_emp_filter" />
                    <useparam name="fio_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="dep" type="number" column="dep_pio">
                  <!--<const>(102276621)</const>-->
                  <const>:dep </const>
                </param>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_emp_filter" type="string">
                  <const>:kod_emp_filter </const>
                </param>
                <param name="fio_filter" type="string">
                  <const>:fio_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params>
              <param name="dep" type="number" column="dep_pio">
                <!--<const>(102276621)</const>-->
              </param>
            </params>
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Исполнитель ПИО*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_emp as kod_emp/*Исполнитель ПИО*//*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_emp as kod_emp  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n15 as kod_emp  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_emp as kod_emp  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n15 as kod_emp  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_pretenz.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="kod_emp_x_n" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="num_sz" table="ur_pretenz" type="string" title="№ с/з о пост. мат." ClientEditable="right_pio" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="num_sz" temp-col-name="s2" />
        <column name="pio_date" table="ur_pretenz" type="date" title="Дата поступления материалов в ПИО" ClientEditable="right_pio" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="pio_date" temp-col-name="d6" />
        <column name="prim" table="ur_pretenz" type="string" title="Примечание" ClientEditable="right_pio" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="prim" temp-col-name="s3" />
        <column name="right_common" table="ur_pretenz" type="number" title="" parname="right_common" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.right_common as right_common, /*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16078 ) )  = 2)  then 1 else 0 end  as right_common/*number*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="right_pio" table="ur_pretenz" type="number" title="" parname="right_pio" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.right_pio as right_pio, /*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16077 ) )  = 2)  then 1 else 0 end  as right_pio/*number*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="last_kod_pretenz" table="ur_pretenz" type="number" title="" ColumnVisible="0" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.last_kod_pretenz as last_kod_pretenz, /*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 max( a.kod_pretenz )  over(  partition by a.kod_mat )  as last_kod_pretenz/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_vid_pretenz_x_n" table="ur_pretenz.kod_vid_pretenz" type="string" title="Вид претензии" text-source-for="kod_vid_pretenz" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_vid_pretenz_x_n.name as kod_vid_pretenz_x_n, /*Вид претензии*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_vid_pretenz as kod_vid_pretenz/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_vid_pretenz as kod_vid_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n2 as kod_vid_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_vid_pretenz as kod_vid_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n2 as kod_vid_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_vid_pretenz
select a.kod_vid_pretenz as kod_vid_pretenz, /*number*//*key*/
a.name as name/*Вид претензии*//*string*/

from us_vid_pretenz
a
--\us_vid_pretenz
)
kod_vid_pretenz_x_n on ur_pretenz.kod_vid_pretenz = kod_vid_pretenz_x_n.kod_vid_pretenz--\us_vid_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_subject_x_n" table="ur_pretenz.kod_subject" type="string" title="Предмет" text-source-for="kod_subject" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_subject as kod_subject/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_subject as kod_subject  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_subject as kod_subject  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n3 as kod_subject  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_pretenz.kod_subject = kod_subject_x_n.kod_subject--\us_subject
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_state_x_n" table="ur_pretenz.kod_state" type="string" title="Состояние документа" text-source-for="kod_state" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_state_x_n.name as kod_state_x_n, /*Состояние документа*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_state as kod_state/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_state as kod_state  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n9 as kod_state  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_state as kod_state  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n9 as kod_state  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_pretenz.kod_state = kod_state_x_n.kod_state--\us_state
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_mat_x_n" table="ur_pretenz.kod_mat" type="string" title="Иск" text-source-for="kod_mat" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_mat_x_n.name as kod_mat_x_n, /*Иск*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_mat as kod_mat/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_mat as kod_mat  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n14 as kod_mat  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_pretenz.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_emp_x_n" table="ur_pretenz.kod_emp" type="string" title="Исполнитель ПИО" text-source-for="kod_emp" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select kod_emp_x_n.fio as kod_emp_x_n, /*Исполнитель ПИО*//*string*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_emp as kod_emp/*Исполнитель ПИО*//*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_emp as kod_emp  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n15 as kod_emp  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_emp as kod_emp  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n15 as kod_emp  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_pretenz.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_do_new_val" table="ur_pretenz" type="date" title="Дата претензии" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.dat_do_new_val as dat_do_new_val, /*Дата претензии*//*date*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 2)
--\
 )  as dat_do_new_val/*Дата претензии*//*date*/

from (select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="dat_otv_new_val" table="ur_pretenz" type="date" title="Дата претензии" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.dat_otv_new_val as dat_otv_new_val, /*Дата претензии*//*date*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 3)
--\
 )  as dat_otv_new_val/*Дата претензии*//*date*/

from (select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.dat_doc as dat_doc  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.d1 as dat_doc  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="kod_folders" table="ur_pretenz" type="number" title="Папка" is-user-editable="1" is-updateable="1" is-updateable-ext="1" update-target="kod_folders" temp-col-name="n16">
          <sel-list-compiled>
            <root>
              <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a" noname="1" path="./a" used="1">
                <select>--a
select <column table="a" column="kod_folders" as="kod_folders" title="" key="1" used="1" type="number" agg="count" sourcetable="./a/a" sourcecolumn="kod_folders" into="n1">a.kod_folders as kod_folders, /**//*number*//*key*/
</column><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" key="0" used="1" type="date" sourcetable="./a/a" sourcecolumn="dat_create" into="d1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" key="0" used="1" type="date" visible="is_not_new" sourcetable="./a/a" sourcecolumn="dat_finish" into="d2">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" key="0" used="1" type="string" visible="is_not_new" sourcetable="./a/a" sourcecolumn="num_doc" into="s1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" key="0" used="1" type="number" sourcetable="./a/a" sourcecolumn="kod_category" reference="us_category" refcol="kod_category" into="n2">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" key="0" used="1" type="string" into="s2">kod_category.sp_col_name as kod_category_x_n, /*Категория потребителя*//*string*/
</column><column table="a" column="ndog" as="ndog" title="Номер договора" key="0" used="1" type="string" agg="max" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" into="s3">a.ndog as ndog, /*Номер договора*//*string*/
</column><column table="a" column="name" as="name" title="Договор" key="0" used="1" type="string" agg="max" into="s4">a.name as name, /*Договор*//*string*/
</column><column table="a" column="is_active" as="is_active" title="Статус папки" key="0" used="1" type="number" into="n3">a.is_active as is_active, /*Статус папки*//*number*/
</column><column table="a" column="font_color" as="font_color" title="Цвет текста" key="0" used="1" type="string" into="s5">a.font_color as font_color, /*Цвет текста*//*string*/
</column><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" key="0" used="1" type="string" into="s6">a.info_reminder as info_reminder/*Напоминание*//*string*/
</column></select>
                <from>
from <query name="ur_folders" as="a" path="./a/a" haskeys="1" used="1">(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="dat_create" type="date" title="Дата создания папки" column-mandatory="1" column-default="today" as="dat_create" key="0" sourcetable="./a/a" sourcecolumn="dat_create" used="1">a.dat_create as dat_create, /*Дата создания папки*//*date*/
</column><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" sourcetable="./a/a" sourcecolumn="dat_finish" used="1">a.dat_finish as dat_finish, /*Дата сброса папки в архив*//*date*/
</column><column table="a" column="num_doc" type="string" title="Документ (основание для сброса папки в архив)" comment="док-т - основание для архивации папки" visible="is_not_new" as="num_doc" key="0" sourcetable="./a/a" sourcecolumn="num_doc" used="1">a.num_doc as num_doc, /*Документ (основание для сброса папки в архив)*//*string*/
</column><column table="a" column="kod_category" type="number" comment="категория абонента" title="Категория потребителя" as="kod_category" reference="us_category" refcol="kod_category" key="0" sourcetable="./a/a" sourcecolumn="kod_category" used="1">a.kod_category as kod_category, /*Категория потребителя*//*number*/
</column><column table="kod_dog" column="ndog" is-fact="1" fact="ur_folders_ndog" agg="max" as="ndog" key="0" used="1" type="string" title="Номер договора" sourcetable="./a/a/kod_dog" sourcecolumn="ndog">kod_dog.ndog as ndog, /*Номер договора*//*string*/
</column><column table="kod_dog" column="name" is-fact="1" fact="ur_folders_dog_name" agg="max" as="name" key="0" used="1" type="string" title="Договор">kod_dog.name as name, /*Договор*//*string*/
</column><call function="true if null" as="is_active" title="Статус папки" key="0" pth="" type="number" used="1"><text txtype="func"> decode ( </text><column table="a" column="dat_finish" type="date" title="Дата сброса папки в архив" comment="дата сброса папки в архив" visible="is_not_new" as="dat_finish" key="0" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ,null,1,0) </text> as is_active, /*Статус папки*//*number*/
</call><call as="font_color" function="case" title="Цвет текста" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder1" dgroup="max">ur_mat.mat_reminder1</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'102,51,99'</text></const></call><call function="when" pth="0" type="when"><text txtype="func"> when </text><call function="is not null" pth="" type="bool">(<column table="ur_mat" column="mat_reminder2" dgroup="max">ur_mat.mat_reminder2</column><text txtype="func"> is not null </text>) </call><text txtype="func"> then </text><const><text>'139,0,0'</text></const></call><text txtype="func"> end </text> as font_color, /*Цвет текста*//*string*/
</call><call function="||" as="info_reminder" title="Напоминание" key="0" pth="" type="string" used="1"><column table="ur_mat" column="mat_reminder1">ur_mat.mat_reminder1</column><text txtype="func"> || </text><column table="ur_mat" column="mat_reminder2">ur_mat.mat_reminder2</column> as info_reminder/*Напоминание*//*string*/
</call></select><from>
from <table name="ur_folders" as="a" title="Папка" used="1">ur_folders
a
--\ur_folders
</table><query as="ur_mat" join="left outer" path="./a/a/ur_mat" used="1">left outer join
(
<select>--
select <column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders as kod_folders, /*number*//*key*/
</column><column table="ur_mat" group="max" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">max(ur_mat.mat_reminder1)  as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="ur_mat" group="max" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">max(ur_mat.mat_reminder2)  as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <query name="ur_mat" as="ur_mat" path="./a/a/ur_mat/ur_mat" haskeys="1" used="1">(
<select>--ur_mat
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_folders" type="number" as="kod_folders" reference="ur_folders" refcol="kod_folders" key="0" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*/
</column><column table="kod_mat_reminder" column="mat_reminder1" as="mat_reminder1" key="0" used="1" type="string" title="Напоминание 1">kod_mat_reminder.mat_reminder1 as mat_reminder1, /*Напоминание 1*//*string*/
</column><column table="kod_mat_reminder" column="mat_reminder2" as="mat_reminder2" key="0" used="1" type="string" title="Напоминание 2">kod_mat_reminder.mat_reminder2 as mat_reminder2/*Напоминание 2*//*string*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" used="1">ur_mat
a
--\ur_mat
</table><query name="uv_mat_reminders" as="kod_mat_reminder" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder" used="1">left outer join
(
<select>--uv_mat_reminders
select <column table="a" column="kod_mat" as="kod_mat" key="0" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat, /*number*/
</column><call function="if" as="mat_reminder1" title="Напоминание 1" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="lt" pth="" type="bool">(<column table="a" column="dat_doc">a.dat_doc</column><text txtype="func"> &lt; </text><call function="add_months" pth="" type="date">(<text txtype="func"> add_months( </text><const type="date"><text>sysdate</text></const><text txtype="func"> , </text><const type="number"><text>-1</text></const><text txtype="func"> ) </text>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl0" pth="" type="number">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_count1" table="qube" as="ur_hist_mat_count1">qube.ur_hist_mat_count1</column><text txtype="func"> ,0) </text>) </call><text txtype="func"> = </text><const type="number"><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'История не заполнена. '</text></const><text txtype="func"> end </text> as mat_reminder1, /*Напоминание 1*//*string*/
</call><call function="if" as="mat_reminder2" title="Напоминание 2" type="string" key="0" pth="" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="and" pth="" type="bool">(<call function="!=0" pth="" type="bool">(<text txtype="func"> nvl( </text><column column="ur_hist_mat_dec_pr_resh1" table="qube" as="ur_hist_mat_dec_pr_resh1">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0)!=0 </text>) </call><text txtype="func"> and </text><call function="is null" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_entry1" table="qube" as="ur_hist_mat_dec_dat_entry1">qube.ur_hist_mat_dec_dat_entry1</column><text txtype="func"> is null </text>) </call><text txtype="func"> and </text><call function="lt" pth="" type="bool">(<column column="ur_hist_mat_dec_dat_resh1" table="qube" as="ur_hist_mat_dec_dat_resh1">qube.ur_hist_mat_dec_dat_resh1</column><text txtype="func"> &lt; </text><call function="-" pth="" type="number">(<const type="date"><text>sysdate</text></const><text txtype="func"> - </text><const type="number"><text>40</text></const>) </call>) </call><text txtype="func"> and </text><call function="=" pth="" type="bool">(<call function="nvl" pth="">(<text txtype="func"> nvl( </text><column column="qube_mat_pp_cld_inf_cnt_nd1" table="qube" as="qube_mat_pp_cld_inf_cnt_nd1">qube.qube_mat_pp_cld_inf_cnt_nd1</column><text txtype="func"> , </text><const><text>0</text></const><text txtype="func"> ) </text>) </call><text txtype="func"> = </text><const><text>0</text></const>) </call>) </call><text txtype="func"> then </text><const><text>'Не введена дата вступления решения в законную силу. '</text></const><text txtype="func"> end </text> as mat_reminder2/*Напоминание 2*//*string*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" group="sum" key="0" used="1" type="number" agg="sum">sum(qube.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" group="max" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(qube.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" group="max" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(qube.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" group="sum" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(qube.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="qube_mat_pp_cld_inf_cnt_nd1" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube.qube_mat_pp_cld_inf_cnt_nd1 as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="qube" column="ur_hist_mat_count1" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">qube.ur_hist_mat_count1 as ur_hist_mat_count1, /*number*/
</column><column table="qube" column="ur_hist_mat_dec_dat_entry1" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">qube.ur_hist_mat_dec_dat_entry1 as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_dat_resh1" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">qube.ur_hist_mat_dec_dat_resh1 as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="qube_mat_pp_cld_inf_cnt_nd1" group="sum" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">sum(un.qube_mat_pp_cld_inf_cnt_nd1)  as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><column table="un" column="ur_hist_mat_count1" group="sum" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">sum(un.ur_hist_mat_count1)  as ur_hist_mat_count1, /*number*/
</column><column table="un" column="ur_hist_mat_dec_dat_entry1" group="max" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">max(un.ur_hist_mat_dec_dat_entry1)  as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="un" column="ur_hist_mat_dec_dat_resh1" group="max" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" type="date" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">max(un.ur_hist_mat_dec_dat_resh1)  as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*//*date*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un" used="1">(
<query multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube_mat_pp_cld_inf_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube_mat_pp_cld_inf_a_d" column="cnt_nd" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1" type="number" title="Судебный акт - решение" agg="sum">qube_mat_pp_cld_inf_a_d.cnt_nd as qube_mat_pp_cld_inf_cnt_nd1, /*Судебный акт - решение*//*number*/
</column><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="qube_mat_pp_cld_inf" as="qube_mat_pp_cld_inf_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d" used="1">(
<select>--qube_mat_pp_cld_inf
select <column table="kod_mat_pp" column="kod_parent" as="kod_mat_pp" key-dimension="kod_mat_pp" dimension="kod_mat_pp" key="0" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">kod_mat_pp.kod_parent as kod_mat_pp, /*number*/
</column><call function="-nvl" as="cnt_nd" agg="sum" key="0" pth="" type="number" used="1" title="Судебный акт - решение"><text txtype="func"> nvl( </text><call function="()" as="cnt" type="number" agg="sum" pth="">(<const><text>1</text></const>) </call><text txtype="func"> ,0) </text><text txtype="func"> -nvl( </text><column column="ur_hist_mat_dec_pr_resh1" as="cnt_dec" agg="sum" is-fact-use="1" thissrc="cnt_dec" table="qube">qube.ur_hist_mat_dec_pr_resh1</column><text txtype="func"> ,0) </text> as cnt_nd/*Судебный акт - решение*//*number*/
</call></select><from>
from <query haskeys="1" as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" agg="sum" is-fact-use="1" as="ur_hist_mat_dec_pr_resh1" group="max" key="0" used="1" type="number" title="Судебный акт - решение">max(qube.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" keypath=".kod_mat_pp" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube" used="1">(
<query as="qube" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube" used="1">(
<select>--
select <column table="qube" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="qube" column="ur_hist_mat_dec_pr_resh1" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">qube.ur_hist_mat_dec_pr_resh1 as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="qube" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube" used="1">(
<select>--
select <column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><column table="un" column="ur_hist_mat_dec_pr_resh1" group="max" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">max(un.ur_hist_mat_dec_pr_resh1)  as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query as="un" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un" used="1">(
<query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="kod_mat_pp" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat">kod_mat_pp.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="kod_mat_pp" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
kod_mat_pp
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" condsource="qube_mat_pp_cld_inf"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="kod_mat_pp" column="kod_parent">kod_mat_pp.kod_parent</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="kod_mat_pp" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_parent" type="number" comment="код родительского иска д/аппеляции,кассации,надзор" as="kod_parent" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" used="1">a.kod_parent as kod_parent, /*number*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
kod_mat_pp on <column table="kod_mat_pp" column="kod_mat">kod_mat_pp.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from>)
qube_mat_pp_cld_inf_a_d
--\qube_mat_pp_cld_inf
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="qube_mat_pp_cld_inf_a_d" column="kod_mat_pp">qube_mat_pp_cld_inf_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where /></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_a_d" column="kod_mat_pp" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_a_d.kod_mat_pp as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><column table="ur_hist_mat_a_d" column="cnt" as="ur_hist_mat_count1" key="0" used="1" type="number" agg="sum">ur_hist_mat_a_d.cnt as ur_hist_mat_count1, /*number*/
</column><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_hist_mat" dimension="kod_hist_mat" as="ur_hist_mat_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><const type="number" as="cnt" fact="ur_hist_mat_count" agg="sum" key="0" used="1"><text>1</text> as cnt, /*number*/
</const><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat_pp" reference="ur_mat" refcol="kod_mat" key="0" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*/
</column></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat" used="1">ur_hist_mat
a
--\ur_hist_mat
</table></from>)
ur_hist_mat_a_d
--\ur_hist_mat
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_a_d" column="kod_mat_pp">ur_hist_mat_a_d.kod_mat_pp</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_hist_mat_dec" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="ur_hist_mat_dec_a_d" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" reference="ur_mat" refcol="kod_mat">ur_hist_mat_dec_a_d.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><column table="ur_hist_mat_dec_a_d" column="dat_entry_dec" as="ur_hist_mat_dec_dat_entry1" key="0" used="1" type="date" title="Дата вст. реш. в зак. силу" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry">ur_hist_mat_dec_a_d.dat_entry_dec as ur_hist_mat_dec_dat_entry1, /*Дата вст. реш. в зак. силу*//*date*/
</column><column table="ur_hist_mat_dec_a_d" column="dat_resh" as="ur_hist_mat_dec_dat_resh1" key="0" used="1" title="Дата принятия решения" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post">ur_hist_mat_dec_a_d.dat_resh as ur_hist_mat_dec_dat_resh1, /*Дата принятия решения*/
</column><column table="ur_hist_mat_dec_a_d" column="pr_resh" as="ur_hist_mat_dec_pr_resh1" key="0" used="1" type="number" title="Судебный акт - решение">ur_hist_mat_dec_a_d.pr_resh as ur_hist_mat_dec_pr_resh1/*Судебный акт - решение*//*number*/
</column></select><from>
from <query name="ur_hist_mat_dec" dimension="kod_hist_mat_dec" as="ur_hist_mat_dec_a_d" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" haskeys="1" used="1">(
<select>--ur_hist_mat_dec
select <column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" column-mandatory="1" as="kod_mat" reference="ur_mat" refcol="kod_mat" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*/
</column><column table="a" column="kod_hist_mat" type="number" key-dimension="kod_hist_mat" column-mandatory="1" as="kod_hist_mat_desc" key="1" fixed="1" thissrc="kod_hist_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="kod_hist_mat" used="1">a.kod_hist_mat as kod_hist_mat_desc, /*number*//*key*/
</column><column table="a" column="dat_post" as="dat_resh" agg="max" title="Дата принятия решения" dimension="dat" is-final-dimension="1" is-private-dimension="1" is-fact="1" fact="ur_hist_mat_dec_dat_resh" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_post" used="1">a.dat_post as dat_resh, /*Дата принятия решения*/
</column><column table="a" column="dat_entry" type="date" title="Дата вст. реш. в зак. силу" comment="дата вступления решения в законную силу,  Емцов - поменял условие валидации по 38755" valid="dat_entry_vld" as="dat_entry_dec" key="0" thissrc="dat_entry" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d" sourcecolumn="dat_entry" used="1">a.dat_entry as dat_entry_dec, /*Дата вст. реш. в зак. силу*//*date*/
</column><call function="if" as="pr_resh" title="Судебный акт - решение" type="number" key="0" pth="" thissrc="resh" used="1"><text txtype="func"> case </text><text txtype="func"> when </text><call function="=" pth="" type="bool">(<column table="kod_result" column="kod_post">kod_result.kod_post</column><text txtype="func"> = </text><const><text>2</text></const>) </call><text txtype="func"> then </text><const><text>1</text></const><text txtype="func"> else </text><const><text>0</text></const><text txtype="func"> end </text> as pr_resh/*Судебный акт - решение*//*number*/
</call></select><from>
from <table name="ur_hist_mat" as="a" title="История рассмотрения" dimension="kod_hist_mat_dec" used="1">ur_hist_mat
a
--\ur_hist_mat
</table><query name="us_result" as="kod_result" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" haskeys="1" used="1">left outer join
(
<select>--us_result
select <column table="a" column="kod_result" type="number" as="kod_result" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_result" used="1">a.kod_result as kod_result, /*number*//*key*/
</column><column table="a" column="kod_post" type="number" as="kod_post" reference="us_post" refcol="kod_post" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="kod_post" used="1">a.kod_post as kod_post, /*number*/
</column><column table="a" column="decision" type="number" title="" comment="1- является окончательным решением" as="decision" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/ur_hist_mat_dec_a_d/kod_result" sourcecolumn="decision" used="1">a.decision as decision/**//*number*/
</column></select><from>
from <table name="us_result" as="a" used="1">us_result
a
--\us_result
</table></from><call function="=" type="bool">)
kod_result on <column table="a" column="kod_result">a.kod_result</column><text txtype="func"> = </text><column table="kod_result" column="kod_result">kod_result.kod_result</column></call>--\us_result
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_result" column="decision">kod_result.decision</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
ur_hist_mat_dec_a_d
--\ur_hist_mat_dec
</query><query name="ur_mat_pp" dimension="kod_mat_pp" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="ur_hist_mat_dec_a_d" column="kod_mat">ur_hist_mat_dec_a_d.kod_mat</column><text txtype="func"> = </text><column table="a" column="kod_mat">a.kod_mat</column></call>--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query><query dimension="kod_mat_pp" multiplicate-point="1" as="un" union="1" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un" used="1">union all
(
<select>--
select <column table="a" column="kod_mat" as="kod_mat_pp" key="1" used="1" type="number" agg="max" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat">a.kod_mat as kod_mat_pp, /*number*//*key*/
</column><const type="number" as="qube_mat_pp_cld_inf_cnt_nd1" key="0" used="1"><text>null</text> as qube_mat_pp_cld_inf_cnt_nd1, /*number*/
</const><const type="number" as="ur_hist_mat_count1" key="0" used="1"><text>null</text> as ur_hist_mat_count1, /*number*/
</const><const type="date" as="ur_hist_mat_dec_dat_entry1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_entry1, /*date*/
</const><const type="date" as="ur_hist_mat_dec_dat_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_dat_resh1, /*date*/
</const><const type="number" as="ur_hist_mat_dec_pr_resh1" key="0" used="1"><text>null</text> as ur_hist_mat_dec_pr_resh1/*number*/
</const></select><from>
from <query name="ur_mat_pp" dimension="kod_mat_pp" as="a" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" haskeys="1" used="1">(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where>)
a
--\ur_mat_pp
</query><qubecontent><where>where
<call function="is not null" dont-push="1" condsource="uv_mat_reminders"><column table="a" column="kod_mat">a.kod_mat</column></call></where></qubecontent></from><where>where
<call function="is not null" pth="" type="bool"><column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> is not null </text></call></where>)
--\
</query>)
--\
</query>)
un
--\
</query></from><group> group by
<column table="un" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">un.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query></from>)
--\
</query>)
--\
</query>)
qube
--\
</query></from>)
qube
--\
</query></from><group> group by
<column table="qube" column="kod_mat_pp" group="1" as="kod_mat_pp" key="1" fixed="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/qube/qube/qube/qube/qube/un/un/qube_mat_pp_cld_inf_a_d/kod_mat_pp" sourcecolumn="kod_parent" reference="ur_mat" refcol="kod_mat">qube.kod_mat_pp/*number*//*key*/
</column></group>)
qube
--\
</query><query name="ur_mat_pp" dimension="kod_mat_pp" link-mp-point="1" as="a" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" haskeys="1" used="1">left outer join
(
<select>--ur_mat_pp
select <column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat, /*number*//*key*/
</column><column table="a" column="dat_doc" type="date" title="Дата подачи в суд" mandatory="dat_otz" fact="ur_mat_dat_doc_max" agg="max" as="dat_doc" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="dat_doc" used="1">a.dat_doc as dat_doc, /*Дата подачи в суд*//*date*/
</column><column table="a" column="kod_mat" type="number" key-dimension="kod_mat" fact="ur_mat_kod_mat" agg="max" as="kod_mat_pp" key="1" fixed="1" thissrc="kod_mat" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a" sourcecolumn="kod_mat" used="1">a.kod_mat as kod_mat_pp/*number*//*key*/
</column></select><from>
from <table name="ur_mat" as="a" title="Материалы переданные в суд" dimension="kod_mat_pp" used="1">ur_mat
a
--\ur_mat
</table><query name="ur_folders" dimension="kod_folders" as="kod_folders" join="left outer" path="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" haskeys="1" used="1">left outer join
(
<select>--ur_folders
select <column table="a" column="kod_folders" type="number" fact="count_ur_folders" agg="count" as="kod_folders" key="1" fixed="1" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_folders" used="1">a.kod_folders as kod_folders, /*number*//*key*/
</column><column table="a" column="kod_sdp" type="number" as="kod_sdp" reference="uk_sdp" refcol="kod_sdp" key="0" sourcetable="./a/a/ur_mat/ur_mat/kod_mat_reminder/a/kod_folders" sourcecolumn="kod_sdp" used="1">a.kod_sdp as kod_sdp/*number*/
</column></select><from>
from <table name="ur_folders" as="a" title="Папка" dimension="kod_folders" used="1">ur_folders
a
--\ur_folders
</table></from><call function="=" type="bool">)
kod_folders on <column table="a" column="kod_folders">a.kod_folders</column><text txtype="func"> = </text><column table="kod_folders" column="kod_folders">kod_folders.kod_folders</column></call>--\ur_folders
</query></from><where>where
<call function="=" pth="" type="bool"><column table="kod_folders" column="kod_sdp">kod_folders.kod_sdp</column><text txtype="func"> = </text><const><text>1</text></const></call></where><call function="=" type="bool">)
a on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="qube" column="kod_mat_pp">qube.kod_mat_pp</column></call>--\ur_mat_pp
</query></from><call function="=" type="bool">)
kod_mat_reminder on <column table="a" column="kod_mat">a.kod_mat</column><text txtype="func"> = </text><column table="kod_mat_reminder" column="kod_mat">kod_mat_reminder.kod_mat</column></call>--\uv_mat_reminders
</query></from>)
ur_mat
--\ur_mat
</query></from><group> group by
<column table="ur_mat" column="kod_folders" group="1" as="kod_folders" key="1" used="1" type="number" sourcetable="./a/a/ur_mat/ur_mat" sourcecolumn="kod_folders" reference="ur_folders" refcol="kod_folders">ur_mat.kod_folders/*number*//*key*/
</column></group><call function="=" pth="" type="bool">)
ur_mat on <column table="ur_mat" column="kod_folders">ur_mat.kod_folders</column><text txtype="func"> = </text><column table="a" column="kod_folders">a.kod_folders</column></call>--\
</query><query name="kr_dogovor" as="kod_dog" join="left outer" path="./a/a/kod_dog" haskeys="1" used="1">left outer join
(
<select>--kr_dogovor
select <column table="a" column="kod_dog" type="number" key-dimension="kod_dog" fact="kr_dogovor_kod_dog" agg="max" fact-dimension="kod_dog" as="kod_dog" key="1" fixed="1" sourcetable="./a/a/kod_dog" sourcecolumn="kod_dog" used="1">a.kod_dog as kod_dog, /*number*//*key*/
</column><column table="a" column="ndog" type="string" title="Номер договора" comment="номер договора" fact="kr_dog_ndog" agg="stragg_dist" vid="1" as="ndog" key="0" sourcetable="./a/a/kod_dog" sourcecolumn="ndog" used="1">a.ndog as ndog, /*Номер договора*//*string*/
</column><call function="||" as="name" title="Договор" agg="stragg_dist" key="0" pth="" type="string" used="1"><column table="a" column="ndog">a.ndog</column><text txtype="func"> || </text><const><text>' от '</text></const><text txtype="func"> || </text><call function="date to char" pth="" type="string">(<text txtype="func"> to_char( </text><column table="a" column="dat_dog">a.dat_dog</column><text txtype="func"> ,'DD.MM.YYYY') </text>) </call> as name/*Договор*//*string*/
</call></select><from>
from <table name="kr_dogovor" as="a" title="Договор" used="1">kr_dogovor
a
--\kr_dogovor
</table></from><call function="=" type="bool">)
kod_dog on <column table="a" column="kod_dog">a.kod_dog</column><text txtype="func"> = </text><column table="kod_dog" column="kod_dog">kod_dog.kod_dog</column></call>--\kr_dogovor
</query></from>)
a
--\ur_folders
</query><query name="us_category" as="kod_category" join="left outer" path="./a/kod_category" haskeys="1" used="1">left outer join
(
<select>--us_category
select <column table="а" column="kod_category" type="number" key="1" as="kod_category" sourcetable="./a/kod_category" sourcecolumn="kod_category" used="1">а.kod_category as kod_category, /*number*//*key*/
</column><call function="||" as="sp_col_name" title="" pth="" type="string" key="0" used="1"><column table="а" column="name" type="string" is-name="1">а.name</column><text txtype="func"> || </text><const><text>' '</text></const><text txtype="func"> || </text><column table="а" column="abbr" type="string" is-name="1">а.abbr</column> as sp_col_name/**//*string*/
</call></select><from>
from <table name="us_category" as="а" title="Категория потребителей (юристы)" used="1">us_category
а
--\us_category
</table></from><call function="=" type="bool">)
kod_category on <column table="a" column="kod_category">a.kod_category</column><text txtype="func"> = </text><column table="kod_category" column="kod_category">kod_category.kod_category</column></call>--\us_category
</query></from>
                <where>where
<call function="and" pth="" type="bool"><call function="le" pth="" type="bool">(<call function="rownum" pth="0" type="number"><text txtype="func"> rownum </text></call><text txtype="func"> &lt;= </text><const><text>:p_rows_limit </text></const>) </call><text txtype="func"> { </text><text txtype="func"> and </text><call function="in" pth="" optional="1" type="bool">(<column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> in </text><const><text>:pk_prm </text></const>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_folders" as="kod_folders" title="" key="1" thissrc="kod_folders">a.kod_folders</column><text txtype="func"> ) like lower( </text><const><text>:kod_folders_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_create" as="dat_create" title="Дата создания папки" thissrc="dat_create">a.dat_create</column><text txtype="func"> ) like lower( </text><const><text>:dat_create_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" thissrc="dat_finish">a.dat_finish</column><text txtype="func"> ) like lower( </text><const><text>:dat_finish_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" thissrc="num_doc">a.num_doc</column><text txtype="func"> ) like lower( </text><const><text>:num_doc_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="kod_category" as="kod_category" title="Категория потребителя" thissrc="kod_category">a.kod_category</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" thissrc="kod_category_x_n">kod_category.sp_col_name</column><text txtype="func"> ) like lower( </text><const><text>:kod_category_x_n_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="ndog" as="ndog" title="Номер договора" thissrc="ndog">a.ndog</column><text txtype="func"> ) like lower( </text><const><text>:ndog_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="name" as="name" title="Договор" thissrc="name">a.name</column><text txtype="func"> ) like lower( </text><const><text>:name_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="is_active" as="is_active" title="Статус папки" thissrc="is_active">a.is_active</column><text txtype="func"> ) like lower( </text><const><text>:is_active_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="font_color" as="font_color" title="Цвет текста" thissrc="font_color">a.font_color</column><text txtype="func"> ) like lower( </text><const><text>:font_color_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text><text txtype="func"> { </text><text txtype="func"> and </text><call function="like" pth="" optional="1" type="bool">(<text txtype="func"> lower( </text><column table="a" column="info_reminder" as="info_reminder" title="Напоминание" thissrc="info_reminder">a.info_reminder</column><text txtype="func"> ) like lower( </text><const><text>:info_reminder_filter </text></const><text txtype="func"> ) </text>) </call><text txtype="func"> } </text></call></where>--\a
</query>
            </root>
          </sel-list-compiled>
          <sel-list-report>
            <report name="a" title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" as="a">
              <queries>
                <query title="Папка" class="1" delete-validation="qube.ur_folders_del_vld" timestamp="20.09.2023 22:56:41" file="sql.builder.templates\sql.builder\projects\asuse2_scheme\scheme\original\ur_folders.xml" haskeys="1" name="a" as="a">
                  <params>
                    <param name="pk_prm" type="array" />
                    <param name="kod_folders_filter" type="string" />
                    <param name="dat_create_filter" type="string" />
                    <param name="dat_finish_filter" type="string" />
                    <param name="num_doc_filter" type="string" />
                    <param name="kod_category_filter" type="string" />
                    <param name="kod_category_x_n_filter" type="string" />
                    <param name="ndog_filter" type="string" />
                    <param name="name_filter" type="string" />
                    <param name="is_active_filter" type="string" />
                    <param name="font_color_filter" type="string" />
                    <param name="info_reminder_filter" type="string" />
                    <param name="p_rows_limit" type="number" />
                  </params>
                  <select>
                    <column table="a" column="kod_folders" as="kod_folders" title="" key="1" />
                    <column table="a" column="dat_create" as="dat_create" title="Дата создания папки" />
                    <column table="a" column="dat_finish" as="dat_finish" title="Дата сброса папки в архив" />
                    <column table="a" column="num_doc" as="num_doc" title="Документ (основание для сброса папки в архив)" />
                    <column table="a" column="kod_category" as="kod_category" title="Категория потребителя" />
                    <column table="kod_category" column="sp_col_name" as="kod_category_x_n" title="Категория потребителя" />
                    <column table="a" column="ndog" as="ndog" title="Номер договора" />
                    <column table="a" column="name" as="name" title="Договор" />
                    <column table="a" column="is_active" as="is_active" title="Статус папки" />
                    <column table="a" column="font_color" as="font_color" title="Цвет текста" />
                    <column table="a" column="info_reminder" as="info_reminder" title="Напоминание" />
                  </select>
                  <from>
                    <query name="ur_folders" as="a" title="Папка">
                      <link name="kod_category" as="kod_category" table="us_category" child="ur_folders" field="kod_category" parent="us_category" back="ur_folders" title="Категория потребителей (юристы)" />
                    </query>
                  </from>
                  <where>
                    <call function="and">
                      <call function="le">
                        <call function="rownum" />
                        <useparam name="p_rows_limit" />
                      </call>
                      <call function="in" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="pk_prm" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_folders" />
                        <useparam name="kod_folders_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_create" />
                        <useparam name="dat_create_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="dat_finish" />
                        <useparam name="dat_finish_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="num_doc" />
                        <useparam name="num_doc_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category" />
                        <useparam name="kod_category_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="kod_category_x_n" />
                        <useparam name="kod_category_x_n_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="ndog" />
                        <useparam name="ndog_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="name" />
                        <useparam name="name_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="is_active" />
                        <useparam name="is_active_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="font_color" />
                        <useparam name="font_color_filter" />
                      </call>
                      <call function="like" optional="1">
                        <column table="this" column="info_reminder" />
                        <useparam name="info_reminder_filter" />
                      </call>
                    </call>
                  </where>
                  <withparams>
                    <useparam name="pk_prm" />
                    <useparam name="kod_folders_filter" />
                    <useparam name="dat_create_filter" />
                    <useparam name="dat_finish_filter" />
                    <useparam name="num_doc_filter" />
                    <useparam name="kod_category_filter" />
                    <useparam name="kod_category_x_n_filter" />
                    <useparam name="ndog_filter" />
                    <useparam name="name_filter" />
                    <useparam name="is_active_filter" />
                    <useparam name="font_color_filter" />
                    <useparam name="info_reminder_filter" />
                    <useparam name="p_rows_limit" />
                  </withparams>
                </query>
              </queries>
              <params>
                <param name="pk_prm" type="array">
                  <const>:pk_prm </const>
                </param>
                <param name="kod_folders_filter" type="string">
                  <const>:kod_folders_filter </const>
                </param>
                <param name="dat_create_filter" type="string">
                  <const>:dat_create_filter </const>
                </param>
                <param name="dat_finish_filter" type="string">
                  <const>:dat_finish_filter </const>
                </param>
                <param name="num_doc_filter" type="string">
                  <const>:num_doc_filter </const>
                </param>
                <param name="kod_category_filter" type="string">
                  <const>:kod_category_filter </const>
                </param>
                <param name="kod_category_x_n_filter" type="string">
                  <const>:kod_category_x_n_filter </const>
                </param>
                <param name="ndog_filter" type="string">
                  <const>:ndog_filter </const>
                </param>
                <param name="name_filter" type="string">
                  <const>:name_filter </const>
                </param>
                <param name="is_active_filter" type="string">
                  <const>:is_active_filter </const>
                </param>
                <param name="font_color_filter" type="string">
                  <const>:font_color_filter </const>
                </param>
                <param name="info_reminder_filter" type="string">
                  <const>:info_reminder_filter </const>
                </param>
                <param name="p_rows_limit" type="number">
                  <const>:p_rows_limit </const>
                </param>
              </params>
            </report>
          </sel-list-report>
          <sel-list-pars>
            <params />
          </sel-list-pars>
          <dep-refresh-cmd>
            <root table="ur_pretenz">
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.dep_pio as dep_pio, /*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 case  when (rs_esys.kod_esys = 1)  then 1219 else kod_folders.kod_podr end  as dep_pio/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
cross join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys
--\rs_esys
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </dep-refresh-cmd>
          <dependants>
            <dependant name="dep_pio" table="ur_pretenz" />
          </dependants>
        </column>
        <column name="dep_pio" table="ur_pretenz" type="number" title="" is-user-editable="1" is-refreshed="1">
          <value-refresh-cmd>
            <root>
              <params>
                <param name="kod_pretenz_prm" type="number" column="" />
                <param name="form_id" type="number" column="" />
              </params>
              <select>
                <params>
                  <param name="kod_pretenz_prm" type="number" column="" />
                  <param name="form_id" type="number" column="" />
                </params>
                <query>
--
select ur_pretenz.dep_pio as dep_pio, /*number*/
ur_pretenz.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
 case  when (rs_esys.kod_esys = 1)  then 1219 else kod_folders.kod_podr end  as dep_pio/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
cross join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys
--\rs_esys
)
ur_pretenz
--\ur_pretenz
--\
</query>
              </select>
              <procedure>
                <params />
              </procedure>
            </root>
          </value-refresh-cmd>
        </column>
        <column name="is_new" table="ur_pretenz" type="number" title="" is-user-editable="1" />
      </columns>
      <insert-text>begin 
for r in  
 ( select  
:kod_pretenz as kod_pretenz 
,:kod_vid_pretenz as kod_vid_pretenz 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:vvod_sum_osn as vvod_sum_osn 
,:vvod_sum_peni as vvod_sum_peni 
,:ogr as ogr 
,:vvod_per_s as vvod_per_s 
,:vvod_per_po as vvod_per_po 
,:dat_do as dat_do 
,:dat_srok as dat_srok 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:reply as reply 
,:vvod_opl_osn as vvod_opl_osn 
,:vvod_opl_peni as vvod_opl_peni 
,:opl_ogr as opl_ogr 
,:dat_arh as dat_arh 
,:kod_mat as kod_mat 
,:kod_emp as kod_emp 
,:num_sz as num_sz 
,:pio_date as pio_date 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into ur_pretenz 
(kod_pretenz 
,kod_vid_pretenz 
,dat_doc 
,kod_subject 
,vvod_sum_osn 
,vvod_sum_peni 
,ogr 
,vvod_per_s 
,vvod_per_po 
,dat_do 
,dat_srok 
,kod_state 
,dat_otv 
,reply 
,vvod_opl_osn 
,vvod_opl_peni 
,opl_ogr 
,dat_arh 
,kod_mat 
,kod_emp 
,num_sz 
,pio_date 
,prim 
,kod_folders 
) 
 values  
(r.kod_pretenz 
,r.kod_vid_pretenz 
,r.dat_doc 
,r.kod_subject 
,r.vvod_sum_osn 
,r.vvod_sum_peni 
,r.ogr 
,r.vvod_per_s 
,r.vvod_per_po 
,r.dat_do 
,r.dat_srok 
,r.kod_state 
,r.dat_otv 
,r.reply 
,r.vvod_opl_osn 
,r.vvod_opl_peni 
,r.opl_ogr 
,r.dat_arh 
,r.kod_mat 
,r.kod_emp 
,r.num_sz 
,r.pio_date 
,r.prim 
,r.kod_folders 
) 
 returning  
kod_pretenz into :kod_pretenz; 
end loop; 
end; 
</insert-text>
      <delete-text>delete from ur_pretenz where kod_pretenz=:kod_pretenz</delete-text>
      <update-temp-text>begin 
delete from rr_temp 
where 
skod='ur_pretenz' 
and 
names=:form_id 
and 
f2=:kod_pretenz; 
if :row_state_id=1  then 
for r in  
 ( select  
:kod_pretenz as kod_pretenz 
,:kod_vid_pretenz as kod_vid_pretenz 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:vvod_sum_osn as vvod_sum_osn 
,:vvod_sum_peni as vvod_sum_peni 
,:ogr as ogr 
,:vvod_per_s as vvod_per_s 
,:vvod_per_po as vvod_per_po 
,:dat_do as dat_do 
,:dat_srok as dat_srok 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:reply as reply 
,:vvod_opl_osn as vvod_opl_osn 
,:vvod_opl_peni as vvod_opl_peni 
,:opl_ogr as opl_ogr 
,:dat_arh as dat_arh 
,:pr_priv as pr_priv 
,:kod_mat as kod_mat 
,:kod_emp as kod_emp 
,:num_sz as num_sz 
,:pio_date as pio_date 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,d1 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,d2 
,d3 
,n9 
,d4 
,s1 
,n10 
,n11 
,n12 
,d5 
,n13 
,n14 
,n15 
,s2 
,d6 
,s3 
,n16 
) 
 values  
('ur_pretenz' 
,:form_id 
,:kod_pretenz 
,:row_state_id 
,r.kod_pretenz 
,r.kod_vid_pretenz 
,r.dat_doc 
,r.kod_subject 
,r.vvod_sum_osn 
,r.vvod_sum_peni 
,r.ogr 
,r.vvod_per_s 
,r.vvod_per_po 
,r.dat_do 
,r.dat_srok 
,r.kod_state 
,r.dat_otv 
,r.reply 
,r.vvod_opl_osn 
,r.vvod_opl_peni 
,r.opl_ogr 
,r.dat_arh 
,r.pr_priv 
,r.kod_mat 
,r.kod_emp 
,r.num_sz 
,r.pio_date 
,r.prim 
,r.kod_folders 
); 
end loop; 
else 
for r in  
 ( select  
:kod_pretenz as kod_pretenz 
,:kod_vid_pretenz as kod_vid_pretenz 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:vvod_sum_osn as vvod_sum_osn 
,:vvod_sum_peni as vvod_sum_peni 
,:ogr as ogr 
,:vvod_per_s as vvod_per_s 
,:vvod_per_po as vvod_per_po 
,:dat_do as dat_do 
,:dat_srok as dat_srok 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:reply as reply 
,:vvod_opl_osn as vvod_opl_osn 
,:vvod_opl_peni as vvod_opl_peni 
,:opl_ogr as opl_ogr 
,:dat_arh as dat_arh 
,:pr_priv as pr_priv 
,:kod_mat as kod_mat 
,:kod_emp as kod_emp 
,:num_sz as num_sz 
,:pio_date as pio_date 
,:prim as prim 
,:kod_folders as kod_folders 
,a.num_reg 
,a.num_otv 
,a.u_m 
,a.d_m 
,a.proc 
,a.kodp 
,a.tep_el 
,a.type_potr 
,a.vvod 
,a.kod_vi 
,a.dep 
,a.dat_finish 
,a.opl_proc 
,a.kod_pret 
 
from ur_pretenz a  where kod_pretenz=:kod_pretenz) 
 
loop 
insert into rr_temp 
(skod 
,names 
,f2 
,f3 
,n1 
,n2 
,d1 
,n3 
,n4 
,n5 
,n6 
,n7 
,n8 
,d2 
,d3 
,n9 
,d4 
,s1 
,n10 
,n11 
,n12 
,d5 
,n13 
,n14 
,n15 
,s2 
,d6 
,s3 
,n16 
,s4 
,s5 
,s6 
,d7 
,n17 
,n18 
,n19 
,n20 
,n21 
,n22 
,n23 
,d8 
,n24 
,n25 
) 
 values  
('ur_pretenz' 
,:form_id 
,:kod_pretenz 
,:row_state_id 
,r.kod_pretenz 
,r.kod_vid_pretenz 
,r.dat_doc 
,r.kod_subject 
,r.vvod_sum_osn 
,r.vvod_sum_peni 
,r.ogr 
,r.vvod_per_s 
,r.vvod_per_po 
,r.dat_do 
,r.dat_srok 
,r.kod_state 
,r.dat_otv 
,r.reply 
,r.vvod_opl_osn 
,r.vvod_opl_peni 
,r.opl_ogr 
,r.dat_arh 
,r.pr_priv 
,r.kod_mat 
,r.kod_emp 
,r.num_sz 
,r.pio_date 
,r.prim 
,r.kod_folders 
,r.num_reg 
,r.num_otv 
,r.u_m 
,r.d_m 
,r.proc 
,r.kodp 
,r.tep_el 
,r.type_potr 
,r.vvod 
,r.kod_vi 
,r.dep 
,r.dat_finish 
,r.opl_proc 
,r.kod_pret 
); 
end loop; 
end if; 
end; 
</update-temp-text>
      <clear-temp-text>delete from rr_temp where skod='ur_pretenz' and names=:form_id</clear-temp-text>
      <update-text>begin
update ur_pretenz set  
(kod_pretenz 
,kod_vid_pretenz 
,dat_doc 
,kod_subject 
,vvod_sum_osn 
,vvod_sum_peni 
,ogr 
,vvod_per_s 
,vvod_per_po 
,dat_do 
,dat_srok 
,kod_state 
,dat_otv 
,reply 
,vvod_opl_osn 
,vvod_opl_peni 
,opl_ogr 
,dat_arh 
,kod_mat 
,kod_emp 
,num_sz 
,pio_date 
,prim 
,kod_folders 
) 
= 
 ( select  
:kod_pretenz as kod_pretenz 
,:kod_vid_pretenz as kod_vid_pretenz 
,:dat_doc as dat_doc 
,:kod_subject as kod_subject 
,:vvod_sum_osn as vvod_sum_osn 
,:vvod_sum_peni as vvod_sum_peni 
,:ogr as ogr 
,:vvod_per_s as vvod_per_s 
,:vvod_per_po as vvod_per_po 
,:dat_do as dat_do 
,:dat_srok as dat_srok 
,:kod_state as kod_state 
,:dat_otv as dat_otv 
,:reply as reply 
,:vvod_opl_osn as vvod_opl_osn 
,:vvod_opl_peni as vvod_opl_peni 
,:opl_ogr as opl_ogr 
,:dat_arh as dat_arh 
,:kod_mat as kod_mat 
,:kod_emp as kod_emp 
,:num_sz as num_sz 
,:pio_date as pio_date 
,:prim as prim 
,:kod_folders as kod_folders 
 
from dual ) 
 
where 
kod_pretenz=:kod_pretenz 
;
end;
</update-text>
      <scheme>
        <table name="ur_pretenz" as="ur_pretenz">
          <columns>
            <column name="kod_pretenz" type="number" title="" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="kod_vid_pretenz" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_doc" type="date" title="Дата претензии" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_pretenz_vvod_sum_all" type="number" title="Заявленная сумма" />
            <column name="vvod_sum_osn" type="number" title="Основная реализация" />
            <column name="vvod_sum_peni" type="number" title="Проценты (пени)" />
            <column name="pretenz_peni_period_str" type="string" title="Период пени" />
            <column name="ogr" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." />
            <column name="vvod_per_s" type="number" format="F2" edit-mask="F2" title="Период начисления с" />
            <column name="vvod_per_po" type="number" format="F2" edit-mask="F2" title="Период начисления по" />
            <column name="dat_do" type="date" title="Оплатить до" />
            <column name="dat_srok" type="date" title="Срок ответа" />
            <column name="kod_state" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv" type="date" title="Дата получения ответа" />
            <column name="reply" type="string" title="Содержание ответа" />
            <column name="ur_pretenz_vvod_opl_all" type="number" title="Оплата по претензии" />
            <column name="vvod_opl_osn" type="number" title="Оплата основной реализации" />
            <column name="vvod_opl_peni" type="number" title="Оплата проценты (пени)" />
            <column name="opl_ogr" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_pretenz_vvod_ostatok_all" type="number" title="Остаток задолженности по претензии" />
            <column name="ur_pretenz_vvod_ostatok_osn" type="number" title="Остаток основной реализации" />
            <column name="ur_pretenz_vvod_ostatok_peni" type="number" title="Остаток проценты (пени)" />
            <column name="ur_pretenz_ost_ogr" type="number" title="Остаток расх. за введ. огранич. реж. энергопотребл." />
            <column name="dat_arh" type="date" title="Дата архивации" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="pr_priv" type="number" title="Скопирована из модуля &quot;Претензии&quot;" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_sz" type="string" title="№ с/з о пост. мат." />
            <column name="pio_date" type="date" title="Дата поступления материалов в ПИО" />
            <column name="prim" type="string" title="Примечание" />
            <column name="right_common" type="number" title="" visible="0" />
            <column name="right_pio" type="number" title="" visible="0" />
            <column name="last_kod_pretenz" type="number" title="" visible="0" />
            <column name="kod_vid_pretenz_x_n" type="string" title="Вид претензии" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="kod_state_x_n" type="string" title="Состояние документа" />
            <column name="kod_mat_x_n" type="string" title="Иск" />
            <column name="kod_emp_x_n" type="string" title="Исполнитель ПИО" />
            <column name="dat_do_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dep_pio" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </columns>
          <viewcolumns>
            <column name="kod_pretenz" type="number" title="" visible="0" />
            <column name="kr_dog_name" type="string" title="Договор" />
            <column name="kod_vid_pretenz_x_n" type="string" title="Вид претензии" />
            <column name="kod_vid_pretenz" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_doc" type="date" title="Дата претензии" />
            <column name="kod_subject_x_n" type="string" title="Предмет" />
            <column name="kod_subject" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="ur_pretenz_vvod_sum_all" type="number" title="Заявленная сумма" />
            <column name="vvod_sum_osn" type="number" title="Основная реализация" />
            <column name="vvod_sum_peni" type="number" title="Проценты (пени)" />
            <column name="pretenz_peni_period_str" type="string" title="Период пени" />
            <column name="ogr" type="number" title=" Расх. за введ. огранич. реж. энергопотребл." />
            <column name="vvod_per_s" type="number" format="F2" edit-mask="F2" title="Период начисления с" />
            <column name="vvod_per_po" type="number" format="F2" edit-mask="F2" title="Период начисления по" />
            <column name="dat_do" type="date" title="Оплатить до" />
            <column name="dat_srok" type="date" title="Срок ответа" />
            <column name="kod_state_x_n" type="string" title="Состояние документа" />
            <column name="kod_state" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv" type="date" title="Дата получения ответа" />
            <column name="reply" type="string" title="Содержание ответа" />
            <column name="ur_pretenz_vvod_opl_all" type="number" title="Оплата по претензии" />
            <column name="vvod_opl_osn" type="number" title="Оплата основной реализации" />
            <column name="vvod_opl_peni" type="number" title="Оплата проценты (пени)" />
            <column name="opl_ogr" type="number" title="Оплата расх. за введ. огранич. реж. энергопотребл." />
            <column name="ur_pretenz_vvod_ostatok_all" type="number" title="Остаток задолженности по претензии" />
            <column name="ur_pretenz_vvod_ostatok_osn" type="number" title="Остаток основной реализации" />
            <column name="ur_pretenz_vvod_ostatok_peni" type="number" title="Остаток проценты (пени)" />
            <column name="ur_pretenz_ost_ogr" type="number" title="Остаток расх. за введ. огранич. реж. энергопотребл." />
            <column name="dat_arh" type="date" title="Дата архивации" />
            <column name="is_not_new" type="number" title="" visible="0" />
            <column name="pr_priv" type="number" title="Скопирована из модуля &quot;Претензии&quot;" />
            <column name="kod_mat_x_n" type="string" title="Иск" />
            <column name="kod_mat" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_emp_x_n" type="string" title="Исполнитель ПИО" />
            <column name="kod_emp" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="num_sz" type="string" title="№ с/з о пост. мат." />
            <column name="pio_date" type="date" title="Дата поступления материалов в ПИО" />
            <column name="prim" type="string" title="Примечание" />
            <column name="right_common" type="number" title="" visible="0" />
            <column name="right_pio" type="number" title="" visible="0" />
            <column name="last_kod_pretenz" type="number" title="" visible="0" />
            <column name="dat_do_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="dat_otv_new_val" type="date" invisible-in-column-chooser="1" visible="0" />
            <column name="kod_folders" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="dep_pio" type="number" invisible-in-column-chooser="1" visible="0" />
            <column name="is_new" type="number" invisible-in-column-chooser="1" visible="0" />
          </viewcolumns>
        </table>
      </scheme>
      <single-row-refresh-cmd>
        <root>
          <params>
            <param name="kod_pretenz_prm" type="number" column="" />
            <param name="form_id" type="number" column="" />
          </params>
          <select>
            <params>
              <param name="kod_pretenz_prm" type="number" column="" />
              <param name="form_id" type="number" column="" />
            </params>
            <query>
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name, /*Договор*//*string*/
ur_pretenz.kod_vid_pretenz as kod_vid_pretenz, /*number*/
ur_pretenz.dat_doc as dat_doc, /*Дата претензии*//*date*/
ur_pretenz.kod_subject as kod_subject, /*number*/
qube.ur_pretenz_vvod_sum_all1 as ur_pretenz_vvod_sum_all, /*Заявленная сумма*//*number*/
ur_pretenz.vvod_sum_osn as vvod_sum_osn, /*Основная реализация*//*number*/
ur_pretenz.vvod_sum_peni as vvod_sum_peni, /*Проценты (пени)*//*number*/
qube.pretenz_peni_period_str1 as pretenz_peni_period_str, /*Период пени*//*string*/
ur_pretenz.ogr as ogr, /* Расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.vvod_per_s as vvod_per_s, /*Период начисления с*//*number*/
ur_pretenz.vvod_per_po as vvod_per_po, /*Период начисления по*//*number*/
ur_pretenz.dat_do as dat_do, /*Оплатить до*//*date*/
ur_pretenz.dat_srok as dat_srok, /*Срок ответа*//*date*/
ur_pretenz.kod_state as kod_state, /*number*/
ur_pretenz.dat_otv as dat_otv, /*Дата получения ответа*//*date*/
ur_pretenz.reply as reply, /*Содержание ответа*//*string*/
qube.ur_pretenz_vvod_opl_all1 as ur_pretenz_vvod_opl_all, /*Оплата по претензии*//*number*/
ur_pretenz.vvod_opl_osn as vvod_opl_osn, /*Оплата основной реализации*//*number*/
ur_pretenz.vvod_opl_peni as vvod_opl_peni, /*Оплата проценты (пени)*//*number*/
ur_pretenz.opl_ogr as opl_ogr, /*Оплата расх. за введ. огранич. реж. энергопотребл.*//*number*/
qube.ur_pretenz_vvod_ostatok_all1 as ur_pretenz_vvod_ostatok_all, /*Остаток задолженности по претензии*//*number*/
qube.ur_pretenz_vvod_ostatok_osn1 as ur_pretenz_vvod_ostatok_osn, /*Остаток основной реализации*//*number*/
qube.ur_pretenz_vvod_ostatok_peni1 as ur_pretenz_vvod_ostatok_peni, /*Остаток проценты (пени)*//*number*/
qube.ur_pretenz_ost_ogr1 as ur_pretenz_ost_ogr, /*Остаток расх. за введ. огранич. реж. энергопотребл.*//*number*/
ur_pretenz.dat_arh as dat_arh, /*Дата архивации*//*date*/
ur_pretenz.is_not_new as is_not_new, /*number*/
ur_pretenz.pr_priv as pr_priv, /*Скопирована из модуля "Претензии"*//*number*/
ur_pretenz.kod_mat as kod_mat, /*Иск*//*number*/
ur_pretenz.kod_emp as kod_emp, /*Исполнитель ПИО*//*number*/
ur_pretenz.num_sz as num_sz, /*№ с/з о пост. мат.*//*string*/
ur_pretenz.pio_date as pio_date, /*Дата поступления материалов в ПИО*//*date*/
ur_pretenz.prim as prim, /*Примечание*//*string*/
ur_pretenz.right_common as right_common, /*number*/
ur_pretenz.right_pio as right_pio, /*number*/
ur_pretenz.last_kod_pretenz as last_kod_pretenz, /*number*/
kod_vid_pretenz_x_n.name as kod_vid_pretenz_x_n, /*Вид претензии*//*string*/
kod_subject_x_n.name as kod_subject_x_n, /*Предмет*//*string*/
kod_state_x_n.name as kod_state_x_n, /*Состояние документа*//*string*/
kod_mat_x_n.name as kod_mat_x_n, /*Иск*//*string*/
kod_emp_x_n.fio as kod_emp_x_n, /*Исполнитель ПИО*//*string*/
ur_pretenz.dat_do_new_val as dat_do_new_val, /*Дата претензии*//*date*/
ur_pretenz.dat_otv_new_val as dat_otv_new_val, /*Дата претензии*//*date*/
ur_pretenz.kod_folders as kod_folders, /*number*/
ur_pretenz.dep_pio as dep_pio, /*number*/
ur_pretenz.is_new as is_new/*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(qube.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  as ur_pretenz_vvod_sum_all1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
max( vg_period.ym_enum_str_to_ym_ranges_str( qube.pretenz_peni_period_ym1 ) )  as pretenz_peni_period_str1, /*Период пени*//*string*/
sum( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_vvod_opl_all1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum( nvl( ( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  +nvl( qube.ur_pretenz_ogr1 ,0) )  ,0)  -nvl( ( nvl( qube.ur_pretenz_vvod_opl_osn1 ,0)  +nvl( qube.ur_pretenz_vvod_opl_peni1 ,0)  +nvl( qube.ur_pretenz_opl_ogr1 ,0) )  ,0) )  as ur_pretenz_vvod_ostatok_all1, /*Остаток задолженности по претензии (Карточка ПИР, вкладка Претензии)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_osn1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_osn1 ,0) )  as ur_pretenz_vvod_ostatok_osn1, /*Остаток задолженности основная реализация (Карточка ПИР, вкладка ИЛ)*//*number*/
sum( nvl( qube.ur_pretenz_vvod_sum_peni1 ,0)  -nvl( qube.ur_pretenz_vvod_opl_peni1 ,0) )  as ur_pretenz_vvod_ostatok_peni1, /*Остаток задолженности пени (Карточка ПИР, вкладка ИЛ)*//*number*/
sum( nvl( qube.ur_pretenz_ogr1 ,0)  -nvl( qube.ur_pretenz_opl_ogr1 ,0) )  as ur_pretenz_ost_ogr1/*Остаток расходов за ограничение энергопотребления*//*number*/

from (
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1, /*Период*//*string*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
(
(
--
select qube.kod_pretenz as kod_pretenz, /*number*//*key*/
qube.kr_dog_name1 as kr_dog_name1, /*Договор*//*string*/
qube.pretenz_peni_period_ym1 as pretenz_peni_period_ym1, /*Период*//*string*/
qube.ur_pretenz_ogr1 as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_opl_ogr1 as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
qube.ur_pretenz_vvod_opl_osn1 as ur_pretenz_vvod_opl_osn1, /*number*/
qube.ur_pretenz_vvod_opl_peni1 as ur_pretenz_vvod_opl_peni1, /*number*/
qube.ur_pretenz_vvod_sum_osn1 as ur_pretenz_vvod_sum_osn1, /*number*/
qube.ur_pretenz_vvod_sum_peni1 as ur_pretenz_vvod_sum_peni1/*number*/

from (
--
select un.kod_pretenz as kod_pretenz, /*number*//*key*/
stragg_dist(un.kr_dog_name1)  as kr_dog_name1, /*Договор*//*string*/
sum(un.ur_pretenz_ogr1)  as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_opl_ogr1)  as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
sum(un.ur_pretenz_vvod_opl_osn1)  as ur_pretenz_vvod_opl_osn1, /*number*/
sum(un.ur_pretenz_vvod_opl_peni1)  as ur_pretenz_vvod_opl_peni1, /*number*/
sum(un.ur_pretenz_vvod_sum_osn1)  as ur_pretenz_vvod_sum_osn1, /*number*/
sum(un.ur_pretenz_vvod_sum_peni1)  as ur_pretenz_vvod_sum_peni1, /*number*/
stragg(un.pretenz_peni_period_ym1)  as pretenz_peni_period_ym1/*Период*//*string*/

from (
(
(
--
select dims.kod_pretenz as kod_pretenz, /*number*//*key*/
kr_dogovor.name as kr_dog_name1, /*Договор*//*string*/
null as ur_pretenz_ogr1, /*number*/
null as ur_pretenz_opl_ogr1, /*number*/
null as ur_pretenz_vvod_opl_osn1, /*number*/
null as ur_pretenz_vvod_opl_peni1, /*number*/
null as ur_pretenz_vvod_sum_osn1, /*number*/
null as ur_pretenz_vvod_sum_peni1, /*number*/
null as pretenz_peni_period_ym1/*string*/

from (
--
select kr_dogovor_a_d.kod_dog as kod_dog_prm, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz as kod_pretenz/*number*//*key*/

from (
--kr_dogovor
select a.kod_dog as kod_dog/*number*//*key*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor_a_d
--\kr_dogovor
left outer join
(
--ur_dogplat
select a.kod_dogplat as kod_dogplat, /*number*//*key*/
a.kod_dog as kod_dog, /*number*/
a.kod_pretenz as kod_pretenz/*number*/

from ur_dogplat
a
--\ur_dogplat
)
kod_dogplat_a_d on kod_dogplat_a_d.kod_dog = kr_dogovor_a_d.kod_dog--\ur_dogplat
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on kod_dogplat_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null  group by
kr_dogovor_a_d.kod_dog, /*number*//*key*/
kod_dogplat_a_d.kod_pretenz/*number*//*key*/
)
dims
--\
left outer join
(
--kr_dogovor
select a.kod_dog as kod_dog, /*number*//*key*/
a.ndog || ' от ' || ( to_char( a.dat_dog ,'DD.MM.YYYY') )  as name/*Договор*//*string*/

from kr_dogovor
a
--\kr_dogovor
)
kr_dogovor on kr_dogovor.kod_dog = dims.kod_dog_prm--\kr_dogovor
)
--\
union all
(
--
select ur_pretenz.kod_pretenz as kod_pretenz, /*number*//*key*/
null as kr_dog_name1, /*string*/
ur_pretenz.ogr as ur_pretenz_ogr1, /*Расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.opl_ogr as ur_pretenz_opl_ogr1, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
ur_pretenz.vvod_opl_osn as ur_pretenz_vvod_opl_osn1, /*number*/
ur_pretenz.vvod_opl_peni as ur_pretenz_vvod_opl_peni1, /*number*/
ur_pretenz.vvod_sum_osn as ur_pretenz_vvod_sum_osn1, /*number*/
ur_pretenz.vvod_sum_peni as ur_pretenz_vvod_sum_peni1, /*number*/
null as pretenz_peni_period_ym1/*string*/

from (
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn/*number*/

from (select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz
--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
union all
(
--
select ur_pretenz_peni_period_a_d.kod_pretenz as kod_pretenz, /*number*//*key*/
null as kr_dog_name1, /*string*/
null as ur_pretenz_ogr1, /*number*/
null as ur_pretenz_opl_ogr1, /*number*/
null as ur_pretenz_vvod_opl_osn1, /*number*/
null as ur_pretenz_vvod_opl_peni1, /*number*/
null as ur_pretenz_vvod_sum_osn1, /*number*/
null as ur_pretenz_vvod_sum_peni1, /*number*/
ur_pretenz_peni_period_a_d.name as pretenz_peni_period_ym1/*Период*//*string*/

from (
--ur_pretenz_peni_period
select a.kod_peni_period as kod_peni_period, /*number*//*key*/
a.kod_pretenz as kod_pretenz, /*number*/
spr_time_ym.name as name/*Период*//*string*/

from ur_pretenz_peni_period
a
--\ur_pretenz_peni_period
left outer join
(
--spr_time_ym
select a.ym as ym, /*number*//*key*/
a.name as name/*Период*//*string*/

from (
--spr_time_ym_pre
select  to_number(to_char( a.dat_day ,'YYYYMM'))/100  as ym, /*number*//*key*/
max( trim(to_char( ( to_number(to_char( a.dat_day ,'YYYYMM'))/100 )  ,'9999.99')) )  as name/*Период*//*string*/

from vv_day
a
--\vv_day
 group by
 to_number(to_char( a.dat_day ,'YYYYMM'))/100 /*number*//*key*/

order by ym)
a
--\spr_time_ym_pre
)
spr_time_ym on a.ym = spr_time_ym.ym--\spr_time_ym
)
ur_pretenz_peni_period_a_d
--\ur_pretenz_peni_period
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz/*number*//*key*/

from (select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
)
ur_pretenz on ur_pretenz_peni_period_a_d.kod_pretenz = ur_pretenz.kod_pretenz--\ur_pretenz
where
ur_pretenz.kod_pretenz is not null )
--\
)
--\
)
un
--\
 group by
un.kod_pretenz/*number*//*key*/
)
qube
--\
)
--\
)
--\
)
qube
--\
)
qube
--\
 group by
qube.kod_pretenz/*number*//*key*/
)
qube
--\
left outer join
(
--ur_pretenz
select a.kod_pretenz as kod_pretenz, /*number*//*key*/
a.kod_folders as kod_folders, /*number*/
a.kod_subject as kod_subject, /*number*/
a.kod_state as kod_state, /*number*/
a.dat_do as dat_do, /*Оплатить до*//*date*/
a.dat_otv as dat_otv, /*Дата получения ответа*//*date*/
a.reply as reply, /*Содержание ответа*//*string*/
a.prim as prim, /*Примечание*//*string*/
a.dat_doc as dat_doc, /*Дата претензии*//*date*/
a.dat_srok as dat_srok, /*Срок ответа*//*date*/
a.kod_vid_pretenz as kod_vid_pretenz, /*number*/
a.ogr as ogr, /*Расходы за введение ограничения режима энергопотребления*//*number*/
a.opl_ogr as opl_ogr, /*Оплачено: расходы за введение ограничения режима энергопотребления*//*number*/
a.dat_arh as dat_arh, /*Дата архивации*//*date*/
a.num_sz as num_sz, /*№ с/з о пост. мат.*//*string*/
a.vvod_sum_osn as vvod_sum_osn, /*number*/
a.vvod_sum_peni as vvod_sum_peni, /*number*/
a.vvod_per_s as vvod_per_s, /*number*/
a.vvod_per_po as vvod_per_po, /*number*/
a.vvod_opl_peni as vvod_opl_peni, /*number*/
a.vvod_opl_osn as vvod_opl_osn, /*number*/
a.kod_emp as kod_emp, /*Исполнитель ПИО*//*number*/
a.pio_date as pio_date, /*date*/
 max( a.kod_pretenz )  over(  partition by a.kod_mat )  as last_kod_pretenz, /*number*/
a.kod_mat as kod_mat, /*number*/
 case  when (a.kod_pret is not null )  then 1 else 0 end  as pr_priv, /*Скопирована из модуля "Претензии"*//*number*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 2)
--\
 )  as dat_do_new_val, /*Дата претензии*//*date*/
a.dat_doc + ( (
--
select uk_srok.kol_day as kol_day/*Кол-во дней*//*number*/

from (
--uk_srok
select a.kod_srok as kod_srok, /*number*//*key*/
a.kol_day as kol_day/*Кол-во дней*//*number*/

from uk_srok
a
--\uk_srok
)
uk_srok
--\uk_srok
where
uk_srok.kod_srok = 3)
--\
 )  as dat_otv_new_val, /*Дата претензии*//*date*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16078 ) )  = 2)  then 1 else 0 end  as right_common, /*number*/
 case  when (( (select nvl(max(kod_rights),0) from rr_usermenu where PUSER = USER and kod_menu = 16077 ) )  = 2)  then 1 else 0 end  as right_pio, /*number*/
 case  when (rs_esys.kod_esys = 1)  then 1219 else kod_folders.kod_podr end  as dep_pio, /*number*/
a.is_new as is_new, /*number*/
a.is_not_new as is_not_new/*number*/

from (select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders,a.kod_subject as kod_subject,a.kod_state as kod_state,a.dat_do as dat_do,a.dat_otv as dat_otv,a.reply as reply,a.prim as prim,a.dat_doc as dat_doc,a.dat_srok as dat_srok,a.kod_vid_pretenz as kod_vid_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.dat_arh as dat_arh,a.num_sz as num_sz,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_per_s as vvod_per_s,a.vvod_per_po as vvod_per_po,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn,a.kod_emp as kod_emp,a.pio_date as pio_date,a.kod_mat as kod_mat,a.kod_pret as kod_pret,0 as is_new,1 as is_not_new  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders,t.n3 as kod_subject,t.n9 as kod_state,t.d2 as dat_do,t.d4 as dat_otv,t.s1 as reply,t.s3 as prim,t.d1 as dat_doc,t.d3 as dat_srok,t.n2 as kod_vid_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.d5 as dat_arh,t.s2 as num_sz,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n7 as vvod_per_s,t.n8 as vvod_per_po,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn,t.n15 as kod_emp,t.d6 as pio_date,t.n14 as kod_mat,t.n25 as kod_pret,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
a
--\(select a.kod_pretenz as kod_pretenz,a.kod_folders as kod_folders,a.kod_subject as kod_subject,a.kod_state as kod_state,a.dat_do as dat_do,a.dat_otv as dat_otv,a.reply as reply,a.prim as prim,a.dat_doc as dat_doc,a.dat_srok as dat_srok,a.kod_vid_pretenz as kod_vid_pretenz,a.ogr as ogr,a.opl_ogr as opl_ogr,a.dat_arh as dat_arh,a.num_sz as num_sz,a.vvod_sum_osn as vvod_sum_osn,a.vvod_sum_peni as vvod_sum_peni,a.vvod_per_s as vvod_per_s,a.vvod_per_po as vvod_per_po,a.vvod_opl_peni as vvod_opl_peni,a.vvod_opl_osn as vvod_opl_osn,a.kod_emp as kod_emp,a.pio_date as pio_date,a.kod_mat as kod_mat,a.kod_pret as kod_pret,0 as is_new,1 as is_not_new  from ur_pretenz a where not exists (select * from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and a.kod_pretenz=t.f2 ) and   a.kod_pretenz in :kod_pretenz_prm   union all  select t.n1 as kod_pretenz,t.n16 as kod_folders,t.n3 as kod_subject,t.n9 as kod_state,t.d2 as dat_do,t.d4 as dat_otv,t.s1 as reply,t.s3 as prim,t.d1 as dat_doc,t.d3 as dat_srok,t.n2 as kod_vid_pretenz,t.n6 as ogr,t.n12 as opl_ogr,t.d5 as dat_arh,t.s2 as num_sz,t.n4 as vvod_sum_osn,t.n5 as vvod_sum_peni,t.n7 as vvod_per_s,t.n8 as vvod_per_po,t.n11 as vvod_opl_peni,t.n10 as vvod_opl_osn,t.n15 as kod_emp,t.d6 as pio_date,t.n14 as kod_mat,t.n25 as kod_pret,decode (f3,1,1,0) as is_new,decode (f3,1,0,1) as is_not_new  from rr_temp t where t.skod ='ur_pretenz' and t.names=:form_id  and t.f3!=3  and t.f2 in :kod_pretenz_prm )
left outer join
(
--ur_folders
select a.kod_folders as kod_folders, /*number*//*key*/
a.kod_podr as kod_podr/*number*/

from ur_folders
a
--\ur_folders
)
kod_folders on a.kod_folders = kod_folders.kod_folders--\ur_folders
cross join
(
--rs_esys
select a.kod_esys as kod_esys/*number*//*key*/

from rs_esys
a
--\rs_esys
)
rs_esys
--\rs_esys
)
ur_pretenz on ur_pretenz.kod_pretenz = qube.kod_pretenz--\ur_pretenz
left outer join
(
--kr_employee
select a.kod_emp as kod_emp, /*number*//*key*/
a.fio as fio/*ФИО*//*string*/

from kr_employee
a
--\kr_employee
)
kod_emp_x_n on ur_pretenz.kod_emp = kod_emp_x_n.kod_emp--\kr_employee
left outer join
(
--ur_mat
select a.kod_mat as kod_mat, /*number*//*key*/
kod_doc.abbr || '  ' || a.num_delo || ' от ' || ( to_char( a.dat_doc ,'DD.MM.YYYY') )  as name/*Иск*//*string*/

from ur_mat
a
--\ur_mat
left outer join
(
--us_doc
select a.kod_doc as kod_doc, /*number*//*key*/
a.abbr as abbr/*Аббревиатура*//*string*/

from us_doc
a
--\us_doc
)
kod_doc on a.kod_doc = kod_doc.kod_doc--\us_doc
)
kod_mat_x_n on ur_pretenz.kod_mat = kod_mat_x_n.kod_mat--\ur_mat
left outer join
(
--us_state
select a.kod_state as kod_state, /*number*//*key*/
a.name as name/*Состояние документа*//*string*/

from us_state
a
--\us_state
)
kod_state_x_n on ur_pretenz.kod_state = kod_state_x_n.kod_state--\us_state
left outer join
(
--us_subject
select a.kod_subject as kod_subject, /*number*//*key*/
a.name as name/*Предмет иска*//*string*/

from us_subject
a
--\us_subject
)
kod_subject_x_n on ur_pretenz.kod_subject = kod_subject_x_n.kod_subject--\us_subject
left outer join
(
--us_vid_pretenz
select a.kod_vid_pretenz as kod_vid_pretenz, /*number*//*key*/
a.name as name/*Вид претензии*//*string*/

from us_vid_pretenz
a
--\us_vid_pretenz
)
kod_vid_pretenz_x_n on ur_pretenz.kod_vid_pretenz = kod_vid_pretenz_x_n.kod_vid_pretenz--\us_vid_pretenz
--\
</query>
          </select>
          <procedure>
            <params />
          </procedure>
        </root>
      </single-row-refresh-cmd>
    </table>
  </dataset>
</root>