<?xml version="1.0" encoding="utf-8"?>
<root>
  <forms>
    <form name="72587" title="СЗ НЭСК ДЛЯ УиЭФ" timestamp="21.02.2025 13:15:45">
      <usefield field="asuse_dep_single" name="p_dep" mandatory="1" show-checkbox="0" />
      <usefield field="asuse_ym_tek_dep" name="p_ym" mandatory="1" title="Период" show-checkbox="0" />
      <usefield type="number" field="cmn_check" name="p_is_dkp" title="С учётом договоров купли-продажи" show-nulls="0" comment="Флаг выбора договоров купли-продажи" exclude="1" />
      <usefield type="number" field="cmn_check" name="p_is_rrem" title="С учётом договоров РРЭМ" show-nulls="0" comment="Флаг выбора договоров купли-продажи" exclude="1" />
    </form>
  </forms>
  <reports>
    <report name="72587" form="72587" title="17. СЗ НЭСК ДЛЯ УиЭФ" nogrid="1" timestamp="21.02.2025 12:02:48">
      <customers>
        <customer id="310" />
      </customers>
      <params>
        <param name="p_dep" type="number" />
        <param name="p_ym" type="number" />
        <param name="p_is_dkp" type="number">
          <const type="number">0</const>
        </param>
        <param name="p_is_rrem" type="number">
          <const type="number">0</const>
        </param>
      </params>
      <print-templates>
        <excel>
          <template name="72587.xlsx" print-proc="2" print-xlsx="1" title="СЗ НЭСК ДЛЯ УиЭФ" />
        </excel>
      </print-templates>
      <procedure><![CDATA[
DECLARE
   s_data_id     rr_temp.skod%type;
 BEGIN
  s_data_id    :='{3d8b60b1-7258-716a-ac16-8c99c9d294fb}';         
  
  DELETE FROM rr_temp WHERE skod = s_data_id;
  INSERT INTO rr_temp (skod, -- kod report
                       n1,   -- kodp для ТСО (услуги по пеердаче)
                       s1,   -- наименование ТСО (по услугам по передаче)
                       n2,   -- код региона
                       s2,   -- наименование региона
                       n3,   -- номер группы потребителей ( 1 - прочие или 2 - население)      
                       s3,   -- наименование группы потребителей
                       n4,   -- фактический УН
                       s4,   -- наименование фактического УН
                       n5,   -- натуральные показатели мощности: ПО КВтч одноставочный
                       n6,   -- натуральные показатели мощности: ПО КВтч двуxставочный
                       n7    -- натуральные показатели э/э: ПО КВт
                       ) 
 WITH
  pre_pr as (  -- Услуги по передаче (по состовляющей = 2) по группе потребителей
    SELECT   tco.kodp as tco_pwr_kodp
           , tco.name as tco_pwr_kodp_name
           , nk_adress.kf_get_sf(CASE WHEN ob.kodd IS NULL OR ob.kodd = -1 THEN d.kod_d_dog ELSE ob.kodd END) as kod_region
           , nk_adress.kp_get_region_name(CASE WHEN ob.kodd IS NULL OR ob.kodd = -1 THEN d.kod_d_dog ELSE ob.kodd END) as region_name

           , 1 as gr_num
           , 'Прочие потребители, в т.ч. по уровням напряжения:' as gr_name  
           , COALESCE(HG_CONTROLPOINT_R.get_factVoltage_byNumObj(a.kod_numobj,a.ym), a.voltage) as voltage_fact           
           , CASE WHEN kg_tarif.is_2rate(kg_tarif.subtarif_voltage(b.tarif, a.voltage, a.dat_priem - 1E-5), a.dat_priem - 1E-5) != 1 AND s.edizm = 4 THEN COALESCE(b.cust,0) ELSE 0 END  as cust_kvth_1
           , CASE WHEN kg_tarif.is_2rate(kg_tarif.subtarif_voltage(b.tarif, a.voltage, a.dat_priem - 1E-5), a.dat_priem - 1E-5) = 1 AND s.edizm = 4 THEN COALESCE(b.cust,0) ELSE 0 END  as cust_kvth_2
           , CASE WHEN s.edizm = 3 AND a.vid_t = -222 THEN a.cust ELSE 0 END as cust_kvt   -- сетевая мощность 
      FROM nr_account a
         LEFT JOIN (select kod_account, max(tip_tarif_sost) as tip_tarif_sost
                         , max(tarif) as tarif                       
                         , SUM(cust) as cust
                      from nr_account_sost
                     where tip_tarif_sost = 2 
                     group by kod_account
                    ) b ON a.kod_account = b.kod_account
         INNER JOIN hr_reglament_pp p ON a.kod_reglament=p.kod_reglament
         INNER JOIN hr_calc_variant v ON v.kod_variant=p.kod_variant 
         INNER JOIN sk_nachisl s ON a.vid_t=s.vid_t
         INNER JOIN kr_dogovor d ON a.kod_dog = d.kod_dog
         INNER JOIN kr_dogovor dp ON d.kod_dog_fin = dp.kod_dog
         INNER JOIN ks_vdog vd ON dp.kod_vdog = vd.kod_vdog
         LEFT JOIN kr_numobj kr_n ON a.kod_numobj = kr_n.kod_numobj
         LEFT JOIN kr_object ob ON kr_n.kod_obj = ob.kod_obj
      --   LEFT JOIN kr_payer p ON dp.kodp = p.kodp   -- потребитель
         LEFT JOIN  TABLE (HG_SALEPOINT_R.PL_getSLPOrgs (kod_numobj_   => a.kod_numobj,
                                                             ym_       => a.ym)) pc    ON (a.kod_numobj = pc.kod_numobj)
         LEFT JOIN kr_payer tco ON (pc.kodp_pwrcompany = tco.kodp)
      WHERE 1=1   { AND dp.dep IN :p_dep}               
           { AND a.ym = :p_ym}
           AND v.kod_typevariant = 1 -- покупка
           AND (b.tip_tarif_sost = 2  )  -- составляющая по услуге по передаче        
           AND s.edizm in (3,4)
           AND a.price IS not null
           AND a.rym is null
           AND dp.pr_active in (0,2)
           AND vd.kod_vdoc=1 and vd.kod_tipdog=0
          )
  , pre_byt as ( -- население 
    SELECT   tco.kodp as tco_pwr_kodp
           , tco.name as tco_pwr_kodp_name
           , nk_adress.kf_get_sf(CASE WHEN ob.kodd IS NULL OR ob.kodd = -1 THEN d.kod_d_dog ELSE ob.kodd END) as kod_region
           , nk_adress.kp_get_region_name(CASE WHEN ob.kodd IS NULL OR ob.kodd = -1 THEN d.kod_d_dog ELSE ob.kodd END) as region_name
           , 2 as gr_num 
           , 'Исполнители коммунальных услуг' as gr_name
           , COALESCE(HG_CONTROLPOINT_R.get_factVoltage_byNumObj(a.kod_numobj,a.ym), a.voltage) as voltage_fact
           , CASE WHEN s.edizm = 4 THEN COALESCE(a.cust,0) ELSE 0 END as cust_kvth_1
           , CASE WHEN s.edizm = 3 AND a.vid_t = -222 THEN a.cust ELSE 0 END as cust_kvt   -- нужно проработать вопрос с заказчиком и доработать если нужно
       FROM nr_account a
          INNER JOIN hr_reglament_pp p ON a.kod_reglament=p.kod_reglament
          INNER JOIN hr_calc_variant v ON v.kod_variant=p.kod_variant 
          INNER JOIN sk_nachisl s ON a.vid_t=s.vid_t
          INNER JOIN kr_dogovor d ON a.kod_dog = d.kod_dog
          INNER JOIN kr_dogovor dp ON d.kod_dog_fin = dp.kod_dog
          LEFT JOIN kr_numobj kr_n ON a.kod_numobj = kr_n.kod_numobj
          LEFT JOIN kr_object ob ON kr_n.kod_obj = ob.kod_obj
         -- LEFT JOIN kr_payer p ON dp.kodp = p.kodp   -- потребитель
          LEFT JOIN  TABLE (HG_SALEPOINT_R.PL_getSLPOrgs (kod_numobj_   => a.kod_numobj,
                                                              ym_       => a.ym)) pc    ON (a.kod_numobj = pc.kod_numobj)
          LEFT JOIN kr_payer tco ON (pc.kodp_pwrcompany = tco.kodp)
      WHERE 1=1   { AND dp.dep IN :p_dep}               
          { AND a.ym = :p_ym}
          AND v.kod_typevariant = 1 /*покупка*/
          AND s.edizm in (3,4)
          AND a.price IS not null
          AND a.rym is null
          AND dp.pr_active in (0,2)
          AND Decode(nvl(a.tarif,0), 0, 0, kg_tarif.f_byt_cached(a.tarif)) <> 0   -- население определяем по тарифу byt
            )
                 
      SELECT  s_data_id , 
            tco_pwr_kodp as tco_pwr_kodp
           , MAX(tco_pwr_kodp_name) as tco_pwr_name
           , kod_region as kod_region
           , max(region_name) as region_name
           , gr_num as gr_num
           , MAX(gr_name) as gr_name              
           , CASE WHEN nvl(voltage_fact,0) in (-1,6,7) THEN 3 ELSE nvl(voltage_fact,0) END as voltage_fact
           , MAX(CASE WHEN nvl(voltage_fact,0) in (-1,6,7) THEN 'ВН' ELSE COALESCE(vol.abbr,'-') END) as voltage_fact_abbr
           , SUM(cust_kvth_1) as cust_kvth_1   -- натуральные показатели  cust Э/э одноставочный
           , SUM(cust_kvth_2) as cust_kvth_2   -- натуральные показатели  cust э/э двухставочный
           , SUM(cust_kvt) as cust_kvt   -- натуральные показатели     
        FROM pre_pr -- группа Прочие
          LEFT JOIN hk_voltage vol ON pre_pr.voltage_fact = vol.voltage
        GROUP BY kod_region, tco_pwr_kodp, gr_num, nvl(voltage_fact,0)
      UNION ALL
        SELECT  s_data_id ,
              tco_pwr_kodp as tco_pwr_kodp
             , MAX(tco_pwr_kodp_name) as tco_pwr_name
             , kod_region as kod_region
             , max(region_name) as region_name
             , gr_num as gr_num
             , MAX(gr_name) as gr_name    
             , CASE WHEN nvl(voltage_fact,0) in (-1,6,7) THEN 3 ELSE nvl(voltage_fact,0) END as voltage_fact
             , MAX(CASE WHEN nvl(voltage_fact,0) in (-1,6,7) THEN 'ВН' ELSE COALESCE(vol.abbr,'-') END) as voltage_fact_abbr
             , SUM(cust_kvth_1) as cust_kvth_1   -- натуральные показатели   
             , 0 as cust_kvth_2  
             , SUM(cust_kvt) as cust_kvt   -- натуральные показатели      
        FROM pre_byt  -- население
          LEFT JOIN hk_voltage vol ON pre_byt.voltage_fact = vol.voltage
        GROUP BY  tco_pwr_kodp, kod_region, gr_num, nvl(voltage_fact,0)     ;
END;
]]></procedure>
      <queries>
        <query name="72587_data" as="d" />
        <query name="title_info" as="t">
          <withparams>
            <useparam name="p_ym" />
            <useparam name="p_ym" />
            <useparam name="p_dep" />
          </withparams>
        </query>
      </queries>
    </report>
  </reports>
  <queries>
    <query name="72587_data" title="Основной запрос к отчету № 17" timestamp="22.02.2025 14:40:18">
      <select>
        <call function="dense_rank" as="tco_rwn" title="Номер строки ТСО">
          <call function="order by simple">
            <column table="this" column="tco_pwr_name" />
          </call>
        </call>
        <column table="r" column="n1" as="tco_pwr_kodp" title="kodp для ТСО (услуги по пеердаче)" type="number" />
        <column table="r" column="s1" as="tco_pwr_name" title="наименование ТСО (по услугам по передаче)" type="string" group="max" />
        <column table="r" column="n2" as="kod_region" />
        <column table="r" column="s2" as="region_name" group="max" />
        <column table="r" column="n3" as="gr_num" />
        <column table="r" column="s3" as="gr_name" group="max" />
        <column table="r" column="n4" as="voltage_fact" />
        <column table="r" column="s4" as="voltage_fact_abbr" group="max" />
        <column table="r" column="n5" as="cust_kvth_1" group="sum" nvl="0" />
        <column group="sum" table="r" column="n6" as="cust_kvth_2" nvl="0" />
        <column group="sum" table="r" column="n7" as="cust_kvt" nvl="0" mp="-3" />
      </select>
      <from>
        <query name="rr_temp" as="r" />
      </from>
      <where>
        <call function="and">
          <call function="true" />
          <call function="=">
            <column table="r" column="skod" />
            <const type="string">'{3d8b60b1-7258-716a-ac16-8c99c9d294fb}'</const>
          </call>
          <call function="or">
            <call function="!=">
              <column table="this" column="cust_kvth_1" />
              <const type="number">0</const>
            </call>
            <call function="!=">
              <column table="this" column="cust_kvth_2" />
              <const type="number">0</const>
            </call>
            <call function="!=">
              <column table="this" column="cust_kvt" />
              <const type="number">0</const>
            </call>
          </call>
        </call>
      </where>
      <grouping>
        <grset as="itog">
          <grset order="tco_pwr_name" as="tco">
            <group>
              <column table="this" column="tco_pwr_kodp" type="number" />
            </group>
            <grset as="r" order="region_name">
              <group>
                <column table="this" column="kod_region" />
              </group>
              <grset order="gr_num" as="gr">
                <group>
                  <column table="this" column="gr_num" type="number" />
                </group>
                <grset order="voltage_fact_abbr" as="volt">
                  <group>
                    <column table="this" column="voltage_fact" type="number" />
                  </group>
                </grset>
              </grset>
            </grset>
          </grset>
        </grset>
      </grouping>
    </query>
  </queries>
</root>