<?xml version="1.0" encoding="utf-8"?>
<root>
  <functions>
    <function name="is_job.set_id_slice_current" type="string">
      is_job.set_id_slice_current
    </function>
    <function name="vg_period.ym_enum_str_order " type="string">
      vg_period.ym_enum_str_order (
      <par><val /></par>
      )
    </function>
    <function name="vg_period.ym_enum_str_to_ym_rng_str_uv " type="string">
      vg_period.ym_enum_str_to_ym_rng_str_uv (
      <par><val /></par>
      )
    </function>
    <function name="vg_period.ym_enum_str_to_ym_ranges_str" type="string">
      vg_period.ym_enum_str_to_ym_ranges_str(
      <par><val /></par>
      )
    </function>
    <function name="vg_period.ym_enum_str_to_date_ranges_str" type="string">
      vg_period.ym_enum_str_to_date_ranges_str(
      <par><val /></par>
      )
    </function>
    <function name="sg_peny_helper.get_refin_perc" type="number">
      sg_peny_helper.get_refin_perc(
      <par><val /></par>, 
      <par><val /></par>
      )
    </function>
    <function name="ur_save.f_num_reg_s" type="string">
      ur_save.f_num_reg_s(
      <par1><val /></par1>, null
      )
    </function>
    <function name="ng_account.f_category_account">
      ng_account.f_category_account(
      <par1><val /></par1>
      )
    </function>
    <function name="ng_account.f_category_account_fik">
      ng_account.f_category_account(
      <par1>
        <val />,1
      </par1>
      )
    </function>
    <function name="is_du.f_koef_load_units">
      is_du.f_koef_load_units(
      <par1><val /></par1>
      )
    </function>
    <function name="nk_adress.kf_address" type="string">
      nk_adress.kf_address(
      <par1><val />,
      </par1><par2><val /></par2>
      )
    </function>
    <function name="qg_settings_read.f_is_contains_value_nb" type="number">
      qg_settings_read.f_is_contains_value_nb('AGREE',
      <par1><val /></par1>)
    </function>
    <function name="is_period_.get_srok_doc" type="number">
      IS_PERIOD_.get_srok_doc(
      <par1><val />,
      </par1><par2><val /></par2>)
    </function>
    <function name="is child npp" type="string">
      <par1>
        <val />
      </par1>
      in (select npp from ks_tarif connect by tarif_parent=  prior  tarif start with npp in 
      <par1><val /></par1>
      )
    </function>
    <function name="is child between npp" type="string">
      <par1>
        <val />
      </par1>
      in (select npp from ks_tarif connect by tarif_parent=  prior  tarif start with npp between 
      <par1><val /></par1>
       and <par1><val /></par1>
      )
    </function>
    <function name="is not child npp" type="string">
      <par1>
        <val />
      </par1>
      not in (select npp from ks_tarif connect by tarif_parent=  prior  tarif start with npp in
      <par1><val /></par1>
      )
    </function>
    <function name="AS_ADDR_LP_PRINT" type="string">
      AS_ADDR_LP_PRINT(
      <par1><val />,
      </par1><par2><val />,
      </par2><par3><val />,
      </par3><par4><val />,
      </par4><par5><val /></par5>
      )
    </function>
    <function name="asuse.get_srcdnum" type="string">
      asuse.get_srcdnum(
      <par1><val /></par1>
    
    )
  </function>
    <function name="ipr_tituls_characters.getSummCharValuesByKS14" type="string">
      ipr_tituls_characters.getSummCharValuesByKS14(
      <par1><val />,
      </par1>
      null,
      <par2><val />,
      </par2>
      1,
      3,
      <par3><val /></par3>
      )
    </function>
    <!--Старый вариант ф-и. Вместо него использовать ipr_tituls_characters.getSummCharValuesByKS14-->
    <!--<function name="ipr_tituls_display.getSumCharValues_ByKS14" type="string">
      ipr_tituls_display.getSumCharValues_ByKS14(
      <par1>
        <val />,
      </par1>
      <par2>
        <val />,
      </par2>
      1,
      <par3>
        <val />,
      </par3>
      <par4>
        <val />,
      </par4>
      3
      )
    </function>-->
    <!--<function name="to_period" type="number">
      vg_time.to_period(
      <par1>
        <val />,
      </par1><par2>
        <val />
      </par2>
      )
    </function>


    <function name="is_in_period" type="number">
      vg_time.is_in_period(
      <par1>
        <val />,
      </par1><par2>
        <val />
      </par2>
      )
    </function>-->
    <!--03.10.14 17:13] [Гагарский Алексей] select IPR_TITULS_DISPLAY.getSummaryCharacterValues_DOC(17, 9401, 1, 4, 0, null, null, null, null) from dual
    [03.10.14 17:33] [abelchenko] параметр 1:

    ips_tit_gener_phis_param ,

    иное=шт причие, остальное искать по названию
    параметр 2:

    kod_ipr

    параметр 3:

    1- до реализации (1 блок)
    2- плановый.. (ввод) (посл блок)

    параметр 3:
    тип параметра
    1 число
    2 строка
    3 дата
    4 спрвочник
    [03.10.14 17:38] [abelchenko] параметр 1:

    ips_tit_gener_phis_param ,

    иное=шт причие, остальное искать по названию
    параметр 2:

    kod_ipr

    параметр 3:

    1- до реализации (1 блок)
    2- плановый.. (ввод) (посл блок)
    5- плановый.. (вывод)
    (ввод)-(вывод)=прирост
    параметр 4:
    тип параметра
    1 число
    2 строка
    3 дата
    4 спрвочник-->
    <function name="ipr_ipr_data.val">
      ipr_tituls_display.getsummarycharactervalues_doc(
      <par><val /></par>,
      <par><val /></par>,
      <par><val /></par>,
      <par><val /></par>, 0, null, null, null, null)
    </function>
    <!--<function name="ipr_tituls_display.getsummarycharactervalues_doc" type="number">
      <par>
        <val />
      </par>
    </function>-->
    <!--<function name="ur_read_bd.f_period_s_po">
      ur_read_bd.f_period_s_po(
      <par1><val/>,</par1>
      <par2><val/>,</par2>
      <par3><val/>,</par3>
      <par4><val/></par4>
      )
    </function>
    <function name="comma_delimited_str">
      (SELECT SUBSTR (SYS_CONNECT_BY_PATH (<par2><val/></par2> , ','), 2) csv
      FROM (SELECT DISTINCT <par2><val/></par2> , ROW_NUMBER () OVER (ORDER BY <par2><val/></par2> ) rn,
      COUNT (*) OVER () cnt
      FROM <par1><val/></par1>
      WHERE 1=1 AND <par3><val/></par3>)
      WHERE rn = cnt
      START WITH rn = 1
      CONNECT BY rn = PRIOR rn + 1)
    </function>-->
    <function name="ipr_tituls_display.getdatecontrsteps" type="date">
      ipr_tituls_display.GetDateContrSteps(<par1><val />,
    </par1><par2><val />,
    </par2><par3><val />,
    </par3><par4><val /></par4>)
    </function>
    <function name="ipr_tituls_display.getprevcontrstepsdoc" type="number">
      ipr_tituls_display.GetPrevContrStepsDoc(<par1><val />,
      </par1><par2><val />,
      </par2><par3><val /></par3>)
    </function>
    <function name="ur_read_bd.f_gp_doc">
      ur_read_bd.f_gp_doc (<par><val /></par>,<par><val /></par>)
    </function>
    <function name="get_reports_const" type="string" comment="par1 - repname, par2 - kod_type">
      ( 
        select max(value) from vr_reports_consts where (
        <par1><val />
        is null or 
          <val /></par1>
        = repname)
        and kod_type =
        <par2><val /></par2>
      )
    </function>
    <function name="HG_PASP_PU_R.I_NOM_SK" type="string">
      HG_PASP_PU_R.I_NOM_SK
      (
        <par><val /></par>
      )
    </function>
    <function name="podr_dep" type="number">
		nvl((select distinct first_value(kodp) over (order by kod_separator desc nulls last)
		from kr_org
		where kod_separator &lt;= 2
      start with kr_org.kodp = <par1><val /></par1>
      connect by prior kod_parent = kodp),null)
    </function>
    <function name="t_vl_vdr.get_vdr_calc_by_kod_obj" type="number">
    t_vl_vdr.get_vdr_calc_by_kod_obj(<par1><val /></par1>,<par2><val /></par2>)
    </function>
    <function name="user_rights_kod_menu" type="number" comment="par1 - kod_menu">
		(select nvl(max(kod_rights),0)
		from rr_usermenu
		where PUSER = USER and kod_menu = <par1><val /></par1>
		)
	</function>
    <function name="IsPointFromPr15" timestamp="15.06.2019 20:02:29">
      asuse.IsPointFromPr15
      (
      <par>
        <val />
      </par>
      )
    </function>
	<function name="kg_soh_payer.get_fias" type="string" comment="par1 - kodd">
		kg_soh_payer.get_fias (
		<par>
		  <val />
		</par>
		)
	</function>
  </functions>
</root>