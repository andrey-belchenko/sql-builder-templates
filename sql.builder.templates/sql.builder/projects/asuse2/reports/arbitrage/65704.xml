<?xml version="1.0" encoding="utf-8"?>
<root>
  <reports>
    <report name="65704" form="65704" nogrid="1" title="Чек-лист по делу о банкротстве" timestamp="24.05.2023 14:50:00">
      <customers>
        <customer id="10" />
      </customers>
      <params>
        <param name="p_dep" type="number" />
        <param name="p_kodp" type="number" />
        <param name="p_kod_folders" type="number" />
        <param name="p_date" type="date" />
      </params>
      <procedure><![CDATA[DECLARE
  NBSP CONSTANT CHAR(1) := CHR(160);         -- неразрывный пробел (U+00A0 No-Brake Space)
  CRLF CONSTANT CHAR(2) := CHR(13)||CHR(10); -- перевод строки
  --
  p_date           DATE;
  p_kod_folders    ur_folders.kod_folders%type;
  s_data_id        rr_temp.skod%type;
  n_dummy          PLS_INTEGER;
  d_dummy          DATE;  
  d_meeting_date             ur_cred_meeting.dat_meeting%type;
  n_kod_rep_provide_deyat    ur_cred_meeting.kod_rep_provide_deyat%type;
  n_kod_rep_deyat_corresp    ur_cred_meeting.kod_rep_deyat_corresp%type;
  n_kod_rep_deyat_info_true  ur_cred_meeting.kod_rep_deyat_info_true%type;
  n_kod_rep_provide_ds       ur_cred_meeting.kod_rep_provide_ds%type;
  n_kod_rep_ds_corresp       ur_cred_meeting.kod_rep_ds_corresp%type;
  n_kod_rep_ds_info_true     ur_cred_meeting.kod_rep_ds_info_true%type;
  n_kod_an_done_bnk          ur_au_duty_control.kod_an_done_bnk%type;
  n_kod_work_done_close_acc  ur_au_duty_control.kod_work_done_close_acc%type;
  n_fired_in_time            ur_au_duty_control.fired_in_time%type;
  n_kod_an_done_subs_resp    ur_au_duty_control.kod_an_done_subs_resp%type;
  d_dat_sud_subs_resp        ur_au_duty_control.dat_sud_subs_resp%type;
  d_dat_sud_spor_sdel        ur_au_duty_control.dat_sud_spor_sdel%type;
  CURSOR cur_au_duty IS
    SELECT /*+ FIRST_ROWS(1) */ NVL(kod_an_done_bnk, 0), NVL(kod_work_done_close_acc, 0), NVL(fired_in_time, 0),
           NVL(kod_an_done_subs_resp, 0), dat_sud_subs_resp, dat_sud_spor_sdel
    FROM   ur_au_duty_control
    WHERE  kod_folders = p_kod_folders
    ORDER BY kod_au_duty_control DESC;
  CURSOR cur_rabota_dz IS
    SELECT /*+ FIRST_ROWS(1) */ rabota_dz
    FROM   ur_property_info
    WHERE  kod_folders = p_kod_folders AND rabota_dz IS NOT NULL
    ORDER BY kod_property_info DESC;
  s_comment        VARCHAR2(4000);
  n_ds_dz          ur_property_info.ds_dz%type;
  FUNCTION format_sum(
    n_sum  IN NUMBER
  ) RETURN VARCHAR2 IS
  BEGIN
    RETURN TO_CHAR(n_sum, 'FM999G999G999G999G999G990D00', 'NLS_NUMERIC_CHARACTERS = '','||NBSP);
  END format_sum;
BEGIN
  p_kod_folders  := :p_kod_folders;
  p_date         := :p_date;
  s_data_id := '{41C3CFA5-6241-4BCA-A9DD-1CA94B7B9731}';
  DELETE FROM rr_temp WHERE skod = s_data_id;
  ------------------------------------------------------------
  SELECT COUNT(*), MIN(dat_meeting)
  INTO   n_dummy, d_meeting_date
  FROM   ur_cred_meeting
  WHERE  kod_folders = p_kod_folders
     AND dat_meeting <= p_date
     AND kod_cred_meeting_num = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 1, 'Провести первое собрание кредиторов', CASE WHEN n_dummy > 0 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  IF d_meeting_date IS NULL THEN
    n_dummy := NULL;
  ELSE
    SELECT kod_pov_corresp
    INTO   n_dummy
    FROM   ur_cred_meeting
    WHERE  kod_folders = p_kod_folders AND dat_meeting = d_meeting_date;
  END IF;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 2, 'Включить в повестку дня первого собрания кредиторов необходимые вопросы',
           CASE WHEN n_dummy IN (0, 1) THEN n_dummy ELSE NULL END, '');
  ------------------------------------------------------------
  SELECT MAX(dat_meeting)
  INTO   d_meeting_date
  FROM   ur_cred_meeting
  WHERE  kod_folders = p_kod_folders
     AND dat_meeting <= p_date
     AND kod_cred_meeting_num = 2;
  --
  IF d_meeting_date IS NULL THEN
    n_dummy := NULL;
  ELSE
    SELECT kod_cred_meeting_in_time
    INTO   n_dummy
    FROM   ur_cred_meeting
    WHERE  kod_folders = p_kod_folders AND dat_meeting = d_meeting_date;
  END IF;
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 3, 'Своевременно проводить последующие собрания кредиторов',
    CASE WHEN n_dummy = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  SELECT MAX(dat_meeting)
  INTO   d_meeting_date
  FROM   ur_cred_meeting
  WHERE  kod_folders = p_kod_folders
     AND dat_meeting <= p_date;
  --
  IF d_meeting_date IS NULL THEN
    n_kod_rep_provide_deyat    := NULL;
    n_kod_rep_deyat_corresp    := NULL;
    n_kod_rep_deyat_info_true  := NULL;
    n_kod_rep_provide_ds       := NULL;
    n_kod_rep_ds_corresp       := NULL;
    n_kod_rep_ds_info_true     := NULL;
  ELSE
    SELECT kod_rep_provide_deyat, kod_rep_deyat_corresp, kod_rep_deyat_info_true,
           kod_rep_provide_ds, kod_rep_ds_corresp, kod_rep_ds_info_true
    INTO   n_kod_rep_provide_deyat, n_kod_rep_deyat_corresp, n_kod_rep_deyat_info_true,
           n_kod_rep_provide_ds, n_kod_rep_ds_corresp, n_kod_rep_ds_info_true
    FROM   ur_cred_meeting
    WHERE  kod_folders = p_kod_folders AND dat_meeting = d_meeting_date;
  END IF;
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 4, 'Предоставить отчёт о своей деятельности',
           CASE WHEN n_kod_rep_provide_deyat = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 5, 'Предоставляемый отчёт о деятельности должен соответствовать требованиям законодательства', 
           CASE WHEN n_kod_rep_deyat_corresp = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 6, 'Содержащаяся в отчёте о деятельности информация должна быть достоверной',
           CASE WHEN n_kod_rep_deyat_info_true = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 7, 'Предоставить отчёт об использовании денежных средств должника',
           CASE WHEN n_kod_rep_provide_ds = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 8, 'Предоставляемый отчёт об использовании денежных средств должен соответствовать требованиям законодательства',
           CASE WHEN n_kod_rep_ds_corresp = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 9, 'Содержащаяся в отчёте об использовании денежных средств информация должна быть достоверной',
           CASE WHEN n_kod_rep_ds_info_true = 1 THEN 1 ELSE 0 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10, 'Своевременно опубликовывать сведения на сайте ЕФРСБ', NULL, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 1 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.1, 'Сообщение о проведении собрания кредиторов', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 2 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.2, 'Сведения о решениях, принятых собранием кредиторов/комитетом кредиторов или сведения о признании собрания кредиторов/комитета кредиторов несостоявшимся', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 3 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.3, 'Отчёт о результатах завершения процедуры', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 4 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.4, 'Сведения о результатах инвентаризации имущества должника', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 5 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.5, 'Сведения об оценке имущества должника (при её проведении)', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 6 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.6, 'Предложение погасить требования кредиторов путём предоставления отступного (при условии превышения количества кредиторов, требования которых не удовлетворены, пятидесяти)', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 7 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.7, 'Сведения о признании кредитной организации банкротом', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 8 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.8, 'Сведения о ходе конкурсного производства кредитной организации', n_dummy, '');
  ------------------------------------------------------------
  SELECT COUNT(*)
  INTO   n_dummy
  FROM   ur_efrsb_info_publ
  WHERE  kod_folders = p_kod_folders AND ordinal_number = 9 AND publ_in_time = 1;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 10.9, 'Сведения о намерении предоставить кредитной организации денежные средства для исполнения её обязательства', n_dummy, '');
  ------------------------------------------------------------
  OPEN cur_au_duty;
  FETCH cur_au_duty INTO n_kod_an_done_bnk, n_kod_work_done_close_acc, n_fired_in_time, n_kod_an_done_subs_resp, d_dat_sud_subs_resp, d_dat_sud_spor_sdel;
  IF cur_au_duty%NOTFOUND IS NULL THEN
    n_kod_an_done_bnk          := 0;
    n_kod_work_done_close_acc  := 0;
    n_fired_in_time            := 0;
    n_kod_an_done_subs_resp    := 0;
    d_dat_sud_subs_resp        := NULL;
    d_dat_sud_spor_sdel        := NULL;
  END IF;
  CLOSE cur_au_duty;
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 11, 'Провести анализ наличия/отсутствия признаков преднамеренного и фиктивного банкротства', n_kod_an_done_bnk, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 12, 'Провести работы по закрытию счетов должника', n_kod_work_done_close_acc, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 13, 'Своевременно уволить работников должника (за исключением лиц, указанных в ст. 261 ТК РФ)', n_fired_in_time, '');
  ------------------------------------------------------------
  SELECT MAX(dat_invent)
  INTO   d_dummy
  FROM   ur_property_info
  WHERE  kod_folders = p_kod_folders
     AND dat_invent <= p_date;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 14, 'Провести инвентаризацию имущества должника и дебиторской задолженности',
           CASE WHEN d_dummy IS NULL THEN 0 ELSE 1 END, '');
  ------------------------------------------------------------
  SELECT MAX(dat_ocenki)
  INTO   d_dummy
  FROM   ur_property_info
  WHERE  kod_folders = p_kod_folders
     AND dat_ocenki <= p_date;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 15, 'Предоставить результаты оценки имущества должника (в случае привлечения оценщика для оценки имущества)', 
           CASE WHEN d_dummy IS NULL THEN 0 ELSE 1 END, '');
  ------------------------------------------------------------
  OPEN cur_rabota_dz;
  FETCH cur_rabota_dz INTO s_comment;
  IF cur_rabota_dz%NOTFOUND IS NULL THEN
    s_comment := NULL;
  END IF;
  CLOSE cur_rabota_dz;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 16, 'Осуществлять мероприятия по взысканию дебиторской задолженности (при наличии)',
           CASE WHEN s_comment IS NULL THEN 0 ELSE 1 END, s_comment);
  ------------------------------------------------------------
  s_comment := '';
  n_dummy := 0;
  FOR cur IN (SELECT name, cost_realiz as cost
              FROM   ur_property_info
              WHERE  kod_folders = p_kod_folders AND cost_realiz IS NOT NULL
              ORDER BY name) LOOP
    n_dummy := 1;
    IF s_comment IS NOT NULL THEN
      s_comment := s_comment||CRLF;
    END IF;
    s_comment := s_comment||cur.name||' '||format_sum(cur.cost);
  END LOOP;
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 17, 'Производить реализацию имущества должника', n_dummy, s_comment);
  ------------------------------------------------------------
  SELECT SUM(ds_dz)
  INTO   n_ds_dz
  FROM   ur_property_info
  WHERE  kod_folders = p_kod_folders AND ds_dz IS NOT NULL;
  s_comment := format_sum(n_ds_dz);
  --
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 18, 'Отразить в отчёте информацию о ходе реализации имущества должника с указанием сумм, поступивших от реализации имущества',
           CASE WHEN n_ds_dz IS NULL THEN 0 ELSE 1 END, s_comment);
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 19, 'Провести анализ с целью привлечения к субсидиарной ответственности третьих лиц, которые в соответствии с законодательством несут субсидиарную ответственность по обязательствам должника в связи с доведением его до банкротства',
           n_kod_an_done_subs_resp, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 20, 'При наличии оснований для привлечения к субсидиарной ответственности направить заявление в суд',
           CASE WHEN d_dat_sud_subs_resp IS NULL THEN 0 ELSE 1 END, '');
  ------------------------------------------------------------
  INSERT INTO rr_temp (skod, n1 /* item */, s1 /* action */, n2 /* check */, s2 /* comment */)
    VALUES(s_data_id, 21, 'При наличии оснований оспаривать сделки должника', 
           CASE WHEN d_dat_sud_spor_sdel IS NULL THEN 0 ELSE 1 END, '');
END;]]></procedure>
      <print-templates>
        <excel>
          <template name="65704.xml" print-proc="2" title="Чек-лист по делу о банкротстве" />
        </excel>
      </print-templates>
      <queries>
        <query name="65704_data" as="data" />
      </queries>
    </report>
  </reports>
  <forms>
    <form name="65704" title="Чек-лист по делу о банкротстве" timestamp="24.05.2023 14:50:00">
      <customers>
        <customer id="10" />
      </customers>
      <content>
        <usefield field="asuse_dep_single" name="p_dep" title="Отделение" mandatory="1" />
        <field name="p_kodp" type="number" controlType="UICombo" val-field-name="kodp" name-field-name="name" title="Абонент" mandatory="1">
          <listquery>
            <query name="65704_payer_list" />
          </listquery>
        </field>
        <field name="p_kod_folders" type="number" controlType="UICombo" val-field-name="kod_folders" name-field-name="num_dela" title="Номер дела" mandatory="1">
          <listquery>
            <query name="65704_folder_list" />
          </listquery>
          <defaultquery>
            <query name="65704_folder_list" />
          </defaultquery>
        </field>
        <usefield field="cmn_date_cur" name="p_date" title="Дата отчёта" mandatory="1" />
      </content>
    </form>
  </forms>
  <queries>
    <query name="65704_payer_list" title="Запрос для комбика &quot;Абонент&quot; отчёта 65704" order="nump" timestamp="21.09.2023 15:45:00">
      <params>
        <param name="p_dep" type="number" />
      </params>
      <select>
        <column table="p" column="kodp" key="1" />
        <column table="p" column="nump" title="№ абонента" />
        <column table="p" column="name" title="Наименование абонента" />
        <column table="p" column="inn" title="ИНН" />
        <call function="()" type="string" as="ndog" title="№ договора" exclude="1">
          <query>
            <select>
              <call function="stragg_dist">
                <column table="d" column="ndog" />
              </call>
            </select>
            <from>
              <query name="kr_dogovor" as="d" />
            </from>
            <where>
              <call function="and">
                <call function="=">
                  <column table="d" column="kodp" />
                  <column table="p" column="kodp" />
                </call>
                <call function="=">
                  <column table="d" column="dep" />
                  <call function="nvlu">
                    <useparam name="p_dep" />
                    <const>NULL</const>
                  </call>
                </call>
                <call function="=">
                  <column table="d" column="tep_el" />
                  <const>1</const>
                </call>
              </call>
            </where>
          </query>
        </call>
      </select>
      <from>
        <query name="kr_payer" as="p" />
      </from>
      <where>
        <call function="in">
          <column table="p" column="kodp" />
          <query comment="Абоненты, у которых есть активные папки банкротства в отделении">
            <select>
              <column table="f" column="kodp" />
            </select>
            <from>
              <query name="ur_folders" as="f" />
            </from>
            <where>
              <call function="and">
                <call function="=">
                  <column table="f" column="kod_sdp" />
                  <const>9</const>
                </call>
                <call function="=">
                  <column table="f" column="kod_podr" />
                  <call function="nvlu">
                    <useparam name="p_dep" />
                    <const>NULL</const>
                  </call>
                </call>
                <call function="is null">
                  <column table="f" column="dat_finish" />
                </call>
              </call>
            </where>
          </query>
        </call>
      </where>
    </query>
    <query name="65704_folder_list" title="Запрос для комбика &quot;Номер дела&quot; отчёта 65704" order="num_dela" timestamp="21.09.2023 16:35:00">
      <params>
        <param name="p_dep" type="number" />
        <param name="p_kodp" type="number" />
      </params>
      <select>
        <column table="f" column="kod_folders" key="1" />
        <call function="()" type="string" as="num_dela" title="Номер дела">
          <query>
            <select>
              <call function="stragg_dist">
                <column table="sb" column="num_dela" />
              </call>
            </select>
            <from>
              <query name="ur_stage_bk" as="sb" />
            </from>
            <where>
              <call function="and">
                <call function="=">
                  <column table="sb" column="kod_folders" />
                  <column table="f" column="kod_folders" />
                </call>
                <call function="is not null">
                  <column table="sb" column="num_dela" />
                </call>
              </call>
            </where>
          </query>
        </call>
        <column table="f" column="dat_create" title="Дата создания папки" />
        <call function="()" type="string" as="ndog" title="№ договора">
          <query>
            <select>
              <call function="stragg_dist">
                <column table="d" column="ndog" />
              </call>
            </select>
            <from>
              <query name="ur_dogplat" as="dp" />
              <query name="kr_dogovor" as="d" join="inner">
                <call function="=">
                  <column table="d" column="kod_dog" />
                  <column table="dp" column="kod_dog" />
                </call>
              </query>
            </from>
            <where>
              <call function="=">
                <column table="dp" column="kod_folders" />
                <column table="f" column="kod_folders" />
              </call>
            </where>
          </query>
        </call>      
      </select>
      <from>
        <query name="ur_folders" as="f" />
      </from>
      <where>
        <call function="and">
          <call function="=">
            <column table="f" column="kod_podr" />
            <call function="nvlu">
              <useparam name="p_dep" />
              <const>NULL</const>
            </call>
          </call>
          <call function="=">
            <column table="f" column="kodp" />
            <call function="nvlu">
              <useparam name="p_kodp" />
              <const>NULL</const>
            </call>
          </call>
          <call function="=">
            <column table="f" column="tep_el" />
            <const>1</const>
          </call>
          <call function="=">
            <column table="f" column="kod_sdp" />
            <const>9</const>
          </call>
          <call function="is null">
            <column table="f" column="dat_finish" />
          </call>
        </call>
      </where>
    </query>
    <query name="65704_data" title="Основной запрос отчёта 65704" order="item" timestamp="17.03.2023 15:45:00">
      <select>
        <column table="u" column="item" type="number" key="1" />
        <call function="||" type="string" as="item_num">
          <call function="to_char">
            <column table="u" column="item" />
          </call>
          <const>'.'</const>
        </call>
        <column table="u" column="action" type="string" />
        <column table="u" column="pr" type="string" intern="1" />
        <column table="u" column="remark" type="string" />
      </select>
      <from>
        <table name="65704_data" view="1" as="u" />
      </from>
    </query>
  </queries>
  <views>
    <view name="65704_data" timestamp="17.03.2023 15:45:00"><![CDATA[
SELECT n1 as item, s1 as action,
       CASE WHEN n2 = 0 THEN '-' WHEN n2 = 1 THEN '+' ELSE '' END as pr,
       --CASE WHEN n2 = 1 THEN NCHR(10003) ELSE '' END as yes_check,
       --CASE WHEN n2 = 0 THEN NCHR(10003) ELSE '' END as no_check,
       s2 as remark
FROM   rr_temp
WHERE  skod = '{41C3CFA5-6241-4BCA-A9DD-1CA94B7B9731}'
]]></view>
  </views>
</root>
