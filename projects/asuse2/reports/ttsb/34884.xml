<?xml version="1.0" encoding="utf-8"?>
<root>
  <queries>
    <query name="34884" timestamp="30.09.2021 17:35:33" title="Мораторная задолженность" is-report="1" folder="oborot" nogrid="1">
      <customers>
        <customer id="101" />
      </customers>
      <params exclude="1">
        <param type="date" name="dat1">
          <const>to_date('01.01.2016','DD.MM.YYYY')</const>
        </param>
        <param type="date" name="dat2">
          <const>to_date('01.01.2017','DD.MM.YYYY')</const>
        </param>
      </params>
      <print-templates>
        <excel>
          <template name="34884.xlsx" title="Мораторная задолженность" print-proc="2" print-xlsx="1" />
        </excel>
      </print-templates>
      <content>
        <usefield field="asuse_dep" />
        <usefield field="cmn_date" name="dat1" title="C" column-mandatory="1">
          <defaultquery>
            <query name="start_of_year" />
          </defaultquery>
        </usefield>
        <usefield field="cmn_date" name="dat2" title="По" column-mandatory="1">
          <defaultquery>
            <query name="today" />
          </defaultquery>
        </usefield>
      </content>
      <expressions>
        <call function="and" as="betw_dat1_dat2" dontpushpred="1">
          <call function="ge">
            <column table="dat" column="val" />
            <useparam name="dat1" />
          </call>
          <call function="le">
            <column table="dat" column="val" />
            <useparam name="dat2" />
          </call>
        </call>
        <call function="lt" as="bef_dat1" dontpushpred="1">
          <column table="dat" column="val" />
          <useparam name="dat1" />
        </call>
        <call function="le" as="bef_dat2" dontpushpred="1">
          <column table="dat" column="val" />
          <useparam name="dat2" />
        </call>
        <call function="()" type="date" group="max" as="in_dat">
          <fact column="mor_in_dat_max" condition="bef_dat2" />
        </call>
        <call function="()" type="date" group="max" as="out_dat">
          <fact column="mor_out_dat_max" condition="bef_dat2" />
        </call>
        <call function="()" type="string" group="max" as="in_osnov">
          <fact column="mor_in_osnov" condition="bef_dat2" />
        </call>
        <call function="()" type="string" group="max" as="out_osnov">
          <fact column="mor_out_osnov" condition="bef_dat2" />
        </call>
        <call function="in" as="vr_osn" dontpushpred="1">
          <column table="kod_sf" column="vid_real" />
          <array>2,3</array>
        </call>
        <call function="in" as="vr_gp" dontpushpred="1">
          <column table="kod_sf" column="vid_real" />
          <array>9</array>
        </call>
        <call function="and" as="vr_peni">
          <call function="not in" dontpushpred="1">
            <column table="kod_sf" column="vid_t" />
            <array>44</array>
          </call>
          <call function="in" dontpushpred="1">
            <column table="kod_sf" column="vid_real" />
            <array>7</array>
          </call>
        </call>
        <call function="in" as="vr_astr" dontpushpred="1">
          <column table="kod_sf" column="vid_t" />
          <array>44</array>
        </call>
        <call function="in" as="vr_shtr" dontpushpred="1">
          <column table="kod_sf" column="vid_real" />
          <array>4</array>
        </call>
        <call function="()" type="number" group="sum" as="in_dolg">
          <fact column="mor_in_dolg" condition="betw_dat1_dat2" />
        </call>
        <call function="()" type="number" group="sum" as="out_dolg">
          <fact column="mor_out_dolg" condition="betw_dat1_dat2" />
        </call>
        <call function="()" type="number" group="sum" as="opl1">
          <fact column="mor_opl_opl_out_spis" condition="betw_dat1_dat2" />
        </call>
        <call function="()" type="number" group="sum" as="opl1_sp">
          <fact column="mor_opl_opl_spis" condition="betw_dat1_dat2" />
        </call>
        <call function="()" type="number" group="sum" as="beg_dolg">
          <fact column="fin_ul_mor_dolg" condition="bef_dat1" />
        </call>
        <call function="()" type="number" group="sum" as="end_dolg">
          <fact column="fin_ul_mor_dolg" condition="bef_dat2" />
        </call>
        <call function="()" type="number" as="end_dolg_osn" group="sum">
          <fact column="end_dolg" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="end_dolg_gp" group="sum">
          <fact column="end_dolg" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="end_dolg_peni" group="sum">
          <fact column="end_dolg" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="end_dolg_astr" group="sum">
          <fact column="end_dolg" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="end_dolg_shtr" group="sum">
          <fact column="end_dolg" condition="vr_shtr" />
        </call>
        <call function="()" type="number" as="beg_dolg_osn" group="sum">
          <fact column="beg_dolg" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="beg_dolg_gp" group="sum">
          <fact column="beg_dolg" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="beg_dolg_peni" group="sum">
          <fact column="beg_dolg" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="beg_dolg_astr" group="sum">
          <fact column="beg_dolg" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="beg_dolg_shtr" group="sum">
          <fact column="beg_dolg" condition="vr_shtr" />
        </call>
        <call function="()" type="number" as="opl_osn" group="sum">
          <fact column="opl1" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="opl_gp" group="sum">
          <fact column="opl1" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="opl_peni" group="sum">
          <fact column="opl1" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="opl_astr" group="sum">
          <fact column="opl1" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="opl_shtr" group="sum">
          <fact column="opl1" condition="vr_shtr" />
        </call>
        <call function="()" type="number" as="opl_osn_sp" group="sum">
          <fact column="opl1_sp" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="opl_gp_sp" group="sum">
          <fact column="opl1_sp" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="opl_peni_sp" group="sum">
          <fact column="opl1_sp" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="opl_astr_sp" group="sum">
          <fact column="opl1_sp" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="opl_shtr_sp" group="sum">
          <fact column="opl1_sp" condition="vr_shtr" />
        </call>
        <call function="()" type="number" as="out_dolg_osn" group="sum">
          <fact column="out_dolg" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="out_dolg_gp" group="sum">
          <fact column="out_dolg" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="out_dolg_peni" group="sum">
          <fact column="out_dolg" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="out_dolg_astr" group="sum">
          <fact column="out_dolg" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="out_dolg_shtr" group="sum">
          <fact column="out_dolg" condition="vr_shtr" />
        </call>
        <call function="()" type="number" as="in_dolg_osn" group="sum">
          <fact column="in_dolg" condition="vr_osn" />
        </call>
        <call function="()" type="number" as="in_dolg_gp" group="sum">
          <fact column="in_dolg" condition="vr_gp" />
        </call>
        <call function="()" type="number" as="in_dolg_peni" group="sum">
          <fact column="in_dolg" condition="vr_peni" />
        </call>
        <call function="()" type="number" as="in_dolg_astr" group="sum">
          <fact column="in_dolg" condition="vr_astr" />
        </call>
        <call function="()" type="number" as="in_dolg_shtr" group="sum">
          <fact column="in_dolg" condition="vr_shtr" />
        </call>
      </expressions>
      <grouping materialize-type="temp-table">
        <grset as="itog" title="Всего">
          <grset as="dep" title="По отделению">
            <where>
              <call function="!=0">
                <column table="this" column="in_dolg" />
                <column table="this" column="out_dolg" />
                <column table="this" column="opl1" />
                <column table="this" column="beg_dolg" />
                <column table="this" column="end_dolg" />
              </call>
            </where>
            <group>
              <sourcelink table="dep" />
            </group>
            <grset as="dog_mat" title="По договору">
              <group>
                <sourcelink table="kod_dog" />
                <sourcelink table="kod_mat" />
              </group>
            </grset>
          </grset>
        </grset>
      </grouping>
      <select>
        <column table="dep" column="kodp" as="dep" />
        <column table="dep" column="name" as="dep_name" />
        <column table="kod_dog" column="kod_dog" />
        <column table="kod_dog" column="ndog" />
        <column table="kodp" column="name" as="kodp_name" />
        <column table="kod_mat" column="kod_mat" />
        <column table="kod_mat" column="num_delo" />
        <fact column="rs_esys_name" title="Компания" group="max" />
        <call function="||" group="max" as="dat_s_po" title="Период">
          <call function="date to char">
            <useparam name="dat1" />
          </call>
          <const>' - '</const>
          <call function="date to char">
            <useparam name="dat2" />
          </call>
        </call>
        <fact column="in_dat" group="max" title="Дата признания задолженности мораторной" table="ds1" />
        <fact column="in_osnov" group="max" table="ds1" />
        <fact column="mor_in_result" agg="max" group="max" table="ds1" />
        <!-- fact column="ur_bk_last_st_name" group="max" table="ds1" / -->
        <call function="ug_isp.get_last_bk_stage" as="ur_bk_last_st_name" type="string">
          <column table="kod_folders" column="kod_folders" />
        </call>
        <fact column="out_dat" group="max" title="Дата исключения задолженности из реестра" table="ds1" />
        <fact column="out_osnov" group="max" table="ds1" />
        <fact column="ur_hist_mat_ba_prim" group="max" title="Примечание" table="ds1" />
        <fact column="in_dolg" group="sum" table="ds1" />
        <fact column="out_dolg" group="sum" table="ds1" />
        <fact column="opl1" group="sum" table="ds1" />
        <fact column="opl1_sp" group="sum" table="ds1" />
        <fact column="beg_dolg" group="sum" table="ds1" />
        <fact column="end_dolg" group="sum" table="ds1" />
        <fact column="in_dolg_osn" group="sum" table="ds1" />
        <fact column="out_dolg_osn" group="sum" table="ds1" />
        <fact column="opl_osn" group="sum" table="ds1" />
        <fact column="opl_osn_sp" group="sum" table="ds1" />
        <fact column="beg_dolg_osn" group="sum" table="ds1" />
        <fact column="end_dolg_osn" group="sum" table="ds1" />
        <fact column="in_dolg_gp" group="sum" table="ds1" />
        <fact column="out_dolg_gp" group="sum" table="ds1" />
        <fact column="opl_gp" group="sum" table="ds1" />
        <fact column="opl_gp_sp" group="sum" table="ds1" />
        <fact column="beg_dolg_gp" group="sum" table="ds1" />
        <fact column="end_dolg_gp" group="sum" table="ds1" />
        <fact column="in_dolg_peni" group="sum" table="ds1" />
        <fact column="out_dolg_peni" group="sum" table="ds1" />
        <fact column="opl_peni" group="sum" table="ds1" />
        <fact column="opl_peni_sp" group="sum" table="ds1" />
        <fact column="beg_dolg_peni" group="sum" table="ds1" />
        <fact column="end_dolg_peni" group="sum" table="ds1" />
        <fact column="in_dolg_astr" group="sum" table="ds1" />
        <fact column="out_dolg_astr" group="sum" table="ds1" />
        <fact column="opl_astr" group="sum" table="ds1" />
        <fact column="opl_astr_sp" group="sum" table="ds1" />
        <fact column="beg_dolg_astr" group="sum" table="ds1" />
        <fact column="end_dolg_astr" group="sum" table="ds1" />
        <fact column="in_dolg_shtr" group="sum" table="ds1" />
        <fact column="out_dolg_shtr" group="sum" table="ds1" />
        <fact column="opl_shtr" group="sum" table="ds1" />
        <fact column="opl_shtr_sp" group="sum" table="ds1" />
        <fact column="beg_dolg_shtr" group="sum" table="ds1" />
        <fact column="end_dolg_shtr" group="sum" table="ds1" />
      </select>
      <from>
        <qube star-scheme="1" merge-dimsets="1">
          <dimset as="ds1">
            <link name="kod_dog">
              <link name="kodp" />
              <link name="dep" />
            </link>
            <link name="kod_mat_ba" as="kod_mat">
              <link name="kod_folders" />
            </link>
            <where>
              <call function="and">
                <call function="=1" dont-push="1">
                  <column table="kod_folders" column="is_active" />
                </call>
                <call function="in" optional="1" dont-push="1">
                  <column table="dep" column="kodp" />
                  <useparam name="dep" />
                </call>
              </call>
            </where>
          </dimset>
        </qube>
      </from>
    </query>
    <query name="34884-test" timestamp="07.02.2017 19:24:39">
      <select>
        <column table="kod_dog" column="ndog" exclude="1" />
        <column table="kod_dogplat" column="kod_dogplat" />
        <fact column="ur_stage_bk_st_name" agg="max" />
      </select>
      <from>
        <qube>
          <link name="kod_dog" exclude="1" />
          <link name="kod_dogplat" />
        </qube>
      </from>
    </query>
  </queries>
</root>